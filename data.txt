CREATE TABLE BatchReports (
    ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    Batch_ID VARCHAR(50) UNIQUE NOT NULL,
    Report_Name VARCHAR(100) NOT NULL,
    Frequency VARCHAR(20) CHECK (Frequency IN ('Daily', 'Weekly', 'Monthly')),
    Batch_Date DATE NOT NULL,  -- Unique date key to prevent duplicate runs per period
    Total_Records INTEGER DEFAULT 0,
    Total_Amount DECIMAL(15,2) DEFAULT 0.00,
    Status VARCHAR(20) CHECK (Status IN ('Pending', 'Running', 'Failed', 'Completed')),
    Run_Number INTEGER DEFAULT 1, -- Tracks reruns
    Previous_Batch_ID VARCHAR(50), -- Stores previous batch reference
    Created_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Audit column
    Updated_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Audit column
    CONSTRAINT unique_batch_date UNIQUE (Report_Name, Batch_Date) -- Prevent duplicate runs per period
);


CREATE TABLE BatchMetadata (
    ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    Report_Name VARCHAR(100) NOT NULL,
    Field_Name VARCHAR(100) NOT NULL,
    Data_Type VARCHAR(20) CHECK (Data_Type IN ('TEXT', 'INTEGER', 'DECIMAL'))
);


CREATE TABLE BatchDetails (
    ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    Batch_ID VARCHAR(50) NOT NULL REFERENCES BatchReports(Batch_ID),
    SSN VARCHAR(15),
    Last_Name VARCHAR(50),
    First_Name VARCHAR(50),
    Amount DECIMAL(15,2),
    Type VARCHAR(50),
    Status VARCHAR(20) CHECK (Status IN ('Processed', 'Error')),
    Extra_Fields CLOB, -- JSON Storage for dynamic fields
    Created_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Audit column
    Updated_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- Audit column
);