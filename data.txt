package gov.nv.dwss.model;

import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;

public class SRAIF51Reader {

    public static double getComp3(byte[] record, int offset, int digits, int decimals) {
        int packedLen = (digits + 1) / 2;
        byte[] packed = Arrays.copyOfRange(record, offset, offset + packedLen);
        return unpackComp3(packed, digits, decimals);
    }

    public static String getString(byte[] record, int offset, int len) {
        try {
            return new String(record, offset, len, "IBM1047").trim();
        } catch (Exception e) {
            return new String(record, offset, len, StandardCharsets.US_ASCII).trim();
        }
    }

    public static String getNumString(byte[] record, int offset, int len) {
        return getString(record, offset, len);
    }

    public static double unpackComp3(byte[] packed, int digits, int decimals) {
        if (packed == null || packed.length == 0) return 0.0;

        long value = 0;
        int sign = 1;

        for (int i = 0; i < packed.length; i++) {
            int b = packed[i] & 0xFF;

            if (i == packed.length - 1) {
                int digit = (b >> 4) & 0x0F;
                int signNibble = b & 0x0F;
                value = value * 10 + digit;

                if (signNibble == 0xD || signNibble == 0xB) {
                    sign = -1;
                }
            } else {
                int high = (b >> 4) & 0x0F;
                int low = b & 0x0F;
                value = value * 10 + high;
                value = value * 10 + low;
            }
        }

        return sign * value / Math.pow(10, decimals);
    }

    public static void main(String[] args) {
        String filename = "C:\\Users\\namaddireddy\\Downloads\\Nevada\\Modernaization\\Interfaces\\Testing\\AIF51A1.txt";
        java.io.File file = new java.io.File(filename);

        if (!file.exists()) {
            System.err.println("File not found: " + filename);
            return;
        }

        try (FileInputStream fis = new FileInputStream(file)) {
            byte[] record = new byte[1000];
            int bytesRead = fis.read(record);
            if (bytesRead != 1000) {
                System.err.println("Could not read full 1000-byte record.");
                return;
            }

            int off = 0;
            String COSSN = getString(record, off, 9); off += 9;
            String BENE_HICN = getString(record, off, 11); off += 11;
            String BENE_FIRST_NM = getString(record, off, 15); off += 15;
            String BENE_MID_NM = getString(record, off, 15); off += 15;
            String BENE_LAST_NM = getString(record, off, 22); off += 22;
            String BENE_SUFX = getString(record, off, 4); off += 4;
            String BENE_DOB = getNumString(record, off, 8); off += 8;
            String BENE_GENDER = getString(record, off, 1); off += 1;
            String BENE_FUNERAL_EXP = getNumString(record, off, 4); off += 4;
            String SPOUSE_SSN = getString(record, off, 9); off += 9;
            String SPOUSE_HICN = getString(record, off, 11); off += 11;
            String SPOUSE_FIRST_NM = getString(record, off, 15); off += 15;
            String SPOUSE_MID_NM = getString(record, off, 15); off += 15;
            String SPOUSE_LAST_NM = getString(record, off, 22); off += 22;
            String SPOUSE_SUFX = getString(record, off, 4); off += 4;
            String SPOUSE_DOB = getNumString(record, off, 8); off += 8;
            String SPOUSE_FUNERAL_EXP = getNumString(record, off, 4); off += 4;
            String ADDR_LINE_1 = getString(record, off, 22); off += 22;
            String ADDR_LINE_2 = getString(record, off, 22); off += 22;
            String ADDR_LINE_3 = getString(record, off, 22); off += 22;
            String ADDR_LINE_4 = getString(record, off, 22); off += 22;
            String ADDR_CITY = getString(record, off, 22); off += 22;
            String ADDR_STATE = getString(record, off, 2); off += 2;
            String ADDR_ZIP = getString(record, off, 9);
            String ADDR_ZIP_5 = ADDR_ZIP.substring(0, 5);
            String ADDR_ZIP_4 = ADDR_ZIP.substring(5, 9);
            off += 9;
            String PHONE = getString(record, off, 15); off += 15;
            String SUBSIDY_APPROVE = getString(record, off, 1); off += 1;
            String SUBSIDY_APRV_DATE = getNumString(record, off, 8); off += 8;
            String SUBSIDY_EFF_DATE = getNumString(record, off, 8); off += 8;
            String LEVEL_OF_RESOURCES = getString(record, off, 17); off += 17;
            String INCM_USED_FOR_DET = getString(record, off, 3); off += 3;
            String INCM_USED_AS_FPL = getString(record, off, 3); off += 3;
            String PREM_SUBSIDY_PCT = getNumString(record, off, 3); off += 3;

            String[] DENIAL_RSN_CD = new String[4];
            String[] DENIAL_RSN_DESC = new String[4];
            for (int i = 0; i < 4; i++) {
                DENIAL_RSN_CD[i] = getString(record, off, 3); off += 3;
                DENIAL_RSN_DESC[i] = getString(record, off, 30); off += 30;
            }

            String APPL_DATE = getNumString(record, off, 8); off += 8;
            String CHECK_YES = getString(record, off, 1); off += 1;

            // RSRC array of 4 COMP-3 decimal(8,2) → each is 5 bytes
            double[] RSRC = new double[4];
            for (int i = 0; i < 4; i++) {
                RSRC[i] = getComp3(record, off, 9, 2);  // 9 digits total, 2 after decimal
                off += 5;
            }

            String HH_SIZE = getNumString(record, off, 2); off += 2;

            double SSA = getComp3(record, off, 8, 2); off += 5;
            double RRB = getComp3(record, off, 8, 2); off += 5;
            double VAB = getComp3(record, off, 8, 2); off += 5;
            double POA = getComp3(record, off, 8, 2); off += 5;
            double OIN = getComp3(record, off, 8, 2); off += 5;

            double BENE_WAGE = getComp3(record, off, 9, 2); off += 5;
            double SPOUSE_WAGE = getComp3(record, off, 9, 2); off += 5;

            double BENE_SELF = getComp3(record, off, 9, 2); off += 5;
            double SPOUSE_SELF = getComp3(record, off, 9, 2); off += 5;

            double BENE_LOSS = getComp3(record, off, 9, 2); off += 5;
            double SPOUSE_LOSS = getComp3(record, off, 9, 2); off += 5;

            String FILLER = getString(record, off, 426); off += 426;

            // ✅ Output for verification
            System.out.printf("COSSN: %s, BENE-FIRST-NM: %s, BENE-LAST-NM: %s%n",
                    COSSN, BENE_FIRST_NM, BENE_LAST_NM);
            System.out.printf("RSRC values: [%.2f, %.2f, %.2f, %.2f]%n",
                    RSRC[0], RSRC[1], RSRC[2], RSRC[3]);
            System.out.printf("SSA: %.2f, RRB: %.2f, VAB: %.2f, POA: %.2f, OIN: %.2f%n",
                    SSA, RRB, VAB, POA, OIN);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
