package PGM_C_Batch;



import egl.core.*;

import CommonMigratedParts.*;

import DataTables.*;

//*** PROGRAM=CIN05A ****

// COMPONENT NAME: CIN05A

// ===============

// 

// DESCRIPTION:

// ============

// This module processes the file provided by

// DETR/ESD on daily basis.

// 

// CHANGE LOG:

// ===========

// WI #    USERID   DATE      DESCRIPTION

// ------  ------   ----      -----------

// 27073   WNMAV    2006      CREATION

//    58   WNMMD    2011      PREVENT DUPLICATE UIB RECORDS

//                            ADDED PARM TO PREVENT ALERTS

//  1481   WNMMD    2011      FIXED SQLS FOR UIB_DTLS READS

//  1180   WNMAV    10/24/11  GN0092 & NV0014 FORMS TO EWS

//  1788   WNMAV    02/04/13  SKIP CASE TYPE 'D' FOR EWS

//  2058   WNMAV    10/21/14  STOP IWO FOR CLOSED & NON-IV-D CASES

//  1932   WNMBC    03/07/14  REMOVE OFC 02 EDIT FOR EWS

//  2632   WNMBS    05/05/15  Add clm_beg_dt to 5 record - finally got a test file from DETR on 5/2/2017

//                            DETR has changed the format of the 5 record to make 2 fields larger

//  4063   WNMBS    07/19/18  This is the last tweak for ANSRS before the code freeze for NVKIDS.

//                            We are adding clm_beg_dt to the 4 record (issues). We are adding DETR's 

//                            unique claim id to TWNUIB_BNFT_DTLS, TWNUIB_DTLS, and, TWNESD_ISSUE. Also

//                            adding clm_beg_dt to TWNESD_ISSUE, and, adding weekly benefit amount to 

//                            TWNUIB_BNFT_DTLS. Removing all references to TWNESD_HSTRY_DTL

//                            as the IHST screen is no longer used, the table hasn't been updated since 2013,

//                            and no code references the functions selecting, or, inserting into this table.

//                            These changes are for server WI 2974 for ANSRS.

//                            This change also incorporates code needed for the Coronavirus pandemic FPUC 

//                            and PUA Federal payments.

// ***********************



program CIN05A type basicProgram //VAGen Info - main batch program

    {includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes,

     I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, inputRecord = CIN05W}



    // Data Declarations

    BDATEREC BDATEREC; // record

    CEP01W CEP01W; // record

    CIN05W CIN05W; // record

    CIN05W1 CIN05W1; // record

    CIN05W2 CIN05W2; // record

    CIN05W3 CIN05W3; // record

    /* WI 4063 - start */

    CIN05W4 CIN05W4; //record

    DDA-TRAC-REC DDA-TRAC-REC; // record

    /* WI 4063 - end */

    DFM34W DFM34W; // record

    DFMBTCH-XFER DFMBTCH-XFER; // record

    DMI01W DMI01W; // record

    FDOR-IWIT-DTLS FDOR-IWIT-DTLS; // record

    G-IV-D G-IV-D; // record

    GDW GDW; // record

    GNOMADS GNOMADS; // record

    H-TLCAS1 H-TLCAS1; // record

    H-TLCAU1 H-TLCAU1; // record

    H2-2-COR-DOC H2-2-COR-DOC; // record

    H2-2-DCC-SPT H2-2-DCC-SPT; // record

    H2-ALTERNATE-SSN H2-ALTERNATE-SSN; // record

    H2-CASE-MEMBER-HST H2-CASE-MEMBER-HST; // record

    H2-EMPLOYER H2-EMPLOYER; // record

    H2-ESD-HSTRY-DTL H2-ESD-HSTRY-DTL; // record

    H2-ESD-ISSUE H2-ESD-ISSUE; // record

    H2-IVD-CASE H2-IVD-CASE; // record

    H2-IVD-CASELD-CASE H2-IVD-CASELD-CASE; // record

    H2-IVD-CONTACTS H2-IVD-CONTACTS; // record

    H2-JOB-HISTORY H2-JOB-HISTORY; // record

    H2-JOB-INCM-DTLS H2-JOB-INCM-DTLS; // record

    H2-MASS-CHNG-PARMS H2-MASS-CHNG-PARMS; // record

    H2-PAY-DTLS H2-PAY-DTLS; // record

    H2-PERSON H2-PERSON; // record

    H2-RESP-PRSN-DBTR H2-RESP-PRSN-DBTR; // record

    H2-SWICA-EMPLR-DTL H2-SWICA-EMPLR-DTL; // record

    H2-SWICA-WAGE-DTL H2-SWICA-WAGE-DTL; // record

    H2-SYS-PARAMETERS H2-SYS-PARAMETERS; // record

    H2-UERND-INCM-DTL H2-UERND-INCM-DTL; // record

    H2-UIB-BNFT-DTLS H2-UIB-BNFT-DTLS; // record

    H2-UIB-DTLS H2-UIB-DTLS; // record

    H2-WAGE-DTLS H2-WAGE-DTLS; // record

    H3-EMPLOYER H3-EMPLOYER; // record

    H3-ESD-HSTRY-DTL H3-ESD-HSTRY-DTL; // record

    H3-ESD-ISSUE H3-ESD-ISSUE; // record

    H3-IVD-CONTACTS H3-IVD-CONTACTS; // record

    H3-SWICA-EMPLR-DTL H3-SWICA-EMPLR-DTL; // record

    H3-SWICA-WAGE-DTL H3-SWICA-WAGE-DTL; // record

    H3-UERND-INCM-DTL H3-UERND-INCM-DTL; // record

    H3-UIB-BNFT-DTLS H3-UIB-BNFT-DTLS; // record

    H3-UIB-DTLS H3-UIB-DTLS; // record

    H3-WAGE-DTLS H3-WAGE-DTLS; // record

    /* WI 4063 - start */

    H4-UIB-DTLS H4-UIB-DTLS; // record

    /* WI 4063 - end */

    PCALINP PCALINP; // record

    PDCP27-PARM PDCP27-PARM; // record

    REP-COMMON REP-COMMON; // record

    SR-CIN05-PARMS SR-CIN05-PARMS; // record

    SR-CIN05-RECIN SR-CIN05-RECIN; // record

    VCONTROL VCONTROL; // record

    VDBCOMMON VDBCOMMON; // record

    VDBCONTROL VDBCONTROL; // record

    VDTSREC VDTSREC; // record

    VMESSAGE VMESSAGE; // record

    VSTRREC7 VSTRREC7; // record

    VWORKSTOR VWORKSTOR; // record

    

    // VAGen Info - items needed for migration

    VAGen_EZESYS char(8);

    VAGen_EZEREPLY num(1);

    VAGen_EZE_WAIT_TIME bin(9, 2);

    VAGen_EZE_ITEMLEN int;



    // Use Declarations

    use VDB00T1{deleteAfterUse = yes}; // table

    

    function main()

    // VAGen Info - initialization needed for migration

        VAGen_EZESYS = VGLib.getVAGSysType();

    CIN05P9-MAIN:

        CIN05P9-MAIN();

    end // end main

end // end CIN05A



// PROCESS TO ALERT THE WORKER



function CIN05P9-ALERT-WOR()

    CIN05W.WS-DSGNT-IND = "N";

    /* perform the process to read the table TWNRESP_PRSN_DBTR to check*/

    /* if the designate indicator is set*/

    CIN05P9-CHK-DESG();

    if(CIN05W.WS-DSGNT-IND == "Y")

        PCALINP.PAL-CASE-ID = SR-CIN05-RECIN.INTRFC-SSN;

        PCALINP.PAL-SUFFIX = "I";

        PCALINP.PAL-ALERT-CD = 129007;

        PCALINP.PAL-ALERT-ACTION = "C";

        PCALINP.PAL-DISPL-DT = CIN05W1.WS-PROCESS-DT;

        /* call the application cal11a to alert the worker*/

        call "CAL11A"(VDBCONTROL, VMESSAGE, PCALINP){isNoRefresh = yes};

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end

    else

        /* if the designate indicator is not set*/

        /* read the table TWNCASE_MEMBER_HST to get the ici from the upi*/

        /* fetched from TWNPERSON*/

        H2-CASE-MEMBER-HST.UPI = CIN05W.WS-UPI;

        H2-CASE-MEMBER-HST.PRD-END-DT = "9999-12-31";

        /* perform the process to declare the cursor on the table*/

        /* TWNCASE_MEMBER_HST*/

        CIN05P9-CMH-S01();

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end



        while(sysVar.sqlData.sqlcode == 0)

            CIN05P9-CMH-SCAN();

            if(VDBCONTROL.URC > 104)

                WCM00P2-TO-CEP01A();

            end

            if(sysVar.sqlData.sqlcode == 0)

                /* if records found move details to the record which is used as*/

                /* a parameter to send details to CAL11A*/

                PCALINP.PAL-ALERT-CD = 129007;

                CIN05W.WS-TEMP-ICI = H2-CASE-MEMBER-HST.ICI;

                PCALINP.PAL-CASE-ID = CIN05W.WS-TEMP-ICI1;

                PCALINP.PAL-ALERT-ACTION = "C";

                PCALINP.PAL-DISPL-DT = CIN05W1.WS-PROCESS-DT;

                /* call application CAL11A to perform the alert*/

                call "CAL11A"(VDBCONTROL, VMESSAGE,

                        PCALINP){isNoRefresh = yes};



                if(VDBCONTROL.URC > 104)

                    WCM00P2-TO-CEP01A();

                end

            end /* end check for records found*/

        end /* end while loop*/

    end /* end check for designate indicator*/

end // end CIN05P9-ALERT-WOR



// Inquire



function CIN05P9-ALS-S01()

    WDB00PI();

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.USQLREC = "H2-ALTERNATE-SSN";

    VDBCONTROL.UPROC-NM = "CIN05P9-ALS-S01";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    VDBCONTROL.UPROC-OBJ = "H2-ALTERNATE-SSN";

    /*  */

    try

        get H2-ALTERNATE-SSN singleRow

                with #sql{

        select UPI

        from twnalternate_ssn T1

         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **

        WHERE ALT_SSN = :ALT-SSN

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into UPI;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-ALS-S01



// end CIN05P9-ALS-S01



// PROCESS TO CHECK FOR DESG IND



function CIN05P9-CHK-DESG()

/*  */

/* read the table TWNPERSON to check if the iva_case_mbr_fg is set.*/

/* if it is not set read the table TWNRESP_PRSN_DBTR*/

/*  */

    H2-PERSON.SSN = SR-CIN05-RECIN.INTRFC-SSN;

    /*  */

    CIN05P9-PER-S01();

    /*  */

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    /*  */

    if(H2-PERSON.IVA-CASE-MBR-FG != "Y")

        /*  */

        /* if the person is not a IVA_CASE_MBR,*/

        /* read the table TWNRESP_PRSN_DBTR to check if the person is a*/

        /* designate debtor and set the designate indicator flag accordingly*/

        /*  */

        H2-RESP-PRSN-DBTR.DBTR-SSN = SR-CIN05-RECIN.INTRFC-SSN;

        /*  */

        CIN05P9-RPD-S01();

        /*  */

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end

        /*  */

        if(H2-RESP-PRSN-DBTR.DSGNT-DBTR-IND == "Y")

            CIN05W.WS-DSGNT-IND = "Y";

        end /* end check for designate indicator*/

    end /* end check for iva-case-mbr*/

end // end CIN05P9-CHK-DESG



function CIN05P9-CLOSE()

    VGVar.handleSysLibraryErrors = 0;

    sysLib.commit();

    exit program;

end // end CIN05P9-CLOSE



// SETINQ ON TWNCASE_MEMBER_HST



function CIN05P9-CMH-S01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UPROC-NM = "CIN05P9-CMH-S01";

    VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";

    VDBCONTROL.UPROC-OPT = "SETINQ";

    VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";

    try

        open CIN05P9-CMH-S01_RSI01

                with #sql{

        select FS_ASST_IND,AFDC_ASST_IND, MA_ASST_IND,ICI

        from TWNCASE_MEMBER_HST T1

        WHERE UPI = :UPI AND

           PRD_END_DT = :PRD-END-DT

        FOR FETCH ONLY

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into FS-ASST-IND, AFDC-ASST-IND, MA-ASST-IND, ICI

                for H2-CASE-MEMBER-HST;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-CMH-S01



// find asst indicators for case



function CIN05P9-CMH-S02()

    WDB00PI();

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UACCTYP = "R";

    VDBCONTROL.UPROC-NM = "CIN05P9-CMH-S02";

    VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";

    try

        get H2-CASE-MEMBER-HST

                with #sql{

        select FS_ASST_IND, AFDC_ASST_IND, MA_ASST_IND, ICI

        from TWNCASE_MEMBER_HST T1

        WHERE UPI = :UPI

        AND   PRD_BEG_DT BETWEEN '0001-01-01' AND :CIN05W.WS-PRD-BEG-DT

        AND   PRD_END_DT BETWEEN :CIN05W.WS-PRD-END-DT AND '9999-12-31'

        FOR FETCH ONLY

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into FS-ASST-IND, AFDC-ASST-IND, MA-ASST-IND, ICI;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-CMH-S02



// FETCH  FROM TWNCASE_MEMBER_HST



function CIN05P9-CMH-SCAN()

    WDB00PI();

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UACCTYP = "R";

    VDBCONTROL.UPROC-NM = "CIN05P9-CMH-SCAN";

    VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";

    VDBCONTROL.UPROC-OPT = "SCAN";

    VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";

    try

        get next H2-CASE-MEMBER-HST;

    end



    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-CMH-SCAN



// INSERT IVD CONTACTS



function CIN05P9-CON-I01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "W";

    VDBCOMMON.UAPPLNAM = "CIN05A";



    VDBCOMMON.USQLREC = "H2-IVD-CONTACTS";

    VDBCONTROL.UPROC-OBJ = "H2-IVD-CONTACTS";

    VDBCONTROL.UPROC-NM = "CIN05P9-CON-I01";

    VDBCONTROL.UPROC-OPT = "ADD";

    /*  */

    try

        add H2-IVD-CONTACTS

                with #sql{

        insert into TWNIVD_CONTACTS

        (UPI, CASE_SUFX, CRTD_TS, CASE_FUNC_AREA, CNTCT_TYPE, CNTCT_SRC,

            CASE_SPCFC_IND, WRKR_ID, CNTCT_TXT)

        values (:UPI, :CASE-SUFX, :CRTD-TS, :CASE-FUNC-AREA, :CNTCT-TYPE,

            :CNTCT-SRC, :CASE-SPCFC-IND, :WRKR-ID, :CNTCT-TXT)

      };

    end

    /*  */

    /* Increment count of rows written*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;

    end



    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

end // end CIN05P9-CON-I01



// Check for dup. Contact



function CIN05P9-CON-S01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UPROC-NM = "CIN05P9-CON-S01";

    VDBCONTROL.UPROC-OBJ = "H3-IVD-CONTACTS";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    VDBCOMMON.USQLREC = "H3-IVD-CONTACTS";

    /*  */

    try

        get H3-IVD-CONTACTS

                with #sql{

        select UPI

        from TWNIVD_CONTACTS T1

        WHERE UPI = :H2-IVD-CONTACTS.UPI

        AND   CASE_SUFX = :H2-IVD-CONTACTS.CASE-SUFX

        AND   CASE_FUNC_AREA = :H2-IVD-CONTACTS.CASE-FUNC-AREA

        AND   CNTCT_TYPE = :H2-IVD-CONTACTS.CNTCT-TYPE

        AND   CNTCT_SRC = :H2-IVD-CONTACTS.CNTCT-SRC

        AND   CASE_SPCFC_IND = :H2-IVD-CONTACTS.CASE-SPCFC-IND

        AND   WRKR_ID = :H2-IVD-CONTACTS.WRKR-ID

        AND   SUBSTR(CNTCT_TXT,1,235) = :CIN05W.TCON-CNTCT-TXT2

        FOR FETCH ONLY

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into UPI;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-CON-S01



// Income withholding in order



function CIN05P9-CORDOC-S01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCOMMON.USQLREC = "H2-2-COR-DOC";

    VDBCONTROL.UPROC-NM = "CIN05P9-CORDOC-S01";

    VDBCONTROL.UPROC-OPT = "SETINQ";

    VDBCONTROL.UPROC-OBJ = "H2-2-COR-DOC";

    try

        open CIN05P9-CORDOC-S01_RSI01

                with #sql{

        select T2.INTID_INCWH_EST_DT,

          T2.IMD_IW_EST_DT,

          T2.DCKT_NMB,

          T2.LST_SQNC_NMB,

          T2.CASE_SUFX

        from TWNCOURT_ORDR T1,

             TWNDOCKET T2

         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **

        WHERE T2.UPI          = :UPI

        AND   T2.DCKT_NMB     = T1.DCKT_NMB

        AND   T2.LST_SQNC_NMB = T1.SQNC_NMB

        AND   T1.ORDER_STS    = 'A'

        FOR FETCH ONLY

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into INTID-INCWH-EST-DT, IMD-IW-EST-DT, DCKT-NMB, LST-SQNC-NMB, CASE-SUFX

                for H2-2-COR-DOC;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "1";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-CORDOC-S01



// Process to scan



function CIN05P9-CORDOC-SC()

    WDB00PI();



    VDBCOMMON.UAPPLNAM = "CIN05A";

    VDBCONTROL.UACCTYP = "R";



    /* Move name of SQL row record used to common record*/

    VDBCOMMON.USQLREC = "H2-2-COR-DOC";

    VDBCONTROL.UPROC-OBJ = "H2-2-COR-DOC";

    VDBCONTROL.UPROC-NM = "CIN05P9-CORDOC-SC";

    VDBCONTROL.UPROC-OPT = "SCAN";

    /*  */

    try

        get next H2-2-COR-DOC;

    end

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end



    VDBCOMMON.UNRF = 1;

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

end // end CIN05P9-CORDOC-SC



// DETERMINE THE PRD_END_DT



function CIN05P9-DET-END-DD()

    if(CIN05W.WS-PRD-END-MM == 1 || CIN05W.WS-PRD-END-MM == 3 ||

            CIN05W.WS-PRD-END-MM == 5 || CIN05W.WS-PRD-END-MM == 7 ||

            CIN05W.WS-PRD-END-MM == 8 || CIN05W.WS-PRD-END-MM == 10 ||

            CIN05W.WS-PRD-END-MM == 12)

        CIN05W.WS-PRD-END-DD = 31;

    else

        if(CIN05W.WS-PRD-END-MM == 4 || CIN05W.WS-PRD-END-MM == 6 ||

                CIN05W.WS-PRD-END-MM == 9 || CIN05W.WS-PRD-END-MM == 11)

            CIN05W.WS-PRD-END-DD = 30;

        else

            REP-COMMON.WS-YYYY = CIN05W.WS-PRD-END-CCYY;

            LEAP-YEAR-CHECK();

            if(REP-COMMON.WS-LEAP-FLAG == "Y")

                CIN05W.WS-PRD-END-DD = 29;

            else

                CIN05W.WS-PRD-END-DD = 28;

            end

        end

    end

end // end CIN05P9-DET-END-DD



function CIN05P9-DRV-MNTH()

/* WI 29485;Cheryl T;09/2007*/

    if(CIN05W.WS-WAGE-QTR == 1)

        CIN05W.WS-WAGE-MM = 3;

    else

        if(CIN05W.WS-WAGE-QTR == 2)

            CIN05W.WS-WAGE-MM = 6;

        else

            if(CIN05W.WS-WAGE-QTR == 3)

                CIN05W.WS-WAGE-MM = 9;

            else

                if(CIN05W.WS-WAGE-QTR == 4)

                    CIN05W.WS-WAGE-MM = 12;

                end

            end

        end

    end

end // end CIN05P9-DRV-MNTH



// ADD Data



function CIN05P9-EHD-I01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "W";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /* Move name of SQL row record used to common record*/

    VDBCOMMON.USQLREC = "H2-ESD-HSTRY-DTL";

    VDBCONTROL.UPROC-OBJ = "H2-ESD-HTRY-DTL";

    VDBCONTROL.UPROC-OPT = "ADD";

    VDBCONTROL.UPROC-NM = "CIN05P9-EHD-I01";

    /*  */

    try

        add H2-ESD-HSTRY-DTL;

    end

    /*  */

    /* Increment count of rows written*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;

    end

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

end // end CIN05P9-EHD-I01



// Check for dup data



function CIN05P9-EHD-S01()

    WDB00PI();

    /* Initialize:*/

    /* UACCTYP - Access type (R=read, W=write)*/

    /* UAPPLNAM - Application name*/

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /*  */

    VDBCONTROL.UPROC-OBJ = "H3-ESD-HSTRY-DTL";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    VDBCONTROL.UPROC-NM = "CIN05P9-EHD-S01";

    VDBCOMMON.USQLREC = "H3-ESD-HSTRY-DTL";

    /*  */

    try

        get H3-ESD-HSTRY-DTL singleRow

                with #sql{

        select UPI

        from TWNESD_HSTRY_DTL T1

         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **

        WHERE UPI          = :UPI

        AND   PROCESS_DT   = :PROCESS-DT

        AND   WK_NUM       = :WK-NUM

        AND   UIB_CHECK_DT = :UIB-CHECK-DT

         --AND   UIB_PD_AMT   = :UIB-PD-AMT

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into UPI;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-EHD-S01



// ADD Data



function CIN05P9-EMP-I01()

    WDB00PI();

    VDBCONTROL.UACCTYP = "W";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /* Move name of SQL row record used to common record*/

    VDBCOMMON.USQLREC = "H2-EMPLOYER";

    /*  */

    VDBCONTROL.UPROC-OBJ = "H2-EMPLOYER";

    VDBCONTROL.UPROC-OPT = "ADD";

    VDBCONTROL.UPROC-NM = "CIN05P9-EMP-I01";

    /*  */

    try

        add H2-EMPLOYER;

    end

    /*  */

    /* Increment count of rows written*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;

    end

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

end // end CIN05P9-EMP-I01



// INQUIRY EMPLOYER-ID



function CIN05P9-EMP-S01()

    WDB00PI();

    /* UACCTYP - Access type (R=read, W=write)*/

    /* UAPPLNAM - Application name*/

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /*  */

    VDBCONTROL.UPROC-OBJ = "H3-EMPLOYER";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    VDBCONTROL.UPROC-NM = "CIN05P9-EMP-S01";

    VDBCOMMON.USQLREC = "H3-EMPLOYER";

    /*  */

    try

        get H3-EMPLOYER singleRow

                with #sql{

        select EMPLR_ID

        from TWNEMPLOYER T1

         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **

        WHERE EMPLR_ID = :EMPLR-ID

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into EMPLR-ID;

    end

    /*  */

    /* Increment count of rows retrieved*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-EMP-S01



// UPDATE TWNEMPLOYER



function CIN05P9-EMP-U01()

    WDB00PI();

    /* Initialize:*/

    /* UACCTYP - Access type (R=read, W=write)*/

    /* UAPPLNAM - Application name*/

    VDBCONTROL.UACCTYP = "W";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /*  */

    VDBCONTROL.UPROC-OBJ = "H2-EMPLOYER";

    VDBCONTROL.UPROC-OPT = "SQLEXEC";

    VDBCONTROL.UPROC-NM = "CIN05P9-EMP-U01";

    VDBCOMMON.USQLREC = "H2-EMPLOYER";

    /*  */

    try

        execute update 

                #sql{

        UPDATE

          TWNEMPLOYER

        SET

          LST_CHNGD_DT = :LST-CHNGD-DT,

          ADR_LN1 = :ADR-LN1,

          CITY = :CITY,

          ST_CD = :ST-CD,

          ZIP_CD = :ZIP-CD,

          EMPLR_NM = :EMPLR-NM,

          DOING_BUS_AS_NM = :DOING-BUS-AS-NM,

          FEIN = :FEIN

        WHERE

          EMPLR_ID = :EMPLR-ID

      }

                for H2-EMPLOYER; // model = update

    end

    /*  */

    /* Increment count of rows written*/

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;

    end

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

end // end CIN05P9-EMP-U01



// GENERATE THE IW FORM



function CIN05P9-FORMS()

/* ************************************************************************/

/* GENERATE NV0014 (IWIT) & UPDATE DOCKET & JOB INFO                 **/

/* ************************************************************************/

    set FDOR-IWIT-DTLS empty;

    FDOR-IWIT-DTLS.F-APPL-NAME = "CIN05A";

    FDOR-IWIT-DTLS.F-APPL-TYPE = "B";

    FDOR-IWIT-DTLS.F-NCP-UPI = CIN05W.WS-UPI;

    FDOR-IWIT-DTLS.F-CASE-SUFX = H2-2-COR-DOC.CASE-SUFX;

    FDOR-IWIT-DTLS.F-CRNT-DATE = GDW.DTCD;

    FDOR-IWIT-DTLS.F-EMPLR-ID = CIN05W.WS-EMPLR-ID;

    FDOR-IWIT-DTLS.F-DCKT-NMB = H2-2-COR-DOC.DCKT-NMB;

    FDOR-IWIT-DTLS.F-SQNC-NMB = H2-2-COR-DOC.LST-SQNC-NMB;

    FDOR-IWIT-DTLS.F-FORM-ID = "NV0014";

    call "DOR39A"(VDBCONTROL, VMESSAGE, FDOR-IWIT-DTLS, GNOMADS,

            G-IV-D){isNoRefresh = yes};

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end



    if(FDOR-IWIT-DTLS.F-NV0014-GENERATED-IND == "Y")

        CIN05W.WS-NV0014-IND = "Y";

    end



    /* Call DFM34A to generate form GN0155 if required, DFM34A will decide*/

    set DFM34W empty;

    DFM34W.SUB-SYS-CODE = "D";

    DFM34W.APPL-NAME = "CIN05A";

    DFM34W.APPL-TYPE = "B";

    DFM34W.CRNT-DATE = "  /  /    ";

    DFM34W.CRNT-DATE-CCYY = CIN05W1.WS-CRTD-DT-CCYY;

    DFM34W.CRNT-DATE-MM = CIN05W1.WS-CRTD-DT-MM;

    DFM34W.CRNT-DATE-DD = CIN05W1.WS-CRTD-DT-DD;

    DFM34W.NCP-UPI = CIN05W.WS-UPI;

    DFM34W.CASE-SUFX = H2-2-COR-DOC.CASE-SUFX;

    DFM34W.EMPLR-ID = CIN05W.WS-EMPLR-ID;

    DFM34W.DCKT-NMB = H2-2-COR-DOC.DCKT-NMB;

    DFM34W.SQNC-NMB = H2-2-COR-DOC.LST-SQNC-NMB;

    call "DFM34A"(VDBCONTROL, VMESSAGE, DFM34W, GNOMADS){isNoRefresh = yes};

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

end // end CIN05P9-FORMS



// GET THE CONVERSION FACTOR



function CIN05P9-GET-CNV-FR()

/* This Process is to get the conversion factor*/

/*  */

/* Weekly*/

    if(CIN05W.WS-FREQ == "W")

        CIN05W.WS-FACTOR = 4.3;

    end

    /* Bi-weekly*/

    if(CIN05W.WS-FREQ == "B")

        CIN05W.WS-FACTOR = 2.15;

    end

    /* Quarterly*/

    if(CIN05W.WS-FREQ == "Q")

        CIN05W.WS-FACTOR = 1 / 3;

    end

    /* Twice yearly*/

    if(CIN05W.WS-FREQ == "T")

        CIN05W.WS-FACTOR = 0.1666;

    end

    /* Annually*/

    if(CIN05W.WS-FREQ == "A")

        CIN05W.WS-FACTOR = 0.0833;

    end

    /* Monthly*/

    if(CIN05W.WS-FREQ == "M")

        CIN05W.WS-FACTOR = 1.0000;

    end

    /* Semi-monthly*/

    if(CIN05W.WS-FREQ == "S")

        CIN05W.WS-FACTOR = 2.0000;

    end

    /* Set factor to 1 if frequency is space.*/

    if(CIN05W.WS-FREQ == " ")

        CIN05W.WS-FACTOR = 1.0000;

    end

end // end CIN05P9-GET-CNV-FR



// process to get the factor



function CIN05P9-GET-FCTRS()

/* This process gets the factors to convert weekly and biweekly income*/

/* amounts into monthly income amount*/

    set H2-MASS-CHNG-PARMS empty;

    /*  */

    H2-MASS-CHNG-PARMS.PRGM-TYPE = "CM";

    H2-MASS-CHNG-PARMS.EFF-FR-DT = CIN05W.WS-PRD-BEG-DT;

    /* 'C03' is code for factor to convert weekly income to monthly income*/

    H2-MASS-CHNG-PARMS.MASS-CHNG-TYPE = "C03";

    /* Perform the process to read the table twnmass_chng_parms*/

    CIN05P9-MCH-S01();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    /*  */

    CIN05W.WS-WKLY-FCTR = H2-MASS-CHNG-PARMS.FACTOR;

    /*  */

    /* 'C04' is code for factor to convert biweekly income to monthly income*/

    H2-MASS-CHNG-PARMS.MASS-CHNG-TYPE = "C04";

    /* Perform the process to read the table twnmass_chng_parms*/

    CIN05P9-MCH-S01();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    /*  */

    CIN05W.WS-BIWKLY-FCTR = H2-MASS-CHNG-PARMS.FACTOR;

    /*  */

    /* Get percentage limit from TWNSYS_PARAMETERS*/

    set H2-SYS-PARAMETERS empty;

    /* Perform process to read the table TWNSYS_PARAMETERS*/

    CIN05P9-RD-SYS-PAR();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    /*  */

    CIN05W.WS-PERCENT-FCTR = H2-SYS-PARAMETERS.INTF-TOL-LMT-PCT;

end // end CIN05P9-GET-FCTRS



// PROCESS TO GET THE UNIN DATA



function CIN05P9-GET-UNIN()

/* this process is to read the table TWNUERND_INCM_DTL*/

/*  */

/* key setting*/

    H2-UERND-INCM-DTL.UPI = CIN05W.WS-UPI;

    H2-UERND-INCM-DTL.UERND-INC-TYPE-CD = "45";

    /*  */

    /* perform the process to declare a cursor on the table TWNUERND_INCM_DTL*/

    CIN05P9-UID-S01();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end



    CIN05W.WS-UNIN-REC-CNT = 0;

    while(sysVar.sqlData.sqlcode == 0)



        /* if successful, perform the process to scan the records*/



        CIN05P9-UID-SCAN();

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end

        if(sysVar.sqlData.sqlcode == 0)

            /* if scan is sucessful,increment the count for number of records*/



            CIN05W.WS-UNIN-REC-CNT = CIN05W.WS-UNIN-REC-CNT + 1;

            CIN05W.WS-FREQ = H2-UERND-INCM-DTL.UERND-INC-FREQ;



            /* perform the process to get the conversion factor*/

            CIN05P9-GET-CNV-FR();



            CIN05W.WS-UNIN-AMT = CIN05W.WS-FACTOR *

                    H2-UERND-INCM-DTL.UERND-INC-AMT;

        end /* end check for records found*/

        /* check for future month UNIN record*/

        CIN05P9-UID-CHECK();

    end /* end while*/

end // end CIN05P9-GET-UNIN



// Read table DCC & SPT



function CIN05P9-GET-WRKR()

    WDB00PI();

    /* Initialize:*/

    /* UACCTYP - Access type (R=read, W=write)*/

    /* UAPPLNAM - Application name*/

    VDBCONTROL.UACCTYP = "R";

    VDBCOMMON.UAPPLNAM = "CIN05A";

    /*  */

    VDBCOMMON.USQLREC = "H2-2-DCC-SPT";

    VDBCONTROL.UPROC-OBJ = "H2-2-DCC-SPT";

    VDBCONTROL.UPROC-NM = "CIN05P9-GET-WORKER";

    VDBCONTROL.UPROC-OPT = "INQUIRY";

    /*  */

    try

        get H2-2-DCC-SPT singleRow

                with #sql{

        select T2.NOMADS_USRID

        from twnivd_caseld_case T1,

             twnsup_unt_pos_hst T2

        WHERE T1.UPI = :UPI AND

              T1.CASE_SUFX = :CASE-SUFX AND

              T1.OFC_CD = T2.OFC_CD AND

              T1.PRGM_OFC_TYPE = T2.PRGM_OFC_TYPE AND

              T1.SPRVS_UNIT = T2.SPRVS_UNIT AND

              T1.PSN_NMB = T2.PSN_NMB AND

              T1.CASELD_IND = 'N' AND

              :CIN05W1.WS-PROCESS-DT BETWEEN T2.ASMNT_BEG_DT AND T2.ASMNT_END_DT

         --** INSERT ORDER BY CLAUSE HERE **

      }

                into NOMADS-USRID;

    end

    /*  */

    if(sysVar.sqlData.sqlcode == 0)

        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;

    end

    /*  */

    /* Set error control flags*/

    /* UNRF - No record found flag (Y,N,1)*/

    /* UDUP - Duplicate key flag (Y,N)*/

    VDBCOMMON.UNRF = "Y";

    VDBCOMMON.UDUP = "N";

    /*  */

    /* Perform DBM error processing*/

    WDB00PE-SQLERR();

    /*  */

end // end CIN05P9-GET-WRKR



// Generate Form GN0092 and Alert



function CIN05P9-GN0092()

/* Generate the Employer Verification form (GN0092)*/

    set DFMBTCH-XFER empty;

    DFMBTCH-XFER.PIO-FORM-ID = "GN0092";

    DFMBTCH-XFER.PIO-NMB-OF-COPIES = 1;

    DFMBTCH-XFER.PIO-UPI = CIN05W.WS-UPI;

    DFMBTCH-XFER.PIO-CASE-SUFX = H2-2-COR-DOC.CASE-SUFX;

    DFMBTCH-XFER.PIO-MODE-IND = "D";

    DFMBTCH-XFER.PIO-POP-PARM[1] = "X";

    DFMBTCH-XFER.PIO-POP-PARM[2] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[3] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[4] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[5] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[6] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[7] = " ";

    DFMBTCH-XFER.PIO-POP-PARM[8] = CIN05W.WS-EMPLR-ID;

    DFMBTCH-XFER.PIO-POP-PARM[9] = "E";

    DFMBTCH-XFER.PIO-PARM-NMB = 9;

    DFMBTCH-XFER.WS-APPL-ID = "CIN05A";

    call "DFM08A"(VDBCONTROL, VMESSAGE, DFMBTCH-XFER){isNoRefresh = yes};

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    if(CIN05W3.PI1-ALERT == "NOALERT" && CIN05W3.PI1-ALERT-FLAG == "N")

        /*  */

        /* Generate Alert - EMPLR VERIF FORM IS DUE TO BE RETURNED*/

        /*  */

        set PCALINP empty;

        PCALINP.PAL-ALERT-CD = 370043;

        PCALINP.PAL-UPI = CIN05W.WS-UPI;

        PCALINP.PAL-ALERT-ACTION = "C";

        PCALINP.PAL-PROCESS-DT = GDW.DTCD;

        /*  */

        call "CAL11A"(VDBCONTROL, VMESSAGE, PCALINP){isNoRefresh = yes};

        /*  */

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end

    /*  */

    end

    /* WI 1180 begin*/

    set H2-IVD-CASELD-CASE empty;

    H2-IVD-CASELD-CASE.UPI = CIN05W.WS-UPI;

    H2-IVD-CASELD-CASE.CASE-SUFX = H2-2-COR-DOC.CASE-SUFX;

    CIN05P9-S01();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

    /* WI 1932 begin - Remove office 02 condition */

    //  if(H2-IVD-CASELD-CASE.OFC-CD == "02")



    set DMI01W empty;

    DMI01W.WS-EMPLR-ID = CIN05W.WS-EMPLR-ID;

    DMI01W.WS-NCP-UPI-NUM = CIN05W.WS-UPI;

    DMI01W.WS-CASE-SUFX = H2-2-COR-DOC.CASE-SUFX;

    DMI01W.WS-CNTY-CD = H2-IVD-CASELD-CASE.OFC-CD;

    /*  */

    call "DMI01A"(VDBCONTROL, VMESSAGE, DMI01W){isNoRefresh = yes};

    /*  */

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end

        // end

       /* WI 1932 end*/

    /* WI 1180 end*/

end // end CIN05P9-GN0092



// PROCESS TO GET THE JINC DATA



function CIN05P9-GT-JID-DTA()

/* This process is to get the job income details*/



/* From each quarter get the period beg date (week beg dt)*/

/* and period end date(week end date)*/



    set H2-JOB-INCM-DTLS empty;

    set H2-PAY-DTLS empty;



    /* key setting*/

    H2-JOB-INCM-DTLS.UPI = CIN05W.WS-UPI;

    H2-JOB-INCM-DTLS.PRD-BEG-DT = CIN05W.WS-PRD-BEG-DT;

    H2-JOB-INCM-DTLS.EMPLR-ID = CIN05W.WS-EMPLR-ID;

    H2-JOB-INCM-DTLS.MAINT-CD = "D";



    CIN05W.WS-PAY-REC-CNT = 0;

    /* Perform the process to declare cursor on TWNJOB_INCM_DTLS*/

    CIN05P9-JID-S01();

    if(VDBCONTROL.URC > 104)

        WCM00P2-TO-CEP01A();

    end



    CIN05W.WS-FRST-TIME-FLG = "Y";



    /* ----------------------------------------------------------------------*/

    /* The twnjob_incm_dtl is read without the employer id as key. this is*/

    /* because the employer id is not a mandatory field and hence a record*/

    /* with a value need not exist. If a record is found, then the worker*/

    /* would be altered and no updates would be made to twnjob_incm_dtls.*/

    /* ----------------------------------------------------------------------*/



    while(CIN05W.WS-FLAG == "Y")



        /* While records exist*/

        /* Perform the process to fetch the records from TWNJOB_INCM_DTLS*/



        CIN05P9-JID-SCAN();

        if(VDBCONTROL.URC > 104)

            WCM00P2-TO-CEP01A();

        end



        /* If the first fetch fails , that is no rows available*/

        if(CIN05W.WS-FLAG == "N" && CIN05W.WS-FRST-TIME-FLG == "Y")

            CIN05W.WS-FRST-TIME-FLG = "N";

            /* key setting*/

            set H2-JOB-INCM-DTLS empty;

            H2-JOB-INCM-DTLS.UPI = CIN05W.WS-UPI;

            H2-JOB-INCM-DTLS.PRD-BEG-DT = CIN05W.WS-PRD-BEG-DT;

            H2-JOB-INCM-DTLS.EMPLR-ID = " ";

            H2-JOB-INCM-DTLS.MAINT-CD = "D";

            H2-JOB-INCM-DTLS.PRD-END-DT = CIN05W.WS-PRD-END-DT;



            /* perform process to read TWNJOB_INCM_DTLS again*/

            CIN05P9-JID-S02();

            if(VDBCONTROL.URC > 104)

                WCM00P2-TO-CEP01A();

            end



            if(CIN05W.WS-UPD-JINC == "F")

                CIN05W.WS-PAY-REC-CNT = 1;

                return;

            end

        end



        CIN05W.WS-FRST-TIME-FLG = "N"; /* Reset flag*/



        if(CIN05W.WS-FLAG == "Y")



            /* For each job income detail record get all the pay details record*/

            H2-PAY-DTLS.UPI = CIN05W.WS-UPI;

            H2-PAY-DTLS.PRD-BEG-DT = H2-JOB-INCM-DTLS.PRD-BEG-DT;

            H2-PAY-DTLS.INCM-SQ-NMB = H2-JOB-INCM-DTLS.INCM-SQ-NMB;



            /* perform process to declare cursor on the table TWNPAY_DTLS*/

            CIN05P9-PYD-S01();

            if(VDBCONTROL.URC > 104)

                WCM00P2-TO-CEP01A();

            end



            while(sysVar.sqlData.sqlcode == 0)



                CIN05P9-PYD-SCAN();

                if(VDBCONTROL.URC > 104)

                    WCM00P2-TO-CEP01A();

                end



                if(sysVar.sqlData.sqlcode == 0)

                    /* Repeat this processing until all the pay detail records for*/

                    /* the person for the period are processed count the number of*/

                    /* pay checks received by the person in the given period*/

                    CIN05W.WS-CHECK-CNT = CIN05W.WS-CHECK-CNT + 1;

                    CIN05W.WS-PAY-REC-CNT = CIN05W.WS-PAY-REC-CNT + 1;



                    /* Add number of hours worked,gross wages amount and tips*/

                    /* and commission amt for all the weeks for the month*/

                    if(H2-JOB-INCM-DTLS.PAY-FREQ == "H" &&

                            H2-JOB-INCM-DTLS.HRLY-RATE-AMT > 0)

                        /* sum up the hours worked for the given period*/

                        CIN05W.WS-HRS-WRKD = H2-PAY-DTLS.HOURS-WRKD;

                    else

                        CIN05W.WS-WGS-AMT = H2-PAY-DTLS.GRS-WGS-AMT;

                    end



                    /* sum up tips/commission amount for the month*/

                    CIN05W.WS-TIPS-COMSN-AMT = CIN05W.WS-TIPS-COMSN-AMT +

                            H2-PAY-DTLS.TIPS-COMSN-AMT;



                    /* compute total earned income for the job*/

                    CIN05W.WS-GRS-WGS-AMT = CIN05W.WS-GRS-WGS-AMT +

                            CIN05W.WS-WGS-AMT;



                    CIN05W.WS-TOT-HRS-WRKD = CIN05W.WS-TOT-HRS-WRKD +

                            CIN05W.WS-HRS-WRKD;

                end /* ** end check for records found*/

            end /* ** end while*/



            /* if factor is 'Y',retrieve the factor depending on the*/

            /* frequency. else do not apply factor*/

            if(H2-JOB-INCM-DTLS.OVRD-433-IND == "Y")

                if(H2-JOB-INCM-DTLS.PAY-FREQ == "H" &&

                        H2-JOB-INCM-DTLS.HRLY-RATE-AMT > 0)

                    CIN05W.WS-JINC-AMT = CIN05W.WS-JINC-AMT +(

                            H2-JOB-INCM-DTLS.HRLY-RATE-AMT *

                                    CIN05W.WS-TOT-HRS-WRKD) +

                            CIN05W.WS-TIPS-COMSN-AMT;

                else

                    CIN05W.WS-JINC-AMT = CIN05W.WS-JINC-AMT +

                            CIN05W.WS-GRS-WGS-AMT + CIN05W.WS-TIPS-COMSN-AMT;

                end

            else

                /* depending on the frequency, get the factor for wages*/

                CIN05W.WS-FREQ = H2-JOB-INCM-DTLS.PAY-FREQ;

                /* perform process to get the conversion factor*/

                CIN05P9-GET-CNV-FR();

                CIN05W.WS-WGS-FACTOR = CIN05W.WS-FACTOR;



                CIN05W.WS-FREQ = H2-JOB-INCM-DTLS.TIPS-COMSN-FREQ;

                /* perform the process to get the conversion factor*/

                CIN05P9-GET-CNV-FR();

                CIN05W.WS-TIPS-FACTOR = CIN05W.WS-FACTOR;



                /* compute average gross wage amount,hours worked and*/

                /* tips/commission amount for the given period*/



                /* If the WS-CHECK-CNT is 0, set the check number to 1 because*/

                /* cannot divide by 0.*/

                if(CIN05W.WS-CHECK-CNT == 0)

                    CIN05W.WS-CHECK-CNT = 1;

                end



                CIN05W.WS-GRS-WGS-AMT = CIN05W.WS-GRS-WGS-AMT /

                        CIN05W.WS-CHECK-CNT;



                CIN05W.WS-AVG-HOURS-WRKD = CIN05W.WS-HRS-WRKD /

                        CIN05W.WS-CHECK-CNT;



                CIN05W.WS-AVG-TIPS-COMSN-AMT = CIN05W.WS-TIPS-COMSN-AMT /

                        CIN05W.WS-CHECK-CNT;



                if(H2-JOB-INCM-DTLS.HRLY-RATE-AMT != 0 && CIN05W.WS-HRS-WRKD !=

                                0)

                    CIN05W.WS-JINC-AMT = CIN05W.WS-JINC-AMT +(

                            CIN05W.WS-AVG-HOURS-WRKD * CIN05W.WS-WGS-FACTOR) +(

                            CIN05W.WS-AVG-TIPS-AMT * CIN05W.WS-TIPS-FACTOR);

                else

                    CIN05W.WS-JINC-AMT = CIN05W.WS-JINC-AMT +(

                            CIN05W.WS-AVG-GRS-WGS-AMT * CIN05W.WS-WGS-FACTOR) +

                            (CIN05W.WS-AVG-TIPS-AMT * CIN05W.WS-TIPS-FACTOR);

                end

            end

        end

    end

end // end CIN05P9-GT-JID-DTA