/* AME37A – FOOD STAMP CASELOAD ACTIVITY REPORT (Crystal-ready)
   Fixed report window:
     beg_dt = 2025-01-01 00:00:00
     end_dt = 2025-01-31 23:59:59
*/

WITH
-- ---------- Helpers ----------
params AS (
  SELECT
    TIMESTAMP '2025-01-01 00:00:00' AS beg_dt,
    TIMESTAMP '2025-01-31 23:59:59' AS end_dt
),
fac_fsi AS (
  SELECT fsi.*
  FROM W026DTF1."H2-3-FAC-FCH-FSI" fsi
),
fac_fch AS (
  SELECT fch.*
  FROM W026DTF1."H2-2-FAA-FCH" fch
),
fac_fac AS (
  SELECT fac.*
  FROM W026DTF1."H2-2-FAA-FAC" fac
),
pcase AS (
  SELECT p.*
  FROM W026DTF1."H2-PRGM-CASE-HSTRY" p
),
psy AS (
  SELECT p.*
  FROM W026DTF1."H2-3-FAC-FCH-PSY" p
),

-- ---------- ACTIVE CASELOAD & FLAGS (S02) ----------
active AS (
  SELECT
    CASE WHEN fsi."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    1 AS cases,
    CASE WHEN fsi."EXPD-SRVC-IND" = 'Y' THEN 1 ELSE 0 END AS exp_srv,
    CASE WHEN fsi."ISNCE-MTHD" = 'E' THEN 1 ELSE 0 END AS ebt,
    CASE WHEN fsi."ISNCE-MTHD" = 'E' THEN 1 ELSE 0 END AS dmi_ebt,        -- matches WS-DMIEBT
    CASE WHEN fsi."ISNCE-MTHD" <> 'E' AND fsi."MTHD-OF-ISNCE" = '3' THEN 1 ELSE 0 END AS dams,     -- WS-*-DAMS
    CASE WHEN fsi."ISNCE-MTHD" <> 'E' AND fsi."MTHD-OF-ISNCE" <> '3' THEN 1 ELSE 0 END AS sphantl, -- WS-*-SPHNDL
    CASE WHEN fsi."MTHD-OF-ISNCE" = '0' OR fsi."MTHD-OF-ISNCE" = ' ' THEN 1 ELSE 0 END AS dmi0,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '1' THEN 1 ELSE 0 END AS dmi1,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '2' THEN 1 ELSE 0 END AS dmi2,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '3' THEN 1 ELSE 0 END AS dmi3,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '4' THEN 1 ELSE 0 END AS dmi4,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '5' THEN 1 ELSE 0 END AS dmi5,
    CASE WHEN fsi."MTHD-OF-ISNCE" = '6' THEN 1 ELSE 0 END AS dmi6,
    CASE WHEN fsi."MTHLY-RPTR-IND" = 'Y' THEN 1 ELSE 0 END AS mrc
  FROM fac_fsi fsi
),

active_rollup AS (
  SELECT
    is_pa,
    SUM(cases)      AS active_cases,
    SUM(exp_srv)    AS expedited_cases,
    SUM(ebt)        AS ebt_cases,
    SUM(dams)       AS dams_cases,
    SUM(sphantl)    AS sphndl_cases,
    SUM(dmi_ebt)    AS dmi_ebt,
    SUM(dmi0) AS dmi0, SUM(dmi1) AS dmi1, SUM(dmi2) AS dmi2,
    SUM(dmi3) AS dmi3, SUM(dmi4) AS dmi4, SUM(dmi5) AS dmi5, SUM(dmi6) AS dmi6,
    SUM(mrc)        AS monthly_reporters
  FROM active
  GROUP BY is_pa
),

-- ---------- LAST-MONTH ISSUES & REVISED (S03 / LAST-MTH) ----------
issues_last_month AS (
  SELECT
    CASE WHEN fsi."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    SUM(CASE WHEN fsi."ISNCE-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params) THEN 1 ELSE 0 END) AS last_month_issues,
    COUNT(*) AS revised_caseload -- mirrors PAREVISED/NAREVISED increment (no date filter in code)
  FROM fac_fsi fsi
  GROUP BY CASE WHEN fsi."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),

-- ---------- APPLICATIONS via FAC/FCH joined to PROGRAM CASE HISTORY (S04) ----------
apps_benefit AS (
  SELECT
    CASE WHEN fch."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    COUNT(*) AS full_benefit,  -- BENEFIT approvals (no “partial” in NOMADS per code)
    SUM(CASE WHEN p."RCRT-APL-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params) THEN 1 ELSE 0 END) AS new_apps,
    SUM(CASE WHEN p."RCRT-APL-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params) THEN 0 ELSE 1 END) AS subs_apps
  FROM fac_fac fac
  JOIN fac_fch fch
    ON fch."ICI" = fac."ICI"
   AND fch."ACTN-TS" = fac."ACTN-TS"
  JOIN pcase p
    ON p."ICI" = fac."ICI"
  WHERE fch."ACTN-TYP" IN ('FA','RE','RI')
  GROUP BY CASE WHEN fch."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),

-- ---------- WITHDRAWN/APPLICATION REASONS (S05/S06 via PSY) ----------
psy_base AS (
  SELECT DISTINCT
    p."ICI",
    p."FS-SUFX",
    p."RCRT-APL-DT",
    p."SYS-CLSRE-DNL-RSN",
    p."PRGM-CASE-STS"
  FROM psy p
),
psy_withdrawn AS (
  SELECT
    CASE WHEN "FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    COUNT(*) AS withdrawn
  FROM psy_base
  GROUP BY CASE WHEN "FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),
psy_totals_and_reasons AS (
  SELECT
    CASE WHEN "FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    COUNT(*) AS total_apps_psy,
    SUM(CASE WHEN "SYS-CLSRE-DNL-RSN" = '11' THEN 1 ELSE 0 END) AS deny_excess_income,
    SUM(CASE WHEN "SYS-CLSRE-DNL-RSN" = '08' THEN 1 ELSE 0 END) AS non_coop,
    SUM(CASE WHEN "SYS-CLSRE-DNL-RSN" = '10' THEN 1 ELSE 0 END) AS quit_workreg,
    SUM(CASE WHEN "SYS-CLSRE-DNL-RSN" = '20' THEN 1 ELSE 0 END) AS excess_resource,
    SUM(CASE WHEN "SYS-CLSRE-DNL-RSN" NOT IN ('11','08','10','20') THEN 1 ELSE 0 END) AS other_reasons,
    SUM(CASE WHEN "RCRT-APL-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params) THEN 1 ELSE 0 END) AS psy_new,
    SUM(CASE WHEN "RCRT-APL-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params) THEN 0 ELSE 1 END) AS psy_subs
  FROM psy_base
  GROUP BY CASE WHEN "FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),

-- ---------- APPS RECEIVED IN MONTH BY STATUS (S07) ----------
apps_month_by_status AS (
  SELECT
    CASE WHEN p."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    COUNT(*)                                                     AS appl_this_month,
    SUM(CASE WHEN p."PRGM-CASE-STS" = 'P' THEN 1 ELSE 0 END)    AS pending_mth,
    SUM(CASE WHEN p."PRGM-CASE-STS" = 'O' THEN 1 ELSE 0 END)    AS approved_mth,
    SUM(CASE WHEN p."PRGM-CASE-STS" IN ('D','T') THEN 1 ELSE 0 END) AS denied_withdrawn_mth
  FROM psy_base p
  WHERE p."RCRT-APL-DT" BETWEEN (SELECT beg_dt FROM params) AND (SELECT end_dt FROM params)
  GROUP BY CASE WHEN p."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),

-- ---------- TERMINATIONS (S08) ----------
terminations AS (
  /* If your schema has a specific termination flag/date, add it here to mirror S08 exactly. */
  SELECT
    CASE WHEN p."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END AS is_pa,
    COUNT(*) AS terminations
  FROM psy_base p
  GROUP BY CASE WHEN p."FS-SUFX" IN ('P','S','G','A') THEN 1 ELSE 0 END
),

-- ---------- Merge all per-suffix (PA vs Non-PA) ----------
merged AS (
  SELECT
    COALESCE(a.is_pa, i.is_pa, ab.is_pa, w.is_pa, pr.is_pa, s7.is_pa, t.is_pa, 0) AS is_pa,
    -- Active caseload
    COALESCE(a.active_cases, 0)                    AS active_cases,
    COALESCE(a.expedited_cases, 0)                 AS exp_service_cases,
    COALESCE(a.ebt_cases, 0)                       AS ebt_cases,
    COALESCE(a.dams_cases, 0)                      AS dams_cases,
    COALESCE(a.sphndl_cases, 0)                    AS sphndl_cases,
    COALESCE(a.dmi_ebt, 0)                         AS dmi_ebt,
    COALESCE(a.dmi0,0) AS dmi0, COALESCE(a.dmi1,0) AS dmi1, COALESCE(a.dmi2,0) AS dmi2,
    COALESCE(a.dmi3,0) AS dmi3, COALESCE(a.dmi4,0) AS dmi4, COALESCE(a.dmi5,0) AS dmi5, COALESCE(a.dmi6,0) AS dmi6,
    COALESCE(a.monthly_reporters, 0)               AS monthly_reporters,

    -- Last-month issues / revised
    COALESCE(i.last_month_issues, 0)               AS issues_last_month,
    COALESCE(i.revised_caseload, 0)                AS revised_caseload,

    -- Applications: approvals treated as "full benefit" per code (no partials in NOMADS)
    COALESCE(ab.full_benefit, 0)                   AS approved_full_benefit,
    0                                              AS approved_partial_benefit,  -- per code
    COALESCE(ab.full_benefit, 0)                   AS approved_total,            -- full + partial(0)
    COALESCE(w.withdrawn, 0)                       AS withdrawn_apps,

    -- Denial reasons
    COALESCE(pr.deny_excess_income, 0)             AS denied_excess_income,
    COALESCE(pr.non_coop, 0)                       AS denied_non_coop,
    COALESCE(pr.quit_workreg, 0)                   AS denied_quit_workreg,
    COALESCE(pr.excess_resource, 0)                AS denied_excess_resource,
    COALESCE(pr.other_reasons, 0)                  AS denied_other,
    (COALESCE(pr.deny_excess_income, 0)
     + COALESCE(pr.non_coop, 0)
     + COALESCE(pr.quit_workreg, 0)
     + COALESCE(pr.excess_resource, 0)
     + COALESCE(pr.other_reasons, 0))              AS denied_total,

    -- Applications processed (report-month breakdown)
    COALESCE(s7.appl_this_month, 0)                AS apps_received_this_month,
    COALESCE(s7.pending_mth, 0)                    AS pending_this_month,
    COALESCE(s7.approved_mth, 0)                   AS approved_this_month,
    COALESCE(s7.denied_withdrawn_mth, 0)           AS denied_withdrawn_this_month,

    -- New vs previous months received during processing
    COALESCE(ab.new_apps, 0) + COALESCE(pr.psy_new, 0)   AS new_received,
    COALESCE(ab.subs_apps, 0) + COALESCE(pr.psy_subs, 0) AS previous_months_received,

    -- Non-application actions
    COALESCE(t.terminations, 0)                    AS terminations

  FROM active_rollup a
  FULL OUTER JOIN issues_last_month i      ON i.is_pa  = a.is_pa
  FULL OUTER JOIN apps_benefit ab          ON ab.is_pa = COALESCE(a.is_pa, i.is_pa)
  FULL OUTER JOIN psy_withdrawn w          ON w.is_pa  = COALESCE(a.is_pa, i.is_pa)
  FULL OUTER JOIN psy_totals_and_reasons pr ON pr.is_pa = COALESCE(a.is_pa, i.is_pa)
  FULL OUTER JOIN apps_month_by_status s7   ON s7.is_pa = COALESCE(a.is_pa, i.is_pa)
  FULL OUTER JOIN terminations t            ON t.is_pa  = COALESCE(a.is_pa, i.is_pa)
)

SELECT
  CASE WHEN is_pa = 1 THEN 'PA (P/S/G/A)' ELSE 'Non-PA' END AS suffix_bucket,

  -- ACTIVE CASELOAD
  active_cases                                    AS pac_nac_cases,
  exp_service_cases                               AS expedited_cases,
  ebt_cases                                       AS ebt_cases,
  dams_cases                                      AS dams_cases,
  sphndl_cases                                    AS special_handling_cases,
  dmi0, dmi1, dmi2, dmi3, dmi4, dmi5, dmi6, dmi_ebt,
  monthly_reporters,

  -- LAST MONTH ISSUES + REVISED
  issues_last_month,
  revised_caseload,

  -- RETRO % (issues_last_month / active_cases * 100)
  CASE WHEN active_cases > 0
       THEN ROUND( (issues_last_month * 100.0) / active_cases, 2)
       ELSE 0 END                                  AS pct_retro_issues,

  -- ESTIMATED CURRENT MONTH CASELOAD
  CASE WHEN active_cases > 0
       THEN ROUND( active_cases + ((issues_last_month * 100.0) / active_cases) * active_cases / 100.0 , 0)
       ELSE active_cases END                       AS estimated_current_month_caseload,

  -- APPLICATIONS – APPROVALS/WITHDRAWN/DENIED
  approved_full_benefit,
  approved_partial_benefit,
  approved_total,
  withdrawn_apps,

  denied_excess_income,
  denied_non_coop,
  denied_quit_workreg,
  denied_excess_resource,
  denied_other,
  denied_total,

  -- APPLICATIONS PROCESSED: THIS MONTH VS PREV MONTHS
  apps_received_this_month,
  new_received,
  previous_months_received,

  -- NON-APPLICATION ACTIONS
  terminations

FROM merged
ORDER BY is_pa DESC;
