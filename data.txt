if (AME48W1.WS-INDEX == 4)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT4 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 5)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT5 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 6)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT6 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 7)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT7 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 8)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT8 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 9)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT9 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 10)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT10 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 11)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT11 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 12)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT12 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 13)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT13 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 14)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT14 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 15)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT15 = FORMATW.OUTPUT-CHAR;
  end

  if (AME48W1.WS-INDEX == 16)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AME48W1.WS-ZIP-CD-CNT[WS-INDEX];
    FORMATW.LENGTH = 5;
    FORMATW.FORMAT-FLAG = "Y";
    REPP9-FORMAT-PROC();
    AME48W-DET.S-Q17-ZIP-CD-CNT16 = FORMATW.OUTPUT-CHAR;
  end
   /* cbsi end*/
end // end AME48P9-POP-STDE17


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T01-09()
  /* cbsi start*/
  /* q01 - q09  format*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-ACTV-CSE;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q1-ACT-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-TOT-ACTV-MEM;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q2-ACT-MEM-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-TOT-ACTV-CSE;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q3-MR-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-Q04-PA-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q4-PA-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-Q04-NA-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q4-NA-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-1;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-1-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-2;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-2-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-3;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-3-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-4;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-4-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-5;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-5-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-6;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-6-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-7;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q5-HH-7-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-HH;
  FORMATW.LENGTH = 7;
  FORMATW.DEC-COUNT = 2;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q6-AVG-HH = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[1];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-0-5-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[2];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-6-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[3];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-7-12-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[4];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-13-15-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[5];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-16-17-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[6];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-18-20-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[7];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-21-25-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[8];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-26-30-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[9];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-31-35-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[10];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-36-40-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[11];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-41-45-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[12];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-46-50-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[13];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-51-55-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[14];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-56-59-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AGE-CNT[15];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q7-MBR-60-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DISQ-MBR-CT1;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q8-DISQ-MBR-CNT-1 = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DISQ-MBR-CT2;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q9-DISQ-MBR-CNT-2 = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-SSN-DSQL-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q9-SSN-DSQL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CTZN-DSQL-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q9-CTZN-DSQL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-FELON-DSQL-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q9-FELON-DSQL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DRUG-DSQL-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q9-DRUG-DSQL-CNT = FORMATW.OUTPUT-CHAR;

  /*  */
end // end AME48P9-POP-T01-09


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T08()
  /*  */
  /* format/print q08*/

  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-4-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* IPV BLOCK HEADER LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q08-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  AME48W1.WS-IPV-IDX = 1;
  AME48W1.WS-IPV-COL-IDX = 1;

  while (AME48W.WS-IPVDQ-CD[WS-IPV-IDX] != " ")

    while (AME48W1.WS-IPV-COL-IDX <= 12 && 
    AME48W.WS-IPVDQ-CD[WS-IPV-IDX] != " ")

      AME48W-DET.U-DOTS[WS-IPV-COL-IDX] = "-------";
      AME48W-DET.FILLER18A1[WS-IPV-COL-IDX] = " ";
      AME48W-DET.S-Q08-IPV-HDR-CD[WS-IPV-COL-IDX] = AME48W.WS-IPVDQ-CD[WS-IPV-IDX];

      AME48W-DET.FILLER18B1[WS-IPV-COL-IDX] = " ";

      set FORMATW empty;
      FORMATW.INPUT-NUMBER = AME48W.WS-S-IPV-CNT[WS-IPV-IDX];
      FORMATW.LENGTH = 7;
      FORMATW.FORMAT-FLAG = "Y";
      REPP9-FORMAT-PROC();
      AME48W-DET.S-Q08-IPV-CNT[WS-IPV-COL-IDX] = FORMATW.OUTPUT-CHAR;

      AME48W1.WS-IPV-IDX = AME48W1.WS-IPV-IDX + 1;
      AME48W1.WS-IPV-COL-IDX = AME48W1.WS-IPV-COL-IDX + 1;

    end /* WHILE IDX <= 12*/

    AME48P9-PRN-08();

    AME48W1.WS-IPV-COL-IDX = 1;

  end /* WHILE*/
   /*  */
end // end AME48P9-POP-T08


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T10-12()
  /* q11/q12 - format -- ethnic tot/male/female*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-CD-IDX];
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q21-ETH-TOT-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-ETH-M-CNT[WS-ETHNC-CD-IDX];
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q21-ETH-M-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-ETH-F-CNT[WS-ETHNC-CD-IDX];
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q21-ETH-F-CNT = FORMATW.OUTPUT-CHAR;

  AME48W-DET.S-Q21-ETH-DESC = AME48W.WS-ETHNC-DESC[WS-ETHNC-CD-IDX];

  /*  */
end // end AME48P9-POP-T10-12


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T11-16()
  /*  */
  /* q11 - q16  format*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-SEX-M-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q11-SEX-M-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-SEX-F-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q11-SEX-F-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-Q13-A-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q13-TOT-DIS-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-Q13-B-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q13-DIS-ONLY-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-MBR-MEDX;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q14-MBR-MEDX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-MEDX-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q15-CASE-MEDX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-MEDX;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q16-AVG-MEDX-CNT = FORMATW.OUTPUT-CHAR;

  /*  */
end // end AME48P9-POP-T11-16


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T18-20()
  /*  */
  /* q18 - q20   format*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AR-CSE-CT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q18-AR-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-W-INC-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q19-CASE-INC-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-ER-INC-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q20-CASE-ER-INC-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-UNIN-INC-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q20-CASE-UNIN-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-GAGA-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q20-UNIN-GAGA-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-TANF-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q20-UNIN-TANF-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-EDIN-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q20-UNIN-EDIN-CNT = FORMATW.OUTPUT-CHAR;

  /*  */
end // end AME48P9-POP-T18-20


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T20()
  /* q20 - format and print UNIN OCCURRENCE block*/

  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-4-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* UNIN BLOCK HEADER LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-OCCR-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  AME48W1.WS-UNIN-IDX = 1;
  AME48W1.WS-UNIN-CNT-IDX = 1;
  AME48W1.WS-UNIN-COL-IDX = 1;

  while (AME48W.WS-UNIN-CD[WS-UNIN-IDX] != " ")

    while (AME48W1.WS-UNIN-COL-IDX <= 12 && 
    AME48W.WS-UNIN-CD[WS-UNIN-IDX] != " ")

      AME48W-DET.U-DOTS[WS-UNIN-COL-IDX] = "-------";
      AME48W-DET.FILLER55A2[WS-UNIN-COL-IDX] = " ";
      AME48W-DET.S-Q20-UNIN-HDR-CD[WS-UNIN-COL-IDX] = AME48W.WS-UNIN-CD[WS-UNIN-IDX];

      AME48W-DET.FILLER56A1[WS-UNIN-COL-IDX] = " ";

      set FORMATW empty;
      FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-CNT[WS-UNIN-CNT-IDX];
      FORMATW.LENGTH = 7;
      FORMATW.FORMAT-FLAG = "Y";
      REPP9-FORMAT-PROC();
      AME48W-DET.S-Q20-UNIN-CNT[WS-UNIN-COL-IDX] = FORMATW.OUTPUT-CHAR;

      AME48W1.WS-UNIN-IDX = AME48W1.WS-UNIN-IDX + 1;
      AME48W1.WS-UNIN-CNT-IDX = AME48W1.WS-UNIN-CNT-IDX + 1;
      AME48W1.WS-UNIN-COL-IDX = AME48W1.WS-UNIN-COL-IDX + 1;

    end /* WHILE IDX <= 12*/

    AME48P9-PRN-20();

    AME48W1.WS-UNIN-COL-IDX = 1;

  end /* WHILE*/
   /*  */
end // end AME48P9-POP-T20


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T21-24()
  /*  */
  /* q21 - q24   format*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-GRS-INC;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q21-AVG-GRS-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-ALL-PA;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q22-AVG-PA-GRS-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-ALL-NA;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q22-AVG-NA-GRS-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-Q22-PA;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q22-AVG-PA-W-GRS-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-Q22-NA;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W-DET.S-Q22-AVG-NA-W-GRS-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-DIS-INC;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q23-AVG-DIS-INC-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-DSA-INC;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q23-AVG-DIS-ALL-INC = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-ER-INC;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q24-ER-INC-AVG-ALL = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-UNIN-INC;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q24-UNIN-AVG-ALL = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-GAGA-AVG;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q24-UNIN-GAGA-AVG = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-TANF-AVG;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q24-UNIN-TANF-AVG = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-EDIN-AVG;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q24-UNIN-EDIN-AVG = FORMATW.OUTPUT-CHAR;

  /*  */
end // end AME48P9-POP-T21-24


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T24()
  /* q24 - format and print UNIN AVERAGE block*/

  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-4-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* UNIN BLOCK HEADER LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-AVG-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  AME48W1.WS-UNIN-IDX = 1;
  AME48W1.WS-UNIN-COL-IDX = 1;

  while (AME48W.WS-UNIN-CD[WS-UNIN-IDX] != " ")

    while (AME48W1.WS-UNIN-COL-IDX <= 12 && 
    AME48W.WS-UNIN-CD[WS-UNIN-IDX] != " ")

      AME48W-DET.U-DOTS[WS-UNIN-COL-IDX] = "-------";
      AME48W1-DET.FILLER66A2[WS-UNIN-COL-IDX] = " ";
      AME48W1-DET.S-Q24-UNIN-HDR-CD[WS-UNIN-COL-IDX] = AME48W.WS-UNIN-CD[WS-UNIN-IDX];

      AME48W1-DET.FILLER67A1[WS-UNIN-COL-IDX] = " ";

      if (AME48W.WS-S-UNIN-CNT[WS-UNIN-IDX] != 0)
        AME48W.WS-S-UNIN-AVG = mathLib.round(AME48W.WS-S-UNIN-AMT-TOT[WS-UNIN-IDX] /         AME48W.WS-S-UNIN-CNT[WS-UNIN-IDX], -mathLib.decimals(AME48W.WS-S-UNIN-AVG));
      end

      set FORMATW empty;
      FORMATW.INPUT-NUMBER = AME48W.WS-S-UNIN-AVG;
      FORMATW.LENGTH = 7;
      FORMATW.FORMAT-FLAG = "Y";
      REPP9-FORMAT-PROC();
      AME48W1-DET.S-Q24-UNIN-AVG[WS-UNIN-COL-IDX] = FORMATW.OUTPUT-CHAR;

      AME48W1.WS-UNIN-IDX = AME48W1.WS-UNIN-IDX + 1;
      AME48W1.WS-UNIN-COL-IDX = AME48W1.WS-UNIN-COL-IDX + 1;
      AME48W.WS-S-UNIN-AVG = 0;

    end /* WHILE IDX <= 12*/

    AME48P9-PRN-24();

    AME48W1.WS-UNIN-COL-IDX = 1;

  end /* WHILE*/
   /*  */
end // end AME48P9-POP-T24


// POP STATEWIDE TOTAL FIELDS
Function AME48P9-POP-T25-47()
  /*  */
  /* q25 - q47   format*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-RM-AMT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q25-AVG-RENT-MORT-AMT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-R-M-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q25-CASE-R-M-AMT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-SUA-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q26-CASE-SUA-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-PSUA-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q27-CASE-PSUA-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DEP-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q28-CASE-DCEX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-DCEX-AMT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q29-AVG-DCEX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-UTIL-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q30-CASE-UTIL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-UTIL-AMT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q31-AVG-UTIL-AMT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-SHEL;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q32-AVG-SHEL-UTIL-AMT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CSE-NO-SL;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q33-CASE-NO-SHEL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CSE-W-SL;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q33-CASE-W-SHEL-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CASE-ANY-EXP;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q33-CASE-ANY-EXP-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-BNFT-AMT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q34-AVG-BNFT-AMT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-PA-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q34-PA-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-NA-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q34-NA-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH1-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH1-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH2-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH2-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH3-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH3-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH4-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH4-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH5-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH5-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH6-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH6-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH7-AVG-BNFT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q35-HH7-AVG-BNFT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVG-CERT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q36-AVG-CERT-TM = FORMATW.OUTPUT-CHAR;

  /* SET FORMATW EMPTY;*/
  /* MOVE AME48W.WS-S-REDET-MR TO FORMATW.INPUT-NUMBER;*/
  /* MOVE 6 TO FORMATW.LENGTH;*/
  /* MOVE 'Y' TO FORMATW.FORMAT-FLAG;*/
  /* PERFORM REPP9-FORMAT-PROC;*/
  /* MOVE FORMATW.OUTPUT-CHAR TO AME48W1-DET.S-Q36-AVG-MR-CERT-TM;*/

  /* SET FORMATW EMPTY;*/
  /* MOVE AME48W.WS-S-REDET-NON-MR TO FORMATW.INPUT-NUMBER;*/
  /* MOVE 6 TO FORMATW.LENGTH;*/
  /* MOVE 'Y' TO FORMATW.FORMAT-FLAG;*/
  /* PERFORM REPP9-FORMAT-PROC;*/
  /* MOVE FORMATW.OUTPUT-CHAR TO AME48W1-DET.S-Q36-AVG-NON-MR-CNT;*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-1-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT1-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-2-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT2-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-3-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT3-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-4-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT4-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-5-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT5-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-6-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT6-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-7-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT7-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-8-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT8-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-9-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT9-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-10-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT10-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-11-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT11-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-12-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT12-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-24-MO;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q37-CRT24-CASE-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DEBT-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q38-CASE-BR-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[1];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-01-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[2];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-02-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[3];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-03-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[4];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-04-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[5];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-05-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[6];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-06-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[7];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-07-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[8];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-08-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[9];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-09-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[10];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-10-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[11];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-11-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[12];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-12-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[13];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-13-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[14];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-14-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[15];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-15-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[16];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-16-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[17];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-17-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[18];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-18-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[19];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-19-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[20];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-20-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[21];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-21-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[22];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-22-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[23];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-23-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[24];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-24-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[25];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-25-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[26];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-26-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[27];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-27-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[28];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-28-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[29];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-29-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[30];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-30-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-DAY-OF-MTH-CNT[31];
  FORMATW.LENGTH = 6;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q39-CYCLE-31-CNT = FORMATW.OUTPUT-CHAR;

  /* SET FORMATW EMPTY;*/
  /* *MOVE AME48W.WS-S-AVG-CERT TO FORMATW.INPUT-NUMBER;*/
  /* MOVE AME48W.WS-S-AVGCERT-TM TO FORMATW.INPUT-NUMBER;*/
  /* MOVE 7 TO FORMATW.LENGTH;*/
  /* MOVE 'Y' TO FORMATW.FORMAT-FLAG;*/
  /* PERFORM REPP9-FORMAT-PROC;*/
  /* MOVE FORMATW.OUTPUT-CHAR TO AME48W1-DET.S-Q40-AVG-CERT-PRD;*/
  AME48W1-DET.S-Q40-AVG-CERT-PRD = " "; /* TEMPORARY*/

  set FORMATW empty;
  AME48W.WS-S-CSE-C4-CT = "0"; /* STAT CURRENTLY NOT IN USE*/
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CSE-C4-CT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q41-CASE-C4-TX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  AME48W.WS-S-CSE-AP-CT = "0"; /* STAT CURRENTLY NOT IN USE*/
  FORMATW.INPUT-NUMBER = AME48W.WS-S-CSE-AP-CT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q42-CASE-APPL-TX-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVGAPR-TM;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q43-AVG-APR-TIME = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVGDNL-TM;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q44-AVG-DNL-TIME = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-AVGAPP-TM;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q45-AVG-APP-TIME = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-18-NS;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q46-HH-18-NS-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-18-WS;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q46-HH-18-WS-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-15-NS;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q47-HH-15-NS-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HH-15-WS;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q47-HH-15-WS-CNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AME48W.WS-S-HMLS-CNT;
  FORMATW.LENGTH = 7;
  FORMATW.FORMAT-FLAG = "Y";
  REPP9-FORMAT-PROC();
  AME48W1-DET.S-Q47-HMLS-CNT = FORMATW.OUTPUT-CHAR;

  /*  */
end // end AME48P9-POP-T25-47


// POP REPT VAR Q17 WRT ZIP-CD
Function AME48P9-POP-ZIPHDR()
  /* cbsi start*/

  if (AME48W1.WS-INDEX == 1)
    S-Q17-ZIP-CD-HDR1 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 2)
    S-Q17-ZIP-CD-HDR2 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 3)
    S-Q17-ZIP-CD-HDR3 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 4)
    S-Q17-ZIP-CD-HDR4 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 5)
    S-Q17-ZIP-CD-HDR5 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 6)
    S-Q17-ZIP-CD-HDR6 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 7)
    S-Q17-ZIP-CD-HDR7 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 8)
    S-Q17-ZIP-CD-HDR8 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 9)
    S-Q17-ZIP-CD-HDR9 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 10)
    S-Q17-ZIP-CD-HDR10 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 11)
    S-Q17-ZIP-CD-HDR11 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 12)
    S-Q17-ZIP-CD-HDR12 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 13)
    S-Q17-ZIP-CD-HDR13 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 14)
    S-Q17-ZIP-CD-HDR14 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 15)
    S-Q17-ZIP-CD-HDR15 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  if (AME48W1.WS-INDEX == 16)
    S-Q17-ZIP-CD-HDR16 = AME48W1.WS-ZIP-C[WS-INDEX];
  end

  /* cbsi end*/
end // end AME48P9-POP-ZIPHDR


// PROCESS TO PRINT THE REPORT
Function AME48P9-PRINT-PARA()
  /* cbsi start*/
  /* to get the  end-dt for the sample month*/
  /* ********************************************************/
  /*  */
  /* With reference to ain20001 sql Dsc01 have been recoded*/
  /* With reference to ame48001 sql Dsc16 have been recoded*/
  /*  */
  /*  */
  /* ********************************************************/

  AME48W.WS-MM-1 = SR-AME48-RECIN.RPT-MONTH;
  AME48W.WS-DD-1 = SR-AME48-RECIN.RPT-DAY;
  AME48W.WS-YYYY-1 = SR-AME48-RECIN.RPT-YEAR;

  AME48P9-BEG-END-DT();

  AME48W.WS-RPT-STR-MM = AME48W.WS-RPT-ST-MM;
  AME48W.WS-RPT-STR-YYYY = AME48W.WS-RPT-ST-YYYY;

  AME48W.WS-RPT-EN-MM = AME48W.WS-RPT-MONTH;
  AME48W.WS-RPT-EN-YYYY = AME48W.WS-RPT-YEAR;

  AME48W-SUBH.S-RPT-ST-DD = AME48W.WS-RPT-BEG-DD;
  AME48W-SUBH.S-RPT-ST-MM = AME48W.WS-RPT-BEG-MM;
  AME48W-SUBH.S-RPT-ST-YYYY = AME48W.WS-RPT-BEG-YYYY;

  AME48W-SUBH.S-RPT-END-DD = AME48W.WS-RPT-END-DD;
  AME48W-SUBH.S-RPT-END-MM = AME48W.WS-RPT-END-MM;
  AME48W-SUBH.S-RPT-END-YYYY = AME48W.WS-RPT-END-YYYY;

  set H2-OFFICE empty;

  AME48Q1-S01();

  if (sysVar.sqlData.sqlcode == 0)
    AME48Q1-S01-SCAN();
  end

  /* IF (VDBCONTROL.URC = 100);*/
  if (sysVar.sqlData.sqlcode == 100)
  /* print the header details*/
    AME48P9-PRN-HEAD();
  /* perform process to indicate data error*/
    REP132P9-NRF-PROC();
  /* perform termination process*/
    AME48P9-CLOS-PARA();
  end

  if (sysVar.sqlData.sqlcode == 0)
  /* Initilize control break variable*/
    AME48W.WS-PREV-LEVEL = H2-OFFICE.OFC-NM;
    AME48W-SUBH.S-LEVEL = H2-OFFICE.OFC-NM;
  end

  AME48W.WS-OFC-CNT = 0;

  /* print all the details retrieved from the data base*/
  while (sysVar.sqlData.sqlcode == 0)
    AME48P9-ST-EMPTY();
    if ((REP-COMMON.WS-NEW-PAGE == "Y"))
      AME48P9-PRN-HEAD(); /* print the header details*/
      AME48P9-PRN-SUBH(); /* print the subheader*/
      REP-COMMON.WS-NEW-PAGE = "N"; /* reset new page  indicator*/
    end

  /* THIS FLAG IS TESTED BEFORE PRINTING STATEWIDE TOTALS*/
    AME48W.WS-PRE-FLAG = "Y";
  /* increment ofc-cnt*/
    AME48W.WS-OFC-CNT = AME48W.WS-OFC-CNT + 1;

  /* move retrieved data to other h2-records needed for other sqls*/
    H2-2-FAC-PSY.OFC-CD = H2-OFFICE.OFC-CD;
  /* perform processing specific to the application*/
    AME48P9-APPLSPEC();

    if (AME48W1.WS-DS2-FLG == "Y")

      AME48P9-CALC-AVGS();

    end

  /* print detail lines 'til detail line q17.*/
    AME48P9-POP-O01-09();
    AME48P9-PRN-01-08();

    AME48P9-POP-O08(); /* LOOPS,FORMATS & CALLS PRN-08*/

    AME48P9-IPV-LEGND();

    AME48P9-PRN-09();

    AME48P9-PRN-O10-12(); /* LOOPS, FORMATS VIA POP-O10-12 & PRNTS*/

    AME48P9-POP-O11-16();
    AME48P9-PRN-11-16();

    set VDBCONTROL empty;
    H2-4-FACFCE-PAHPSY.OFC-CD = H2-OFFICE.OFC-CD;
    H2-4-FACFCE-PAHPSY.PRD-BEG-DT = AME48W.WS-RPT-BEG-DT;
    H2-4-FACFCE-PAHPSY.PRD-END-DT = AME48W.WS-RPT-END-DT;

    AME48Q16-S16();

    if (sysVar.sqlData.sqlcode == 0) /* WI 20799*/
      AME48Q16-S16-SCAN();
    end
    if (sysVar.sqlData.sqlcode == 0)
      AME48W1.WS-INDEX = 1;
      AME48W1.WS-ZIP-CD = H2-4-FACFCE-PAHPSY.ZIP-CD; /* WI 20799*/
      AME48W1.WS-PREV-ZIP-CD = H2-4-FACFCE-PAHPSY.ZIP-CD; /* WI 20799*/
  /* END;*/
    else
      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE41-NOZIP;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();

      SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();
    end

  /* WI 20799 START*/
    while (sysVar.sqlData.sqlcode == 0)
      while (AME48W1.WS-ZIP-CD-1 == AME48W1.WS-PREV-ZIP-CD-1
       && sysVar.sqlData.sqlcode == 0)
        AME48W1.WS-ZIP-COUNT-ACCUM = AME48W1.WS-ZIP-COUNT-ACCUM +         AME48W1.WS-COUNT;
        AME48Q16-S16-SCAN();
        if (sysVar.sqlData.sqlcode == 0)
          AME48W1.WS-ZIP-CD = H2-4-FACFCE-PAHPSY.ZIP-CD; /* WI 20799*/
        end
      end /* WHILE*/
  /* WI 20799 END*/

      if (AME48W1.WS-ZIP-CD-1 != AME48W1.WS-PREV-ZIP-CD-1
       || sysVar.sqlData.sqlcode == 100) /* WI 20799*/

        AME48W1.WS-ZIP-CD = H2-4-FACFCE-PAHPSY.ZIP-CD;
  /* MOVE AME48W1.WS-ZIP-CD-1 TO AME48W1.WS-ZIP-C(WS-INDEX);/*WI 20799*/
        AME48W1.WS-ZIP-C[WS-INDEX] = AME48W1.WS-PREV-ZIP-CD-1; /* 20799*/
        AME48P9-POP-ZIPHDR();
  /* MOVE AME48W1.WS-COUNT TO AME48W1.WS-ZIP-CD-CNT(WS-INDEX);/*WI 20799*/
        AME48W1.WS-ZIP-CD-CNT[WS-INDEX] = AME48W1.WS-ZIP-COUNT-ACCUM;

    /* perform process to populate q17.*/
        AME48P9-POP-DET17();
  /* MOVE ' ' TO AME48W1.WS-ZIP-CD; /* WI 20799*/
        AME48W1.WS-INDEX = AME48W1.WS-INDEX + 1;
        AME48W1.WS-ZIP-COUNT-ACCUM = 0; /* WI 20799*/
        AME48W1.WS-PREV-ZIP-CD = AME48W1.WS-ZIP-CD; /* WI 20799*/


        if (AME48W1.WS-INDEX > 16)

          if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
            REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
            SR-132REP-RECOUT.PRNT-CC = "1";
            AME48P9-PRN-HEAD(); /* print the header details*/
            AME48P9-PRN-SUBH(); /* print the subheader*/
          end

          SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE42;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();
          AME48W-DET.LINE42 = " ";

          SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE43;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();
          AME48W-DET.LINE43 = " ";

          SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
          if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
            REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

  /* MOVE '1' TO SR-132REP-RECOUT.PRNT-CC;*/
            AME48P9-PRN-HEAD(); /* print the header details*/
            AME48P9-PRN-SUBH(); /* print the subheader*/
          end

          AME48W1.WS-INDEX = 1;

        end
      end /* WI 20799*/
  /* PERFORM AME48Q16-S16-SCAN; /* WI 20799*/
    end

  /* IF VDBCONTROL.URC = 100 AND AME48W1.WS-INDEX <= 16;*/
    if (sysVar.sqlData.sqlcode == 100 && AME48W1.WS-INDEX <= 16
     && AME48W1.WS-INDEX > 1)
      AME48W1.WS-LS-16-FG = "Y";
    end

  /* print the detail line with different zip codes less than 16*/
    if (AME48W1.WS-LS-16-FG == "Y")

      if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
        REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
        SR-132REP-RECOUT.PRNT-CC = "1";
        AME48P9-PRN-HEAD(); /* print the header details*/
        AME48P9-PRN-SUBH(); /* print the subheader*/
      end

      /* perform process to populate q17.*/
      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE42;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();
      AME48W-DET.LINE42 = " ";

      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE43;
      SR-132REP-RECOUT.PRNT-CC = " "; /* BLANK LINE FOLLOWS LINE43*/
      WR-132REP-OUT-FILE();
      AME48W-DET.LINE43 = " ";

      SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();

      AME48W1.WS-LS-16-FG = " ";

      /* print the heading and sub heading if end of page is encountered*/
  /* IF (REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES);*/
  /* REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;*/
  /* MOVE '1' TO SR-132REP-RECOUT.PRNT-CC;*/
  /* PERFORM AME48P9-PRN-HEAD;*/
  /* PERFORM AME48P9-PRN-SUBH;*/
  /* END;*/
    end

  /* print detail lines from q18 to q47*/
    AME48P9-POP-O18-20();
    AME48P9-PRN-18-20();

    AME48P9-POP-O20(); /* LOOPS,FORMATS & CALLS PRN-20*/

    AME48P9-UNIN-LEGND(); /* PRINTS THE UNIN CD/DESC LEGEND*/

    AME48P9-POP-O21-24();
    AME48P9-PRN-21-24();

    AME48P9-POP-O24(); /* LOOPS,FORMATS & CALLS PRN-24*/

    AME48P9-POP-O25-47();
    AME48P9-PRN-25-47();

    set AME48W1 empty;

    set AME48W-DET empty;
    set AME48W1-DET empty;
    AME48P9-INITCON();

    /* Initilize control break variable*/
    AME48W.WS-PREV-LEVEL = H2-OFFICE.OFC-NM;

    AME48Q1-S01-SCAN();
    if (sysVar.sqlData.sqlcode == 0)
    /* Initilize control break variable*/
      AME48W-SUBH.S-LEVEL = H2-OFFICE.OFC-NM;
    end
  end

  /* to calculate state wide averages*/
  if (AME48W.WS-OFC-CNT != 0)

    AME48P9-CALC-S-AVG();

  end

  /* to populate state wide zip codes*/
  if (AME48W.WS-PRE-FLAG == "Y")
    AME48W-SUBH.S-LEVEL = "STATEWIDE TOTALS ";
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    SR-132REP-RECOUT.PRNT-CC = "1";
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH();

    AME48P9-POP-T01-09();
    AME48P9-PRN-01-08();

    AME48P9-POP-T08(); /* LOOPS,FORMATS & CALLS PRN-08*/

    AME48P9-IPV-LEGND();

    AME48P9-PRN-09();

    AME48P9-PRN-T10-12(); /* LOOPS, FORMATS VIA POP-T10-12 & PRNTS*/

    AME48P9-POP-T11-16();
    AME48P9-PRN-11-16();

  /* MOVE ' ' TO AME48W1.WS-LS-16-FG; /* WI 20799*/
  /* populate state wide zip codes*/
    set H2-3-FCE-PAH-PSY empty;
    H2-3-FCE-PAH-PSY.PRD-BEG-DT = AME48W.WS-RPT-BEG-DT;
    H2-3-FCE-PAH-PSY.PRD-END-DT = AME48W.WS-RPT-END-DT;

    AME48Q16-S16-B();
    if (sysVar.sqlData.sqlcode == 0) /* WI 20799*/
      AME48Q16-S16-SCANB();
    end
    if (sysVar.sqlData.sqlcode == 0) /* WI 20799*/
      AME48W1.WS-INDEX = 1;
      AME48W1.WS-ZIP-CD = H2-3-FCE-PAH-PSY.ZIP-CD; /* WI 20799*/
      AME48W1.WS-PREV-ZIP-CD = H2-3-FCE-PAH-PSY.ZIP-CD; /* WI 20799*/
  /* END;                           /* WI 20799*/
    else
      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE41-NOZIP;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();

      SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();
    end

  /* WI 20799 START*/
    while (sysVar.sqlData.sqlcode == 0)
      while (AME48W1.WS-ZIP-CD-1 == AME48W1.WS-PREV-ZIP-CD-1
       && sysVar.sqlData.sqlcode == 0)
        AME48W1.WS-ZIP-COUNT-ACCUM = AME48W1.WS-ZIP-COUNT-ACCUM +         AME48W1.WS-COUNT;
        AME48Q16-S16-SCANB();
        if (sysVar.sqlData.sqlcode == 0)
          AME48W1.WS-ZIP-CD = H2-3-FCE-PAH-PSY.ZIP-CD; /* WI 20799*/
        end
      end /* WHILE*/
  /* WI 20799 END*/

      if (AME48W1.WS-ZIP-CD-1 != AME48W1.WS-PREV-ZIP-CD-1
       || sysVar.sqlData.sqlcode == 100) /* WI 20799*/

        AME48W1.WS-ZIP-CD = H2-3-FCE-PAH-PSY.ZIP-CD;
  /* MOVE AME48W1.WS-ZIP-CD-1 TO AME48W1.WS-ZIP-C(WS-INDEX);/* WI 20799*/
        AME48W1.WS-ZIP-C[WS-INDEX] = AME48W1.WS-PREV-ZIP-CD-1; /* 20799*/
        AME48P9-POP-ZIPHDR();
  /* MOVE AME48W1.WS-COUNT TO AME48W1.WS-ZIP-CD-CNT(WS-INDEX);/* WI 20799*/
        AME48W1.WS-ZIP-CD-CNT[WS-INDEX] = AME48W1.WS-ZIP-COUNT-ACCUM;
    /* perform process to populate q17.*/
        AME48P9-POP-STDE17();
  /* MOVE ' ' TO AME48W1.WS-ZIP-CD; /* WI 20799*/
        AME48W1.WS-INDEX = AME48W1.WS-INDEX + 1;
        AME48W1.WS-ZIP-COUNT-ACCUM = 0; /* WI 20799*/
        AME48W1.WS-PREV-ZIP-CD = AME48W1.WS-ZIP-CD; /* WI 20799*/

        if (AME48W1.WS-INDEX > 16)

          if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
            REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
            SR-132REP-RECOUT.PRNT-CC = "1";
            AME48P9-PRN-HEAD(); /* print the header details*/
            AME48P9-PRN-SUBH(); /* print the subheader*/
          end

          SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE42;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();
          AME48W-DET.LINE42 = " ";

          SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE43;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();
          AME48W-DET.LINE43 = " ";

          SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
          SR-132REP-RECOUT.PRNT-CC = " ";
          WR-132REP-OUT-FILE();


  /* IF (REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES);*/
  /* REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;*/
  /* MOVE '1' TO SR-132REP-RECOUT.PRNT-CC;*/
  /* PERFORM AME48P9-PRN-HEAD;/* print the header details*/
  /* PERFORM AME48P9-PRN-SUBH;/* print the subheader*/
  /* END;*/

          AME48W1.WS-INDEX = 1;

        end
      end /* WI 20799*/
  /* PERFORM AME48Q16-S16-SCANB;/* WI 20799*/
    end

  /* IF VDBCONTROL.URC = 100 AND AME48W1.WS-INDEX <= 16;*/
    if (sysVar.sqlData.sqlcode == 100 && AME48W1.WS-INDEX <= 16
     && AME48W1.WS-INDEX > 1)
      AME48W1.WS-LS-16-FG = "Y";
    end

  /* print the detail line with different zip codes less than 16*/
    if (AME48W1.WS-LS-16-FG == "Y")
  /* MOVE ' ' TO AME48W1.WS-LS-16-FG;*/

      if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
        REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
        SR-132REP-RECOUT.PRNT-CC = "1";
        AME48P9-PRN-HEAD(); /* print the header details*/
        AME48P9-PRN-SUBH(); /* print the subheader*/
      end

  /* perform process to populate q17.*/
      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE42;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();
      AME48W-DET.LINE42 = " ";

      SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE43;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();
      AME48W-DET.LINE43 = " ";

      SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
      SR-132REP-RECOUT.PRNT-CC = " ";
      WR-132REP-OUT-FILE();

      AME48W1.WS-LS-16-FG = " ";

  /* IF (REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES);*/
  /* REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;*/
  /* MOVE '1' TO SR-132REP-RECOUT.PRNT-CC;*/
  /* PERFORM AME48P9-PRN-HEAD;  /* print the header details*/
  /* PERFORM AME48P9-PRN-SUBH;  /* print the subheader*/
  /* END;*/
    end

  end /* WS-PRE-FLAG = 'Y'*/

  /* print detail lines from q18 to q47*/
  AME48P9-POP-T18-20();
  AME48P9-PRN-18-20();

  AME48P9-POP-T20(); /* LOOPS,FORMATS & CALLS PRN-20*/

  AME48P9-UNIN-LEGND(); /* PRINTS THE UNIN CD/DESC LEGEND*/

  AME48P9-POP-T21-24();
  AME48P9-PRN-21-24();

  AME48P9-POP-T24(); /* LOOPS,FORMATS & CALLS PRN-24*/

  AME48P9-POP-T25-47();
  AME48P9-PRN-25-47();

  /* perform process to print end of report indicator*/
  REP132P9-EOR-PROC();
  /* perform termination process*/
  AME48P9-CLOS-PARA();
  /* cbsi end*/
end // end AME48P9-PRINT-PARA


// PRINT DETAIL LINES
Function AME48P9-PRN-01-08()
  /* cbsi start*/
  /* Q01 THRU Q08 HDR ROW*/
  /* LINE1 THRU LINE18*/
  /*  */

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q01;
  SR-132REP-RECOUT.PRNT-CC = " "; /* SINGLE SPACE*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " "; /* SINGLE SPACE*/
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q02;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q03;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q04A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q04B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q05-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q05-SUB;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q05-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q06;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q07-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q07-SUB;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q07-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* IPV TOTAL LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q08;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-01-08


// PRINT DETAIL LINES
Function AME48P9-PRN-08()
  /* PRINTS IPV DISQL TOTALS FOR EACH TYPE OF DISQL*/

    /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/

    AME48W-DET.CONSTANTIPVHDRCONTD = " (CONTD)";

  /* header line with '(CONTD)'*/
    SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q08-HDR;
    SR-132REP-RECOUT.PRNT-CC = " "; /* single space*/
    WR-132REP-OUT-FILE();

  end

  /* DSQL CODE HEADER LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q08-SUB;
  SR-132REP-RECOUT.PRNT-CC = " "; /* SINGLE SPACE*/
  WR-132REP-OUT-FILE();
  AME48W-DET.LINE-Q08-SUB = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.U-SCORE-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.U-SCORE-LINE = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q08-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.LINE-Q08-CNT = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-08


// PRINT DETAIL LINES
Function AME48P9-PRN-09()
  /*  */
  /* Disqualified individuals SSN/CTZN/FELON/DRUG, q09*/
  /* prints IPV 3-line group*/
  /* line20 thru line20b*/

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q09;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q09-SUB;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q09-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-09


// PRINT DETAIL LINES
Function AME48P9-PRN-11-16()
  /* q11 male/female & elderly thru q16 medical*/
  /* line25 thru zip-hdr-line*/

  /* AME48W.WS-2-LINE-GROUP-MAX ensures that the 2-line output group*/
  /* is not broken up by a page-break.*/
  /*  */

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* Q11 MALE FEMALE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q11-HDR;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q11-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* Q13 AGDDIS*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q13A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q13B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q14;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q15;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q16;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.ZIP-HDR-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* cbsi end*/
end // end AME48P9-PRN-11-16


// PRINT DETAIL LINES
Function AME48P9-PRN-18-20()
  /* cbsi start*/
  /* auth rep thru cases with income, q18 thru q20a, q20b, q20c*/
  /* line51 thru line54*/

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q18;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q19;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q19 income*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20A;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q20 earned income*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20B;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q20 unearned income*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-MISC-OCCR-HDR;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q20a*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-MISC-OCCR-SUB;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q20b*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-MISC-OCCR-CNT;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q20c*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /* cbsi end*/
end // end AME48P9-PRN-18-20


// PRINT DETAIL LINES
Function AME48P9-PRN-20()
  /*  */

  /* MAX-NO-LINES IS HARDCODED TO ENSURE THAT THE X-LINE OUTPUT GROUP*/
  /* IS NOT BROKEN UP BY A PAGE-BREAK.*/
  /*  */

    /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/

    AME48W-DET.CONSTANT116UCONTD = " (CONTD)";

  /* header line with '(CONTD)'*/
    SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-OCCR-HDR;
    SR-132REP-RECOUT.PRNT-CC = " "; /* single space*/
    WR-132REP-OUT-FILE();

  end

  /* UNIN CD HEADER LINE*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-OCCR-SUB;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.LINE-Q20-OCCR-SUB = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.U-SCORE-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.U-SCORE-LINE = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q20-OCCR-CNT;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.LINE-Q20-OCCR-CNT = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-20


// PRINT DETAIL LINES
Function AME48P9-PRN-21-24()
  /*  */
  /* avg-grs-inc thru avg-inc-all-eld-disa, q21 thru q24a, q24b, q24c*/
  /* AME48W.WS-X-LINE-GROUP-MAX ensures that the X-line output group*/
  /* is not broken up by a page-break.*/
  /*  */

  /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  /* Q21 average gross income*/
  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q21;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-5-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q22A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q22B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q22C;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.LINE-Q22D;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q23A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q23B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-MISC-AVG-HDR;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q24a*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-MISC-AVG-SUB;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q24b*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-MISC-AVG;
  SR-132REP-RECOUT.PRNT-CC = " "; /* q24c*/
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-21-24


// PRINT DETAIL LINES
Function AME48P9-PRN-24()
  /*  */
  /* AME48W.WS-X-LINE-GROUP-MAX ENSURES THAT THE X-LINE OUTPUT GROUP*/
  /* IS NOT BROKEN UP BY A PAGE-BREAK.*/
  /*  */
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-3-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/


    AME48W1-DET.CONSTANT116UNHDRCONTD = " (CONTD)";

  /* header line with '(CONTD)'*/
    SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-AVG-HDR;
    SR-132REP-RECOUT.PRNT-CC = " "; /* single space*/
    WR-132REP-OUT-FILE();

  end

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-AVG-SUB;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W1-DET.LINE-Q24-AVG-SUB = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.U-SCORE-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W-DET.U-SCORE-LINE = " ";

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q24-AVG;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();
  AME48W1-DET.LINE-Q24-AVG = " ";

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  /*  */
end // end AME48P9-PRN-24


// PRINT DETAIL LINES
Function AME48P9-PRN-25-47()
  /*  */
  /* avg-rebt/mort thru homeless, q25 thru q47*/

  /* AME48W.WS-X-LINE-GROUP-MAX ensures that the X-line output group*/
  /* is not broken up by a page-break.*/
  /*  */

        /* print the heading and sub heading if end of page is encountered*/
  if ((REP-COMMON.WS-LINE-NO > AME48W.WS-2-LINE-GROUP-MAX))
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q25A;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W1-DET.LINE-Q25B;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AME48W-DET.BLANK-LINE;
  SR-132REP-RECOUT.PRNT-CC = " ";
  WR-132REP-OUT-FILE();