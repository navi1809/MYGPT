package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIF18A ****
// COMPONENT NAME: AIF18A INTERFACE FLAT FILE WTPY
// 
// 
// DESCRIPTION:
// ============
// THIS IS A INTERFACE PROGRAM THAT WILL RUN THROUGHT BATCH.
// THIS WILL BE IN A INTERFACE FLAT FILE FORMAT, IT WILL GIVE A
// LIST OF SSN, CLAIM ACCOUNT NUMBER(CAN), BENEFICIARY
// IDENTIFICATION CODE(BIC), LAST NAME, FIRST NAME, MIDDLE
// INITIAL, DATE OF BIRTH, SEX, TITLE 2 REQUEST, TITLE 16
// REQUEST, STATE AGENCY CODE, CATEGORY OF ASSISTANCE, STATE
// COMMUNICATION CODE AND EXCHANGE REQUEST DATE.
// ***********************
Program AIF18A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIF18W AIF18W; // record
  BDATEREC BDATEREC; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  H2-2-PER-WRQ H2-2-PER-WRQ; // record
  H2-CASE-MEMBER-HST H2-CASE-MEMBER-HST; // record
  H2-MEDICARE-INFO H2-MEDICARE-INFO; // record
  H2-WTPY-REQUEST H2-WTPY-REQUEST; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-AIF18A-OUT-REC SR-AIF18A-OUT-REC; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC4 VSTRREC4; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIF18P9-MAIN: AIF18P9-MAIN();
  end // end main
end // end AIF18A


// CATEGORY OF ASSISTANCE
Function AIF18P9-CATG-ASST()
  /* * FOOD STAMP ***/
  if (H2-CASE-MEMBER-HST.FS-ASST-IND == "Y")
    AIF18W.WS-FS-ASST-IND = "Y";
  /* wi1362*/
  /* ELSE;*/
  /* MOVE 'N' TO AIF18W.WS-FS-ASST-IND;*/
  end

  /* * TANF ***/
  if (H2-CASE-MEMBER-HST.AFDC-ASST-IND == "Y")
    AIF18W.WS-AFDC-ASST-IND = "Y";
  /* wi1362*/
  /* ELSE;*/
  /* MOVE 'N' TO AIF18W.WS-AFDC-ASST-IND;*/
  end

  /* * MAABD ***/
  if (H2-CASE-MEMBER-HST.MA-ASST-IND == "Y")
    AIF18W.WS-MA-ASST-IND = "Y";
  /* wi1362*/
  /* ELSE;*/
  /* MOVE 'N' TO AIF18W.WS-MA-ASST-IND;*/
  end

  /* * FAMILY PRESERVATION ***/
  if (H2-CASE-MEMBER-HST.FP-ASST-IND == "Y")
    AIF18W.WS-FP-ASST-IND = "Y";
  /* wi1362*/
  /* ELSE;*/
  /* MOVE 'N' TO AIF18W.WS-FP-ASST-IND;*/
  end
end // end AIF18P9-CATG-ASST


// CATEGORY OF ASSISTANCE
Function AIF18P9-CATG-AST-1()
  /* * FOOD STAMP & AFDC &                 ****/
  /* * MAADB & FAMILY PRESERVATION(AFDC)  ****/
  if (AIF18W.WS-FS-ASST-IND == "Y" && 
  AIF18W.WS-AFDC-ASST-IND == "Y" && 
  AIF18W.WS-MA-ASST-IND == "Y" && 
  AIF18W.WS-FP-ASST-IND == "Y")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "J";
  end

  /* * FOOD STAMP & AFDC ***/
  if (AIF18W.WS-FS-ASST-IND == "Y" && 
  AIF18W.WS-AFDC-ASST-IND == "Y" && 
  AIF18W.WS-MA-ASST-IND == "N" && 
  AIF18W.WS-FP-ASST-IND == "N")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "J";
  end

  /* * AFDC ***/
  if (AIF18W.WS-FS-ASST-IND == "N" && 
  AIF18W.WS-AFDC-ASST-IND == "Y" && 
  AIF18W.WS-MA-ASST-IND == "N" && 
  AIF18W.WS-FP-ASST-IND == "N")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "C";
  end

  /* * FOOD STAMP ***/
  if (AIF18W.WS-FS-ASST-IND == "Y" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "N" && 
  AIF18W.WS-FP-ASST-IND == "N")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "F";
  end

  /* * FOOD STAMP & MAABD ***/
  if (AIF18W.WS-FS-ASST-IND == "Y" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "Y" && 
  AIF18W.WS-FP-ASST-IND == "N")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "K";
  end

  /* * FAMILY PRESERVATION(AFDC) ***/
  if (AIF18W.WS-FS-ASST-IND == "N" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "N" && 
  AIF18W.WS-FP-ASST-IND == "Y")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "C";
  end

  /* * FOOD STAMP & FAMILY PRESERVATION(AFDC) ***/
  if (AIF18W.WS-FS-ASST-IND == "Y" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "N" && 
  AIF18W.WS-FP-ASST-IND == "Y")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "J";
  end

  /* * AFDC & MAADB ***/
  if (AIF18W.WS-FS-ASST-IND == "N" && 
  AIF18W.WS-AFDC-ASST-IND == "Y" && 
  AIF18W.WS-MA-ASST-IND == "Y" && 
  AIF18W.WS-FP-ASST-IND == "N")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "C";
  end

  /* * MAADB & FAMILY PRESERVATION(AFDC)*/
  if (AIF18W.WS-FS-ASST-IND == "N" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "Y" && 
  AIF18W.WS-FP-ASST-IND == "Y")
    SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "C";
  end

  /* * MAADB ***/
  if (AIF18W.WS-FS-ASST-IND == "N" && 
  AIF18W.WS-AFDC-ASST-IND == "N" && 
  AIF18W.WS-MA-ASST-IND == "Y" && 
  AIF18W.WS-FP-ASST-IND == "N")
    AIF18W.WS-MA-AID-CD = H2-CASE-MEMBER-HST.MA-AID-CD;

    /* * AID TO AGED ***/
    if (AIF18W.WS-MA-AID-CD-1 == "1")
      SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "A";
    else
      /* * AID TO THE BLIND ***/
      if (AIF18W.WS-MA-AID-CD-1 == "3")
        SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "B";
      else
        /* * AID TO THE DISABLED ***/
        if (AIF18W.WS-MA-AID-CD-1 == "9")
          SR-AIF18A-OUT-REC.CATEGORY-OF-ASSISTANCE = "D";
        end
      end
    end

  end
end // end AIF18P9-CATG-AST-1


// CLOSES THE APPLICATION
Function AIF18P9-CLOS-PARA()
  /* *******************************************************************/
  /* process to close the application                  */
  /* *******************************************************************/
  exit program;
end // end AIF18P9-CLOS-PARA


// GETTING THE PROCESS DATE
Function AIF18P9-FETCHBDTS()
  /* -------------------------------------------------------------*/
  /* SCAN & GETTING PROCESS DATE*/
  /* --------------------------------------------------------------*/
  VGVar.handleHardIOErrors = 1;
  try
    get next BDATEREC ;
  end

  if (BDATEREC is ioError || 
  BDATEREC is endOfFile)

    VDBCONTROL.UPROC-NM = "AIF18P9-FETCHBDTS";
    VDBCONTROL.UPROC-OBJ = "BDATEREC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIF18A";
    VDBCONTROL.UMSQLCODE = 0;
    AIF18W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIF18W.WS-ERR-LAST-FOUR;
    VDBCONTROL.UEZESQRRM = "INPUT PARAMETER FILE - I/O ERROR";
    WCM00P2-TO-CEP01A();

  end
  /* --------------------------------------------------------------*/
  AIF18W.WS-BDATE = BDATEREC.BDATE-PROCESS-DATE;
  AIF18W.WS-DATE-CCYY = AIF18W.WS-BDATE-CCYY;
  AIF18W.WS-DATE-MM = AIF18W.WS-BDATE-MM;
  AIF18W.WS-DATE-DD = AIF18W.WS-BDATE-DD;
  AIF18W.WS-DATE-DASH = "-";
  AIF18W.WS-DATE-DASH1 = "-";
end // end AIF18P9-FETCHBDTS


// MAIN PROCESS
Function AIF18P9-MAIN()
  /* **********************************************************/
  /* * PERFORM PROCESS TO INITIALIZE ALL ADDITIONAL RECORDS ***/
  /* **********************************************************/

  AIF18P9-SET-EMPTY();

  /* **********************************************************/
  /* * FETCHBDATE ***/
  /* **********************************************************/

  AIF18P9-FETCHBDTS();

  /* **********************************************************/
  /* * SET CURSORH2-WTPY-REQUEST*/
  /* **********************************************************/

  AIF18Q1-CURS-WTPY();

  if (sysVar.sqlData.sqlcode == 0)

  /* **********************************************************/
  /* * SCAN FIRST RECORD ***/
  /* **********************************************************/

    AIF18Q1-SCAN-WTPY();
  end

  while (VDBCONTROL.URC == 0)

    if (H2-2-PER-WRQ.SSN != AIF18W.WS-PREVIOUS-SSN)

  /* **********************************************************/
  /* * CHECK IF MEDICARE INFO EXISTS.*/
  /* **********************************************************/

      AIF18Q4-INQ-MEDINF();

      if (sysVar.sqlData.sqlcode == 0)

        SR-AIF18A-OUT-REC.CLAIM-ACCOUNT-NUMBER = H2-MEDICARE-INFO.MEDCR-PRSN-SSN;
        SR-AIF18A-OUT-REC.BENEFICIARY-IDENTIFICATION-CODE = H2-MEDICARE-INFO.MEDCR-CLAIM-SUFX;

      else

        SR-AIF18A-OUT-REC.CLAIM-ACCOUNT-NUMBER = "         ";
        SR-AIF18A-OUT-REC.BENEFICIARY-IDENTIFICATION-CODE = "   ";
      end

  /* **********************************************************/
  /* * CATEGORY OF ASSISTANCE ***/
  /* ****************************/
  /* * wi1362 INQURIY ALL RECORDS FOR UPI ***/
  /* **********************************************************/

      AIF18Q3-INQ-MEMHST();

      if (sysVar.sqlData.sqlcode == 0)

  /* * SCAN FIRST RECORD ***/

        AIF18Q1-SCAN-MMHST();
      end

      AIF18W.WS-PREVIOUS-UPI = 0;

      AIF18W.WS-FS-ASST-IND = "N";
      AIF18W.WS-AFDC-ASST-IND = "N";
      AIF18W.WS-MA-ASST-IND = "N";
      AIF18W.WS-FP-ASST-IND = "N";

  /* WHILE VDBCONTROL.URC = 0;*/
      while (sysVar.sqlData.sqlcode == 0)

        if (H2-CASE-MEMBER-HST.UPI != AIF18W.WS-PREVIOUS-UPI)

          AIF18W.WS-PREVIOUS-UPI = H2-CASE-MEMBER-HST.UPI;

  /* **********************************************************/
  /* * FIND OUT WHICH CATEGORY*/
  /* * OF ASSISTANCE UPI IS APPLYING FOR*/
  /* **********************************************************/

          AIF18P9-CATG-ASST();

          AIF18Q1-SCAN-MMHST();

        else

  /* **********************************************************/
  /* * FIND OUT WHICH CATEGORY*/
  /* * OF ASSISTANCE UPI IS APPLYING FOR*/
  /* **********************************************************/

          AIF18P9-CATG-ASST();

          AIF18Q1-SCAN-MMHST();

        end
      end

      AIF18P9-CATG-AST-1();

  /* **********************************************************/
  /* * CHECK IF CLIENT ASST-IND NOT EQUAL 'N'*/
  /* * if so ADD A RECORD.*/
  /* **********************************************************/

      if (AIF18W.WS-FS-ASST-IND != "N"
       || AIF18W.WS-AFDC-ASST-IND != "N"
       || AIF18W.WS-MA-ASST-IND != "N"
       || AIF18W.WS-FP-ASST-IND != "N")

  /* **********************************************************/
  /* * POPULATE CLAIM TO REC-OUT ***/
  /* **********************************************************/

        AIF18P9-POP-CLAIM();

        if (H2-2-PER-WRQ.PRISONER == "Y")

  /* **********************************************************/
  /* * POPULATE PRISONER TO REC-OUT ***/
  /* **********************************************************/

          AIF18P9-POP-CLMPSR();

  /* **********************************************************/
  /* * WRITE A RECORD TO THE FLAT FILE ***/
  /* **********************************************************/

          AIF18P9-WRITE-FILE();

        end

        if (H2-2-PER-WRQ.FORTY-QTRS == "Y")

  /* **********************************************************/
  /* * POPULATE FORTY-QTRS TO REC-OUT ***/
  /* **********************************************************/

          AIF18P9-POP-CLMFTQ();

  /* **********************************************************/
  /* * WRITE A RECORD TO THE FLAT FILE ***/
  /* **********************************************************/

          AIF18P9-WRITE-FILE();

        end
      end
    end

    AIF18W.WS-PREVIOUS-SSN = H2-2-PER-WRQ.SSN;

  /* **********************************************************/
  /* set all serial records empty*/
  /* **********************************************************/

    set SR-AIF18A-OUT-REC empty;

  /* **********************************************************/
  /* * SCAN NEXT RECORD ***/
  /* **********************************************************/

    AIF18Q1-SCAN-WTPY();

  end /* *(WHILE VDBCONTROL.URC = 0;)*/

  /* **********************************************************/
  /* * DELETE TWNWTPY_REQUEST ***/
  /* **********************************************************/

  AIF18Q2-DEL-WTPY();

  /* **********************************************************/
  /* * CLOSE PARAMETER ***/
  /* **********************************************************/

  AIF18P9-CLOS-PARA();

  /* END OF MAIN PROCESS*/
end // end AIF18P9-MAIN


// POP CLM REC OUT
Function AIF18P9-POP-CLAIM()
  /* * SSN ***/
  SR-AIF18A-OUT-REC.SSN = H2-2-PER-WRQ.SSN;

  /* * LAST NAME ***/
  SR-AIF18A-OUT-REC.LAST-NAME = H2-2-PER-WRQ.LST-NM;

  /* * MIDDLE NAME ***/
  SR-AIF18A-OUT-REC.MIDDLE-NAME = H2-2-PER-WRQ.MID-NM;

  /* * FIRST NAME ***/
  SR-AIF18A-OUT-REC.FIRST-NAME = H2-2-PER-WRQ.FRST-NM;

  /* * DATE OF BIRTH ***/
  AIF18W.WS-DOB = H2-2-PER-WRQ.DOB;
  SR-AIF18A-OUT-REC.DATE-OF-BIRTH-CCYY = AIF18W.WS-DOB-CCYY;
  SR-AIF18A-OUT-REC.DATE-OF-BIRTH-MM = AIF18W.WS-DOB-MM;
  SR-AIF18A-OUT-REC.DATE-OF-BIRTH-DD = AIF18W.WS-DOB-DD;

  /* * SEX ***/
  SR-AIF18A-OUT-REC.SEX = H2-2-PER-WRQ.SEX-CD;

  /* WI 25489: Below 2 lines commented out - Title II and XVI requests*/
  /* will be real-time processed through WTPY screeen*/
  /* * TITLE 2 REQUEST ***/
  /* MOVE 'Y' TO SR-AIF18A-OUT-REC.TITLE-2-REQUEST;*/
  /*  */
  /* * TITLE 16 REQUEST ***/
  /* MOVE 'Y' TO SR-AIF18A-OUT-REC.TITLE-16-REQUEST;*/

  /* * STATE AGENCY CODE ***/
  SR-AIF18A-OUT-REC.STATE-AGENCY-CODE = "029";

  /* * STATE COMMUNICATION CODE **\*/
  SR-AIF18A-OUT-REC.STATE-COMMUNICATION-CODE = "   ";

  /* * EXCHANGE REQUEST DATE ***/
  SR-AIF18A-OUT-REC.EXCHANGE-REQUEST-DATA-NOMADS = "NOMADS";
  AIF18W.WS-BIN-UPI = H2-2-PER-WRQ.UPI;
  AIF18W.WS-NUM-UPI = AIF18W.WS-BIN-UPI;
  AIF18W.WS-CHAR-UPI = AIF18W.WS-NUM-UPI;
  SR-AIF18A-OUT-REC.EXCHANGE-REQUEST-DATA-UPI = AIF18W.WS-CHAR-UPI;
  SR-AIF18A-OUT-REC.EXCHANGE-REQUEST-DATA-BLANK = "                        ";
  SR-AIF18A-OUT-REC.FOR-FUTURE-EXPANSION = "                         ";
end // end AIF18P9-POP-CLAIM


// POP FORTY-QTRS REC OUT
Function AIF18P9-POP-CLMFTQ()

  /* * TITLE 2 REQUEST ***/
  SR-AIF18A-OUT-REC.TITLE-2-REQUEST = " ";

  /* * TITLE 16 REQUEST ***/
  SR-AIF18A-OUT-REC.TITLE-16-REQUEST = "Q";
end // end AIF18P9-POP-CLMFTQ


// POP PRISONER REC OUT
Function AIF18P9-POP-CLMPSR()

  /* * TITLE 2 REQUEST ***/
  SR-AIF18A-OUT-REC.TITLE-2-REQUEST = "P";

  /* * TITLE 16 REQUEST ***/
  SR-AIF18A-OUT-REC.TITLE-16-REQUEST = "P";
end // end AIF18P9-POP-CLMPSR


// INITIALIZE ALL RECORDS
Function AIF18P9-SET-EMPTY()

  /* *******************************************************************/
  /* process to initialize all records                */
  /* *******************************************************************/
  set VMESSAGE empty;
  set CEP01W empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;
  set AIF18W empty;

  /* set all H2 records empty*/
  set H2-2-PER-WRQ empty;
  set H2-CASE-MEMBER-HST empty;

  /* set all serial records empty*/
  set SR-AIF18A-OUT-REC empty;
end // end AIF18P9-SET-EMPTY


// WRITE OUTPUT FILE
Function AIF18P9-WRITE-FILE()
  /* ATNS START */
  try
    add SR-AIF18A-OUT-REC ;
  end
  /* check if any i/o error has occured*/
  if (SR-AIF18A-OUT-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIF04P9-WRITE-FILE";
    VDBCONTROL.UPROC-OPT = "ADD";
    VDBCONTROL.UPROC-OBJ = "SR-AIF18A-OUT-REC";
    /* return error code to indicate abnormal ending*/
    VMESSAGE.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = VMESSAGE.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = sysVar.transferName;
    VDBCONTROL.UMSQLCODE = 0;
    WCM00P2-TO-CEP01A();
  end
end // end AIF18P9-WRITE-FILE


// SETINQ H2-2-PER-WRQ
Function AIF18Q1-CURS-WTPY()
  VDBCONTROL.UPROC-NM = "AIF18Q1-CURS-WTPY";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-2-PER-WRQ";

  VDBCONTROL.UACCTYP = "R";
  try
    open AIF18Q1-CURS-WTPY_RSI01
      with #sql{
        select T1.UPI, T1.SSN, T1.FRST_NM, T1.LST_NM, T1.MID_NM, T1.SEX_CD,
          T1.DOB,
          T2.FORTY_QTRS, T2.PRISONER
        from TWNPERSON T1,
             TWNWTPY_REQUEST T2
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
        T2.UPI = T1.UPI
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into UPI, SSN, FRST-NM, LST-NM, MID-NM, SEX-CD,
           DOB,
           FORTY-QTRS, PRISONER
      for H2-2-PER-WRQ ;
  end

  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q1-CURS-WTPY


// SCAN H2-CASE-MEMBER-HST
Function AIF18Q1-SCAN-MMHST()
  VDBCONTROL.UPROC-NM = "AIF18Q1-SCAN-MMHST";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";

  VDBCONTROL.UACCTYP = "R";
  try
    get next H2-CASE-MEMBER-HST ;
  end
  VDBCONTROL.URC = 0;

  if (sysVar.sqlData.sqlcode == 0
   || sysVar.sqlData.sqlcode == 100)
  else
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q1-SCAN-MMHST


// SCAN H2-2-PER-WRQ
Function AIF18Q1-SCAN-WTPY()
  VDBCONTROL.UPROC-NM = "AIF18Q1-SCAN-WTPY";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "H2-2-PER-WRQ";

  VDBCONTROL.UACCTYP = "R";
  try
    get next H2-2-PER-WRQ ;
  end
  VDBCONTROL.URC = 0;
  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q1-SCAN-WTPY


// DELETE TWNWTPY-REQUEST
Function AIF18Q2-DEL-WTPY()
  VDBCONTROL.UPROC-NM = "AIF18Q2-DEL-WTPY";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-WTPY-REQUEST";

  VDBCONTROL.UACCTYP = "R";
  try
    execute 
      #sql{
        DELETE FROM TWNWTPY_REQUEST
         --** INSERT SQL STATEMENT HERE **
      }
      for H2-WTPY-REQUEST ; // model = none
  end

  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q2-DEL-WTPY


// INQ H2-CASE-MEMBER-HST
Function AIF18Q3-INQ-MEMHST()
  VDBCONTROL.UPROC-NM = "AIF18Q3-INQ-MEMHST";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";

  VDBCONTROL.UACCTYP = "R";
  try
    open AIF18Q3-INQ-MEMHST_RSI01
      with #sql{
        select T1.UPI,
          T1.FS_ASST_IND, T1.AFDC_ASST_IND, T1.MA_ASST_IND, T1.FP_ASST_IND,
          T1.MA_AID_CD
        from TWNCASE_MEMBER_HST T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
        T1.UPI = :H2-2-PER-WRQ.UPI AND
        T1.PRD_BEG_DT <= :AIF18W.WS-DATE AND
        T1.PRD_END_DT >= :AIF18W.WS-DATE
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into UPI, FS-ASST-IND, AFDC-ASST-IND, MA-ASST-IND, FP-ASST-IND,
           MA-AID-CD
      for H2-CASE-MEMBER-HST ;
  end

  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q3-INQ-MEMHST


// INQ H2-MEDICARE-INFO
Function AIF18Q4-INQ-MEDINF()
  VDBCONTROL.UPROC-NM = "AIF18Q4-INQ-MEDINF";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-MEDICARE-INFO";

  VDBCONTROL.UACCTYP = "R";
  try
    get H2-MEDICARE-INFO
      with #sql{
        select T1.MEDCR_PRSN_SSN, T1.MEDCR_CLAIM_SUFX
        from TWNMEDICARE_INFO T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
        T1.UPI = :H2-2-PER-WRQ.UPI AND
        T1.PRD_BEG_DT <= :AIF18W.WS-DATE AND
        T1.PRD_END_DT >= :AIF18W.WS-DATE
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into MEDCR-PRSN-SSN, MEDCR-CLAIM-SUFX ;
  end

  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIF18Q4-INQ-MEDINF


Record AIF18W type basicRecord
  10 WS-FS-ASST-IND char(1) ; 
  10 WS-AFDC-ASST-IND char(1) ; 
  10 WS-MA-ASST-IND char(1) ; 
  10 WS-FP-ASST-IND char(1) ; 
  10 WS-PREVIOUS-SSN char(9) ; 
  10 WS-DOB char(10) ; 
    15 WS-DOB-CCYY char(4) ; 
    15 WS-DOB-DASH char(1) ; 
    15 WS-DOB-MM char(2) ; 
    15 WS-DOB-DASH1 char(1) ; 
    15 WS-DOB-DD char(2) ; 
  10 WS-BIN-UPI int ; 
  10 WS-NUM-UPI num(9) ; 
  10 WS-CHAR-UPI char(9) ; 
  10 WS-MA-AID-CD char(3) ; 
    15 WS-MA-AID-CD-2 char(2) ; 
    15 WS-MA-AID-CD-1 char(1) ; 
  10 WS-ERR-CD char(8) ; 
    15 WS-ERR-FIRST-FOUR char(4) ; 
    15 WS-ERR-LAST-FOUR char(4) ; 
  10 WS-BDATE char(8) ; 
    15 WS-BDATE-CCYY char(4) ; 
    15 WS-BDATE-MM char(2) ; 
    15 WS-BDATE-DD char(2) ; 
  10 WS-DATE char(10) ; 
    15 WS-DATE-CCYY char(4) ; 
    15 WS-DATE-DASH char(1) ; 
    15 WS-DATE-MM char(2) ; 
    15 WS-DATE-DASH1 char(1) ; 
    15 WS-DATE-DD char(2) ; 
  10 WS-PREVIOUS-UPI int ; 
end // end AIF18W


