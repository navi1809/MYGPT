package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIF30A ****
// COMPONENT NAME: AIF30A 
// 
// DESCRIPTION:
// ============
// TOP WEEKLY UPDATE TRANSACTIONS 
// TOP NEW DEBT WHEN CURRENT DATE >= 
//                   (NOTICE_DT + 60 DAYS) AND (DELINQUENT_DT + 120 DAYS) 
// 
// 
// ***********************
Program AIF30A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }
  // Data Declarations
  AIF30W AIF30W; // record
  AIF30W-DET AIF30W-DET; // record
  AIF30W-HEAD AIF30W-HEAD; // record
  AIF30W-SUBH AIF30W-SUBH; // record
  AIF30W2 AIF30W2; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  H-TCDTS1 H-TCDTS1; // record
  H2-2-DPT-RAT H2-2-DPT-RAT; // record
  H2-3-DMQDRP-DEB H2-3-DMQDRP-DEB; // record
  H2-2-DMQ-DRP H2-2-DMQ-DRP; // record
  H2-DEBT H2-DEBT; // record
  H2-DEBT-MATCH-REQ H2-DEBT-MATCH-REQ; // record
  H2-DEBT-RESP-PRSN H2-DEBT-RESP-PRSN; // record
  H2-OFFICE H2-OFFICE; // record
  H2-RPM-AUDIT-TRAIL H2-RPM-AUDIT-TRAIL; // record
  H3-RPM-AUDIT-TRAIL H3-RPM-AUDIT-TRAIL; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AIF30-OUTREC SR-AIF30-OUTREC; // record
  SR-TOP01-REC SR-TOP01-REC; // record
  SR-TOP02-REC SR-TOP02-REC; // record
  SR-TOP03-REC SR-TOP03-REC; // record
  SR-TOP04-REC SR-TOP04-REC; // record
  SR-TOP06-REC SR-TOP06-REC; // record
  SR-TOPCNTL-REC SR-TOPCNTL-REC; // record
  SR-TOPHDR-REC SR-TOPHDR-REC; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC4 VSTRREC4; // record
  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;
  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table
  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIF30P8-MAIN: AIF30P8-MAIN();
  end // end main
end // end AIF30A
// MAIN PROCESS

 Function AIF30P8-MAIN()
  AIF30P9-INIT-PARA();
  set SR-TOPHDR-REC empty;
  SR-TOPHDR-REC.FILLER-1 = " ";
  SR-TOPHDR-REC.FILLER-2 = " ";
  SR-TOPHDR-REC.RECORD-TYPE = "T1";
  SR-TOPHDR-REC.BATCH-CNTL-CCYY = AIF30W.WS-CCYY;
  SR-TOPHDR-REC.BATCH-CNTL-MM = AIF30W.WS-MM;
  SR-TOPHDR-REC.BATCH-CNTL-DD = AIF30W.WS-DD;
  AIF30W.WS-HDR-DATA = "N";
  AIF30W.WS-SR-DATA = "N";
  set SR-TOPCNTL-REC empty;
  SR-TOPCNTL-REC.FILLER = " ";
  SR-TOPCNTL-REC.RECORD-TYPE = "TOP ";
  SR-TOPCNTL-REC.RECORD-COUNT = 0;
  SR-TOPCNTL-REC.DEBT-AMOUNT = 0;
  SR-TOPCNTL-REC.BATCH-CNTL-CCYY = AIF30W.WS-CCYY;
  SR-TOPCNTL-REC.BATCH-CNTL-MM = AIF30W.WS-MM;
  SR-TOPCNTL-REC.BATCH-CNTL-DD = AIF30W.WS-DD;
  AIF30W.WS-PREV-OFC = " ";
  AIF30W.WS-DATA-FLG = "N";
  AIF30Q1-DMQDRP-DEB();
  if (VDBCONTROL.URC == 0)
     AIF30Q1-SCAN();
  end
  while (VDBCONTROL.URC == 0)
    if (H2-3-DMQDRP-DEB.STS-CD == "M")
        AIF30W.WS-DATA-FLG = "Y";
        AIF30P9-APPLSPEC();
    end
    AIF30Q1-SCAN();
  end
  AIF30P9-PROC-EOF();
  if (AIF30W.WS-HDR-DATA == "Y")
    move SR-TOPCNTL-REC to SR-AIF30-OUTREC withV60Compat;
    AIF30Q8-ADD-SR-REC();
    AIF30Q8-CLOSE-SR();
    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit();
    exit program;
  else
    VMESSAGE.UMSGCODE-JCL-ERR = 8;
    VDBCONTROL.UPROC-NM = "AIF30P8-MAIN";
    VDBCONTROL.UPROC-OBJ = "SR-AIF30-OUTREC";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[1] = "0008";
    VMESSAGE.UMSGINS[2] = "AIF30A";
    WCM00P2-TO-CEP01A();
  end
end // end AIF30P8-MAIN
// application specific processin

 Function AIF30P9-APPLSPEC()
  AIF30W.WS-ADJ-AMOUNT = 0;
  AIF30W.WS-COLL-AMOUNT = 0;
  AIF30W.WS-RF-AMOUNT = 0;
  AIF30W.WS-SR-DATA = "N";
  AIF30W.WS-DEL-CHNG = "N";
  AIF30W.WS-ALT-DREC = "N";
  set SR-TOP01-REC empty;
  set SR-TOP02-REC empty;
  set H2-DEBT-RESP-PRSN empty;
  set H2-DEBT-MATCH-REQ empty;
  if (AIF30W.WS-PREV-OFC == " ")
    AIF30W.WS-PREV-OFC = H2-3-DMQDRP-DEB.OFC-CD;
    set H2-OFFICE empty;
    AIF30Q1-OFFICE();
    AIF30W-SUBH.LINE1-DISTRICT = H2-OFFICE.OFC-NM;
    AIF30W.WS-OFC-DATA = "N";
  end
  if (H2-3-DMQDRP-DEB.OFC-CD != AIF30W.WS-PREV-OFC)
      if (AIF30W.WS-OFC-DATA == "Y")
          AIF30P9-PROC-OFC();
      end
      AIF30W.WS-PREV-OFC = H2-3-DMQDRP-DEB.OFC-CD;
      set H2-OFFICE empty;
      AIF30Q1-OFFICE();
      AIF30W-SUBH.LINE1-DISTRICT = H2-OFFICE.OFC-NM;
      AIF30W.WS-OFC-DATA = "N";
  end
// ----------------ADD NEW DEBT OR JOINT DEBTOR-------------------
  if (H2-3-DMQDRP-DEB.OP-SRCE == "A")
      set SR-TOP01-REC empty;
      set SR-TOP02-REC empty;
      H2-3-DMQDRP-DEB.TOPS-CHANGE-IND = "A";
      if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "D")
          AIF30W.WS-TRAN = "NEW DEBT";
          set SR-TOP01-REC empty;
          SR-TOP01-REC.ACTION-CD = "A";
          SR-TOP01-REC.DEBT-AMT = H2-3-DMQDRP-DEB.DEBT-BAL-AMT;
          AIF30W.WS-DB-DT = H2-3-DMQDRP-DEB.DELINQNT-DT;
          SR-TOP01-REC.DELINQNT-CCYY = AIF30W.WS-DB-CCYY;
          SR-TOP01-REC.DELINQNT-MM = AIF30W.WS-DB-MM;
          SR-TOP01-REC.DELINQNT-DD = AIF30W.WS-DB-DD;
          SR-TOP01-REC.INDIV-BUS-CD = "I"; 
          SR-TOP01-REC.DEBT-CLOSED-IND = " ";
          AIF30W.WS-DEBT-BAL = H2-3-DMQDRP-DEB.DEBT-BAL-AMT;
          AIF30P9-ADD-SR01();
          set SR-TOP02-REC empty;
          SR-TOP02-REC.ACTION-CD = "A";
          SR-TOP02-REC.JOINT-DBTR-TIN = " ";
      	  AIF30P9-ADD-SR02();      	  
      else
      	 if	(H2-3-DMQDRP-DEB.TOP-DEBTOR == "J")
      	 	 AIF30P9-GET-DREC();
      	 	 if (AIF30W.WS-DBTR-ERR == "N")
                 AIF30W.WS-TRAN = "JOINT DEBT0R";
                 set SR-TOP01-REC empty;
                 SR-TOP01-REC.ACTION-CD = "V";
                 SR-TOP01-REC.DEBT-AMT = 0;
                 SR-TOP01-REC.DELINQNT-DT = " ";
                 SR-TOP01-REC.INDIV-BUS-CD = "K"; 
                 SR-TOP01-REC.DEBT-CLOSED-IND = " ";
                 AIF30P9-ADD-SR01();
                 set SR-TOP02-REC empty;
                 SR-TOP02-REC.ACTION-CD = "V";
                 SR-TOP02-REC.JOINT-DBTR-TIN = H2-3-DMQDRP-DEB.SSN;
      	         AIF30P9-ADD-SR02();      	  
      	 	 end       
         end    
      end   
      return;   	    
  end
  if (H2-3-DMQDRP-DEB.OP-SRCE != "U")
     return;
  end;
  if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "D")
  	  AIF30P9-DREC-UPDT();
  end	  
  
  if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "J")
  	  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND != " ")
  	      AIF30P9-JREC-UPDT();
  	  end    	  
  end
  
end // end AIF30P9-APPLSPEC

 Function AIF30P9-GET-DREC()
  set H2-2-DMQ-DRP empty;
  H2-2-DMQ-DRP.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-2-DMQ-DRP.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB; 
  AIF30Q1-GET-DMQ-DRP(); // TOP-DEBTOR = 'D' & TOP-SENT-DT < CURRENT DATE & TOP-STS = 'A'	
  if (VDBCONTROL.URC != 0)
      AIF30W.WS-DBTR-ERR = "Y";
      return;
  end
      
  if (H2-2-DMQ-DRP.TOP-RESP-IND == "K")
  	  if (H2-2-DMQ-DRP.TOP-STS == "A")
          AIF30W.WS-DBTR-ERR = "N";
      else
      	  AIF30W.WS-DBTR-ERR = "Y";
      end	    
      return;
  end
// change INDIV-BUS-CD from I (individual debt) to K (joint debt) for FNS Primary Debtor
  AIF30W.WS-ALT-DREC = "Y";
  set SR-TOP01-REC empty;
  SR-TOP01-REC.ACTION-CD = "U";
  SR-TOP01-REC.DEBT-AMT = 0;
  SR-TOP01-REC.DELINQNT-DT = " ";
  SR-TOP01-REC.INDIV-BUS-CD = "K";
  SR-TOP01-REC.DEBT-CLOSED-IND = " ";
  AIF30P9-ADD-SR01();
  
  set AIF30W-DET empty;
  AIF30W-DET.S-TRAN = "UPDATE STS";
  AIF30W-DET.S-STS = "K";
  AIF30P9-PROC-REPT();     
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-2-DMQ-DRP.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-2-DMQ-DRP.DEBT-SQ-NMB;
  H2-DEBT-MATCH-REQ.UPI = H2-2-DMQ-DRP.UPI;
  H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = "U";
  H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = "K";
  H2-DEBT-MATCH-REQ.TOP-RESP-IND = "K";
  H2-DEBT-MATCH-REQ.TOPS-CHANGE-IND = " ";
  AIF30Q5-UPD-DMQSTS();
  	
  AIF30W.WS-ALT-DREC = " ";
  AIF30W.WS-DBTR-ERR = "N";
end // end AIF30P9-GET-DREC()

 Function AIF30P9-DREC-UPDT()	
  if (H2-3-DMQDRP-DEB.TOP-RESP-IND == "K")
  	  AIF30W.WS-INDIV-BUS-CD = "K";
  else  
  	  AIF30W.WS-INDIV-BUS-CD = "I";
  end
  	    
  AIF30P9-DREC-ADJ();
  
  if (H2-3-DMQDRP-DEB.DELINQNT-DT-CHNG == "Y")
      AIF30P9-DREC-DELNQNT();
  end	
  if (H2-3-DMQDRP-DEB.DEBT-BAL-AMT == 0
      || H2-3-DMQDRP-DEB.DEBT-BAL-AMT < 0)
      if (H2-3-DMQDRP-DEB.TOP-STS == "C"  ||
          H2-3-DMQDRP-DEB.TOP-STS == "I")		
      else
          H2-3-DMQDRP-DEB.TOPS-CHANGE-IND = "I";
      end
  end
 
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == " ")
  	  return;
  end
  	   
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == 
      H2-3-DMQDRP-DEB.TOP-STS)
      set H2-DEBT-MATCH-REQ empty;
      H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
      H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
      H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
      H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = H2-3-DMQDRP-DEB.TOPS-SNT-RCRD-TYP;
      H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = H2-3-DMQDRP-DEB.TOPS-SNT-CLOSD-IND;
      H2-DEBT-MATCH-REQ.TOPS-CHANGE-IND = " ";
      AIF30Q5-UPD-DMQSTS();      	
      return;
  end    
  SET SR-TOP01-REC EMPTY;	
  SR-TOP01-REC.ACTION-CD = "U";
  SR-TOP01-REC.DEBT-AMT = 0;
  SR-TOP01-REC.DELINQNT-DT = " ";
  SR-TOP01-REC.INDIV-BUS-CD = AIF30W.WS-INDIV-BUS-CD;
  
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == "A")
   	  SR-TOP01-REC.DEBT-CLOSED-IND = "!";
  else
      SR-TOP01-REC.DEBT-CLOSED-IND =
       	  H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  end  
  AIF30P9-ADD-SR01();
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = AIF30W.WS-ACTION-CD;
  H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  H2-DEBT-MATCH-REQ.TOPS-CHANGE-IND = " ";
  AIF30Q5-UPD-DMQSTS();
  set H2-DEBT-RESP-PRSN empty;
  H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-RESP-PRSN.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-RESP-PRSN.TOP-STS = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  AIF30Q5-UPD-DRP();
  set AIF30W-DET empty;
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == "C")
    AIF30W-DET.S-TRAN = "CLOSE TOP";
  else
    AIF30W-DET.S-TRAN = "UPDATE STS";
  end
  AIF30W-DET.S-STS = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  AIF30P9-PROC-REPT();
  if (H2-3-DMQDRP-DEB.TOP-RESP-IND != "K")	  
  	  return;
  end
  set H2-DEBT-RESP-PRSN empty;
  H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-RESP-PRSN.TOP-STS = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  AIF30Q5-UPD-JREC-DRP();  
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  AIF30Q5-UPD-JREC-DMQ();  
end

 Function AIF30P9-JREC-UPDT()
  set SR-TOP02-REC empty;                      
  SR-TOP02-REC.AGENCY-ID = "28";
  SR-TOP02-REC.AGENCY-SITE-ID = "NV";
  SR-TOP02-REC.DEBT-NMB = H2-3-DMQDRP-DEB.TOP-DEBT-ID;
  SR-TOP02-REC.ACTION-CD = "U";
  SR-TOP02-REC.RECORD-TYPE = "2";
  SR-TOP02-REC.ADDR-LINE-1 = " ";
  SR-TOP02-REC.ADDR-LINE-2 = " ";
  SR-TOP02-REC.CITY = " ";
  SR-TOP02-REC.STATE = " ";
  SR-TOP02-REC.ZIPCODE-1 = " ";
  SR-TOP02-REC.ZIPCODE-2 = " ";
  SR-TOP02-REC.COUNTRY-CD = " ";
  SR-TOP02-REC.DEBT-ESTBL-DT = " ";
  SR-TOP02-REC.DEBT-AMT = 0;
  SR-TOP02-REC.JOINT-DBTR-TIN = H2-3-DMQDRP-DEB.SSN; 
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == "A")
   	  SR-TOP02-REC.JOINT-DBTR-STS = "!";
  else
      SR-TOP02-REC.JOINT-DBTR-STS =
       	  H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  end  
              
  SR-TOP02-REC.REATTACH-AGENCY-ID = " ";
  SR-TOP02-REC.REATTACH-AGENCY-SITE-ID = " ";
  SR-TOP02-REC.REATTACH-DEBT-NMB = " ";
  SR-TOP02-REC.FILLER = " ";
  move SR-TOP02-REC to SR-AIF30-OUTREC withV60Compat;
  AIF30Q8-ADD-SR-REC();
  SR-TOPCNTL-REC.RECORD-COUNT = SR-TOPCNTL-REC.RECORD-COUNT + 1;
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = SR-TOP02-REC.ACTION-CD;
  H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  H2-DEBT-MATCH-REQ.TOPS-CHANGE-IND = " ";
  AIF30Q5-UPD-DMQSTS();
  set H2-DEBT-RESP-PRSN empty;
  H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-RESP-PRSN.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-RESP-PRSN.TOP-STS = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  AIF30Q5-UPD-DRP();
  set AIF30W-DET empty;
  if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND == "C")
    AIF30W-DET.S-TRAN = "CLOSE TOP";
  else
    AIF30W-DET.S-TRAN = "UPDATE STS";
  end
  AIF30W-DET.S-STS = H2-3-DMQDRP-DEB.TOPS-CHANGE-IND;
  AIF30P9-PROC-REPT();
  
end
    
// application specific processin

 Function AIF30P9-DREC-ADJ()
  set H3-RPM-AUDIT-TRAIL empty;
  H3-RPM-AUDIT-TRAIL.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H3-RPM-AUDIT-TRAIL.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  AIF30W.WS-HIGH-DATE = AIF30W.WS-CURR-DT;
  AIF30W.WS-HIGH-TIME = "-23.59.59.999999";
  AIF30W.WS-LOW-DATE = H2-3-DMQDRP-DEB.TOPS-SENT-DT;
  AIF30W.WS-LOW-TIME = "-00.00.00.000001";
  AIF30W.WS-ADJ-AMOUNT = 0;
  AIF30W.WS-COLL-AMOUNT = 0;
  AIF30Q2-RPM();
  if (VDBCONTROL.URC == 0)
      AIF30Q2-RPM-SCAN();
  end
   
  while (VDBCONTROL.URC == 0)
    AIF30P9-PROC-RPM();
    set H2-RPM-AUDIT-TRAIL empty;
    H2-RPM-AUDIT-TRAIL.RPM-ADT-TRL-TS = H3-RPM-AUDIT-TRAIL.RPM-ADT-TRL-TS;
    AIF30Q5-UPD-RPM();
    AIF30Q2-RPM-SCAN();
  end
  
  if (AIF30W.WS-COLL-AMOUNT != 0)  	
    set H2-DEBT-MATCH-REQ empty;
    H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
    H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
    H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
    H2-DEBT-MATCH-REQ.TOPS-LST-COLLECTN = AIF30W.WS-COLL-AMOUNT;
    AIF30Q5-UPD-DMQCOL();
    AIF30W.WS-COLL-AMOUNT = 0; 
  end
  if (AIF30W.WS-ADJ-AMOUNT == 0)
  	  return;
  end	  
  set SR-TOP01-REC empty;
  set AIF30W-DET empty;
  if (AIF30W.WS-ADJ-AMOUNT > 0)
     SR-TOP01-REC.ACTION-CD = "I";
     AIF30W-DET.S-TRAN = "INCREASE BAL";
     SR-TOP01-REC.DEBT-AMT = AIF30W.WS-ADJ-AMOUNT;
  else
     if (AIF30W.WS-ADJ-AMOUNT < 0)
         SR-TOP01-REC.ACTION-CD = "S";
         AIF30W-DET.S-TRAN = "DECREASE BAL";
         SR-TOP01-REC.DEBT-AMT = AIF30W.WS-ADJ-AMOUNT * -1;
     end    
  end
  
  SR-TOP01-REC.DELINQNT-DT = " ";
  SR-TOP01-REC.INDIV-BUS-CD = AIF30W.WS-INDIV-BUS-CD;
  SR-TOP01-REC.DEBT-CLOSED-IND = " ";
  SR-TOP01-REC.DELINQNT-DT = " ";
  AIF30P9-ADD-SR01();
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = AIF30W.WS-ACTION-CD;
  H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = " ";
  H2-DEBT-MATCH-REQ.TOPS-LAST-ADJST = AIF30W.WS-ADJ-AMOUNT;
  AIF30Q5-UPD-H2-DMQ();
  AIF30W-DET.S-STS = H2-3-DMQDRP-DEB.TOP-STS;
  AIF30P9-PROC-REPT();
  
  AIF30W.WS-ADJ-AMOUNT = 0;
    
end // end AIF30P9-DREC-ADJ

 Function AIF30P9-DREC-DELNQNT()
  SET SR-TOP01-REC EMPTY;	
  SR-TOP01-REC.ACTION-CD = "U";
  SR-TOP01-REC.DEBT-AMT = 0;
  SR-TOP01-REC.INDIV-BUS-CD = AIF30W.WS-INDIV-BUS-CD;      
  SR-TOP01-REC.DEBT-CLOSED-IND = " ";
  AIF30W.WS-DB-DT = H2-3-DMQDRP-DEB.DELINQNT-DT;
  AIF30W.WS-CCYY = AIF30W.WS-DB-CCYY;
  AIF30W.WS-MM = AIF30W.WS-DB-MM;
  AIF30W.WS-DD = AIF30W.WS-DB-DD;
  SR-TOP01-REC.DELINQNT-DT = AIF30W.WS-DT;
  AIF30P9-ADD-SR01();
  
  set AIF30W-DET empty;
  AIF30W-DET.S-TRAN = "DELNQNT DT";
  AIF30W-DET.S-STS = " ";
  AIF30P9-PROC-REPT();
  
  set H2-DEBT empty;
  H2-DEBT.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT.DELINQNT-DT-CHNG = "N";
  AIF30Q5-UPD-DEB();   
end

 Function AIF30P9-ADD-SR01()
  SR-TOP01-REC.AGENCY-ID = "28";
  SR-TOP01-REC.AGENCY-SITE-ID = "NV";
  SR-TOP01-REC.RECORD-TYPE = "1";
  if (AIF30W.WS-ALT-DREC == "Y")
      SR-TOP01-REC.DEBT-NMB = H2-2-DMQ-DRP.TOP-DEBT-ID;
      SR-TOP01-REC.TAX-ID = H2-2-DMQ-DRP.SSN;
      SR-TOP01-REC.LAST-NAME = H2-2-DMQ-DRP.LAST-NAME;
      SR-TOP01-REC.FIRST-NAME = H2-2-DMQ-DRP.FIRST-NAME;
  else    
      SR-TOP01-REC.DEBT-NMB = H2-3-DMQDRP-DEB.TOP-DEBT-ID;
      SR-TOP01-REC.TAX-ID = H2-3-DMQDRP-DEB.SSN;
      SR-TOP01-REC.LAST-NAME = H2-3-DMQDRP-DEB.LAST-NAME;
      SR-TOP01-REC.FIRST-NAME = H2-3-DMQDRP-DEB.FIRST-NAME;
  end  
  if (SR-TOP01-REC.ACTION-CD == "A")
      SR-TOP01-REC.AGENCY-NAME-CTL = H2-3-DMQDRP-DEB.DEBT-CLSFN-CD; // ?
      if (H2-3-DMQDRP-DEB.JDGMT-STS-CD == " ")
          SR-TOP01-REC.JUDGEMENT = " ";
      else
          SR-TOP01-REC.JUDGEMENT = "J";
      end
  else
  	 SR-TOP01-REC.AGENCY-NAME-CTL = " ";
  	 SR-TOP01-REC.JUDGEMENT = " ";       
  end
  SR-TOP01-REC.MID-INIT = " ";
  SR-TOP01-REC.LOCAL-CODE = " ";
  SR-TOP01-REC.TOP-NAME-CTL = " ";
  SR-TOP01-REC.FILLER = " ";   
  SR-TOP01-REC.DEBT-TYPE = "PG";
  SR-TOP01-REC.TOP-TRACE-NMB = " ";
  SR-TOP01-REC.NEW-AGENCY-SITE = " ";
  SR-TOP01-REC.NEW-DEBT-NMB = " ";
  SR-TOP01-REC.NEW-DEBTOR-TIN = " ";
  SR-TOP01-REC.LAST-NM-UPD-RSN = " ";
  if (AIF30W.WS-HDR-DATA == "N")
    move SR-TOPHDR-REC to SR-AIF30-OUTREC withV60Compat;
    AIF30Q8-ADD-SR-REC();
    AIF30W.WS-HDR-DATA = "Y";
  end
  move SR-TOP01-REC to SR-AIF30-OUTREC withV60Compat;
  AIF30Q8-ADD-SR-REC();
  
  AIF30W.WS-ACTION-CD = SR-TOP01-REC.ACTION-CD; 
  AIF30W.WS-SR-DATA = "Y";
  SR-TOPCNTL-REC.RECORD-COUNT = SR-TOPCNTL-REC.RECORD-COUNT + 1;
  SR-TOPCNTL-REC.DEBT-AMOUNT = SR-TOPCNTL-REC.DEBT-AMOUNT + SR-TOP01-REC.DEBT-AMT;  
end // end AIF30P9-ADD-SR01
// add new debt to top

 Function AIF30P9-ADD-SR02()
  set SR-TOP02-REC empty;                      
  SR-TOP02-REC.AGENCY-ID = "28";
  SR-TOP02-REC.AGENCY-SITE-ID = "NV";
  SR-TOP02-REC.DEBT-NMB = H2-3-DMQDRP-DEB.TOP-DEBT-ID;
  SR-TOP02-REC.ACTION-CD = AIF30W.WS-ACTION-CD;
  SR-TOP02-REC.RECORD-TYPE = "2";
  SR-TOP02-REC.ADDR-LINE-1 = H2-3-DMQDRP-DEB.STREET-ADDR;
  SR-TOP02-REC.ADDR-LINE-2 = " ";
  SR-TOP02-REC.CITY = H2-3-DMQDRP-DEB.TOP-CITY;
  SR-TOP02-REC.STATE = H2-3-DMQDRP-DEB.STATE;
  SR-TOP02-REC.ZIPCODE-1 = H2-3-DMQDRP-DEB.ZIPCODE-1;
  SR-TOP02-REC.ZIPCODE-2 = H2-3-DMQDRP-DEB.ZIPCODE-2;
  SR-TOP02-REC.COUNTRY-CD = " ";
  SR-TOP02-REC.DEBT-ESTBL-DT = " ";
  SR-TOP02-REC.DEBT-AMT = 0;
  SR-TOP02-REC.JOINT-DBTR-STS = " ";
  if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "D")
  	  SR-TOP02-REC.JOINT-DBTR-TIN = " ";
  else       
  	  SR-TOP02-REC.JOINT-DBTR-TIN = H2-3-DMQDRP-DEB.SSN;
  end       
  SR-TOP02-REC.REATTACH-AGENCY-ID = " ";
  SR-TOP02-REC.REATTACH-AGENCY-SITE-ID = " ";
  SR-TOP02-REC.REATTACH-DEBT-NMB = " ";
  SR-TOP02-REC.FILLER = " ";
  move SR-TOP02-REC to SR-AIF30-OUTREC withV60Compat;
  AIF30Q8-ADD-SR-REC();
  SR-TOPCNTL-REC.RECORD-COUNT = SR-TOPCNTL-REC.RECORD-COUNT + 1;
  set H2-DEBT-MATCH-REQ empty;
  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;
  
  if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "D")
      H2-DEBT-MATCH-REQ.TOPS-INITIAL-AMT = AIF30W.WS-DEBT-BAL;
      H2-DEBT-MATCH-REQ.TOP-RESP-IND = H2-3-DMQDRP-DEB.TOP-RESP-IND;
  else
      H2-DEBT-MATCH-REQ.TOPS-INITIAL-AMT = H2-2-DMQ-DRP.TOPS-INITIAL-AMT;
      H2-DEBT-MATCH-REQ.TOP-RESP-IND = "K";
  end	    
  H2-DEBT-MATCH-REQ.TOP-DEBTOR = H2-3-DMQDRP-DEB.TOP-DEBTOR;
  H2-DEBT-MATCH-REQ.TOPS-SNT-RCRD-TYP = SR-TOP02-REC.ACTION-CD;
  H2-DEBT-MATCH-REQ.TOPS-SENT-DT = AIF30W.WS-CURR-DT;
  H2-DEBT-MATCH-REQ.TOPS-SNT-CLOSD-IND = " ";
  H2-DEBT-MATCH-REQ.TOPS-CHANGE-IND = " ";
  H2-DEBT-MATCH-REQ.TOPS-LAST-ADJST = 0;
  H2-DEBT-MATCH-REQ.TOPS-LST-COLLECTN = 0;
  AIF30Q5-DMQ-NEWDBT();
  
  set H2-DEBT-RESP-PRSN empty;
  H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;
  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;
  H2-DEBT-RESP-PRSN.UPI = H2-3-DMQDRP-DEB.UPI;
  H2-DEBT-RESP-PRSN.TOP-STS = "A";
  AIF30Q5-UPD-DRP();
  set AIF30W-DET empty;
  AIF30W-DET.S-TRAN = AIF30W.WS-TRAN;
  AIF30W-DET.S-STS = "A";
  AIF30P9-PROC-REPT();
end
// PROCESS TO FORMAT AMOUNTS

 Function AIF30P9-FMT-AMT()
  set FORMATW empty;
  if (AIF30W2.WS-AMOUNT < 0)
    AIF30W2.WS-AMOUNT = AIF30W2.WS-AMOUNT * (-1);
    FORMATW.DOLLAR-FLAG = "S";
  end
  FORMATW.INPUT-NUMBER = AIF30W2.WS-AMOUNT;
  if (FORMATW.INPUT-NUMBER != 0)
    FORMATW.LENGTH = 11;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "N";
    REPP9-FORMAT-PROC();
  else
    FORMATW.OUTPUT-CHAR = "       0.00";
  end
end // end AIF30P9-FMT-AMT
// INTIALISE ALL VARIABLES

 Function AIF30P9-INIT-DATE()
  AIF30W.WS-HIGH-DATE = AIF30W.WS-CURR-DT;
  AIF30W.WS-HIGH-TIME = "-23.59.59.999999";
  AIF30W.WS-LOW-DATE = AIF30W.WS-CURR-DT;
  AIF30W.WS-LOW-TIME = "-00.00.00.000001";
  if (AIF30W.WS-LOW-DD > 7)
    AIF30W.WS-LOW-DD = AIF30W.WS-LOW-DD - 7;
    return;
  end
  if (AIF30W.WS-LOW-MM == 01)
    AIF30W.WS-LOW-MM = 12;
    AIF30W.WS-LOW-CCYY = AIF30W.WS-LOW-CCYY - 1;
  else
    AIF30W.WS-LOW-MM = AIF30W.WS-LOW-MM - 1;
  end
  if (AIF30W.WS-LOW-MM == 04
   || AIF30W.WS-LOW-MM == 06
   || AIF30W.WS-LOW-MM == 09
   || AIF30W.WS-LOW-MM == 11)
    AIF30W.WS-LOW-DD = AIF30W.WS-LOW-DD + 30 - 7;
    return;
  end
  if (AIF30W.WS-LOW-MM == 01
   || AIF30W.WS-LOW-MM == 03
   || AIF30W.WS-LOW-MM == 05
   || AIF30W.WS-LOW-MM == 07
   || AIF30W.WS-LOW-MM == 08
   || AIF30W.WS-LOW-MM == 10
   || AIF30W.WS-LOW-MM == 12)
    AIF30W.WS-LOW-DD = AIF30W.WS-LOW-DD + 31 - 7;
    return;
  end
  AIF30W.WS-LEAP-YEAR = AIF30W.WS-LOW-CCYY / 4;
  AIF30W.WS-LEAP-YEAR = AIF30W.WS-LEAP-YEAR * 4;
  if (AIF30W.WS-LEAP-YEAR == AIF30W.WS-LOW-CCYY)
    AIF30W.WS-LOW-DD = AIF30W.WS-LOW-DD + 29 - 7;
  else
    AIF30W.WS-LOW-DD = AIF30W.WS-LOW-DD + 28 - 7;
  end
end // end AIF30P9-INIT-DATE
// INTIALISE ALL VARIABLES

 Function AIF30P9-INIT-PARA()
  /* PERFORM AIF30P9-SET-EMPTY;*/
  set REP-COMMON empty;
  set AIF30W-DET empty;
  set AIF30W-HEAD empty;
  set AIF30W-SUBH empty;
  set VMESSAGE empty;
  set CEP01W empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;
  set AIF30W empty;
  AIF30W.WS-OFC-BAL = 0;
  AIF30W.WS-OFC-INIT = 0;
  AIF30W.WS-OFC-ADJ = 0;
  AIF30W.WS-TOT-BAL = 0;
  AIF30W.WS-TOT-INIT = 0;
  AIF30W.WS-TOT-ADJ = 0;
  /* set all h2 records empty*/
  set H2-3-DMQDRP-DEB empty;
  set H2-DEBT-RESP-PRSN empty;
  set H2-DEBT-MATCH-REQ empty;
  set H2-RPM-AUDIT-TRAIL empty;
  /* set all report variables to initial values*/
  /* ws-page-no      - current printing page number*/
  /* ws-line-no      - current page line no*/
  /* ws-new-page     - a new page indicator*/
  /* ws-max-no-lines - lineage for a standard report frame*/
  VGVar.handleHardIOErrors = 1;
  REP-COMMON.WS-PAGE-NO = 0;
  REP-COMMON.WS-LINE-NO = 56;
  REP-COMMON.WS-NEW-PAGE = "Y";
  REP-COMMON.WS-MAX-NO-LINES = 56;
  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL; /* current date*/
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AIF30W-HEAD.UDATE = REP-COMMON.WS-DATE;
  AIF30W-HEAD.UTIME = VGVar.currentFormattedTime; /* current time*/
  AIF30W-HEAD.UAPPL = "AIF30A"; /* report name*/
  VDBCOMMON.UAPPLNAM = "AIF30A";
  AIF30W.WS-DT = GDW.DTL; /* current date*/
  AIF30W.WS-CURR-CCYY = AIF30W.WS-CCYY;
  AIF30W.WS-DASH1 = "-";
  AIF30W.WS-CURR-MM = AIF30W.WS-MM;
  AIF30W.WS-DASH2 = "-";
  AIF30W.WS-CURR-DD = AIF30W.WS-DD;
  AIF30W.WS-NOTICE-LOW-DT = "2002-01-01";
  AIF30P9-INIT-DATE();
  AIF30P9-INITCON();
  /* set standard header variables*/
  
  /* Determine the environment*/
  set H-TCDTS1 empty;
  H-TCDTS1.CODE-TBL-TYP = "ENVIRONS";
  H-TCDTS1.CODE-TBL-CD = "ENV";
  call "TCDTS1A"(VDBCONTROL, VMESSAGE, H-TCDTS1);
  if(VDBCONTROL.URC > 104)
      exit program;
  end
  if(VDBCONTROL.URC == 0)
      AIF30W.WS-ENV = H-TCDTS1.CODE-DESC;
  end
end // end AIF30P9-INIT-PARA
// INITIALISE CONSTANTS

 Function AIF30P9-INITCON()
  AIF30W-HEAD.LINE1-PAGE-TEXT = "PAGE-NBR";
  AIF30W-HEAD.FILLER1 = " ";
  AIF30W-HEAD.FILLER2 = " ";
  AIF30W-HEAD.LINE1-STATE-TEXT = "STATE OF NEVADA";
  AIF30W-HEAD.FILLER3 = " ";
  AIF30W-HEAD.LINE1-DATE-TEXT = "DATE";
  AIF30W-HEAD.FILLER4 = " ";
  AIF30W-HEAD.FILLER5 = " ";
  AIF30W-HEAD.LINE2-RPT-NAME = "TREASURY OFFSET WEEKLY TRANSACTIONS";
  AIF30W-HEAD.FILLER6 = " ";
  AIF30W-HEAD.LINE2-TIME-TEXT = "TIME";
  AIF30W-HEAD.FILLER7 = " ";
  set AIF30W-SUBH empty;
  
  AIF30W-SUBH.LINE2-1 = "OFC DEBT #     SSN";
  AIF30W-SUBH.LINE2-2 = "LAST NAME";
  AIF30W-SUBH.LINE2-3 = "FIRST NAME";
  AIF30W-SUBH.LINE2-4 = "TOP SENT    INIT AMT  STS";
  AIF30W-SUBH.LINE2-5 = "DEBT BAL  TRANSACTION     ACTIVITY";
end // end AIF30P9-INITCON
// PRINTS REPORT HEADER

 Function AIF30P9-PRN-HEAD()
  REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
  AIF30W-HEAD.UPAGE = REP-COMMON.WS-PAGE-NO;
  /* set carriage control flag for form feed if flag is set*/
  if (REP-COMMON.WS-PAGE-NO > 1)
    SR-132REP-RECOUT.PRNT-CC = "1";
  end
  /* move each line of header to map and print*/
  SR-132REP-RECOUT.UFIELD = AIF30W-HEAD.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.PRNT-CC = " ";
  SR-132REP-RECOUT.UFIELD = AIF30W-HEAD.LINE2;
  WR-132REP-OUT-FILE();
  if (AIF30W.WS-PREV-OFC != "99")
    SR-132REP-RECOUT.PRNT-CC = "0";
    SR-132REP-RECOUT.UFIELD = AIF30W-SUBH.LINE1;
    WR-132REP-OUT-FILE();
  end
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-SUBH.LINE2;
  WR-132REP-OUT-FILE();
  REP-COMMON.WS-LINE-NO = 4;
end // end AIF30P9-PRN-HEAD
// application specific processin

 Function AIF30P9-PROC-EOF()
  if (AIF30W.WS-HDR-DATA == "Y")
    if (AIF30W.WS-OFC-DATA == "Y")
      set AIF30W-DET empty;
      AIF30W-DET.S-DEBT-NMB = " ";
      AIF30W-DET.S-FIRST-NAME = "DISTRICT TOTALS";
      AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-BAL;
      AIF30P9-FMT-AMT();
      AIF30W-DET.S-BAL-AMT = FORMATW.OUTPUT-CHAR;
      AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-INIT;
      AIF30P9-FMT-AMT();
      AIF30W-DET.S-INIT-AMT = FORMATW.OUTPUT-CHAR;
      if (AIF30W.WS-OFC-ADJ != 0)
        AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-ADJ;
        AIF30P9-FMT-AMT();
        AIF30W-DET.S-ADJ-AMT = FORMATW.OUTPUT-CHAR;
      end
      SR-132REP-RECOUT.PRNT-CC = "0";
      SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
      WR-132REP-OUT-FILE();
    end
    set AIF30W-DET empty;
    AIF30W-DET.S-DEBT-NMB = " ";
    AIF30W-DET.S-FIRST-NAME = "STATE TOTALS ";
    AIF30W2.WS-AMOUNT = AIF30W.WS-TOT-BAL;
    AIF30P9-FMT-AMT();
    AIF30W-DET.S-BAL-AMT = FORMATW.OUTPUT-CHAR;
    AIF30W2.WS-AMOUNT = AIF30W.WS-TOT-INIT;
    AIF30P9-FMT-AMT();
    AIF30W-DET.S-INIT-AMT = FORMATW.OUTPUT-CHAR;
    if (AIF30W.WS-TOT-ADJ != 0)
      AIF30W2.WS-AMOUNT = AIF30W.WS-TOT-ADJ;
      AIF30P9-FMT-AMT();
      AIF30W-DET.S-ADJ-AMT = FORMATW.OUTPUT-CHAR;
    end
  else
    set AIF30W-DET empty;
    AIF30W-DET.S-DEBT-NMB = " ";
    AIF30W-DET.S-LAST-NAME = "NO TRANSACTIONS";
  end
  AIF30W.WS-PREV-OFC = "99";
  AIF30P9-PRN-HEAD();
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
  WR-132REP-OUT-FILE();
  AIF30P9-PRN-HEAD();
  AIF30W-DET.LINE1 = " ";
  AIF30W-DET.S-LAST-NAME = "CONTROL TOTAL COUNT ";
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = SR-TOPCNTL-REC.RECORD-COUNT;
  if (FORMATW.INPUT-NUMBER != 0)
    FORMATW.LENGTH = 11;
    FORMATW.DEC-COUNT = 0;
    FORMATW.FORMAT-FLAG = "N";
    REPP9-FORMAT-PROC();
  else
    FORMATW.OUTPUT-CHAR = "       0";
  end
  AIF30W-DET.S-FIRST-NAME = FORMATW.OUTPUT-CHAR;
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
  WR-132REP-OUT-FILE();
  AIF30W-DET.S-LAST-NAME = "CONTROL TOTAL AMOUNT";
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = SR-TOPCNTL-REC.DEBT-AMOUNT;
  if (FORMATW.INPUT-NUMBER != 0)
    FORMATW.LENGTH = 14;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "N";
    REPP9-FORMAT-PROC();
  else
    FORMATW.OUTPUT-CHAR = "    0.00";
  end
  AIF30W-DET.S-FIRST-NAME = FORMATW.OUTPUT-CHAR;
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
  WR-132REP-OUT-FILE();
  REP132P9-EOR-PROC();
  AIF30Q8-CLOSE-RPT();
end // end AIF30P9-PROC-EOF
// application specific processin

 Function AIF30P9-PROC-OFC()
  set AIF30W-DET empty;
  AIF30W-DET.S-DEBT-NMB = " ";
  AIF30W-DET.S-FIRST-NAME = "DISTRICT TOTALS";
  AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-BAL;
  AIF30P9-FMT-AMT();
  AIF30W-DET.S-BAL-AMT = FORMATW.OUTPUT-CHAR;
  AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-INIT;
  AIF30P9-FMT-AMT();
  AIF30W-DET.S-INIT-AMT = FORMATW.OUTPUT-CHAR;
  if (AIF30W.WS-OFC-ADJ != 0)
    AIF30W2.WS-AMOUNT = AIF30W.WS-OFC-ADJ;
    AIF30P9-FMT-AMT();
    AIF30W-DET.S-ADJ-AMT = FORMATW.OUTPUT-CHAR;
  end
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
  WR-132REP-OUT-FILE();
  REP-COMMON.WS-LINE-NO = 56;
  AIF30W.WS-OFC-BAL = 0;
  AIF30W.WS-OFC-INIT = 0;
  AIF30W.WS-OFC-ADJ = 0;
end // end AIF30P9-PROC-OFC

 Function AIF30P9-PROC-REPT()
  AIF30W-DET.S-OFC-CD = H2-3-DMQDRP-DEB.OFC-CD;
  AIF30W-DET.S-DEBT-ID = H2-3-DMQDRP-DEB.TOP-DEBT-ID;
  AIF30W-DET.S-DEBT-DSH = "-";
  if (AIF30W.WS-ALT-DREC == "Y")
  	  AIF30W-DET.S-DEBTOR = H2-2-DMQ-DRP.TOP-DEBTOR;	
      AIF30W.WS-SSN = H2-2-DMQ-DRP.SSN;
      AIF30W-DET.S-SSN1 = AIF30W.WS-SSN1;
      AIF30W-DET.S-SSN2 = AIF30W.WS-SSN2;
      AIF30W-DET.S-SSN3 = AIF30W.WS-SSN3;
      AIF30W-DET.S-LAST-NAME = H2-2-DMQ-DRP.LAST-NAME;
      AIF30W-DET.S-FIRST-NAME = H2-2-DMQ-DRP.FIRST-NAME;
  else
  	  AIF30W-DET.S-DEBTOR = H2-3-DMQDRP-DEB.TOP-DEBTOR;	
  	  AIF30W.WS-SSN = H2-3-DMQDRP-DEB.SSN;
      AIF30W-DET.S-SSN1 = AIF30W.WS-SSN1;
      AIF30W-DET.S-SSN2 = AIF30W.WS-SSN2;
      AIF30W-DET.S-SSN3 = AIF30W.WS-SSN3;
      AIF30W-DET.S-LAST-NAME = H2-3-DMQDRP-DEB.LAST-NAME;
      AIF30W-DET.S-FIRST-NAME = H2-3-DMQDRP-DEB.FIRST-NAME;
  end	      
  if (SR-TOP01-REC.ACTION-CD == "A" ||
      SR-TOP01-REC.ACTION-CD == "V")
      AIF30W-DET.S-SENT-CCYY = AIF30W.WS-CURR-CCYY;
      AIF30W-DET.S-SENT-MM = AIF30W.WS-CURR-MM;
      AIF30W-DET.S-SENT-DD = AIF30W.WS-CURR-DD;
      AIF30W-DET.S-SENT-DSH1 = "/";
      AIF30W-DET.S-SENT-DSH2 = "/";
      AIF30W2.WS-AMOUNT = H2-DEBT-MATCH-REQ.TOPS-INITIAL-AMT;
  else    
      AIF30W2.WS-AMOUNT = H2-3-DMQDRP-DEB.TOPS-INITIAL-AMT;      
      AIF30W.WS-TOP-DT = H2-3-DMQDRP-DEB.TOPS-SENT-DT;
      if (AIF30W.WS-DEL-CHNG == "Y")
          AIF30W.WS-DB-DT = H2-3-DMQDRP-DEB.DELINQNT-DT;
      end    
  	  if (AIF30W.WS-ALT-DREC == "Y")
          AIF30W.WS-TOP-DT = H2-2-DMQ-DRP.TOPS-SENT-DT;
          AIF30W2.WS-AMOUNT = H2-2-DMQ-DRP.TOPS-INITIAL-AMT;      
      end               	  	
      AIF30W-DET.S-SENT-CCYY = AIF30W.WS-TOP-CCYY;
      AIF30W-DET.S-SENT-MM = AIF30W.WS-TOP-MM;
      AIF30W-DET.S-SENT-DD = AIF30W.WS-TOP-DD;
      AIF30W-DET.S-SENT-DSH1 = "/";
      AIF30W-DET.S-SENT-DSH2 = "/";
  end
  AIF30P9-FMT-AMT();
  AIF30W-DET.S-INIT-AMT = FORMATW.OUTPUT-CHAR;
  AIF30W2.WS-AMOUNT = H2-3-DMQDRP-DEB.DEBT-BAL-AMT;
  AIF30P9-FMT-AMT();
  AIF30W-DET.S-BAL-AMT = FORMATW.OUTPUT-CHAR;
  if (SR-TOP01-REC.ACTION-CD == "S"
      || SR-TOP01-REC.ACTION-CD == "I")
     AIF30W2.WS-AMOUNT = AIF30W.WS-ADJ-AMOUNT;
     AIF30P9-FMT-AMT();
     AIF30W-DET.S-ADJ-AMT = FORMATW.OUTPUT-CHAR;
  end
  if (REP-COMMON.WS-LINE-NO >= REP-COMMON.WS-MAX-NO-LINES)
     AIF30P9-PRN-HEAD();
  end
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIF30W-DET.LINE1;
  WR-132REP-OUT-FILE();
  AIF30W.WS-OFC-DATA = "Y";
  AIF30W.WS-OFC-BAL = AIF30W.WS-OFC-BAL 
                      + H2-3-DMQDRP-DEB.DEBT-BAL-AMT;
  AIF30W.WS-TOT-BAL = AIF30W.WS-TOT-BAL                   
                      + H2-3-DMQDRP-DEB.DEBT-BAL-AMT;
  AIF30W.WS-OFC-ADJ = AIF30W.WS-OFC-ADJ                   
                      + AIF30W.WS-ADJ-AMOUNT;
  AIF30W.WS-TOT-ADJ = AIF30W.WS-TOT-ADJ                   
                      + AIF30W.WS-ADJ-AMOUNT;
  if (SR-TOP01-REC.ACTION-CD == "A")
    AIF30W.WS-OFC-INIT = AIF30W.WS-OFC-INIT                       
                         + H2-DEBT-MATCH-REQ.TOPS-INITIAL-AMT;
    AIF30W.WS-TOT-INIT = AIF30W.WS-TOT-INIT                       
                         + H2-DEBT-MATCH-REQ.TOPS-INITIAL-AMT;
  else
    AIF30W.WS-OFC-INIT = AIF30W.WS-OFC-INIT                       
                         + H2-3-DMQDRP-DEB.TOPS-INITIAL-AMT;
    AIF30W.WS-TOT-INIT = AIF30W.WS-TOT-INIT                       
                         + H2-3-DMQDRP-DEB.TOPS-INITIAL-AMT;
  end
end // end AIF30P9-PROC-REPT
// application specific processin

 Function AIF30P9-PROC-RPM()
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE == "3") /* BENEFIT REDUCTION*/
      AIF30W.WS-ADJ-AMOUNT = AIF30W.WS-ADJ-AMOUNT 
                             - H3-RPM-AUDIT-TRAIL.TRN-AMT;
//    if (H2-3-DMQDRP-DEB.TOPS-CHANGE-IND != "I")
//        H2-3-DMQDRP-DEB.TOPS-CHANGE-IND = "I";
//    end
    return;
  end
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE == "1" /* DIRECT PYMT*/
      || H3-RPM-AUDIT-TRAIL.TRN-TYPE == "6") /* EXPUNGEMENT*/
      AIF30W.WS-ADJ-AMOUNT = AIF30W.WS-ADJ-AMOUNT
                             - H3-RPM-AUDIT-TRAIL.TRN-AMT;
    return;
  end
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE == "5") /* RETURN BENEFIT REDUCTION*/
      AIF30W.WS-ADJ-AMOUNT = AIF30W.WS-ADJ-AMOUNT 
                             + H3-RPM-AUDIT-TRAIL.TRN-AMT;
    return;
  end
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE == "7") /* TREASURY INTERCEPT*/
    AIF30W.WS-COLL-AMOUNT = AIF30W.WS-COLL-AMOUNT
                            + H3-RPM-AUDIT-TRAIL.TRN-AMT;
    return;
  end
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE == "8") /* RETURN TREASURY INTERCEPT*/
    AIF30W.WS-COLL-AMOUNT = AIF30W.WS-COLL-AMOUNT
                            - H3-RPM-AUDIT-TRAIL.TRN-AMT;
    return;
  end
  if (H3-RPM-AUDIT-TRAIL.TRN-TYPE != "2") /* ADJUSTMENTS*/
      return;
  end
  set H2-2-DPT-RAT empty;
  H2-2-DPT-RAT.DEBT-YR = H3-RPM-AUDIT-TRAIL.DEBT-YR;
  H2-2-DPT-RAT.DEBT-SQ-NMB = H3-RPM-AUDIT-TRAIL.DEBT-SQ-NMB;
  H2-2-DPT-RAT.RPM-ADT-TRL-TS = H3-RPM-AUDIT-TRAIL.RPM-ADT-TRL-TS;
  H2-2-DPT-RAT.TRN-TYPE = H3-RPM-AUDIT-TRAIL.TRN-TYPE;
  H2-2-DPT-RAT.RCPT-ADJMT-NMB = H3-RPM-AUDIT-TRAIL.RCPT-ADJMT-NMB;
  AIF30Q3-DPT-RAT();
  if (H2-2-DPT-RAT.RCPT-ADJMT-RSN-CD == "TI")
      AIF30W.WS-COLL-AMOUNT = AIF30W.WS-COLL-AMOUNT 
                            + H3-RPM-AUDIT-TRAIL.TRN-AMT;
  else
      AIF30W.WS-ADJ-AMOUNT = AIF30W.WS-ADJ-AMOUNT
                             + H3-RPM-AUDIT-TRAIL.TRN-AMT;
  end
end // end AIF30P9-PROC-RPM
// -------------- QUERIES -------------------------------

 Function AIF30Q1-DMQDRP-DEB()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q1-DMQDRP-DEB";
  VDBCOMMON.USQLREC = "H2-3-DMQDRP-DEB";
  VDBCONTROL.UPROC-OBJ = "H2-3-DMQDRP-DEB";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    open AIF30Q1-DMQDRP-DEB_RSI01 hold
      with #sql{
        select 
          T1.DEBT_YR, T1.DEBT_SQ_NMB, T1.TOP_DEBTOR, T1.UPI, 
          T3.OFC_CD, 'A' AS OP_SRCE,
          T1.REQUEST_DT, T1.RESPONSE_DT, T1.SSN, T1.NAME_CTL,
          T1.LAST_NAME, T1.FIRST_NAME, T1.STS_CD, T1.ERROR_CD,
          T1.DEATH_DT, T1.FULL_NAME, T1.STREET_ADDR, T1.TOP_CITY,
          T1.STATE, T1.ZIPCODE_1, T1.ZIPCODE_2,
         --
          T1.TOPS_INITIAL_AMT, T1.TOPS_LAST_ADJST, T1.TOPS_SENT_DT,
          T1.TOPS_SNT_RCRD_TYP, T1.TOPS_SNT_CLOSD_IND, T1.TOPS_RCVD_DT,
          T1.TOPS_ERROR_CD, T1.TOPS_LST_COLLECTN, T1.TOPS_CHANGE_IND,
          T1.STS_CD, T1.TOP_RESP_IND, T1.TOP_INTERCEPT, T1.TOP_DEBT_ID,                    
         --
          T2.UPI, T2.RESP_IND, T2.TAX_INTC_IND, T2.ADR_MATCH_STS,
          T2.NOTICE_DT, T2.TOP_STS, T2.TOP_DBTR_TYPE, 
         --
          T3.DEBT_PRGM_CD, T3.DEBT_STS, T3.JDGMT_STS_CD,
          T3.RPYMT_AGRMT_STS_CD, T3.DEBT_BAL_AMT, T3.ESTBL_DT,
          T3.DEBT_CLSFN_CD, T3.OVPYM_AMT, T3.DSCVR_DT, 
          T3.DELINQNT_DT, T3.DELINQNT_DT_CHNG          
         -- 
        FROM
         TWNDEBT_MATCH_REQ T1
        ,TWNDEBT_RESP_PRSN T2
        ,TWNDEBT T3
        WHERE T1.UPI > 0
        AND T1.REQUEST_DT > '0001-01-01'         
        AND T1.TOPS_SENT_DT = '0001-01-01'
        AND T1.STS_CD = 'M'
        AND (DATE(T1.NOTICE_DT + 60 DAYS)) <= :AIF30W.WS-CURR-DT        
        AND T1.DEBT_YR = T2.DEBT_YR
        AND T1.DEBT_SQ_NMB = T2.DEBT_SQ_NMB
        AND T1.UPI = T2.UPI
        AND T1.DEBT_YR = T3.DEBT_YR
        AND T1.DEBT_SQ_NMB = T3.DEBT_SQ_NMB
        AND T3.DEBT_PRGM_CD  = 'FS'
        AND T3.DEBT_CLSFN_CD IN ('A', 'H', 'V')
        AND T3.DELINQNT_DT > '0001-01-01'
        AND (DATE(T3.DELINQNT_DT + 120 days)) <= :AIF30W.WS-CURR-DT        
        AND T3.DEBT_BAL_AMT > 24.99
UNION
        select 
          T1.DEBT_YR, T1.DEBT_SQ_NMB, T1.TOP_DEBTOR, T1.UPI, 
          T3.OFC_CD, 'U' AS OP_SRCE,
          T1.REQUEST_DT, T1.RESPONSE_DT, T1.SSN, T1.NAME_CTL,
          T1.LAST_NAME, T1.FIRST_NAME, T1.STS_CD, T1.ERROR_CD,
          T1.DEATH_DT, T1.FULL_NAME, T1.STREET_ADDR, T1.TOP_CITY,
          T1.STATE, T1.ZIPCODE_1, T1.ZIPCODE_2,
         --
          T1.TOPS_INITIAL_AMT, T1.TOPS_LAST_ADJST, T1.TOPS_SENT_DT,
          T1.TOPS_SNT_RCRD_TYP, T1.TOPS_SNT_CLOSD_IND, T1.TOPS_RCVD_DT,
          T1.TOPS_ERROR_CD, T1.TOPS_LST_COLLECTN, T1.TOPS_CHANGE_IND,
          T1.STS_CD, T1.TOP_RESP_IND, T1.TOP_INTERCEPT, T1.TOP_DEBT_ID,                    
         --
          T2.UPI, T2.RESP_IND, T2.TAX_INTC_IND, T2.ADR_MATCH_STS,
          T2.NOTICE_DT, T2.TOP_STS, T2.TOP_DBTR_TYPE, 
         --
          T3.DEBT_PRGM_CD, T3.DEBT_STS, T3.JDGMT_STS_CD,
          T3.RPYMT_AGRMT_STS_CD, T3.DEBT_BAL_AMT, T3.ESTBL_DT,
          T3.DEBT_CLSFN_CD, T3.OVPYM_AMT, T3.DSCVR_DT, 
          T3.DELINQNT_DT, T3.DELINQNT_DT_CHNG          
         -- 
        FROM
         TWNDEBT_MATCH_REQ T1
        ,TWNDEBT_RESP_PRSN T2
        ,TWNDEBT T3
        WHERE T1.UPI > 0
        AND T1.TOPS_SENT_DT > '0001-01-01'
        AND T1.STS_CD = 'M'
        AND T1.DEBT_YR = T2.DEBT_YR
        AND T1.DEBT_SQ_NMB = T2.DEBT_SQ_NMB
        AND T2.TOP_STS IN ('A', 'C', 'I')
        AND T1.UPI = T2.UPI
        AND T1.DEBT_YR = T3.DEBT_YR
        AND T1.DEBT_SQ_NMB = T3.DEBT_SQ_NMB
        AND T3.DEBT_PRGM_CD  = 'FS'
        
       ORDER BY 5, 1, 2, 3, 4, 6                 
         
      }      
      into DEBT-YR, DEBT-SQ-NMB, TOP-DEBTOR, UPI,
           OFC-CD, OP-SRCE,
           REQUEST-DT, RESPONSE-DT, SSN, NAME-CTL,
           LAST-NAME, FIRST-NAME, STS-CD, ERROR-CD,
           DEATH-DT, FULL-NAME, STREET-ADDR, TOP-CITY,
           STATE, ZIPCODE-1, ZIPCODE-2,
                     
           TOPS-INITIAL-AMT, TOPS-LAST-ADJST, TOPS-SENT-DT,
           TOPS-SNT-RCRD-TYP, TOPS-SNT-CLOSD-IND, TOPS-RCVD-DT,
           TOPS-ERROR-CD, TOPS-LST-COLLECTN, TOPS-CHANGE-IND,
           STS-CD, TOP-RESP-IND, TOP-INTERCEPT, TOP-DEBT-ID,
       
           T2-UPI, RESP-IND, TAX-INTC-IND, ADR-MATCH-STS,
           NOTICE-DT, TOP-STS, TOP-DBTR-TYPE,
           
           DEBT-PRGM-CD, DEBT-STS, JDGMT-STS-CD,
           RPYMT-AGRMT-STS-CD, DEBT-BAL-AMT, ESTBL-DT,
           DEBT-CLSFN-CD, OVPYM-AMT, DSCVR-DT, 
           DELINQNT-DT, DELINQNT-DT-CHNG           
      for H2-3-DMQDRP-DEB ;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q1-DB-DRP-DMQ
// SCAN DEBT, DRP

 Function AIF30Q1-SCAN()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q1-SCAN";
  VDBCOMMON.USQLREC = "H2-3-DMQDRP-DEB";
  VDBCONTROL.UPROC-OBJ = "H2-3-DMQDRP-DEB";
  VDBCONTROL.UPROC-OPT = "SCAN";
  try
    get next H2-3-DMQDRP-DEB ;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q1-SCAN

 Function AIF30Q1-OFFICE()
  WDB00PI();
  VDBCOMMON.USQLREC = "H2-OFFICE";
  VDBCONTROL.UPROC-NM = "AIF30Q1-OFFICE";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-OFFICE";
  try
    get H2-OFFICE
      with #sql{
        select OFC_CD, OFC_NM
        from TWNOFFICE T1
        WHERE
        OFC_CD = :H2-3-DMQDRP-DEB.OFC-CD
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into OFC-CD, OFC-NM ;
  end
  /* perform process to set vdbcontrol.urc*/
  AIF30Q9-SQLERR-RD();
  if (VDBCONTROL.URC == 100)
    H2-OFFICE.OFC-NM = "UNDEFINED OFFICE CODE";
  end
end // end AIF30Q1-OFFICE

 Function AIF30Q1-GET-DMQ-DRP()
  WDB00PI();
  VDBCOMMON.USQLREC = "H2-2-DMQ-DRP";
  VDBCONTROL.UPROC-NM = "AIF30Q1-GET-DMQ-DRP()";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-2-DMQ-DRP";
  try
    get H2-2-DMQ-DRP
      with #sql{
        select T1.DEBT_YR
              ,T1.DEBT_SQ_NMB
              ,T1.UPI
              ,T1.STS_CD
              ,T1.TOP_INTERCEPT
              ,T1.TOP_DEBTOR
              ,T1.TOP_DEBT_ID
              ,T1.TOPS_SENT_DT
              ,T1.TOP_RESP_IND
              ,T1.TOPS_CHANGE_IND
              ,T1.TOPS_INITIAL_AMT
              ,T1.SSN
              ,T1.LAST_NAME
              ,T1.FIRST_NAME
              ,T2.TOP_STS
  
        from TWNDEBT_MATCH_REQ T1
            ,TWNDEBT_RESP_PRSN T2 
        WHERE T1.DEBT_YR = :DEBT-YR
        AND T1.DEBT_SQ_NMB = :DEBT-SQ-NMB
        AND T1.TOP_DEBTOR = 'D'
        AND (T1.TOPS_SENT_DT > '0001-01-01'
             AND T1.TOPS_SENT_DT < :AIF30W.WS-CURR-DT)
        AND T1.DEBT_YR = T2.DEBT_YR
        AND T1.DEBT_SQ_NMB = T2.DEBT_SQ_NMB
        AND T1.UPI = T2.UPI
        AND T2.TOP_DBTR_TYPE = 'D' 
        AND T2.TAX_INTC_IND = 'Y'
        AND T2.TOP_STS = 'A'
      }
      into DEBT-YR
          ,DEBT-SQ-NMB
          ,UPI
          ,STS-CD
          ,TOP-INTERCEPT
          ,TOP-DEBTOR
          ,TOP-DEBT-ID
          ,TOPS-SENT-DT
          ,TOP-RESP-IND
          ,TOPS-CHANGE-IND
          ,TOPS-INITIAL-AMT
          ,SSN
          ,LAST-NAME
          ,FIRST-NAME
          ,TOP-STS;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q1-GET-DMQ-DRP
// TWNRPM-AUDIT-TRAIL

 Function AIF30Q2-RPM()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q2-RPM";
  VDBCOMMON.USQLREC = "H3-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OBJ = "H3-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    open AIF30Q2-RPM_RSI01 hold
      with #sql{
        select RPM_ADT_TRL_TS, BNFT_RDCTN_EFF_MTH, TRN_DT,
               TRN_AMT, TRN_TYPE, PRTCP_ID, ICI,
               PRGM_CASE_TYPE, BNFT_YR, BNFT_MTH, VER_NMB,
               DEBT_YR, DEBT_SQ_NMB, RCPT_ADJMT_NMB, UPI,
               ISNCE_REF_NMB, TOP_UPDATE_IND
        from TWNRPM_AUDIT_TRAIL T1
        WHERE DATE(RPM_ADT_TRL_TS) >= :H2-3-DMQDRP-DEB.TOPS-SENT-DT
        AND DEBT_YR = :DEBT-YR
        AND DEBT_SQ_NMB = :DEBT-SQ-NMB
        AND NOT TOP_UPDATE_IND = 'Y'
        ORDER BY TRN_TYPE
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into RPM-ADT-TRL-TS, BNFT-RDCTN-EFF-MTH, TRN-DT,
           TRN-AMT, TRN-TYPE, PRTCP-ID, ICI,
           PRGM-CASE-TYPE, BNFT-YR, BNFT-MTH, VER-NMB,
           DEBT-YR, DEBT-SQ-NMB, RCPT-ADJMT-NMB, UPI,
           ISNCE-REF-NMB, TOP-UPDATE-IND
      for H3-RPM-AUDIT-TRAIL ;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q2-RPM
// TWNRPM-AUDIT-TRAIL

 Function AIF30Q2-RPM-SCAN()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q2-RPM-SCAN";
  VDBCOMMON.USQLREC = "H3-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OBJ = "H3-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OPT = "SCAN";
  try
    get next H3-RPM-AUDIT-TRAIL ;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q2-SCAN
// INQUIRY DRT-PYMT & RPM-AUDIT

 Function AIF30Q3-DPT-RAT()
  WDB00PI();
  VDBCOMMON.USQLREC = "H2-2-DPT-RAT";
  VDBCONTROL.UPROC-OBJ = "H2-2-DPT-RAT";
  VDBCONTROL.UPROC-NM = "AIF30Q3-DPT-RAT";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    get H2-2-DPT-RAT
      with #sql{
        select TRN_AMT, RCPT_ADJMT_RSN_CD
        from twnrpm_audit_trail T1,
             twndrt_pymt T2
        WHERE RPM_ADT_TRL_TS       = :RPM-ADT-TRL-TS
          AND DEBT_YR              = :DEBT-YR
          AND DEBT_SQ_NMB          = :DEBT-SQ-NMB
          AND TRN_TYPE             = :TRN-TYPE
          AND T1.RCPT_ADJMT_NMB    = :RCPT-ADJMT-NMB
          AND T1.RCPT_ADJMT_NMB   IS NOT NULL
          AND T1.RCPT_ADJMT_NMB    = T2.RCPT_ADJMT_NMB
          AND T1.TRN_TYPE          = T2.DRT_PYMT_TYPE
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into TRN-AMT, RCPT-ADJMT-RSN-CD ;
  end
  AIF30Q9-SQLERR-RD();
end // end AIF30Q3-DPT-RAT
// TWNDEBT-MATCH-REQ

 Function AIF30Q5-DMQ-NEWDBT()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-DMQ-NEWDBT";
  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_MATCH_REQ
        SET TOPS_LAST_ADJST    = :TOPS-LAST-ADJST
           ,TOPS_SNT_RCRD_TYP  = :TOPS-SNT-RCRD-TYP
           ,TOPS_SNT_CLOSD_IND = :TOPS-SNT-CLOSD-IND
           ,TOPS_LST_COLLECTN  = :TOPS-LST-COLLECTN
           ,TOPS_CHANGE_IND    = :TOPS-CHANGE-IND
           ,TOPS_INITIAL_AMT   = :TOPS-INITIAL-AMT
           ,TOPS_SENT_DT       = :WS-CURR-DT
           ,TOP_DEBTOR         = :TOP-DEBTOR
           ,TOP_RESP_IND       = :TOP-RESP-IND
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
          AND UPI              = :UPI
      }
      for H2-DEBT-MATCH-REQ ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-DMQ-NEWDBT
// TWNDEBT

 Function AIF30Q5-UPD-DEB()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-DEB";
  VDBCOMMON.USQLREC = "H2-DEBT";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT
        SET DELINQNT_DT_CHNG   = :DELINQNT-DT-CHNG
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
      }
      for H2-DEBT ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  0;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-DEB
// TWNDEBT-MATCH-REQ

 Function AIF30Q5-UPD-H2-DMQ()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-H2-DMQ";
  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_MATCH_REQ
        SET    TOPS_SNT_RCRD_TYP  = :TOPS-SNT-RCRD-TYP
              ,TOPS_SNT_CLOSD_IND = :TOPS-SNT-CLOSD-IND
              ,TOPS_LAST_ADJST    = :TOPS-LAST-ADJST
        WHERE  DEBT_YR            = :DEBT-YR
          AND  DEBT_SQ_NMB        = :DEBT-SQ-NMB
          AND  UPI                = :UPI
      }
      for H2-DEBT-MATCH-REQ ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-DMQ
// TWNDEBT-MATCH-REQ

 Function AIF30Q5-UPD-DMQCOL()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-DMQCOL";
  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_MATCH_REQ
        SET TOPS_LST_COLLECTN  = :TOPS-LST-COLLECTN
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
          AND UPI              = :UPI
      }
      for H2-DEBT-MATCH-REQ ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-DMQCOL
// TWNDEBT-MATCH-REQ

 Function AIF30Q5-UPD-DMQSTS()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-DMQSTS";
  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_MATCH_REQ
        SET    TOPS_SNT_RCRD_TYP  = :TOPS-SNT-RCRD-TYP
              ,TOPS_SNT_CLOSD_IND = :TOPS-SNT-CLOSD-IND
              ,TOPS_CHANGE_IND    = :TOPS-CHANGE-IND
              ,TOP_RESP_IND       = :TOP-RESP-IND 
        WHERE  DEBT_YR            = :DEBT-YR
          AND  DEBT_SQ_NMB        = :DEBT-SQ-NMB
          AND  UPI                = :UPI
      }
      for H2-DEBT-MATCH-REQ ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-DMQSTS
// TWNDEBT-RESP-PRSN

 Function AIF30Q5-UPD-JREC-DRP()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-JREC-DRP";
  VDBCOMMON.USQLREC = "H2-DEBT-RESP-PRSN";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-RESP-PRSN";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_RESP_PRSN
        SET TOP_STS            = :TOP-STS
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
          AND TOP_DBTR_TYPE    = 'J'
          AND TOP_STS IN ('A', 'I')
      }
      for H2-DEBT-RESP-PRSN ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-RESP-PRSN.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-RESP-PRSN.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-RESP-PRSN.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-JREC-DRP
// TWNDEBT-RESP-PRSN

 Function AIF30Q5-UPD-JREC-DMQ()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-JREC-DMQ";
  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_MATCH_REQ
        SET TOPS_CHANGE_IND    = ' '
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
          AND TOP_DEBTOR       = 'J'
          AND NOT TOPS_SENT_DT = '0001-01-01'
      }
      for H2-DEBT-MATCH-REQ ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-JREC-DMQ
// TWNDEBT-RESP-PRSN

 Function AIF30Q5-UPD-DRP()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-DRP";
  VDBCOMMON.USQLREC = "H2-DEBT-RESP-PRSN";
  VDBCONTROL.UPROC-OBJ = "H2-DEBT-RESP-PRSN";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNDEBT_RESP_PRSN
        SET TOP_STS            = :TOP-STS
        WHERE DEBT_YR          = :DEBT-YR
          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB
          AND UPI              = :UPI
      }
      for H2-DEBT-RESP-PRSN ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-DEBT-RESP-PRSN.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-RESP-PRSN.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-DEBT-RESP-PRSN.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-DRP
// TWNRPM-AUDIT-TRAIL

 Function AIF30Q5-UPD-RPM()
  WDB00PI();
  VDBCONTROL.UPROC-NM = "AIF30Q5-UPD-RPM";
  VDBCOMMON.USQLREC = "H2-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OBJ = "H2-RPM-AUDIT-TRAIL";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute 
      #sql{
        UPDATE TWNRPM_AUDIT_TRAIL
        SET TOP_UPDATE_IND     = 'Y'
        WHERE RPM_ADT_TRL_TS   = :RPM-ADT-TRL-TS
      }
      for H2-RPM-AUDIT-TRAIL ; // model = none
  end
  AIF30Q9-SQLERR-WR();
  if (VDBCONTROL.URC != 0)
  	  AIF30W.WS-ERR-DEBT-YR = H2-RPM-AUDIT-TRAIL.DEBT-YR;
      AIF30W.WS-ERR-DEBT-SQ-NMB = H2-RPM-AUDIT-TRAIL.DEBT-SQ-NMB;
      AIF30W.WS-ERR-UPI =  H2-RPM-AUDIT-TRAIL.UPI;
      AIF30Q9-SET-ERROR();  	  
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
end // end AIF30Q5-UPD-RPM
// PROCESS SQL READ ERRORS

 Function AIF30Q9-SQLERR-RD()
//  SysLib.writeStdout("AIF30Q9-SQLERR-RD");
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIF30A";
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "N";
  WDB00PE-SQLERR();
//  SysLib.writeStdout("URC = " + VDBCONTROL.URC);
  if (VDBCONTROL.URC >= 104)
      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);
      SysLib.writeStdout("sysVar.sqlData.sqlcode " + sysVar.sqlData.sqlcode);
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
END 

 Function AIF30Q9-SQLERR-WR()
//  SysLib.writeStdout("AIF30Q9-SQLERR-RD");
  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIF30A";
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "Y";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC >= 104)
      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);
      SysLib.writeStdout("sysVar.sqlData.sqlcode " + sysVar.sqlData.sqlcode);
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
  end
END  
FUNCTION AIF30Q9-SET-ERROR()
      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);
      SysLib.writeStdout("sysVar.sqlData.sqlcode " + sysVar.sqlData.sqlcode);
      SysLib.writeStdout("DEBT YR " + AIF30W.WS-ERR-DEBT-YR);
      SysLib.writeStdout("DEBT SQ " + AIF30W.WS-ERR-DEBT-SQ-NMB);
      SysLib.writeStdout("UPI " + AIF30W.WS-ERR-UPI);  
  	  IF (VDBCONTROL.URC == 100)
  	      VDBCONTROL.URC = 112;
  	  END
END
// WRITE OUTPUT FILE

 Function AIF30Q8-ADD-SR-REC()
  VGVar.handleHardIOErrors = 1;
  try
    add SR-AIF30-OUTREC ;
  end
  if (SR-AIF30-OUTREC is ioError)
    VDBCONTROL.UPROC-NM = "AIF30Q8-ADD-SR-REC";
    VDBCONTROL.UPROC-OBJ = "SR-AIF30-OUTREC";
    VDBCONTROL.UPROC-OPT = "ADD";
    AIF30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIF30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIF30A";
    if (SR-AIF30-OUTREC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF30-OUTREC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF30-OUTREC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end
      end
    end
    WCM00P2-TO-CEP01A();
  end
end // end AIF30Q8-ADD-SR-REC
// CLOSE REPORT

 Function AIF30Q8-CLOSE-RPT()
  VGVar.handleHardIOErrors = 1;
  try
    close SR-132REP-RECOUT ;
  end
  if (SR-132REP-RECOUT is ioError)
    VDBCONTROL.UPROC-NM = "AIF30Q8-CLOSE-RPT";
    VDBCONTROL.UPROC-OBJ = "SR-132REP-RECOUT";
    VDBCONTROL.UPROC-OPT = "CLOSE";
    AIF30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIF30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIF30A";
    if (SR-132REP-RECOUT is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-132REP-RECOUT is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-132REP-RECOUT is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end
      end
    end
    WCM00P2-TO-CEP01A();
  end
end // end AIF30Q8-CLOSE-RPT
// CLOSE THE SINP FILE

 Function AIF30Q8-CLOSE-SR()
  try
    close SR-AIF30-OUTREC ;
  end
  if (SR-AIF30-OUTREC is ioError)
    VDBCONTROL.UPROC-NM = "AIF30P9-CLOSE-SINP";
    VDBCONTROL.UPROC-OBJ = "SR-AIF30-OUTREC";
    VDBCONTROL.UPROC-OPT = "CLOSE";
    AIF30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIF30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIF30A";
    if (SR-AIF30-OUTREC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF30-OUTREC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF30-OUTREC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end
      end
    end
    WCM00P2-TO-CEP01A();
  end
end // end AIF30Q8-CLOSE-SR

Record AIF30W type basicRecord
  10 WS-ERR-DEBT-YR NUM (4) ; 
  10 WS-ERR-DEBT-SQ-NMB num(5) ; 
  10 WS-ERR-UPI num(9) ; 
  10 WS-TRAN char(12);
  10 WS-ACTION-CD char(1);
  10 WS-RECORD-TYPE char(1);
  10 WS-DEBT-CLOSED-IND char(1);
  10 WS-INDIV-BUS-CD char(1);
  10 WS-DEBT-BAL num(8,2) ;
  10 WS-DBTR-ERR char(1) ;  
  10 WS-DEL-CHNG char(1) ; 
  10 WS-ALT-DREC char(1);
  10 WS-ADD-DAYS char(1) ; 
  10 WS-EOF char(1) ; 
  10 WS-SR-DATA char(1) ; 
  10 WS-HDR-DATA char(1) ; 
  10 WS-OFC-DATA char(1) ; 
  10 WS-PREV-OFC char(2) ; 
  10 WS-NOTICE-LOW-DT char(10) ; 
  10 WS-NOTICE-HIGH-DT char(10) ; 
  10 WS-NUM-DT char(10) ; 
    15 WS-NUM-CCYY num(4) ; 
    15 WS-NUM-FLR1 char(1) ; 
    15 WS-NUM-MM num(2) ; 
    15 WS-NUM-FLR2 char(1) ; 
    15 WS-NUM-DD num(2) ; 
  10 WS-DATE-DB char(10) ; 
    15 WS-DATE-CCYY char(4) ; 
    15 WS-DATE-FLR1 char(1) ; 
    15 WS-DATE-MM char(2) ; 
    15 WS-DATE-FLR2 char(1) ; 
    15 WS-DATE-DD char(2) ; 
  10 WS-DELINQ-DT char(10) ; 
    15 WS-DELINQ-CCYY char(4) ; 
    15 WS-DELINQ-FLR1 char(1) ; 
    15 WS-DELINQ-MM char(2) ; 
    15 WS-DELINQ-FLR2 char(1) ; 
    15 WS-DELINQ-DD char(2) ; 
  10 WS-DT char(8) ; 
    15 WS-CCYY char(4) ; 
    15 WS-MM char(2) ; 
    15 WS-DD char(2) ; 
  10 WS-CURR-DT char(10) ; 
    15 WS-CURR-CCYY char(4) ; 
      20 WS-CURR-CC char(2) ; 
      20 WS-CURR-YY char(2) ; 
    15 WS-DASH1 char(1) ; 
    15 WS-CURR-MM char(2) ; 
    15 WS-DASH2 char(1) ; 
    15 WS-CURR-DD char(2) ; 
  10 WS-TOP-DT char(10) ; 
    15 WS-TOP-CCYY char(4) ; 
    15 WS-TOP-DSH1 char(1) ; 
    15 WS-TOP-MM char(2) ; 
    15 WS-TOP-DSH2 char(1) ; 
    15 WS-TOP-DD char(2) ; 
  10 WS-DB-DT char(10) ; 
    15 WS-DB-CCYY char(4) ; 
    15 WS-DB-DSH1 char(1) ; 
    15 WS-DB-MM char(2) ; 
    15 WS-DB-DSH2 char(1) ; 
    15 WS-DB-DD char(2) ; 
  10 WS-HIGH-TS char(26) ; 
    15 WS-HIGH-DATE char(10) ; 
    15 WS-HIGH-TIME char(16) ; 
  10 WS-LOW-TS char(26) ; 
    15 WS-LOW-DATE char(10) ; 
      20 WS-LOW-CCYY num(4) ; 
      20 WS-LOW-FLR1 char(1) ; 
      20 WS-LOW-MM num(2) ; 
      20 WS-LOW-FLR2 char(1) ; 
      20 WS-LOW-DD num(2) ; 
    15 WS-LOW-TIME char(16) ; 
  10 WS-LEAP-YEAR num(4) ; 
  10 WS-DATA-FLG char(1) ; 
  10 WS-FIRST-TIME char(1) ; 
  10 WS-SSN char(9) ; 
    15 WS-SSN1 char(3) ; 
    15 WS-SSN2 char(2) ; 
    15 WS-SSN3 char(4) ; 
  10 WS-IDX-1 num(2) ; 
  10 WS-IDX-2 num(2) ; 
  10 WS-ERROR char(1) ; 
  10 WS-ERR-CD char(8) ; 
    15 WS-ERR-FIRST-FOUR char(4) ; 
    15 WS-ERR-LAST-FOUR char(4) ; 
  10 WS-MATCH-STS char(1) ; 
  10 WS-COUNT num(8) ; 
  10 WS-ADJ-AMOUNT num(8,2) ; 
  10 WS-COLL-AMOUNT num(8,2) ; 
  10 WS-RF-AMOUNT num(8,2) ; 
  10 WS-CNTL-REC char(150) ; 
    15 WS-CNTL-ID char(4) ; 
    15 WS-CNTL-COUNT num(8) ; 
    15 WS-CNTL-AMOUNT num(14,2) ; 
    15 WS-CNTL-FLR70 char(70) ; 
    15 WS-CNTL-DMF-YR char(2) ; 
    15 WS-CNTL-FLR52 char(52) ; 
  10 WS-REM-LINES num(3) ; 
  10 WS-OFC-BAL num(10,2) ; 
  10 WS-OFC-INIT num(10,2) ; 
  10 WS-OFC-ADJ num(10,2) ; 
  10 WS-TOT-BAL num(10,2) ; 
  10 WS-TOT-INIT num(10,2) ; 
  10 WS-TOT-ADJ num(10,2) ; 
  10 WS-ENV char(8);
end // end AIF30W

Record AIF30W-DET type basicRecord
  5 LINE1 char(132) ; 
    10 S-OFC-CD char(2) ; 
    10 LINE1-FLR1 char(2) ; 
    10 S-DEBT-NMB char(9) ;
       15 S-DEBT-ID char(7) ; 
       15 S-DEBT-DSH char(1);
       15 S-DEBTOR char(1);    
    10 LINE1-FLR2 char(2) ; 
    10 S-SSN1 char(3) ; 
    10 LINE1-FLR3 char(1) ; 
    10 S-SSN2 char(2) ; 
    10 LINE1-FLR4 char(1) ; 
    10 S-SSN3 char(4) ; 
    10 LINE1-FLR5 char(2) ; 
    10 S-LAST-NAME char(20) ; 
    10 LINE1-FLR6 char(2) ; 
    10 S-FIRST-NAME char(15) ; 
    10 LINE1-FLR7 char(2) ; 
    10 S-SENT-DT char(10) ; 
      15 S-SENT-MM char(2) ; 
      15 S-SENT-DSH1 char(1) ; 
      15 S-SENT-DD char(2) ; 
      15 S-SENT-DSH2 char(1) ; 
      15 S-SENT-CCYY char(4) ; 
    10 LINE1-FLR8 char(1) ; 
    10 S-INIT-AMT char(11) ; 
    10 LINE1-FLR9 char(3) ; 
    10 S-STS char(1) ; 
    10 LINE1-FLR10 char(2) ; 
    10 S-BAL-AMT char(11) ; 
    10 LINE1-FLR11 char(2) ; 
    10 S-TRAN char(12) ; 
    10 LINE1-FLR12 char(1) ; 
    10 S-ADJ-AMT char(11) ; 
end // end AIF30W-DET

Record AIF30W-HEAD type basicRecord
  10 LINE1 char(132) ; 
    15 LINE1-PAGE-TEXT char(8) ; 
    15 FILLER1 char(1) ; 
    15 UPAGE char(4) ; 
    15 FILLER2 char(46) ; 
    15 LINE1-STATE-TEXT char(15) ; 
    15 FILLER3 char(43) ; 
    15 LINE1-DATE-TEXT char(4) ; 
    15 FILLER4 char(3) ; 
    15 UDATE char(8) ; 
  10 LINE2 char(132) ; 
    15 UAPPL char(8) ; 
    15 FILLER5 char(40) ; 
    15 LINE2-RPT-NAME char(35) ; 
    15 FILLER6 char(34) ; 
    15 LINE2-TIME-TEXT char(4) ; 
    15 FILLER7 char(3) ; 
    15 UTIME char(8) ; 
  10 LINE2-EXCEPTION char(28) ; 
end // end AIF30W-HEAD

Record AIF30W-SUBH type basicRecord
  10 LINE1 char(132) ; 
    15 LINE1-DISTRICT char(32) ; 
    15 FILLER2 char(100) ; 
  10 LINE2 char(132) ; 
    15 LINE2-1 char(28) ; 
    15 LINE2-2 char(22) ; 
    15 LINE2-3 char(19) ; 
    15 LINE2-4 char(29) ; 
    15 LINE2-5 char(34) ; 
end // end AIF30W-SUBH

Record AIF30W2 type basicRecord
  10 WS-DATE-TS char(26) ; 
    15 WS-DATE char(10) ; 
      20 WS-CCYY char(4) ; 
      20 WS-DASH1 char(1) ; 
      20 WS-MM char(2) ; 
      20 WS-DASH2 char(1) ; 
      20 WS-DD char(2) ; 
    15 WS-DASH3 char(1) ; 
    15 WS-TIME char(15) ; 
  10 WS-PRN-DATE char(10) ; 
    15 WS-PRN-MM char(2) ; 
    15 WS-PRN-DASH1 char(1) ; 
    15 WS-PRN-DD char(2) ; 
    15 WS-PRN-DASH2 char(1) ; 
    15 WS-PRN-CCYY char(4) ; 
  10 WS-AMOUNT decimal(9,2) ; 
  10 WS-COUNT int ; 
  10 WS-NUMB int ; 
  10 WS-OUTPUT1 char(13) ; 
    15 WS-OUTPUT1A char(2) ; 
    15 WS-FLR1 char(1) ; 
    15 WS-OUTPUT1B char(10) ; 
  10 WS-OUTPUT2 char(13) ; 
    15 WS-FLR2 char(1) ; 
    15 WS-OUTPUT2A char(2) ; 
    15 WS-OUTPUT2B char(10) ; 
end // end AIF30W2