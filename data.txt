/**
	 * This method creates and inserts records into T1001_SS_APP_MPE staging
	 * table
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1001SSAppMpeCollection
	 * @throws Exception
	 */
	private T1001SsAppMpeCollection buildT1001SSAppMpe(Element root) throws Exception {

		T1001SSAppMpeCargo t0001MpeCargo = null;
		T1001SsAppMpeCollection t0001MpeColl = null;
		String appNum = null;
		String exptDlvrDt = null;

		try {
			t0001MpeCargo = new T1001SSAppMpeCargo();
			t0001MpeColl = (conn == null) ? new T1001SsAppMpeCollection() : new T1001SsAppMpeCollection(conn);
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			t0001MpeCargo.setAppNum(appNum);
			t0001MpeCargo.setAppType(root.getChildTextTrim("APP_TYPE"));
			t0001MpeCargo.setIndvSeqNum(getLongForString(INDV_SEQ_NUM));
			t0001MpeCargo.setPrvdSignInd(getCharForString(root.getChildTextTrim("PROVIDER_SIGNATURE")));
			t0001MpeCargo.setClntSignInd(getCharForString(root.getChildTextTrim("CLIENT_SIGNATURE")));
			t0001MpeCargo.setPrvdId(getLongForString(root.getChildTextTrim("PROVIDER_ID")));
			// PREV_MPE_CVGE_SW
			t0001MpeCargo.setPrevMpeCvgeSw(getCharForString(root.getChildTextTrim("PREV_MPE_CVGE_SW")));
			Element applicantInfo = root.getChild("APPLICANT_INFO");
			if (applicantInfo != null && applicantInfo.getChildren().size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1001SSAppMpe method");
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

				t0001MpeCargo.setClntFstNam(applicantInfo.getChildTextTrim("CLIENT_FIRST_NAME"));
				t0001MpeCargo.setClntLastNam(applicantInfo.getChildTextTrim("CLIENT_LAST_NAME"));
				t0001MpeCargo.setClntMidInit(getCharForString(applicantInfo.getChildTextTrim("CLIENT_MIDDLE_INITIAL")));
				t0001MpeCargo.setHshlMbrQty(getLongForString(applicantInfo.getChildTextTrim("HOUSEHOLD_MEMBERS_COUNT")));
				t0001MpeCargo.setInterestInSnapSw(getCharForString(applicantInfo.getChildTextTrim("APPLICATION_SNAP_SW")));
				t0001MpeCargo.setPosPrefTestInd(getCharForString(applicantInfo.getChildTextTrim("PREG_TEST_SW")));
				t0001MpeCargo.setFetusCt(getLongForString(applicantInfo.getChildTextTrim("UNBORN_BABY_COUNT")));
				exptDlvrDt = applicantInfo.getChildTextTrim("EXPECTED_DELIVERY_DT");
				if (exptDlvrDt != null && exptDlvrDt.trim().length() > 0) {
					t0001MpeCargo.setExptDlvrDt((new Timestamp(sdf.parse(exptDlvrDt).getTime())));
				}
				t0001MpeCargo.setMoGrEiAmt(getDoubleForString(applicantInfo.getChildTextTrim("MONTHLY_GROSS_EARNEDINCOME_AMT")));
				t0001MpeCargo.setMoGrUeiAmt(getDoubleForString(applicantInfo.getChildTextTrim("MONTHLY_GROSS_UNEARNEDINCOME_AMT")));
				t0001MpeCargo.setMoCsPymtAmt(getDoubleForString(applicantInfo.getChildTextTrim("MONTHLY_DEDUCTION_AMT")));
				t0001MpeCargo.setMoNetIncAmt((t0001MpeCargo.getMoGrEiAmt() + t0001MpeCargo.getMoGrUeiAmt()) - t0001MpeCargo.getMoCsPymtAmt());
				t0001MpeCargo.setAppBeginDt((new Timestamp(sdf.parse(applicantInfo.getChildTextTrim("APP_START_DT")).getTime())));
				t0001MpeCargo.setAppEndDt((new Timestamp(sdf.parse(applicantInfo.getChildTextTrim("APP_END_DT")).getTime())));
				t0001MpeCargo.setSsAppMpeSeqNum(getLongForString(INDV_SEQ_NUM));
				t0001MpeColl.setCargo(t0001MpeCargo);
				if (t0001MpeColl.size() > 0)
					t0001MpeColl.insert();
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1001SSAppMpe method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1001SSAppMpe method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1001SSAppMpe method");
		return t0001MpeColl;
	}


	/**
	 * The <code>buildT1002AppDtl</code> constructs the T1002AppDtl
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1002AppDtlCollection - T1002AppDtlCollection
	 */
	private T1002AppDtlCollection buildT1002AppDtl(Element root) throws Exception {
		T1002AppDtlCargo appDtlCargo = null;
		T1002AppDtlCollection appDtlColl = null;
		String fpwRqstInd = null;
		String fppRqst = null;
		String fsRqstInd = null;
		String seRqstInd = null;
		String homeLessSw = null;
		String ipMidInit = null;
		StringBuffer completeAddr = new StringBuffer();
		String strMCInd = null;
		String vulSw = null;
		try {
			log(ILog.DEBUG, "entered in to SelfServiceAppRegBO.buildT1002AppDtl method");
			appDtlCargo = new T1002AppDtlCargo();
			appDtlCargo.setAppNum(appNum);
			fpwRqstInd = root.getChildTextTrim("FPW_RQST_SW");
			appDtlCargo.setFpwRqstSw(getCharForString(fpwRqstInd));
			fppRqst = root.getChildTextTrim("FPP_RQST_SW");
			appDtlCargo.setFppRqstSw(getCharForString(fppRqst));
			
			vulSw = root.getChildTextTrim("VULNERABLE_SW");
			System.out.println("VULNERABLE_SW--buildT1002AppDtl -- selfserviceAppRegBo"+vulSw);
			if(vulSw != null && vulSw.length()>0){
				appDtlCargo.setVulnerableSw(getCharForString(vulSw));
			}else {
				appDtlCargo.setVulnerableSw(' ');
			}
			
			appDtlCargo.setFpwFileDt(getFpwFileDt(appDtlCargo.getFpwRqstSw()));
			fsRqstInd = root.getChildTextTrim("FS_RQST_SW");
			appDtlCargo.setFsRqstSw(getCharForString(fsRqstInd));
			appDtlCargo.setFsFileDt(getFpwFileDt(appDtlCargo.getFsRqstSw()));
			seRqstInd = root.getChildTextTrim("SE_RQST_SW");
			appDtlCargo.setSeRqstSw(getCharForString(seRqstInd));
			strMCInd = root.getChildTextTrim("MEDICARE_RQST_SW");
			appDtlCargo.setMcRqstSw(getCharForString(strMCInd));

			if (DATA_NO.equalsIgnoreCase(seRqstInd)) {
				seRqstInd = root.getChildTextTrim("SER_BURRIAL_RQST_SW");
				if (DATA_YES.equalsIgnoreCase(seRqstInd))
					appDtlCargo.setSeRqstSw(getCharForString(seRqstInd));
			}

			appDtlCargo.setFuelTypeCd("8");
			if (appDtlCargo.getSeRqstSw() == 'Y') {
				this.isSerCase = true;
				String householdFuelType = "";
				householdFuelType = StSerServiceMapping.getBridgesFuelType(getFuelTypeForApp(root));
				appDtlCargo.setFuelTypeCd(householdFuelType);
				if ("1".equals(householdFuelType) || "2".equals(householdFuelType) || "9".equals(householdFuelType)) {
					deliverableFuel = false;
				} else {
					deliverableFuel = true;
				}
			}
			appDtlCargo.setAppFileDt(getAppFileDt(appDtlCargo.getFpwFileDt(), appDtlCargo.getFsFileDt()));
			appFileDt = appDtlCargo.getAppFileDt();
			homeLessSw = root.getChildText("HLESS_SW");
			appDtlCargo.setHlessSw(getCharForString(homeLessSw));
			if (appDtlCargo.getHlessSw() != 'Y') {
				appDtlCargo.setHlessSw('N');
			}
			String line1 = getString(root.getChildTextTrim("HSHL_ST_ADR"));
			String line2 = getString(root.getChildTextTrim("HSHL_L2_ADR"));
			completeAddr.append(line1);
			completeAddr.append(" ");
			completeAddr.append(line2);
			if (completeAddr.length() > 50) {
				appDtlCargo.setHshlStAdr(line1);
				appDtlCargo.setHshlL2Adr(line2);
			} else {
				appDtlCargo.setHshlStAdr(completeAddr.toString());
				appDtlCargo.setHshlL2Adr(" ");
			}
			appDtlCargo.setHshlStaAdr(getString(root.getChildTextTrim("HSHL_STA_ADR")));
			appDtlCargo.setHshlCityAdr(getString(root.getChildTextTrim("HSHL_CITY_ADR")));
			if (appDtlCargo.getHshlZipAdr() != null && appDtlCargo.getHshlZipAdr().length() > 9) {
				appDtlCargo.setHshlZipAdr(appDtlCargo.getHshlZipAdr().trim().substring(0, 9));
			} else {
				appDtlCargo.setHshlZipAdr(getString(root.getChildTextTrim("HSHL_ZIP_ADR")));
			}
			appDtlCargo.setIpFstNam(getString(root.getChildTextTrim("FST_NAM")));
			appDtlCargo.setIpLastNam(getString(root.getChildTextTrim("LAST_NAM")));
			appDtlCargo.setIpMidInit(getString(root.getChildText("MID_INIT")));
			appDtlCargo.setHshlPhnNum(getString(root.getChildText("HSHL_PHN_NUM")));
			if (appDtlCargo.getHshlPhnNum() != null && appDtlCargo.getHshlPhnNum().length() > 10) {
				appDtlCargo.setHshlPhnNum(appDtlCargo.getHshlPhnNum().trim().substring(0, 10));
			}
			appDtlCargo.setHshlCellPhnNum(getString(root.getChildText("HSHL_CELL_PHN_NUM")));
			appDtlCargo.setHshlEmailAdr(getString(root.getChildText("HSHL_EMAIL_ADR")));
			appDtlCargo.setHshlWorkPhnNum(getString(root.getChildText("HSHL_WORK_PHN_NUM")));
			if (appDtlCargo.getHshlWorkPhnNum() != null && appDtlCargo.getHshlWorkPhnNum().length() > 10) {
				appDtlCargo.setHshlWorkPhnNum(appDtlCargo.getHshlWorkPhnNum().trim().substring(0, 10));
			}
			appDtlCargo.setMsgPhnExtnNum(getString(root.getChildText("MSG_PHN_EXTN_NUM")));
			appDtlCargo.setMsgPhnNum(getString(root.getChildText("MSG_PHN_NUM")));

			if ("MI".equals(appDtlCargo.getHshlStaAdr())) {
				String cntyNumStr = root.getChildTextTrim("CNTY_NUM");
				appDtlCargo.setHshlUnitAdr(cntyNumStr); 
			} else {
				appDtlCargo.setHshlUnitAdr("NM"); 
			}
			appDtlCargo.setPrefCntcInd(getIntForString(root.getChildText("PREF_CNTC_IND")));
			appDtlCargo.setPrefCntcTmTxt(getString(root.getChildText("PREF_CNTC_TM_TXT")));
			appDtlCargo.setWorkPhnExtnNum(getString(root.getChildText("WORK_PHN_EXTN_NUM")));
			if (null != root.getChildText("INTRVW_RESP")) {
				appDtlCargo.setIntrvwModeInd(getCharForString(root.getChildText("INTRVW_RESP")));
			}
			appDtlCargo.setPhnNumTyp(getString(root.getChildText("PHN_NUM_TYP")));
			//ILIES-273090 - setting values for phone for txt rem & valid phone num code in T1002_APP_DTLS 
			if (getString(root.getChildText("PHN_TXT_TYP_CD")) != null &&  getString(root.getChildText("PHN_TXT_TYP_CD")).trim().length() > 0) {
				appDtlCargo.setPhnTxtTypCd(getString(root.getChildText("PHN_TXT_TYP_CD")));
			}
			if (getString(root.getChildText("VAL_PHN_NUM_CD")) != null &&  getString(root.getChildText("VAL_PHN_NUM_CD")).trim().length() > 0) {
				appDtlCargo.setValPhnNumCd(getString(root.getChildText("VAL_PHN_NUM_CD")));
			}
			appDtlCargo.setMichildId(getIntForString(root.getChildText("MI_CHILD_REFERRAL_CD")));
			appDtlCargo.setCashRqstSw(getCharForString(root.getChildText("CASH_RQST_SW")));
			appDtlCargo.setMaBackdtMo1Ind(getLongForString(root.getChildText("MA_BACKDT_MO_1_IND")));
			appDtlCargo.setMaBackdtMo2Ind(getLongForString(root.getChildText("MA_BACKDT_MO_2_IND")));
			appDtlCargo.setMaBackdtMo3Ind(getLongForString(root.getChildText("MA_BACKDT_MO_3_IND")));
			maShortFormCd = getString(root.getChildText("MA_SHORT_FORM_CD"));
			appDtlCargo.setMaShortFormCd(maShortFormCd);
			appDtlCargo.setMaRqstSw(getCharForString(root.getChildText("FMA_RQST_SW")));
			appDtlCargo.setEmerMaSw('N');
			appDtlCargo.setAgcyNum(0);
			appDtlCargo.setMaFileDt(highDate);
			appDtlCargo.setRtroMaResp('N');
			appDtlCargo.setSignIndvTyp(" ");
			appDtlCargo.setSpsSignInd(0);
			appDtlCargo.setTbMaSw('N');
			appDtlCargo.setHshlAptAdr(" ");
			appDtlCargo.setHshlDirAdr(" ");
			appDtlCargo.setHshlNumAdr(" ");
			appDtlCargo.setHshlSfxAdr(" ");
			appDtlCargo.setHshlSfxDirAdr(" ");
			appDtlCargo.setIpResSw('Y');
			appDtlCargo.setIpRltCd(" ");
			appDtlCargo.setIpSfxNam(" ");
			appDtlCargo.setOnlnScrnrResp(' ');
			appDtlCargo.setRgnNum(0);
			appDtlCargo.setCmtTxt(" ");
			appDtlCargo.setAppSrcCd("AF");
			appDtlCargo.setCaseNum(0);
			appDtlCargo.setRfaNum(0);
			appDtlCargo.setCnssTrctNum(0);
			appDtlCargo.setAddrTypeInd("PA");
			appDtlColl = (conn == null) ? new T1002AppDtlCollection() : new T1002AppDtlCollection(conn);
			appDtlColl.setCargo(appDtlCargo);
		} catch (NullPointerException e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1002AppDtl method : " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1002AppDtl method : " + e.getMessage(),e);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1002AppDtl method : " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1002AppDtl method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting from SelfServiceAppRegBO.buildT1002AppDtl method");
		return appDtlColl;
	}

	/**
	 * The <code>buildT1002AppDtlForMpe</code> constructs the T1002AppDtl
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1002AppDtlCollection - T1002AppDtlCollection
	 */
	private T1002AppDtlCollection buildT1002AppDtlForMpe(Element root) throws Exception {

		T1002AppDtlCargo appDtlCargo = null;
		T1002AppDtlCollection appDtlColl = null;
		String appNum = null;
		String fileDt = "4900-01-31 00:00:00.0";
		SimpleDateFormat sdf = null;
		StringBuffer completeAddr = new StringBuffer();
		try {
			log(ILog.DEBUG, "entered in to SelfServiceAppRegBO.buildT1002AppDtlForMpe method");
			appDtlCargo = new T1002AppDtlCargo();
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			appDtlCargo.setAppNum(appNum);
			Element appContact = root.getChild("APPLICANT_INFO");
			if (appContact != null && appContact.getChildren().size() > 0) {
				String line1 = getString(appContact.getChildTextTrim("ADDR_LINE1"));
				String line2 = getString(appContact.getChildTextTrim("ADDR_LINE2"));
				completeAddr.append(line1);
				completeAddr.append(" ");
				completeAddr.append(line2);
				if (completeAddr.length() > 50) {
					appDtlCargo.setHshlStAdr(line1);
					appDtlCargo.setHshlL2Adr(line2);
				} else {
					appDtlCargo.setHshlStAdr(completeAddr.toString());
					appDtlCargo.setHshlL2Adr(" ");
				}
				appDtlCargo.setHshlStaAdr(getString(appContact.getChildTextTrim("ADDR_STATE")));
				appDtlCargo.setHshlCityAdr(getString(appContact.getChildTextTrim("ADDR_CITY")));
				if (appDtlCargo.getHshlZipAdr() != null && appDtlCargo.getHshlZipAdr().length() > 9) {
					appDtlCargo.setHshlZipAdr(appDtlCargo.getHshlZipAdr().trim().substring(0, 9));
				} else {
					appDtlCargo.setHshlZipAdr(getString(appContact.getChildTextTrim("ADDR_ZIP")));
				}
				appDtlCargo.setHshlPhnNum(getString(appContact.getChildText("ADDR_HOMEPHONE")));

				if (appDtlCargo.getHshlPhnNum() != null && appDtlCargo.getHshlPhnNum().length() > 10) {
					appDtlCargo.setHshlPhnNum(appDtlCargo.getHshlPhnNum().trim().substring(0, 10));
				}
				appDtlCargo.setHshlWorkPhnNum(getString(appContact.getChildText("ADDR_WORKPHONE")));

				if (appDtlCargo.getHshlWorkPhnNum() != null && appDtlCargo.getHshlWorkPhnNum().length() > 10) {
					appDtlCargo.setHshlWorkPhnNum(appDtlCargo.getHshlWorkPhnNum().trim().substring(0, 10));
				}
				appDtlCargo.setWorkPhnExtnNum(getString(appContact.getChildText("ADDR_WORKPHONE_EXT")));
				appDtlCargo.setHshlCellPhnNum(getString(appContact.getChildText("ADDR_CELLPHONE")));
				appDtlCargo.setHshlEmailAdr(getString(appContact.getChildText("ADDR_EMAIL")));
				appDtlCargo.setHshlUnitAdr(getString(appContact.getChildText("ADDR_COUNTYNUM")));
				if(appContact.getChildTextTrim("ADDR_PREF_CONTACT") != null && appContact.getChildTextTrim("ADDR_PREF_CONTACT").trim().length()>0){
				appDtlCargo.setPrefCntcInd(getIntForString(appContact.getChildTextTrim("ADDR_PREF_CONTACT")));
				}
				if(appContact.getChildTextTrim("ADDR_PREF_CONTACT_TIME") != null && appContact.getChildTextTrim("ADDR_PREF_CONTACT_TIME").trim().length()>0){
				appDtlCargo.setPrefCntcTmTxt(getString(appContact.getChildTextTrim("ADDR_PREF_CONTACT_TIME")));
				}
				if (getString(appContact.getChildText("ADDR_MSGPHONE")) != null) {
					appDtlCargo.setMsgPhnNum(getString(appContact.getChildText("ADDR_MSGPHONE")));
				} else {
					appDtlCargo.setMsgPhnNum(" ");
				}
				if (getString(appContact.getChildText("ADDR_MSGPHONE_EXT")) != null) {
					appDtlCargo.setMsgPhnExtnNum(getString(appContact.getChildText("ADDR_MSGPHONE_EXT")));
				} else {
					appDtlCargo.setMsgPhnExtnNum(getString(" "));
				}
			}
			if (fileDt != null && fileDt.trim().length() > 0) {
				sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				appDtlCargo.setFpwFileDt(new Timestamp(sdf.parse(fileDt).getTime()));
				appDtlCargo.setMaFileDt(new Timestamp(sdf.parse(fileDt).getTime()));
			}
			
			if (getString(appContact.getChildText("PHN_TXT_TYP_CD")) != null &&  getString(appContact.getChildText("PHN_TXT_TYP_CD")).trim().length() > 0) {
				appDtlCargo.setPhnTxtTypCd(getString(appContact.getChildText("PHN_TXT_TYP_CD")));
			}
			
			if (getString(appContact.getChildText("VAL_PHN_NUM_CD")) != null &&  getString(appContact.getChildText("VAL_PHN_NUM_CD")).trim().length() > 0) {
				appDtlCargo.setValPhnNumCd(getString(appContact.getChildText("VAL_PHN_NUM_CD")));
			}
			
			appDtlCargo.setFpwRqstSw('N');
			appDtlCargo.setFsRqstSw('N');
			appDtlCargo.setFsFileDt(getFpwFileDt(appDtlCargo.getFsRqstSw()));
			appDtlCargo.setSeRqstSw('N');
			appDtlCargo.setFuelTypeCd("8");
			appDtlCargo.setAppFileDt(getAppFileDt(appDtlCargo.getFpwFileDt(), appDtlCargo.getFsFileDt()));
			if (appDtlCargo.getHshlStAdr() != null) {
				appDtlCargo.setHlessSw('N');
			} else {
				appDtlCargo.setHlessSw('Y');
			}

			appDtlCargo.setIpFstNam(getString(" "));
			appDtlCargo.setIpLastNam(getString(" "));
			appDtlCargo.setIpMidInit(getString(" "));
			if(appContact.getChildTextTrim("ADDR_PREF_CONTACT") == null || appContact.getChildTextTrim("ADDR_PREF_CONTACT").trim().length()<=0){
			appDtlCargo.setPrefCntcInd(getIntForString(" "));
			}
			if(appContact.getChildTextTrim("ADDR_PREF_CONTACT_TIME") == null || appContact.getChildTextTrim("ADDR_PREF_CONTACT_TIME").trim().length()<=0){
			appDtlCargo.setPrefCntcTmTxt(getString(" "));
			}
			appDtlCargo.setMichildId(getIntForString(" "));
			appDtlCargo.setCashRqstSw(getCharForString(" "));
			appDtlCargo.setMaBackdtMo1Ind(0);
			appDtlCargo.setMaBackdtMo2Ind(0);
			appDtlCargo.setMaBackdtMo3Ind(0);
			appDtlCargo.setMaRqstSw(getCharForString(" "));
			appDtlCargo.setEmerMaSw('N');
			appDtlCargo.setAgcyNum(0);
			appDtlCargo.setPhnNumTyp(" ");
			appDtlCargo.setRtroMaResp('N');
			appDtlCargo.setSignIndvTyp(" ");
			appDtlCargo.setSpsSignInd(0);
			appDtlCargo.setTbMaSw('N');
			appDtlCargo.setHshlAptAdr(" ");
			appDtlCargo.setHshlDirAdr(" ");
			appDtlCargo.setHshlNumAdr(" ");
			appDtlCargo.setHshlSfxAdr(" ");
			appDtlCargo.setHshlSfxDirAdr(" ");
			appDtlCargo.setIpResSw('Y');
			appDtlCargo.setIpRltCd(" ");
			appDtlCargo.setIpSfxNam(" ");
			appDtlCargo.setOnlnScrnrResp(' ');
			appDtlCargo.setRgnNum(0);
			appDtlCargo.setCmtTxt(" ");
			appDtlCargo.setAppSrcCd("MP");
			appDtlCargo.setCaseNum(0);
			appDtlCargo.setRfaNum(0);
			appDtlCargo.setCnssTrctNum(0);
			appDtlCargo.setAddrTypeInd("PA");
			appDtlCargo.setMcRqstSw('N');
			appDtlColl = (conn == null) ? new T1002AppDtlCollection() : new T1002AppDtlCollection(conn);
			appDtlColl.setCargo(appDtlCargo);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1002AppDtlForMpe method : " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1002AppDtlForMpe method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting from SelfServiceAppRegBO.buildT1002AppDtlForMpe method");
		return appDtlColl;
	}

	/**
	 * The <code>buildT1031AppMailAdr</code> constructs the T1031AppMailAdr
	 * 
	 * @param root
	 *            - Element Object
	 * @throws SelfServiceApplicationException
	 */
	private void buildT1031AppMailAdr(Element root) throws SelfServiceApplicationException {
		T1031AppMailAdrCargo appMailingAddrCargo = null;
		T1031AppMailAdrCollection appMailingAddrColl = null;
		log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1031AppMailAdr method");
		appMailingAddrCargo = new T1031AppMailAdrCargo();
		try {
			if (root.getChildTextTrim("CITY_ADR").trim().length() > 0 || root.getChildTextTrim("ST_ADR").trim().length() > 0 || root.getChildTextTrim("L2_ADR").trim().length() > 0
					|| root.getChildTextTrim("ZIP_ADR").trim().length() > 0) {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildT1031AppMailAdr method mailing address exists: ");
				appMailingAddrCargo.setAppNum(appNum);
				appMailingAddrCargo.setAddrTypeInd("MA");
				appMailingAddrCargo.setAddRecInd('R');
				appMailingAddrCargo.setAptAdr(getString(root.getChildTextTrim("APT_ADR")));
				appMailingAddrCargo.setCityAdr(getString(root.getChildTextTrim("CITY_ADR")));
				appMailingAddrCargo.setDirAdr(getString(root.getChildTextTrim("DIR_ADR")));
				appMailingAddrCargo.setNumAdr(getString(root.getChildTextTrim("NUM_ADR")));
				appMailingAddrCargo.setSfxAdr(getString(root.getChildTextTrim("SFX_ADR")));
				appMailingAddrCargo.setStAdr(getString(root.getChildTextTrim("ST_ADR")));
				appMailingAddrCargo.setStaAdr(getString(root.getChildTextTrim("STA_ADR")));
				appMailingAddrCargo.setUnitAdr(getString(root.getChildTextTrim("UNIT_ADR")));
				appMailingAddrCargo.setZipAdr(getString(root.getChildTextTrim("ZIP_ADR"))); 
				if (appMailingAddrCargo.getZipAdr().length() > 9) {
					appMailingAddrCargo.setZipAdr(appMailingAddrCargo.getZipAdr().substring(0, 9));
				}
				appMailingAddrCargo.setL2Adr(getString(root.getChildTextTrim("L2_ADR")));
				appMailingAddrCargo.setSfxDirAdr(getString(root.getChildTextTrim("SFX_DIR_ADR")));
				String cntyNumStr = root.getChildTextTrim("CNTY_NUM");
				if ("MI".equals(appMailingAddrCargo.getStaAdr())) {
					if (cntyNumStr != null) {
						appMailingAddrCargo.setCntyNum((Long.parseLong(cntyNumStr)));
					}
					appMailingAddrCargo.setUnitAdr(cntyNumStr); 
				} else {
					appMailingAddrCargo.setUnitAdr("NM"); 
					if (cntyNumStr != null) {
						appMailingAddrCargo.setCntyNum((Long.parseLong(cntyNumStr)));
					} 
				}
				appMailingAddrColl = (conn == null) ? new T1031AppMailAdrCollection() : new T1031AppMailAdrCollection(conn);
				appMailingAddrColl.setCargo(appMailingAddrCargo);
				appMailingAddrColl.insert();
			}
		} catch (ApplicationException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error:" + e.getMessage(), e);
			throw new SelfServiceApplicationException("exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error: " + e.getMessage(),e);
		} catch (FrameworkException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error:" + e.getMessage(), e);
			throw new SelfServiceApplicationException("exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error: " + e.getMessage(),e);
		} catch (Exception e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error: " + e.getMessage(), e);
			throw new SelfServiceApplicationException("exception in SelfServiceAppRegBO.buildT1031AppMailAdr method : error: " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1031AppMailAdr method");
	}

	/**
	 * The <code>buildT1031AppMailAdrForMpe</code> constructs the
	 * T1031AppMailAdr
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1031AppMailAdrCollection - T1031AppMailAdrCollection
	 */
	private T1031AppMailAdrCollection buildT1031AppMailAdrForMpe(Element root) throws Exception {

		T1031AppMailAdrCargo appMailAdrCargo = null;
		T1031AppMailAdrCollection appMailAdrColl = null;
		String appNum = null;
		StringBuffer completeAddr = new StringBuffer();
		try {
			log(ILog.DEBUG, "entered in to SelfServiceAppRegBO.buildT1031AppMailAdrForMpe method");
			appMailAdrCargo = new T1031AppMailAdrCargo();
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			appMailAdrCargo.setAppNum(appNum);
			Element appContact = root.getChild("APPLICANT_INFO");
			if (appContact != null && appContact.getChildren().size() > 0) {
				if (getString(appContact.getChildTextTrim("M_ADDR_LINE1")).trim().length() > 0 || getString(appContact.getChildTextTrim("M_ADDR_LINE2")).trim().length() > 0
						|| getString(appContact.getChildTextTrim("M_ADDR_CITY")).trim().length() > 0 || getString(appContact.getChildTextTrim("M_ADDR_ZIP")).trim().length() > 0) {

					String line1 = getString(appContact.getChildTextTrim("M_ADDR_LINE1"));
					String line2 = getString(appContact.getChildTextTrim("M_ADDR_LINE2"));
					completeAddr.append(line1);
					completeAddr.append(" ");
					completeAddr.append(line2);
					if (completeAddr.length() > 50) {
						appMailAdrCargo.setStAdr(line1);
						appMailAdrCargo.setL2Adr(line2);
					} else {
						appMailAdrCargo.setStAdr(completeAddr.toString());
						appMailAdrCargo.setL2Adr(" ");
					}
					appMailAdrCargo.setStaAdr(getString(appContact.getChildTextTrim("M_ADDR_STATE")));
					appMailAdrCargo.setCityAdr(getString(appContact.getChildTextTrim("M_ADDR_CITY")));
					if (appMailAdrCargo.getZipAdr() != null && appMailAdrCargo.getZipAdr().length() > 9) {
						appMailAdrCargo.setZipAdr(appMailAdrCargo.getZipAdr().trim().substring(0, 9));
					} else {
						appMailAdrCargo.setZipAdr(getString(appContact.getChildTextTrim("M_ADDR_ZIP")));
					}
					appMailAdrCargo.setAddRecInd('R');// defaulted to 'R', its
					appMailAdrCargo.setAddrTypeInd("MA");
					appMailAdrCargo.setAptAdr(getString(appContact.getChildTextTrim("M_APT_ADR")));
					appMailAdrCargo.setDirAdr(getString(appContact.getChildTextTrim("M_DIR_ADR")));
					appMailAdrCargo.setNumAdr(getString(appContact.getChildTextTrim("M_NUM_ADR")));
					appMailAdrCargo.setSfxAdr(getString(appContact.getChildTextTrim("M_SFX_ADR")));
					appMailAdrCargo.setUnitAdr(getString(appContact.getChildTextTrim("M_UNIT_ADR")));
					appMailAdrCargo.setSfxDirAdr(getString(appContact.getChildTextTrim("M_SFX_DIR_ADR")));
					appMailAdrCargo.setUnitAdr("NM"); // not a michigan
					appMailAdrCargo.setCntyNum((Long.parseLong("0")));

					appMailAdrColl = (conn == null) ? new T1031AppMailAdrCollection() : new T1031AppMailAdrCollection(conn);
					appMailAdrColl.setCargo(appMailAdrCargo);
				}
			}

		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1031AppMailAdrForMpe method : " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1031AppMailAdrForMpe method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting from SelfServiceAppRegBO.buildT1031AppMailAdrForMpe method");
		return appMailAdrColl;
	}

	/**
	 * The <code>buildT1003AppPrirSrv</code> constructs T1003AppPrirSrv
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1003AppPrirSrvCollection - T1003AppPrirSrvCollection
	 * @throws Exception
	 */
	private T1003AppPrirSrvCollection buildT1003AppPrirSrv(Element root) throws Exception {
		T1003AppPrirSrvCargo appPrirSrvCargo = null;
		T1003AppPrirSrvCollection appPrirSrvColl = null;
		T1001AppRqstCollection appRqstCollection = null;
		double contblIncm = 0;
		double childSprtIncm = 0;
		double mnthlyGrsIncm = 0;
		int numOfUtilitiesSltd = 0;
		
		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1003AppPrirSrv method");
			appPrirSrvCargo = new T1003AppPrirSrvCargo();
			appPrirSrvCargo.setAppNum(appNum);
			appPrirSrvCargo.setIncmStopSw(this.getCharForString(root.getChildText("INCM_STOP_SW")));
			appPrirSrvCargo.setLqdAsetAmt(getDoubleForString(root.getChildTextTrim("LQD_ASET_AMT")));
			if (getIntForString(root.getChildTextTrim("LQD_ASET_IND")) == 0) {
				appPrirSrvCargo.setLqdAsetAmtInd(1);
			} else {
				appPrirSrvCargo.setLqdAsetAmtInd(2);
			}
			appPrirSrvCargo.setMigFarmWrkrSw(this.getCharForString(root.getChildText("MIG_FARM_WRKR_SW")));
			if(root != null && root.getChildTextTrim("MO_GR_INCM_AMT") != null){
				mnthlyGrsIncm = getDoubleForString(root.getChildTextTrim("MO_GR_INCM_AMT"));
				appPrirSrvCargo.setMoGrIncmAmt(mnthlyGrsIncm);
			}
			
			//ILIES-253773 changes start here
			appPrirSrvCargo.setLiheapReceiveSw(this.getCharForString(root.getChildText("LIHEAP_RECEIVE_SW")));
			if(root != null && root.getChildTextTrim("CHILD_SPRT_AMT") != null){
				childSprtIncm = getDoubleForString(root.getChildTextTrim("CHILD_SPRT_AMT"));
				appPrirSrvCargo.setChildSprtAmt(childSprtIncm);
			}
			if(root != null && root.getChildTextTrim("CHILD_SPRT_AMT_IND") != null){
				if (getIntForString(root.getChildTextTrim("CHILD_SPRT_AMT_IND")) == 0) {
					appPrirSrvCargo.setChildSprtAmtInd(1);
				} else {
					appPrirSrvCargo.setChildSprtAmtInd(2);
				}
			}
			if(mnthlyGrsIncm > childSprtIncm){
				contblIncm = mnthlyGrsIncm - childSprtIncm;
			}
			// ILIES-253773 changes end here
			//As a part of ILIES-253773 replaced the montly gross income with countable income
			//if (appPrirSrvCargo.getLqdAsetAmt() <= 100 && appPrirSrvCargo.getMoGrIncmAmt() < 150) {
			if (appPrirSrvCargo.getLqdAsetAmt() <= 100 && contblIncm < 150) {
				isExpidtedFAP = true;
			}
			if (getIntForString(root.getChildTextTrim("MO_GR_INCM_IND")) == 0) {
				appPrirSrvCargo.setMoGrIncmAmtInd(1);
			} else {
				appPrirSrvCargo.setMoGrIncmAmtInd(2);
			}
		
			appPrirSrvCargo.setMoRentMrtgAmt(getDoubleForString(root.getChildTextTrim("MO_RENT_MRTG_AMT")));
			if (getIntForString(root.getChildTextTrim("MO_RENT_MRTG")) == 0) {
				appPrirSrvCargo.setMoRentMrtgAInd(1);
			} else {
				appPrirSrvCargo.setMoRentMrtgAInd(2);
			}
			appPrirSrvCargo.setMoUtilAmt(getDoubleForString(root.getChildTextTrim("MO_UTIL_AMT")));

			if (getIntForString(root.getChildTextTrim("MO_UTIL_IND")) == 0) {
				appPrirSrvCargo.setMoUtilAmtInd(1);
			} else {
				appPrirSrvCargo.setMoUtilAmtInd(2);
			}
			appPrirSrvCargo.setNewIncmSw(this.getCharForString(root.getChildText("NEW_INCM_SW")));
			appPrirSrvCargo.setPrirSrvcDterDt(highDate);
			double otherUtilitiesExpense = 0.0;
			appPrirSrvCargo.setNonHeatEleExp(root.getChildText("NON_HEAT_ELE_EXP"));
			if (StringUtils.isNotEmpty(appPrirSrvCargo.getNonHeatEleExp())) {
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setTrashRemovalExp(root.getChildText("TRASH_REMOVAL_EXP"));
			if (StringUtils.isNotEmpty(appPrirSrvCargo.getTrashRemovalExp())) {
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setCookFuelExp(root.getChildText("COOK_FUEL_EXP"));
			if (StringUtils.isNotEmpty(appPrirSrvCargo.getCookFuelExp())) {
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setWatsewExp(root.getChildText("WATSEW_EXP"));
			if (StringUtils.isNotEmpty(appPrirSrvCargo.getWatsewExp())) {
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setTeleExp(root.getChildText("TELE_EXP"));
			if (StringUtils.isNotEmpty(appPrirSrvCargo.getTeleExp())) {
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setHeatUtilityExp(root.getChildText("HEAT_UTILITY_EXP"));
			appPrirSrvCargo.setUtilInstlResp(root.getChildText("UTIL_INSTL_RESP"));
			if(appPrirSrvCargo.getUtilInstlResp() != null && StringUtils.isNotEmpty(appPrirSrvCargo.getUtilInstlResp())){
				numOfUtilitiesSltd++;
			}
			appPrirSrvCargo.setSepticInstlResp(root.getChildText("SEPTIC_INSTL_RESP"));
			if(appPrirSrvCargo.getSepticInstlResp() != null && StringUtils.isNotEmpty(appPrirSrvCargo.getSepticInstlResp())){
				numOfUtilitiesSltd++;
			}
			PMDRules.markApprovedStatement("R2");
			if(appPrirSrvCargo.getLiheapReceiveSw() != '\u0000' && appPrirSrvCargo.getLiheapReceiveSw() != ' ' && ('Y' == appPrirSrvCargo.getLiheapReceiveSw())){
				otherUtilitiesExpense = Double.parseDouble(ReferenceTableManager.getValueByColumn(true, "EDFINPARMS", "FINHEATUTILITYEXP", "FINPARAMETERS"));
			}else{
				if(appPrirSrvCargo.getHeatUtilityExp() != null && StringUtils.isNotEmpty(appPrirSrvCargo.getHeatUtilityExp())){
					otherUtilitiesExpense = Double.parseDouble(ReferenceTableManager.getValueByColumn(true, "EDFINPARMS", "FINHEATUTILITYEXP", "FINPARAMETERS"));
				}else{
					if(numOfUtilitiesSltd >1){
						//Limited Utility Expense
						otherUtilitiesExpense = Double.parseDouble(ReferenceTableManager.getValueByColumn(true, "EDFINPARMS", "LIMITEDUTILITYSTD", "FINPARAMETERS"));
					}else{
						PMDRules.markApprovedStatement("R2");
						if(numOfUtilitiesSltd == 1){
							if(appPrirSrvCargo.getTeleExp() != null && StringUtils.isNotEmpty(appPrirSrvCargo.getTeleExp())){
								otherUtilitiesExpense = Double.parseDouble(ReferenceTableManager.getValueByColumn(true, "EDFINPARMS", "FINTELEEXP", "FINPARAMETERS"));
							}else{
								//Single Utility Expense
								otherUtilitiesExpense = Double.parseDouble(ReferenceTableManager.getValueByColumn(true, "EDFINPARMS", "SINGLEUTILITYSTD", "FINPARAMETERS"));
							}
						}
					}
				}
			}
			// As a part of 253773 we are replacing Monthly gross income with Countable income
			//if (!isExpidtedFAP && (appPrirSrvCargo.getMoRentMrtgAmt() + otherUtilitiesExpense) > (appPrirSrvCargo.getLqdAsetAmt() + appPrirSrvCargo.getMoGrIncmAmt())) {
			if (!isExpidtedFAP && (appPrirSrvCargo.getMoRentMrtgAmt() + otherUtilitiesExpense) > (appPrirSrvCargo.getLqdAsetAmt() + contblIncm)) {
				isExpidtedFAP = true;
			}
			appPrirSrvCargo.setRcvFsCurMoSw(this.getCharForString(root.getChildText("RCV_FS_CUR_MO_SW")));
			appPrirSrvCargo.setWmenChldShltSw(this.getCharForString(root.getChildText("WMEN_CHLD_SHLT_SW")));
			appPrirSrvCargo.setIncmSameGrwrSw(this.getCharForString(root.getChildText("INCM_SAME_GRWR_SW")));
			appPrirSrvCargo.setAmtSameGrwr(getDoubleForString(root.getChildTextTrim("AMT_SAME_GRWR")));
			String expDate = root.getChildTextTrim("DT_INCM_SAME_GRWR");
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (StringUtils.isNotEmpty(expDate)) {
				appPrirSrvCargo.setDtIncmSameGrwr(new Timestamp(sdf.parse(expDate).getTime()));
			} else {
				appPrirSrvCargo.setDtIncmSameGrwr(highDate);
			}
			appPrirSrvCargo.setIncmCrntMnthSw(this.getCharForString(root.getChildText("INCM_CRNT_MNTH_SW")));
			expDate = root.getChildTextTrim("DT_INCM_CRNT_MNTH");
			if (StringUtils.isNotEmpty(expDate)) {
				appPrirSrvCargo.setDtIncmCrntMnth(new Timestamp(sdf.parse(expDate).getTime()));
			} else {
				appPrirSrvCargo.setDtIncmCrntMnth(highDate);
			}
			appPrirSrvCargo.setAmtCrntMnth(getDoubleForString(root.getChildTextTrim("AMT_CRNT_MNTH")));
			appPrirSrvCargo.setTrvlAdvcSw(this.getCharForString(root.getChildText("TRVL_ADVC_SW")));
			expDate = root.getChildTextTrim("DT_TRVL_ADVC");
			if (StringUtils.isNotEmpty(expDate)) {
				appPrirSrvCargo.setDtTrvlAdvc(new Timestamp(sdf.parse(expDate).getTime()));
			} else {
				appPrirSrvCargo.setDtTrvlAdvc(highDate);
			}
			appPrirSrvCargo.setAmtTrvlAdvc(getDoubleForString(root.getChildTextTrim("AMT_TRVL_ADVC")));
			appPrirSrvCargo.setLstOnlySrcIncmSw(this.getCharForString(root.getChildText("LST_ONLY_SRC_INCM_SW")));
			expDate = root.getChildTextTrim("DT_FINAL_PAY_CHK");
			if (StringUtils.isNotEmpty(expDate)) {
				appPrirSrvCargo.setDtFinalPayChk(new Timestamp(sdf.parse(expDate).getTime()));
			} else {
				appPrirSrvCargo.setDtFinalPayChk(highDate);
			}
			appPrirSrvCargo.setAmtFnalPayChk(getDoubleForString(root.getChildTextTrim("AMT_FNAL_PAY_CHK")));
			if (conn == null) {
				appPrirSrvColl = new T1003AppPrirSrvCollection();
			} else {
				appPrirSrvColl = new T1003AppPrirSrvCollection(conn);
			}
			appPrirSrvColl.add(appPrirSrvCargo);
			log(ILog.DEBUG, "SelfServiceAppRegBO.buildT1003AppPrirSrv method isExpidtedFAP: " + isExpidtedFAP);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1003AppPrirSrv method erorr: " + e.getMessage(), e);
			throw e;
		}
		return appPrirSrvColl;
	}

	/**
	 * The <code>buildAllAppIndv</code> construncts the T1004AppIndv.
	 * 
	 * @param root
	 *            - Element Object
	 * @throws Exception
	 */
	private void buildAllAppIndv(Element root) throws SelfServiceApplicationException, Exception {
		appElement = root;
		Element indivsNode = root.getChild(AppRegConstants.INDIVIDUALS);
		List indivList = indivsNode.getChildren(AppRegConstants.ELEMENT_INDIVIDUAL);
		Iterator indivItr = indivList.iterator();
		Element pregDetailNode = root.getChild(AppRegConstants.APP_IN_PREGNANCY_DETAILS);
		List<Element> pregList = pregDetailNode.getChildren(AppRegConstants.APP_IN_PREGNANCY);
		long indvSeqNum = 0;
		T1004AppIndvCollection appIndvColl = null;
		T1004AppIndvCargo indvCargo = null;
		T1005AppHshlRltCollection appHshlRltColl = null;
		T1005AppHshlRltCollection retHshlRltColl = null;
		T1006AppInPermdCargo appInPermdCargo = null;
		T1006AppInPermdCollection appInPermdColl = null;
		T1007AppInCurdCargo appInCurdCargo = null;
		T1007AppInCurdCollection appInCurdColl = null;
		T1008AppInBnftrCargo appInBnftCargo = null;
		T1008AppInBnftrCollection appInBnftColl = null;
		T1009AppInSchleCargo appInSchleCargo = null;
		T1009AppInSchleCollection appInSchleColl = null;
		T1010AppPrflCargo appPrflCargo = null;
		T1010AppPrflCollection appPrflColl = null;
		T1012AppInNewbCollection appNewBornColl = null;
		T1012AppInNewbCargo appNewBornCargo = null;
		T1013AppInDablCargo appInDablCargo = null;
		T1013AppInDablCollection appInDablColl = null;
		T1016AppInDrugfCargo appInDrugCargo = null;
		T1016AppInDrugfCollection appInDrugFColl = null;
		T1021AppInEmplCollection appInemplColl = null;
		T1022AppInWagedCollection appInwagedColl = null;
		T1021AppInEmplCollection retAppInemplColl = null;
		T1022AppInWagedCollection retAppInwagedColl = null;
		T1023AppInSelfeCollection appInSelfColl = null;

		HashMap genderMap = new HashMap();
		if (conn == null) {
			appIndvColl = new T1004AppIndvCollection();
			appHshlRltColl = new T1005AppHshlRltCollection();
			appInPermdColl = new T1006AppInPermdCollection();
			appInCurdColl = new T1007AppInCurdCollection();
			appInBnftColl = new T1008AppInBnftrCollection();
			appInSchleColl = new T1009AppInSchleCollection();
			appPrflColl = new T1010AppPrflCollection();
			appNewBornColl = new T1012AppInNewbCollection();
			appInDablColl = new T1013AppInDablCollection();
			appInDrugFColl = new T1016AppInDrugfCollection();
			appInemplColl = new T1021AppInEmplCollection();
			appInwagedColl = new T1022AppInWagedCollection();
			appInSelfColl = new T1023AppInSelfeCollection();
		} else {
			appIndvColl = new T1004AppIndvCollection(conn);
			appHshlRltColl = new T1005AppHshlRltCollection(conn);
			appInPermdColl = new T1006AppInPermdCollection(conn);
			appInCurdColl = new T1007AppInCurdCollection(conn);
			appInBnftColl = new T1008AppInBnftrCollection(conn);
			appInSchleColl = new T1009AppInSchleCollection(conn);
			appPrflColl = new T1010AppPrflCollection(conn);
			appNewBornColl = new T1012AppInNewbCollection(conn);
			appInDablColl = new T1013AppInDablCollection(conn);
			appInDrugFColl = new T1016AppInDrugfCollection(conn);
			appInemplColl = new T1021AppInEmplCollection(conn);
			appInwagedColl = new T1022AppInWagedCollection(conn);
			appInSelfColl = new T1023AppInSelfeCollection(conn);

		}
		Map jobIncomeWageMap = null;
		char gender = '\u0000';
		log(ILog.DEBUG, "Entered in to SelfServiceAppRegBO.buildAllAppIndv method");
		while (indivItr.hasNext()) {

			Element indivNode = (Element) indivItr.next();
			Element pregNode = null;
			for (Element node : pregList) {
				if (node.getChildTextTrim("INDV_SEQ_NUM").equals(indivNode.getChildTextTrim("INDV_SEQ_NUM"))) {
					pregNode = node;
				}
			}
			try {
				indvSeqNum = getLongForString(indivNode.getChildTextTrim("INDV_SEQ_NUM"));
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv method indvSeqNum: " + indvSeqNum);

				gender = getCharForString(indivNode.getChildTextTrim("SEX_IND"));

				genderMap.put(new Long(indvSeqNum), String.valueOf(gender));

				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1004AppIndv");
				indvCargo = buildT1004AppIndv(indivNode, indvSeqNum, gender);
				appIndvColl.add(indvCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1004AppIndv");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method.  indvSeqNum: " + indvSeqNum + " :  Error:  " + e.getMessage(), e);
				throw new Exception("Exception in SelfServiceAppRegBO.buildAllAppIndv method.  indvSeqNum: " + indvSeqNum + " :  Error:  " + e.getMessage(),e);
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1005AppHshlRlt");
				retHshlRltColl = buildT1005AppHshlRlt(indivNode, indvSeqNum, gender);
				appHshlRltColl.addAll(retHshlRltColl);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1005AppHshlRlt");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1006AppInPermd");
				appInPermdCargo = buildT1006AppInPermd(indivNode, pregNode, indvSeqNum);
				appInPermdColl.add(appInPermdCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1006AppInPermd");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1007AppInCurd");
				appInCurdCargo = buildT1007AppInCurd(indivNode, indvSeqNum);
				appInCurdColl.add(appInCurdCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1007AppInCurd");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1008AppInBnftr");
				appInBnftCargo = buildT1008AppInBnftr(indivNode, indvSeqNum);
				appInBnftColl.add(appInBnftCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1008AppInBnftr");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1009AppInSchle");
				appInSchleCargo = buildT1009AppInSchle(indivNode, indvSeqNum);
				appInSchleColl.add(appInSchleCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1009AppInSchle");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1010AppPrfl");
				appPrflCargo = buildT1010AppPrfl(indivNode, indvSeqNum, appPrflCargo, indvCargo);
				appPrflColl.setCargo(appPrflCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1010AppPrfl");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}
			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1012AppNewBorn");
				appNewBornCargo = buildT1012AppNewBorn(indivNode, indvSeqNum, appNewBornCargo);
				if (appNewBornCargo != null) {
					appNewBornColl.add(appNewBornCargo);
				}
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1012AppNewBorn");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}
			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1013AppInDabl");
				appInDablCargo = buildT1013AppInDabl(indivNode, indvSeqNum);
				if (appInDablCargo != null) {
					appInDablColl.add(appInDablCargo);
				}
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1013AppInDabl");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1016AppInDrugf");
				appInDrugCargo = buildT1016AppInDrugf(indivNode, indvSeqNum);
				appInDrugFColl.add(appInDrugCargo);
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1016AppInDrugf");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}

			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building T1021AppInEmpl ");
				jobIncomeWageMap = buildT1021AppInEmpl(indivNode, indvSeqNum);

				if (jobIncomeWageMap != null) {
					retAppInemplColl = (T1021AppInEmplCollection) jobIncomeWageMap.get(AppRegConstants.APP_IN_EMPL);
					appInemplColl.addAll(retAppInemplColl);

					retAppInwagedColl = (T1022AppInWagedCollection) jobIncomeWageMap.get(AppRegConstants.APP_IN_EMPL_WAGE);
					appInwagedColl.addAll(retAppInwagedColl);
				}
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}
			try {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv before building buildT1023AppInSelfe");
				T1023AppInSelfeCollection tempappInSelfColl = buildT1023AppInSelfe(indivNode, indvSeqNum);
				if (tempappInSelfColl != null && tempappInSelfColl.size() > 0) {
					appInSelfColl.addAll(tempappInSelfColl);
				}
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1023AppInSelfe");
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
				errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
			}
			try {
				buildT1055AppInPrfl(indivNode, indvSeqNum);
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT1055AppInPrfl :: " + e.getMessage(), e);
				errorMessages.append("|buildT1055AppInPrfl:" + e.getMessage());
			}

			log(ILog.DEBUG, "SelfServiceAppRegBO.buildAllAppIndv after building buildT1021AppInEmpl");
		}

		try {
			if (!miChildApp) {
				setConverseRelationships(appHshlRltColl, genderMap, 'A');
			} else {
				validateAddConverseRelationships(appHshlRltColl, genderMap);
			}

			if (appHshlRltColl != null && appHshlRltColl.size() > 0) {

				for (T1005AppHshlRltCargo cargo : appHshlRltColl.getResults()) {
					if (cargo.getTaxDepSw() == 'I') {
						cargo.setTaxDepSw('N');
					}
				}
			}

		} catch (Exception e) {
			log(ILog.ERROR, "Exception occured while building non-core Indv information :: " + e.getMessage(), e);
			errorMessages.append("|Non-core IndvInfo:" + e.getMessage());
		}

		try {
			if (appIndvColl != null && appIndvColl.size() > 0) {
				appIndvColl.insert();
			}
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individuals. Error:  " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individuals. Error:  " + e.getMessage(),e);
		}
		try {
			if (appHshlRltColl != null && appHshlRltColl.size() > 0)
				appHshlRltColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual relationships. Error:  " + e.getMessage(), e);
			errorMessages.append("|appHshlRltColl:" + e.getMessage());
		}
		try {
			if (appInPermdColl != null && appInPermdColl.size() > 0)
				appInPermdColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInPermdColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInPermdColl:" + e.getMessage());
		}
		try {
			if (appInCurdColl != null && appInCurdColl.size() > 0)
				appInCurdColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInCurdColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInCurdColl:" + e.getMessage());
		}
		try {
			if (appInBnftColl != null && appInBnftColl.size() > 0)
				appInBnftColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInBnftColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInBnftColl:" + e.getMessage());
		}
		try {
			if (appInSchleColl != null && appInSchleColl.size() > 0)
				appInSchleColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInSchleColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInSchleColl:" + e.getMessage());
		}
		try {
			if (appPrflColl != null && appPrflColl.size() > 0)
				appPrflColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appPrflColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appPrflColl:" + e.getMessage());
		}
		try {
			if (appNewBornColl != null && appNewBornColl.size() > 0)
				appNewBornColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appNewBornColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appNewBornColl:" + e.getMessage());
		}

		try {
			if (appInDablColl != null && appInDablColl.size() > 0)
				appInDablColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInDablColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInDablColl:" + e.getMessage());
		}
		try {
			if (appInDrugFColl != null && appInDrugFColl.size() > 0)
				appInDrugFColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInDrugFColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInDrugFColl:" + e.getMessage());
		}
		try {
			if (appInemplColl != null && appInemplColl.size() > 0)
				appInemplColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInemplColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInemplColl:" + e.getMessage());
		}
		try {
			if (appInSelfColl != null && appInSelfColl.size() > 0)
				appInSelfColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInSelfColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInSelfColl:" + e.getMessage());
		}
		try {
			if (appInwagedColl != null && appInwagedColl.size() > 0)
				appInwagedColl.insert();
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildAllAppIndv method while inserting the individual appInwagedColl. Error:  " + e.getMessage(), e);
			errorMessages.append("|appInwagedColl:" + e.getMessage());
		}

		log(ILog.DEBUG, "Completed SelfServiceAppRegBO.buildAllAppIndv");
	}

	/**
	 * This method is used to create individuals n staging tables
	 * 
	 * @param indivNode
	 *            - Element Object
	 * @param indvSeqNum
	 *            - Indv Seq Num
	 * @param gender
	 *            - Gender Code
	 * @return T1004AppIndvCargo - T1004AppIndvCargo
	 * @throws Exception
	 */
	private T1004AppIndvCargo buildT1004AppIndv(Element indivNode, long indvSeqNum, char gender) throws Exception {
		T1004AppIndvCargo appIndvCargo = null;
		SimpleDateFormat sdf = null;
		String dobStr = null;

		try {

			log(ILog.DEBUG, "Entered SelfServiceAppRegBO.buildAllAppIndv indvSeqNum: " + indvSeqNum);
			appIndvCargo = new T1004AppIndvCargo();
			appIndvCargo.setAppNum(appNum);
			appIndvCargo.setIndvSeqNum(indvSeqNum);
			appIndvCargo.setSexInd(gender);
			appIndvCargo.setAlnSponserSw(getCharForString(indivNode.getChildTextTrim("ALN_SPONSER_SW")));
			dobStr = indivNode.getChildTextTrim("BRTH_DT");
			sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (dobStr != null) {
				appIndvCargo.setBrthDt(new Timestamp(sdf.parse(dobStr).getTime()));
			} else {
				appIndvCargo.setBrthDt(highDate);
			}

			appIndvCargo.setFstNam((indivNode.getChildTextTrim("FST_NAM")));
			if (dmWebserviceVO != null && ('Y' == getCharForString(indivNode.getChildTextTrim("PRIM_PRSN_SW")))) {
				dmWebserviceVO.setClientFirstName(appIndvCargo.getFstNam());
			}

			appIndvCargo.setIndvEstbStatInd('R');
			String lastName = getString(indivNode.getChildTextTrim("LAST_NAM"));
			if (lastName != null && lastName.length() > 30) {
				lastName = lastName.substring(0, 30);
			}
			appIndvCargo.setLastNam(lastName);
			if (dmWebserviceVO != null && ('Y' == getCharForString(indivNode.getChildTextTrim("PRIM_PRSN_SW")))) {
				dmWebserviceVO.setClientLastName(lastName);
			}

			appIndvCargo.setMidInit(getString(indivNode.getChildTextTrim("MID_INIT")));
			if (dmWebserviceVO != null && ('Y' == getCharForString(indivNode.getChildTextTrim("PRIM_PRSN_SW")))) {
				dmWebserviceVO.setClientMidName(appIndvCargo.getMidInit());
			}

			appIndvCargo.setPinNum(0);
			appIndvCargo.setPrimPrsnSw(getCharForString(indivNode.getChildTextTrim("PRIM_PRSN_SW")));
			if (miChildApp) {
				if (appIndvCargo.getPrimPrsnSw() == 'Y') {
					hohCount++;
				}

				if (hohCount > 1) {
					appIndvCargo.setPrimPrsnSw('N');
				}
			}

			appIndvCargo.setSsnNum(getLongForString(indivNode.getChildTextTrim("SSN_NUM")));
			appIndvCargo.setBcRqstSw('N');
			appIndvCargo.setFpwRqstSw('N');
			appIndvCargo.setFsRqstSw(getCharForString(indivNode.getChildTextTrim("INDV_FS_RQST_SW")));
			appIndvCargo.setMcRqstSw(getCharForString(indivNode.getChildTextTrim("INDV_MSP_RQST_SW")));

			if (isSerCase) {
				appIndvCargo.setSeRqstSw('Y');
			}
			appIndvCargo.setMaRqstSw('N');
			String suffixName = getString(indivNode.getChildTextTrim("SFX_NAM"));
			if (suffixName != null) {
				if ("0".equals(suffixName)) {
					appIndvCargo.setSfxNam(" ");
				} else {
					appIndvCargo.setSfxNam(suffixName);
				}
			} else {
				appIndvCargo.setSfxNam(" ");
			}
			appIndvCargo.setSndxNum(" ");
			appIndvCargo.setRlvnInd('N');
			appIndvCargo.setSsnAppliedForSw(getCharForString(indivNode.getChildTextTrim("SSN_APPLIED_FOR_SW")));
			appIndvCargo.setMaRqstSw(getCharForString(indivNode.getChildTextTrim("MA_RQST_SW")));
			appIndvCargo.setFpwRqstSw(getCharForString(indivNode.getChildTextTrim("FPW_RQST_SW")));
			appIndvCargo.setSeRqstSw(getCharForString(indivNode.getChildTextTrim("INDV_SE_RQST_SW")));
			if (isSerBurialRequested(indvSeqNum))
				appIndvCargo.setSeRqstSw(C_YES);
			if (miChildApp) {
				String MiChildreferralCd = null;
				char MaRqstSw = INConstants.NO;
				MiChildreferralCd = indivNode.getChildTextTrim(MA_RQST_SW);

				if (InRcvDlyMIChildReferralConstants.MC_APPLICATION_TYPE_CD_HEALTY_KIDS == mcProgramTypeCD
						&& (InRcvDlyMIChildReferralConstants.MI_CHILD_REFERRAL_CD_H.equalsIgnoreCase(MiChildreferralCd) || InRcvDlyMIChildReferralConstants.MI_CHILD_REFERRAL_CD_K
								.equalsIgnoreCase(MiChildreferralCd))) {
					MaRqstSw = INConstants.YES;
				} else if (InRcvDlyMIChildReferralConstants.MC_APPLICATION_TYPE_CD_PLAN_FIRST == mcProgramTypeCD
						&& InRcvDlyMIChildReferralConstants.MI_CHILD_REFERRAL_CD_F.equalsIgnoreCase(MiChildreferralCd)) {
					MaRqstSw = INConstants.YES;
				}

				appIndvCargo.setMaRqstSw(MaRqstSw);
			}
			appIndvCargo.setBcRqstSw(getCharForString(indivNode.getChildTextTrim("CASH_RQST_SW")));
			String alnEntryDt = getString(indivNode.getChildTextTrim("ALN_ENTRY_DT"));
			if (alnEntryDt != null && alnEntryDt.trim().length() > 0) {
				sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				appIndvCargo.setAlienEntryDt(new Timestamp(sdf.parse(alnEntryDt).getTime()));
			}
			String alnBeginEntryDt = getString(indivNode.getChildTextTrim("ALN_BEGIN_DT"));
			if (alnBeginEntryDt != null && alnBeginEntryDt.trim().length() > 0) {
				sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				appIndvCargo.setAlienStatusBeginDt(new Timestamp(sdf.parse(alnBeginEntryDt).getTime()));
			}
			String movedToMIDt = getString(indivNode.getChildTextTrim("MOVED_TO_MI_DT"));
			if (movedToMIDt != null && movedToMIDt.trim().length() > 0) {
				sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				appIndvCargo.setMovedToMiDt(new Timestamp(sdf.parse(movedToMIDt).getTime()));
			}
			
			//ILIES-273207 - storing backdate question and backdate months
			String backDateQuestion = getString(indivNode.getChildTextTrim("BACKDT_MED_APP"));
			if(backDateQuestion!=null && backDateQuestion.trim().equals("Y")) {
				appIndvCargo.setBackdtMedAppSw(backDateQuestion.charAt(0));
			}
			else {
				appIndvCargo.setBackdtMedAppSw(backDateQuestion.charAt(0));
			}
			String backdateMon1 = getString(indivNode.getChildTextTrim("MA_BACKDT_MO_1"));
			if (backdateMon1 != null && backdateMon1.trim().equals("Y")) {
				appIndvCargo.setMaBackdtMo1Sw('Y');
			}
			else {
				appIndvCargo.setMaBackdtMo1Sw('N');
			}
			String backdateMon2 = getString(indivNode.getChildTextTrim("MA_BACKDT_MO_2"));
			if (backdateMon2 != null && backdateMon2.trim().equals("Y")) {
				appIndvCargo.setMaBackdtMo2Sw('Y');
			}
			else {
				appIndvCargo.setMaBackdtMo2Sw('N');
			}
			String backdateMon3 = getString(indivNode.getChildTextTrim("MA_BACKDT_MO_3"));
			if (backdateMon3 != null && backdateMon3.trim().equals("Y")) {
				appIndvCargo.setMaBackdtMo3Sw('Y');
			}
			else {
				appIndvCargo.setMaBackdtMo3Sw('N');
			}
			
			String backDateFppQuestion = getString(indivNode.getChildTextTrim("BACKDT_FPP_APP"));
			if((backDateFppQuestion!=null && backDateFppQuestion.trim().equals("Y"))) {
				appIndvCargo.setBackdtFppAppSw(backDateFppQuestion.charAt(0));
			}
			else {
				appIndvCargo.setBackdtFppAppSw(backDateFppQuestion.charAt(0));
			}

			appIndvCargo.setFppRqstSw(getCharForString(indivNode.getChildTextTrim("INDV_FPP_PGM")));
			appIndvCargo.setMa_bnft_choice(getString(indivNode.getChildTextTrim("MA_BNFT_CHOICE")));
			appIndvCargo.setFileTaxesSw(getCharForString(indivNode.getChildTextTrim("FILE_TAXES_SW")));
			appIndvCargo.setOtherStateCd(getString(indivNode.getChildTextTrim("OTHER_STATE_CD")));
			appIndvCargo.setMedicareCoverageSw(getCharForString(indivNode.getChildTextTrim("MEDICARE_COVERAGE_SW")));
			appIndvCargo.setUnpaidMedicalExpenseSw(getCharForString(indivNode.getChildTextTrim("UNPAID_MEDICAL_EXPENSE_SW")));
			appIndvCargo.setHealthInsPremiumPaySw(getCharForString(indivNode.getChildTextTrim("HEALTH_INS_PREMIUM_PAY_SW")));
			appIndvCargo.setLtcInsuranceCoverageSw(getCharForString(indivNode.getChildTextTrim("LTC_INSURANCE_COVERAGE_SW")));
			appIndvCargo.setInjuryRelatedMedCvrgSw(getCharForString(indivNode.getChildTextTrim("INJURY_RELATED_MED_CVRG_SW")));
			appIndvCargo.setCourtOrderedMedCvrgSw(getCharForString(indivNode.getChildTextTrim("COURT_ORDERED_MED_CVRG_SW")));
			//When no document is selected in ABE app_indv ,T1004 staging table should populate empty in document switch.
			appIndvCargo.setDocumentedAlienSw(getCharForStringForDocumentType(indivNode.getChildTextTrim("DOCUMENTED_ALIEN_SW"), indivNode.getChildText("US_CTZN_SW")));
			appIndvCargo.setDocumentNum((indivNode.getChildTextTrim("ALIEN_DOCUMENT_NUMBER")));
			appIndvCargo.setDocumentType((indivNode.getChildTextTrim("ALIEN_DOCUMENT_TYPE")));
			//When Alien resgistration number is empty in ABE. In IES , in  Non-citizen details screen , Align registration number field is defaulted to 0 before the fix.
			//As part of 269505 If "0" or empty comes setting the value  as empty.
			String alienRegNum = getString(indivNode.getChildTextTrim("ALIEN_REG_NUM"));
			
			
				if (alienRegNum != null && !alienRegNum.isEmpty() && !("0".equalsIgnoreCase(alienRegNum))) {	
					appIndvCargo.setRegistrationNum((alienRegNum));
				}
			

		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1004AppIndv  indvSeqNum: " + indvSeqNum + " :  Error:" + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1004AppIndv  indvSeqNum: " + indvSeqNum + " :  Error: " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "Exiting SelfServiceAppRegBO.buildAllAppIndv indvSeqNum: " + indvSeqNum);
		return appIndvCargo;
	}

	/**
	 * This method created records in T1004AppIndv staging table
	 * 
	 * @param root
	 *            - Element Object
	 * 
	 * @return T1004AppIndvCargo - T1004AppIndvCargo
	 * @throws Exception
	 */
	private T1004AppIndvCargo buildT1004AppIndvForMpe(Element root) throws Exception {

		T1004AppIndvCargo appIndvCargo = null;
		SimpleDateFormat sdf = null;
		String appNum = null;
		String alienEntryDt = "9999-12-31 00:00:00.0";
		String aliennBeginEntryDt = "9999-12-31 00:00:00.0";
		try {
			log(ILog.DEBUG, "Entered SelfServiceAppRegBO.buildT1004AppIndvForMpe");
			appIndvCargo = new T1004AppIndvCargo();
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			appIndvCargo.setAppNum(appNum);
			appIndvCargo.setIndvSeqNum(getLongForString(INDV_SEQ_NUM));

			Element appContact = root.getChild("APPLICANT_INFO");
			if (appContact != null && appContact.getChildren().size() > 0) {
				appIndvCargo.setFstNam((appContact.getChildTextTrim("APPL_FIRST_NAME")));
				if (dmWebserviceVO != null) {
					dmWebserviceVO.setClientFirstName(appIndvCargo.getFstNam());
				}
				String lastName = getString(appContact.getChildTextTrim("APPL_LAST_NAME"));
				if (lastName != null && lastName.length() > 30) {
					lastName = lastName.substring(0, 30);
				}
				appIndvCargo.setLastNam(lastName);
				if (dmWebserviceVO != null) {
					dmWebserviceVO.setClientLastName(lastName);
				}
				appIndvCargo.setMidInit(getString(appContact.getChildTextTrim("APPL_MIDDLE_INITIAL")));
				if (dmWebserviceVO != null) {
					dmWebserviceVO.setClientMidName(appIndvCargo.getMidInit());
				}
				appIndvCargo.setSsnNum(getLongForString(appContact.getChildTextTrim("SS_NUMBER")));
				
				//ILIES-278621 - add gender information comes from ABE FPPE flow
				String genderVal = null;
				if(appContact.getChildTextTrim("GENDER_CD")!=null) {
					genderVal = getString(appContact.getChildTextTrim("GENDER_CD")).trim();
				}
				
				if(genderVal!=null && genderVal.length()>0) {
					appIndvCargo.setSexInd(genderVal.charAt(0));
				}
				else {
					//set default value - MPE flow
					appIndvCargo.setSexInd('F');
				}
				
			}
			sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (alienEntryDt != null && alienEntryDt.trim().length() > 0) {
				appIndvCargo.setAlienEntryDt(new Timestamp(sdf.parse(alienEntryDt).getTime()));
			}
			if (aliennBeginEntryDt != null && aliennBeginEntryDt.trim().length() > 0) {
				appIndvCargo.setAlienStatusBeginDt(new Timestamp(sdf.parse(aliennBeginEntryDt).getTime()));
			}
			
			//appIndvCargo.setSexInd('F');
			appIndvCargo.setAlnSponserSw('N');
			appIndvCargo.setBrthDt(new Timestamp(sdf.parse(appContact.getChildTextTrim("BIRTH_DATE")).getTime()));
			appIndvCargo.setIndvEstbStatInd('R');
			appIndvCargo.setPinNum(0);
			appIndvCargo.setPrimPrsnSw('Y');
			appIndvCargo.setBcRqstSw('N');
			appIndvCargo.setFpwRqstSw('N');
			appIndvCargo.setFsRqstSw('N');
			appIndvCargo.setSeRqstSw('N');
			appIndvCargo.setSfxNam(" ");
			appIndvCargo.setSndxNum(" ");
			appIndvCargo.setRlvnInd('N');
			appIndvCargo.setSsnAppliedForSw('N');
			appIndvCargo.setMaRqstSw('Y');
			appIndvCargo.setFpwRqstSw('N');
			appIndvCargo.setMedicareCoverageSw('N');
			appIndvCargo.setUnpaidMedicalExpenseSw('N');
			appIndvCargo.setHealthInsPremiumPaySw('N');
			appIndvCargo.setLtcInsuranceCoverageSw('N');
			appIndvCargo.setInjuryRelatedMedCvrgSw('N');
			appIndvCargo.setCourtOrderedMedCvrgSw('N');
			appIndvCargo.setMcRqstSw('N');
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1004AppIndvForMpe: " + e.getMessage(), e);
			throw new Exception("Exception in SelfServiceAppRegBO.buildT1004AppIndvForMpe: " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "Exiting SelfServiceAppRegBO.buildT1004AppIndvForMpe");
		return appIndvCargo;
	}

	/**
	 * This method creates the individual relations in the staging tables
	 * 
	 * @param indivNode
	 *            - Element Object
	 * @param indvSeqNum
	 *            - Indv Seq Num
	 * @param gender
	 *            - Gender Code
	 * @return T1005AppHshlRltCollection - T1005AppHshlRltCollection
	 * @throws SelfServiceApplicationException
	 */
	private T1005AppHshlRltCollection buildT1005AppHshlRlt(Element indivNode, long indvSeqNum, char gender) throws SelfServiceApplicationException {
		Element rltShipsEle = indivNode.getChild(AppRegConstants.RELATIONSHIPS);
		Attribute relAttr = rltShipsEle.getAttribute(AppRegConstants.DATA_EXIST);
		T1005AppHshlRltCollection appHshlRltColl = null;
		try {
			String dataExist = "Y";
			log(ILog.DEBUG, "Entered SelfServiceAppRegBO.buildT1005AppHshlRlt indvSeqNum: " + indvSeqNum);
			if (relAttr != null) {
				dataExist = relAttr.getValue();
			}
			T1005AppHshlRltCargo appHshlRltCargo = null;
			if (conn == null) {
				appHshlRltColl = new T1005AppHshlRltCollection();
			} else {
				appHshlRltColl = new T1005AppHshlRltCollection(conn);
			}
			if (!"N".equals(dataExist)) {
				log(ILog.DEBUG, "SelfServiceAppRegBO.buildT1005AppHshlRlt relationship data exists ");
				List rltShipList = rltShipsEle.getChildren(AppRegConstants.ELEMENT_RELATIONSHIP);
				Iterator rltShipItr = rltShipList.iterator();
				while (rltShipItr.hasNext()) {
					Element rltShipNode = (Element) rltShipItr.next();

					appHshlRltCargo = new T1005AppHshlRltCargo();
					appHshlRltCargo.setAppNum(appNum);
					appHshlRltCargo.setRefIndvSeqNum(getLongForString(rltShipNode.getChildTextTrim("REF_INDV_SEQ_NUM")));
					appHshlRltCargo.setSrcIndvSeqNum(getLongForString(rltShipNode.getChildTextTrim("SRC_INDV_SEQ_NUM")));
					char parentSW = getCharForString(rltShipNode.getChildText("IS_PARENT_SW"));
					char careResp = getCharForString(rltShipNode.getChildText("CARE_RESP"));
					if (parentSW == 'Y' || careResp == 'Y') {
						appHshlRltCargo.setCareResp('Y');
					} else {
						appHshlRltCargo.setCareResp('N');
					}
					appHshlRltCargo.setPnpTghrSw(getCharForString(rltShipNode.getChildText("PNP_TGHR_SW")));

					String relation = rltShipNode.getChildTextTrim("RLT_CD");
					if (relation.equals("HS")) {
						relation = "SI";
					}
					if (relation.equals("HB")) {
						relation = "BR";
					}
					appHshlRltCargo.setRltCd(relation);
					appHshlRltCargo.setPhyBoeSepSw(getCharForString(rltShipNode.getChildText("PHY_BOE_SEP_SW")));
					char taxDepSw = getCharForString(rltShipNode.getChildText("TAX_DEPENDENT_SW"));
					if (taxDepSw == 'Y') {
						appHshlRltCargo.setTaxDepSw('Y');
					} else if (taxDepSw == 'I') {
						appHshlRltCargo.setTaxDepSw('I');
					} else {
						appHshlRltCargo.setTaxDepSw('N');
					}

					char taxJointSw = getCharForString(rltShipNode.getChildText("TAX_JOINTLY_FILED_SW"));
					if (taxJointSw == 'Y') {
						appHshlRltCargo.setTaxJointSw('Y');
					} else {
						appHshlRltCargo.setTaxJointSw('N');
					}
					appHshlRltCargo.setEffBegMo(beginMonth);

					if (appHshlRltCargo.getRefIndvSeqNum() != 0 && appHshlRltCargo.getSrcIndvSeqNum() != 0) {
						appHshlRltColl.add(appHshlRltCargo);
					}

				}
			}
		} catch (NullPointerException e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1005AppHshlRlt  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1002AppDtl indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(),e);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1005AppHshlRlt  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1005AppHshlRlt  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "Exiting SelfServiceAppRegBO.buildT1005AppHshlRlt indvSeqNum: " + indvSeqNum);
		return appHshlRltColl;
	}

	/**
	 * This method created records in T1006AppInPermd staging table
	 * 
	 * @param indivNode
	 *            - Element Object
	 * @param indvSeqNum
	 *            - Indv Seq Num
	 * @return T1006AppInPermdCargo - T1006AppInPermdCargo
	 * @throws Exception
	 */
	private T1006AppInPermdCargo buildT1006AppInPermd(Element indivNode, Element pregNode, long indvSeqNum) throws SelfServiceApplicationException {
		T1006AppInPermdCargo appInPermdCargo = null;
		String dateLeaveFacility = null;
		String ssNumAppDt = null;
		SimpleDateFormat sdf = null;
		String pregnancyDueDtStr = null;
		String usEntryDtStr = null;

		try {
			appInPermdCargo = new T1006AppInPermdCargo();
			log(ILog.DEBUG, "Entered SelfServiceAppRegBO.buildT1006AppInPermd indvSeqNum: " + indvSeqNum);
			appInPermdCargo.setAppNum(appNum);
			appInPermdCargo.setIndvSeqNum(indvSeqNum);

			appInPermdCargo.setAiInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("AI_IND")));
			appInPermdCargo.setAsiaInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("ASIA_IND")));
			appInPermdCargo.setBlkInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("BLK_IND")));
			appInPermdCargo.setAsIndnInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("AS_INDN_IND")));
			appInPermdCargo.setChiInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("CHI_IND")));
			appInPermdCargo.setCubInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("CUB_IND")));
			appInPermdCargo.setFilInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("FIL_IND")));
			appInPermdCargo.setGuamInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("GUAM_IND")));
			appInPermdCargo.setJpInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("JP_IND")));
			appInPermdCargo.setKorInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("KOR_IND")));
			appInPermdCargo.setMexInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("MEX_IND")));
			appInPermdCargo.setNatHawInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("NAT_HAW_IND")));
			appInPermdCargo.setPacIslInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("PAC_ISL_IND")));
			appInPermdCargo.setPrInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("PR_IND")));
			appInPermdCargo.setSamInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("SAM_IND")));
			appInPermdCargo.setWhtInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("WHT_IND")));
			appInPermdCargo.setVtInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("VT_IND")));
			appInPermdCargo.setEthUnkInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("UNK_IND")));
			appInPermdCargo.setHspcInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("HSPC_IND")));
			appInPermdCargo.setNonHspcInd(indivNode.getChildTextTrim("NON_HSPC_IND"));			
			// ERJA change starts	
			appInPermdCargo.setOther(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("OTHER")));
			appInPermdCargo.setOtherEthnicityInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("OTHER_ETHNICITY_IND")));
			appInPermdCargo.setPreferNotAnswerInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("PREFER_NOT_ANSWER_IND")));
			appInPermdCargo.setMidEastNorthAfrInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("MID_EAST_NORTH_AFR_IND")));
			appInPermdCargo.setOtherRaceAloneInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("OTHER_RACE_ALONE_IND")));
			appInPermdCargo.setNoRaceSpecifiedInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("NO_RACE_SPECIFIED_IND")));
			appInPermdCargo.setAsianAmericanInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("ASIAN_AMERICAN_IND")));
			appInPermdCargo.setTwoOrMoreRaceInd(getCharForStringForRaceEthnicity(indivNode.getChildTextTrim("TWO_OR_MORE_RACE_IND")));
			appInPermdCargo.setSexAtBirth(getString(indivNode.getChildText("SEX_AT_BIRTH")));
			appInPermdCargo.setSexAtBirthDetails(getString(indivNode.getChildText("SEX_AT_BIRTH_DETAILS")));
			appInPermdCargo.setGenderIdentity(getString(indivNode.getChildText("GENDER_IDENTITY")));
			appInPermdCargo.setGenderIdentityDetails(getString(indivNode.getChildText("GENDER_IDENTITY_DETAILS")));
			appInPermdCargo.setSexualOrientation(getString(indivNode.getChildText("SEXUAL_ORIENTATION")));
			appInPermdCargo.setSexualOrientationDetails(getString(indivNode.getChildText("SEXUAL_ORIENTATION_DETAILS")));
			appInPermdCargo.setIndigenousStatus(getCharForString(indivNode.getChildTextTrim("INDIGENOUS_STATUS")));			
			// ERJA change ends	

			sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
			dateLeaveFacility = indivNode.getChildTextTrim("DT_LEAVE_FACTY");
			if (dateLeaveFacility != null) {
				appInPermdCargo.setDtLeaveFacty(new Timestamp(sdf.parse(dateLeaveFacility).getTime()));
			} else {
				appInPermdCargo.setDtLeaveFacty(highDate);
			}
			appInPermdCargo.setVetResp(getCharForString(indivNode.getChildTextTrim("VET_RESP")));
			appInPermdCargo.setVetActDutyResp(getCharForString(indivNode.getChildTextTrim("VET_ACT_DUTY_RESP")));
			appInPermdCargo.setSpsDeceasedVetResp(getCharForString(indivNode.getChildTextTrim("SPS_DECEASED_VET_RESP")));
			appInPermdCargo.setChldDeceasedVetResp(getCharForString(indivNode.getChildTextTrim("CHLD_DECEASED_VET_RESP")));
			appInPermdCargo.setDisableVetResp(getCharForString(indivNode.getChildTextTrim("DISABLE_VET_RESP")));
			appInPermdCargo.setLangCd(getString(indivNode.getChildText("LANG_CD")));
			if (appInPermdCargo.getLangCd().trim().length() == 0) {
				appInPermdCargo.setLangCd("0");
			}
			ssNumAppDt = indivNode.getChildTextTrim("SS_NUM_APP_DT");
			if (ssNumAppDt != null) {
				appInPermdCargo.setSsNumAppDt(new Timestamp(sdf.parse(ssNumAppDt).getTime()));
			} else {
				appInPermdCargo.setSsNumAppDt(highDate);
			}
			appInPermdCargo.setUsCtznSw(getCharForString(indivNode.getChildText("US_CTZN_SW")));
			appInPermdCargo.setUndocNoncitizenAsylumSw(getCharForString(indivNode.getChildText("UNDOC_NONCITIZEN_ASYLUM_SW")));
			appInPermdCargo.setUndocNoncitizenTVisaSw(getCharForString(indivNode.getChildText("UNDOC_NONCITIZEN_T_VISA_SW")));
			appInPermdCargo.setUndocNoncitizenUVisaSw(getCharForString(indivNode.getChildText("UNDOC_NONCITIZEN_U_VISA_SW")));
			appInPermdCargo.setDthDt(highDate);
			appInPermdCargo.setTrbMbrInd(' ');
			appInPermdCargo.setTrbChldMbrInd(' ');
			appInPermdCargo.setPregnancySw(getCharForString(indivNode.getChild(AppRegConstants.INDIVIDUAL_PROFILE).getChildText("PREG_RESP")));
			if (appInPermdCargo.getPregnancySw() == 'Y') {
				isPregnantInCase = true;
			}
			if (pregNode != null && pregNode.getChildTextTrim("PREG_DUE_DT") != null) {
				pregnancyDueDtStr = pregNode.getChildTextTrim("PREG_DUE_DT");
			}
			sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (pregnancyDueDtStr != null && pregnancyDueDtStr.trim().length() > 0) {
				appInPermdCargo.setPregnancyDueDt(new Timestamp(sdf.parse(pregnancyDueDtStr).getTime()));
			} else {
				appInPermdCargo.setPregnancyDueDt(highDate);
			}

			appInPermdCargo.setNbrOfBirthsExpected(getIntForString(indivNode.getChildText("NBR_OF_BIRTHS_EXPECTED")));

			appInPermdCargo.setPregnancyVrfCd(getString(indivNode.getChildText("PREGNANCY_VRF_CD")));
			if (appInPermdCargo.getUsCtznSw() == 'Y') {
				appInPermdCargo.setCitizenStsDeclaredVrfCd(getString(indivNode.getChildText("CITIZEN_STS_DECLARED_VRF_CD")));
			}
			appInPermdCargo.setIdentificationVrfCd(getString(indivNode.getChildText("IDENTIFICATION_VRF_CD")));
			appInPermdCargo.setAlienStatusCd(getString(indivNode.getChildText("ALIEN_STATUS_CD")));
			appInPermdCargo.setAlienTypeCd(getString(indivNode.getChildText("ALIEN_TYPE_CD")));
			appInPermdCargo.setAlienStatusVrfCd(getString(indivNode.getChildText("ALIEN_STATUS_VRF_CD")));
			// US_ENTRY_DT
			usEntryDtStr = indivNode.getChildTextTrim("ALN_ENTRY_DT");
			sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (usEntryDtStr != null && usEntryDtStr.trim().length() > 0) {
				appInPermdCargo.setUsEntryDt(new Timestamp(sdf.parse(usEntryDtStr).getTime()));
			} else {
				appInPermdCargo.setUsEntryDt(highDate);
			}


		} catch (ParseException e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1004AppIndv Error:" + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1006AppInPermd Error:" + e.getMessage(),e);
		} catch (NullPointerException e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1006AppInPermd  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1006AppInPermd  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(),e);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1006AppInPermd  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1006AppInPermd  indvSeqNum: " + indvSeqNum + " :  method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "Exiting SelfServiceAppRegBO.buildT1006AppInPermd indvSeqNum: " + indvSeqNum);
		return appInPermdCargo;
	}
