package IVA_Batch;

import CommonMigratedParts.*;

//*** PROGRAM=AIF02A ****
// THIS IS A NEW APPLICATION CREATED TO FORMAT SCHOOL LUNCH
// REPORT.
// IT COMPARES THE PREVIOUS MONTH'S FILE FORMATTED BY AIN97A
// WITH THE CURRENT MONTH'S FILE AND PREPARES A NEW REPORT BY
// POPULATING THE RECORD TYPE 'A'(NEW),'D'(DELETE)
// ***********************
Program AIF02A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIF02W AIF02W; // record
  CEP01W CEP01W; // record
  SR-AIF02A-NEW-REC SR-AIF02A-NEW-REC; // record
  SR-AIF02A-OLD-REC SR-AIF02A-OLD-REC; // record
  SR-AIF02A-OUT-REC SR-AIF02A-OUT-REC; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIF02P9-MAIN: AIF02P9-MAIN();
  end // end main
end // end AIF02A


// MAIN PROCESS
Function AIF02P9-MAIN()
  set AIF02W empty;

  AIF02P9-RD-OLD-FIL();
  AIF02P9-RD-NEW-FIL();
  AIF02P9-PROC-PARA();

  /*  */
end // end AIF02P9-MAIN


Function AIF02P9-PROC-CHG()
  AIF02P9-RD-OLD-FIL();
  AIF02P9-RD-NEW-FIL();
  /*  */
end // end AIF02P9-PROC-CHG


Function AIF02P9-PROC-DEL()
  SR-AIF02A-OUT-REC.SLX-RECORD = SR-AIF02A-OLD-REC.SLX-RECORD;
  SR-AIF02A-OUT-REC.SLX-REC-TYP = "D";
  AIF02P9-WRITE-FILE();
  AIF02P9-RD-OLD-FIL();
  /*  */
end // end AIF02P9-PROC-DEL


Function AIF02P9-PROC-NEW()
  SR-AIF02A-OUT-REC.SLX-RECORD = SR-AIF02A-NEW-REC.SLX-RECORD;
  SR-AIF02A-OUT-REC.SLX-REC-TYP = "A";
  AIF02P9-WRITE-FILE();
  AIF02P9-RD-NEW-FIL();
  /*  */
end // end AIF02P9-PROC-NEW


Function AIF02P9-PROC-PARA()
  while (AIF02W.WS-OLD-EZERT8 == "00000000" || 
  AIF02W.WS-NEW-EZERT8 == "00000000")

    if (AIF02W.WS-OLD-SSN < AIF02W.WS-NEW-SSN)
      AIF02P9-PROC-DEL();
    else
      if (AIF02W.WS-OLD-SSN == AIF02W.WS-NEW-SSN)
        AIF02P9-PROC-CHG();
      else
        if (AIF02W.WS-OLD-SSN > AIF02W.WS-NEW-SSN)
          AIF02P9-PROC-NEW();
        end
      end
    end

  end
  /*  */
end // end AIF02P9-PROC-PARA


Function AIF02P9-RD-NEW-FIL()
  AIF02W.WS-NEW-SSN = " ";
  try
    get next SR-AIF02A-NEW-REC ;
  end
  if (SR-AIF02A-NEW-REC is ioError && SR-AIF02A-NEW-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIF02P9-RD-NEW-FIL";
    VDBCONTROL.UPROC-OBJ = "SR-AIF02A-NEW-REC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIF02A";
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-AIF02A-NEW-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF02A-NEW-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF02A-NEW-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
  /*  */
  if (sysVar.errorCode == "00000000")
    AIF02W.WS-NEW = SR-AIF02A-NEW-REC.SLX-RECORD;
  else
    if (sysVar.errorCode == "00000102") /* end of file condition;*/
      AIF02W.WS-NEW-SSN = "999999999";
    end
  end
  AIF02W.WS-NEW-EZERT8 = sysVar.errorCode;
  /*  */
end // end AIF02P9-RD-NEW-FIL


Function AIF02P9-RD-OLD-FIL()
  AIF02W.WS-OLD-SSN = " ";
  try
    get next SR-AIF02A-OLD-REC ;
  end
  if (SR-AIF02A-OLD-REC is ioError && SR-AIF02A-OLD-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIF02P9-RD-OLD-FIL";
    VDBCONTROL.UPROC-OBJ = "SR-AIF02A-OLD-REC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIF02A";
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-AIF02A-OLD-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF02A-OLD-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF02A-OLD-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
  /*  */
  if (sysVar.errorCode == "00000000")
    AIF02W.WS-OLD = SR-AIF02A-OLD-REC.SLX-RECORD;
  else
    if (sysVar.errorCode == "00000102") /* end of file condition;*/
      AIF02W.WS-OLD-SSN = "999999999";
    end
  end
  AIF02W.WS-OLD-EZERT8 = sysVar.errorCode;
  /*  */
end // end AIF02P9-RD-OLD-FIL


Function AIF02P9-WRITE-FILE()
  try
    add SR-AIF02A-OUT-REC ;
  end
  if (SR-AIF02A-OUT-REC is ioError && SR-AIF02A-OUT-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIF02P9-WRITE-FILE";
    VDBCONTROL.UPROC-OBJ = "SR-AIF02A-OUT-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[2] = "AIF02A";
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-AIF02A-OUT-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF02A-OUT-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF02A-OUT-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
  /*  */
end // end AIF02P9-WRITE-FILE


Record AIF02W type basicRecord
  10 WS-OLD char(275) ; 
    15 WS-REC-TYP1 char(1) ; 
    15 WS-FSCL-CCYY1 char(4) ; 
    15 WS-OLD-SSN char(9) ; 
    15 WS-FILLER1 char(261) ; // filler for - sign
  10 WS-NEW char(275) ; 
    15 WS-REC-TYP2 char(1) ; 
    15 WS-FSCL-CCYY2 char(4) ; 
    15 WS-NEW-SSN char(9) ; 
    15 WS-FILLER2 char(261) ; // filler for - sign
  10 WS-OLD-EZERT8 char(8) ; 
  10 WS-NEW-EZERT8 char(8) ; 
end // end AIF02W


