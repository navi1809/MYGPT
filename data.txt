package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN30A ****
// COMPONENT NAME: AIN30A - NUMIDENT RESPONSE
// ===============
// 
// DESCRIPTION:
// ============
// UPDATES THE STATUS IN THE TWNPERSON
// TABLE AND CREATES A  RECORD IN THE TWNNMDT_SSN_VRFDTL. IT
// ALSO CREATES A RECORD IN TWNALTERNATE_SSN. EACH RECORD
// PROCESSED IS WRITTEN INTO A  REPORT OUTPUT FILE, WHICH
// IS FOR PRINTING.
// 
// 
// ***********************
Program AIN30A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIF25W1 AIF25W1; // record
  AIN30W AIN30W; // record
  AIN30W1 AIN30W1; // record
  AIN30W2 AIN30W2; // record
  BDATEREC BDATEREC; // record
  CEP01W CEP01W; // record
  GDW GDW; // record
  H-TCDTS1 H-TCDTS1; // record
  H2-2-DCC-SPT H2-2-DCC-SPT; // record
  H2-3-CMH-FAC-SPT H2-3-CMH-FAC-SPT; // record
  H2-ALTERNATE-SSN H2-ALTERNATE-SSN; // record
  H2-CASE-LOG H2-CASE-LOG; // record
  H2-IVD-CASE H2-IVD-CASE; // record
  H2-IVD-CASE-CHILD H2-IVD-CASE-CHILD; // record
  H2-IVD-CONTACTS H2-IVD-CONTACTS; // record
  H2-LCTE-ACTVY H2-LCTE-ACTVY; // record
  H2-NMDT-SSN-VRFDTL H2-NMDT-SSN-VRFDTL; // record
  H2-PERSON H2-PERSON; // record
  H2-VRFD-NAMES H2-VRFD-NAMES; // record
  H3-CASE-MEMBER-HST H3-CASE-MEMBER-HST; // record
  H3-IVD-CONTACTS H3-IVD-CONTACTS; // record
  PCALINP PCALINP; // record
  PDLI54A-PARMS PDLI54A-PARMS; // record
  SR-Q01F-REC SR-Q01F-REC; // record
  SR-Q04F-REC SR-Q04F-REC; // record
  SR-QCON-REC SR-QCON-REC; // record
  SR-QSIF-REC SR-QSIF-REC; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC7 VSTRREC7; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN30P9-MAIN-PROC: AIN30P9-MAIN-PROC();
  end // end main
end // end AIN30A


// INSERTS DATA IN TWNCASE_LOG
Function AIN30I1-INSRT-CLOG()
  WDB00PI();

  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIN30A";
  VDBCOMMON.USQLREC = "H2-CASE-LOG";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-LOG";
  VDBCONTROL.UPROC-NM = "AIN30I1-INSRT-CLOG";
  VDBCONTROL.UPROC-OPT = "ADD";
  /*  */
  try
    add H2-CASE-LOG
      with #sql{
        insert into TWNCASE_LOG
        (ICI, ACTVY_DT, LOG_CRN_TS, PRGM_CASE_TYPE,
          ACTVY_TM, WRKR_ID, LOG_ENTRY_DESC,
          LOG_ENTRY_TYPE, CL_ACTVY_DESC)
        values (:ICI, :ACTVY-DT, :LOG-CRN-TS, :PRGM-CASE-TYPE,
          CURRENT TIME, :WRKR-ID, :LOG-ENTRY-DESC,
          :LOG-ENTRY-TYPE, :CL-ACTVY-DESC)
      } ;
  end
  /*  */
  REPP9-SQL-CHKERR();
end // end AIN30I1-INSRT-CLOG


// ADD RECORD TO REPORT (AIN32A)
Function AIN30P9-ADD-01-REC()
  /* -------------------------------------------------------*/
  /* Build IVA/IVD Discrepancy Report File                 */
  /* -------------------------------------------------------*/
  /*  */
  try
    add SR-Q01F-REC ;
  end
  /*  */
  if (SR-Q01F-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN30P9-ADD-01-REC";
    VDBCONTROL.UPROC-OBJ = "SR-Q01F-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    AIN30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIN30A";
   /* the following conditions are added to move the corresponding*/
   /* error message*/
   /*  */
  /* MOVE 'WRITE ON Q01F RECORD FAILED'*/
  /* TO VDBCONTROL.UEZESQRRM;*/
    VDBCONTROL.UMSQLCODE = 0;
  /*  */
    if (SR-Q01F-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-Q01F-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-Q01F-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end
  /*  */
end // end AIN30P9-ADD-01-REC


// ADD RECORD TO REPORT (AIN57A)
Function AIN30P9-ADD-04-REC()
  /* CHANGE HISTORY*/
  /* --------------------------------------------*/
  /* DATE           PGR          DESCRIPTION*/
  /* -------------------------------------------*/
  /* 01-27-95      TBST184        CREATION*/

  /* CBSI START*/
  try
    add SR-Q04F-REC ;
  end
  if (SR-Q04F-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN30P9-ADD-04-REC";
    VDBCONTROL.UPROC-OBJ = "SR-Q04F-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    AIN30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIN30A";
    /* the following conditions are added to move the corresponding*/
    /* error message*/
    /*  */
  /* MOVE 'WRITE ON Q04F RECORD FAILED'*/
  /* TO VDBCONTROL.UEZESQRRM;*/
    VDBCONTROL.UMSQLCODE = 0;
  /*  */
    if (SR-Q04F-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-Q04F-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-Q04F-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end

  /* CBSI END*/
end // end AIN30P9-ADD-04-REC


// ADD RECORD TO CONTROL REC
Function AIN30P9-ADDCON-REC()
  try
    add SR-QCON-REC ;
  end

  if (SR-QCON-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN30P9-ADDCON-REC";
    VDBCONTROL.UPROC-OBJ = "SR-QCON-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    AIN30W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN30W.WS-ERR-LAST-FOUR;
    VMESSAGE.UMSGINS[2] = "AIN30A";
    /* the following conditions are added to move the corresponding*/
    /* error message*/
    /*  */
  /* MOVE 'WRITE ON CONTROL RECORD FAILED'*/
  /* TO VDBCONTROL.UEZESQRRM;*/
    VDBCONTROL.UMSQLCODE = 0;
  /*  */
    if (SR-QCON-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-QCON-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-QCON-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end
  /*  */
  /* CBSI END*/
end // end AIN30P9-ADDCON-REC


// ALTERNATE SSN CHANGE
Function AIN30P9-ALTSSN-CHG()
  /*  */
  /* NOMADS BEGIN*/
  /*  */
  /* fcr triggers are created here if alt-ssn is added per wi13442*/
  if (H2-PERSON.NCP-FG == "Y")
    set H2-IVD-CASE empty;
    H2-IVD-CASE.NCP-UPI = H2-PERSON.UPI;
    AIN30Q02-S02();
    if (sysVar.sqlData.sqlcode == 0)
      AIN30Q02-S02-SCAN();
      while (sysVar.sqlData.sqlcode == 0)
        set PDLI54A-PARMS empty;
        PDLI54A-PARMS.NCP-UPI = H2-IVD-CASE.NCP-UPI;
        PDLI54A-PARMS.CASE-SUFX = H2-IVD-CASE.CASE-SUFX;
        PDLI54A-PARMS.PARTICIPANT-UPI = H2-IVD-CASE.NCP-UPI;
        PDLI54A-PARMS.RECORD-ID = "FP";
        PDLI54A-PARMS.ACTION-CODE = "C";
        PDLI54A-PARMS.ALT-SSN-CHG-IND = "Y";
        call "DLI54A" (VDBCONTROL, VMESSAGE, PDLI54A-PARMS) {isNoRefresh = yes};
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
        AIN30Q02-S02-SCAN();
      end
    end
  end
  if (H2-PERSON.CST-FG == "Y")
    set H2-IVD-CASE empty;
    H2-IVD-CASE.CST-UPI = H2-PERSON.UPI;
    AIN30Q03-S03();
    if (sysVar.sqlData.sqlcode == 0)
      AIN30Q03-S03-SCAN();
      while (sysVar.sqlData.sqlcode == 0)
        set PDLI54A-PARMS empty;
        PDLI54A-PARMS.NCP-UPI = H2-IVD-CASE.NCP-UPI;
        PDLI54A-PARMS.CASE-SUFX = H2-IVD-CASE.CASE-SUFX;
        PDLI54A-PARMS.PARTICIPANT-UPI = H2-IVD-CASE.CST-UPI;
        PDLI54A-PARMS.RECORD-ID = "FP";
        PDLI54A-PARMS.ACTION-CODE = "C";
        PDLI54A-PARMS.ALT-SSN-CHG-IND = "Y";
        call "DLI54A" (VDBCONTROL, VMESSAGE, PDLI54A-PARMS) {isNoRefresh = yes};
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
        AIN30Q03-S03-SCAN();
      end
    end
  end
  if (H2-PERSON.CHD-FG == "Y")
    set H2-IVD-CASE-CHILD empty;
    H2-IVD-CASE-CHILD.CHD-UPI = H2-PERSON.UPI;
    AIN30Q04-S04();
    if (sysVar.sqlData.sqlcode == 0)
      AIN30Q04-S04-SCAN();
      while (sysVar.sqlData.sqlcode == 0)
        set PDLI54A-PARMS empty;
        PDLI54A-PARMS.NCP-UPI = H2-IVD-CASE-CHILD.NCP-UPI;
        PDLI54A-PARMS.CASE-SUFX = H2-IVD-CASE-CHILD.CASE-SUFX;
        PDLI54A-PARMS.PARTICIPANT-UPI = H2-IVD-CASE-CHILD.CHD-UPI;
        PDLI54A-PARMS.RECORD-ID = "FP";
        PDLI54A-PARMS.ACTION-CODE = "C";
        PDLI54A-PARMS.ALT-SSN-CHG-IND = "Y";
        call "DLI54A" (VDBCONTROL, VMESSAGE, PDLI54A-PARMS) {isNoRefresh = yes};
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
        AIN30Q04-S04-SCAN();
      end
    end
  end
  /* fcr triggers are created here if alt-ssn is added per wi13442*/
  /*  */
  /* NOMADS END*/
  /*  */
end // end AIN30P9-ALTSSN-CHG


// BUILD DATA FOR DISCREPANCY REP
Function AIN30P9-BDR-PROC()
  /*  */
  /* BUILD DISCREPANCY REPORT PROCESS*/
  set H2-PERSON empty;
  H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
  /*  */
  AIN30P9-READ-S01();
  /*  */
  if (H2-PERSON.IVA-CASE-MBR-FG == "Y")
    AIN30P9-IVADR-PROC();
  end
  /*  */
  /* PTR 4741 BEGIN*/
  if (H2-PERSON.NCP-FG == "Y" || 
  H2-PERSON.CST-FG == "Y" || 
  H2-PERSON.CHD-FG == "Y")
  /* PTR 4741 END*/
    AIN30P9-IVDDR-PROC();
  end
  /*  */
end // end AIN30P9-BDR-PROC


// XFER CNTL TO IVA/IVD REPORT
Function AIN30P9-BR-PROC()
  /* -------------------------------------------------------*/
  /* Build Report File.                                    */
  /* -------------------------------------------------------*/
  /*  */
  /* --------------PTR# 2444 CHANGE BEGIN March 14, 1996--------------*/
  /*  */
  if (SR-QSIF-REC.SVES-VERIFIED-SSN-DATA == " ")
    return;
  end
  /*  */
  /* --------------PTR# 2444 CHANGE END   March 14, 1996--------------*/
  /*  */
  set H2-PERSON empty;
  H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
  /*  */
  AIN30P9-READ-S01();
  /*  */
  if (H2-PERSON.IVA-CASE-MBR-FG == "Y")
    AIN30P9-IVAR-PROC();
  end
  /*  */
  /* PTR 4741 BEGIN*/
  if (H2-PERSON.NCP-FG == "Y" || 
  H2-PERSON.CST-FG == "Y" || 
  H2-PERSON.CHD-FG == "Y")
  /* PTR 4741 END*/
    AIN30P9-IVDR-PROC();
  end
  /*  */
end // end AIN30P9-BR-PROC


// Check for dup. Contact
Function AIN30P9-CHK-CON()
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN30A";
  VDBCONTROL.UPROC-NM = "AIN30P9-CHK-CON";
  VDBCONTROL.UPROC-OBJ = "H3-IVD-CONTACTS";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCOMMON.USQLREC = "H3-IVD-CONTACTS";
  /*  */
  try
    get H3-IVD-CONTACTS
      with #sql{
        select UPI
        from TWNIVD_CONTACTS T1
        WHERE UPI = :H2-IVD-CONTACTS.UPI
        AND   CASE_SUFX = :H2-IVD-CONTACTS.CASE-SUFX
        AND   CASE_FUNC_AREA = :H2-IVD-CONTACTS.CASE-FUNC-AREA
        AND   CNTCT_TYPE = :H2-IVD-CONTACTS.CNTCT-TYPE
        AND   CNTCT_SRC = :H2-IVD-CONTACTS.CNTCT-SRC
        AND   CASE_SPCFC_IND = :H2-IVD-CONTACTS.CASE-SPCFC-IND
        AND   WRKR_ID = :H2-IVD-CONTACTS.WRKR-ID
        AND   SUBSTR(CNTCT_TXT,1,100) = :AIN30W2.WS-CNTCT-TXT-1
        AND   SUBSTR(CNTCT_TXT,101,100) = :AIN30W2.WS-CNTCT-TXT-2
        AND   SUBSTR(CNTCT_TXT,201,85) = :AIN30W2.WS-CNTCT-TXT-3
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI ;
  end
  /*  */
  VDBCOMMON.UNRF = "Y";
  /*  */
  WDB00PE-SQLERR();
  /*  */
end // end AIN30P9-CHK-CON


// CHECK SSN HIERARCHY
Function AIN30P9-CHK-SSN-HR()
  /*  */
  /* --------------PTR# 2444 CHANGE BEGIN March 14, 1996--------------*/
  /*  */
  /* The SSN is updated using the following hierarchy.*/
  /* Priority 1 : "V" , "&" , "1" , "*"*/
  /* Priority 2 : "3"*/
  /* Priority 3 : '5'*/
  /*  */
  AIN30W.WS-UPDATE-FLAG = "N";
  /*  */
  if (AIN30W.WS-NOMADS-VERIF-CODE == AIN30W.WS-CHECK-SSN-CD)
    return;
  end
  /*  */
  if (AIN30W.WS-NOMADS-VERIF-CODE == "V")
    AIN30W.WS-CHECK-SSN-CD = AIN30W.WS-NOMADS-VERIF-CODE;
    AIN30W.WS-UPDATE-FLAG = "Y";
  end
  /*  */
  if (AIN30W.WS-NOMADS-VERIF-CODE == "1")
    if (AIN30W.WS-CHECK-SSN-CD == "3"
     || AIN30W.WS-CHECK-SSN-CD == "5"
     || AIN30W.WS-CHECK-SSN-CD == " ")
      AIN30W.WS-CHECK-SSN-CD = AIN30W.WS-NOMADS-VERIF-CODE;
      AIN30W.WS-UPDATE-FLAG = "Y";
    end
  end
  /*  */
  if (AIN30W.WS-NOMADS-VERIF-CODE == "3")
    if (AIN30W.WS-CHECK-SSN-CD == "5"
     || AIN30W.WS-CHECK-SSN-CD == " ")
      AIN30W.WS-CHECK-SSN-CD = AIN30W.WS-NOMADS-VERIF-CODE;
      AIN30W.WS-UPDATE-FLAG = "Y";
    end
  end
  /*  */
  if (AIN30W.WS-NOMADS-VERIF-CODE == "5")
    if (AIN30W.WS-CHECK-SSN-CD == " ")
      AIN30W.WS-CHECK-SSN-CD = AIN30W.WS-NOMADS-VERIF-CODE;
      AIN30W.WS-UPDATE-FLAG = "Y";
    end
  end
  /* --------------PTR# 2444 CHANGE END   March 14, 1996--------------*/
  /*  */
end // end AIN30P9-CHK-SSN-HR


// Convert Verfn Codes
Function AIN30P9-CON-VER-CD()
  /* -----------------------------------------------------------------------*/
  /* The verification codes known to NOMADS are "&" , "*" , "1" , "3" , "5"*/
  /* "V". The verification codes "M" , "P , "R" , "F" would be converted to*/
  /* a verification code known to NOMADS. The logic to convert verification*/
  /* as follows*/
  /*  */
  /* According to WI 17972 codes from NUMIDENT such as 'F', 'M', 'P', 'R',*/
  /* must be converted to 'V'.*/
  /*  */
  /* All other verifcation codes not known to NOMADS will be written*/
  /* into the Numident descrepancy report.*/
  /* -----------------------------------------------------------------------*/
  AIN30W.WS-KNOWN-TO-NOMADS-CODE = "Y";

  if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "1" || 
  SR-QSIF-REC.SVES-VERIFICATION-CODE == "3" || 
  SR-QSIF-REC.SVES-VERIFICATION-CODE == "5" || 
  SR-QSIF-REC.SVES-VERIFICATION-CODE == "V")
    AIN30W.WS-NOMADS-VERIF-CODE = SR-QSIF-REC.SVES-VERIFICATION-CODE;
  else
    if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "M" || 
    SR-QSIF-REC.SVES-VERIFICATION-CODE == "P" || 
    SR-QSIF-REC.SVES-VERIFICATION-CODE == "R" || 
    SR-QSIF-REC.SVES-VERIFICATION-CODE == "F")
      AIN30W.WS-NOMADS-VERIF-CODE = "V";
    else
      if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "&")
        AIN30W.WS-NOMADS-VERIF-CODE = "V";
        AIN30P9-UP-ALT-SSN();
      else
        if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "*")
          AIN30W.WS-NOMADS-VERIF-CODE = "1";
          AIN30P9-UP-ALT-SSN();
        else
          AIN30W.WS-PROBLEM-DESC = "Unknown code - ";
          AIN30W.WS-PROBLEM-CODE = SR-QSIF-REC.SVES-VERIFICATION-CODE;
          AIN30W.WS-CHECK-SSN-CD = SR-QSIF-REC.SVES-VERIFICATION-CODE;
          AIN30W.WS-KNOWN-TO-NOMADS-CODE = "N";
          AIN30A-01-CODE-DESC = AIN30W.WS-PROBLEM-CODE-DESC;
          AIN30P9-BDR-PROC();
        end
      end
    end
  end
  /*  */
end // end AIN30P9-CON-VER-CD


// XFER CNTL TO UVA/ IVD ALERT
Function AIN30P9-CP-PROC()
  /*  */
  set H2-PERSON empty;
  H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
  /*  */
  AIN30P9-READ-S01();
  /*  */
  if (H2-PERSON.IVA-CASE-MBR-FG == "Y")
  /* PERFORM AIN30P9-IVA-ALERT;   /* WI 24604*/
    AIN30P9-IVA-S-ALRT(); /* WI 24604*/
  end
  /*  */
  /* PTR 4741 BEGIN*/
  /* THE CUSTODIAN AND CHILD FLAGS SHOULD ALSO BE CHECKED TO DETERMINE A*/
  /* IV-D CASE.*/
  if (H2-PERSON.NCP-FG == "Y" || 
  H2-PERSON.CST-FG == "Y" || 
  H2-PERSON.CHD-FG == "Y")
    /* PERFORM AIN30P9-UPD-LOCATE;*/

    AIN30P9-IVD-ALERT();
  end
  /* PTR 4741 END*/
  /*  */
end // end AIN30P9-CP-PROC


// Create Case Tracking
Function AIN30P9-CRE-CSETRK()
  /* ************************************************************************/
  /* THIS PROCESS CREATES A ROW IN TWNIVD_CONTACTS TABLE*/
  /* ************************************************************************/

  set H2-IVD-CONTACTS empty;
  set AIN30W2 empty;

  H2-IVD-CONTACTS.UPI = AIN30W.WS-NCP-UPI;
  H2-IVD-CONTACTS.CNTCT-SRC = "NUMID";
  H2-IVD-CONTACTS.CNTCT-TYPE = "I";
  H2-IVD-CONTACTS.CASE-FUNC-AREA = " ";

  if (AIN30W.WS-NCP-SUFFIX == " ")

    H2-IVD-CONTACTS.CASE-SPCFC-IND = "N";
    H2-IVD-CONTACTS.CASE-SUFX = "A";

  else

    H2-IVD-CONTACTS.CASE-SPCFC-IND = "Y";
    H2-IVD-CONTACTS.CASE-SUFX = AIN30W.WS-NCP-SUFFIX;
    AIN30W.WS-NCP-SUFFIX = " ";

  end

  AIN30W2.WS-CONCAT-TXT = "NUMIDENT HAS RESPONDED ON THE FOLLOWING PERSON: ";
  AIN30W2.WS-VAR1 = "; SSN: ";
  AIN30W2.WS-VAR2 = SR-QSIF-REC.SVES-INPUT-SSN;
  AIN30W2.WS-VAR3 = "NAME: ";
  AIN30W2.WS-VAR4 = SR-QSIF-REC.SVES-INPUT-SURNAME;
  AIN30W2.WS-VAR5 = SR-QSIF-REC.SVES-INPUT-GIVEN-NAME;
  AIN30W2.WS-VAR6 = SR-QSIF-REC.SVES-INPUT-INITIAL;
// WI 1628 begin
//  AIN30W2.WS-VAR8 = "; SSN VERIFICATION CODE: ";
//  AIN30W2.WS-VAR9 = SR-QSIF-REC.SVES-VERIFICATION-CODE;
// WI 1628 end

  if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "*" || 
  SR-QSIF-REC.SVES-VERIFICATION-CODE == "&")

    if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "*")

      AIN30W2.WS-VAR10 = " ; CORRECTED VERIFIED SSN: ";

    end

    if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "&")

      AIN30W2.WS-VAR10 = " ; ADDITIONAL VERIFIED SSN(S): ";

    end

    AIN30W2.WS-CNTR = 1;

    while (AIN30W2.WS-CNTR <= 5)

      if (AIN30W2.WS-CNTR != 1 && AIN30W2.WS-ALT-SSN[WS-CNTR] != " ")

        AIN30W2.WS-COMMA[WS-CNTR] = ", ";

      else

        AIN30W2.WS-COMMA[WS-CNTR] = "  ";

      end

      if (SVES-VERIFIED-SSN[WS-CNTR] != " ")

        AIN30W2.WS-ALT-SSN[WS-CNTR] = SVES-VERIFIED-SSN[WS-CNTR];

      else

        AIN30W2.WS-ALT-SSN[WS-CNTR] = " ";

      end

      AIN30W2.WS-CNTR = AIN30W2.WS-CNTR + 1;

    end
  end

  /* ***********************************************************************/
  /* WI #27602 -*/
  /* IF THE NUMIDENT VERF CODE = 3, 4  THE DOB FOR TRACKING IS*/
  /* TO BE PICKED FROM SVES-VERIFIED-SSN-DATA INSTEAD OF*/
  /* SVES-DATE-OF-BIRTH. THE DATE OF BIRTH IS VERIFIED THEN MOVED BACK INTO*/
  /* SR-QSIF-REC.SVES-DATE-OF-BIRTH.*/
  /* ***********************************************************************/

  if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "3"
   || SR-QSIF-REC.SVES-VERIFICATION-CODE == "4")
  /* OR SR-QSIF-REC.SVES-VERIFICATION-CODE = '5';*/
  /* when code = 5 no corrected DOB is sent: instead it means the name is*/
  /* not matching*/
    AIN30W2.WS-VAR11 = " ;CORRECTED DOB: ";

  /* MOVE SVES-DOB-MO TO AIN30W2.WS-DATE-MM;*/
  /* MOVE SVES-DOB-DY TO AIN30W2.WS-DATE-DD;*/
  /* MOVE SVES-DOB-YR TO AIN30W2.WS-DATE-CCYY;*/
  /* MOVE '-' TO AIN30W2.WS-DATE-FILL1;*/
  /* MOVE '-' TO AIN30W2.WS-DATE-FILL2;*/
  /* MOVE AIN30W2.WS-DATE TO AIN30W2.WS-DOB;*/

    move SVES-VERIFIED-SSN-DATA to WS-NUMIDENT-VERF-3-DT withV60Compat;
    AIN30W2.WS-DOB = AIN30W.WS-NUMIDENT-DATE;
    SVES-DOB-MO = AIN30W.WS-NUMIDENT-DATE-MM;
    SVES-DOB-DY = AIN30W.WS-NUMIDENT-DATE-DD;
    SVES-DOB-YR = AIN30W.WS-NUMIDENT-DATE-YY;

  end

  VSTRREC7.UINSTRG = AIN30W2.WS-CONCAT-STR;
  VSTRREC7.USTRLENGTH = 300;

  call "WST60A" (VSTRREC7);

  AIN30W2.WS-CONCAT-STR = VSTRREC7.UOUTSTRG;
  H2-IVD-CONTACTS.CNTCT-TXT = AIN30W2.WS-CONCAT-STR;

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};

  AIN30W.WS-PROCESS-TS = GDW.TS;
  AIN30W.WS-PROCESS-DATE = AIN30W.WS-PROC-DT;
  H2-IVD-CONTACTS.CRTD-TS = AIN30W.WS-PROCESS-TS;
  H2-2-DCC-SPT.UPI = H2-IVD-CONTACTS.UPI;

  AIN30P9-S01-PROC();

  H2-IVD-CONTACTS.WRKR-ID = H2-2-DCC-SPT.NOMADS-USRID;

  /* ************************************************************************/
  /* CHECK FOR IDENTICAL CONTACT (MINUS CRTD_TS); DO NOT ADD IF FOUND,*/
  /* AND SET CREATE-ALERT-FLAG TO 'N'.*/
  /* ************************************************************************/

  AIN30W2.WS-CNTCT-TXT = AIN30W2.WS-CONCAT-STR;

  AIN30P9-CHK-CON();

  if (VDBCONTROL.URC >= 104)

    WCM00P2-TO-CEP01A();

  else

    if (VDBCONTROL.URC == 0)

      AIN30W.WS-CRE-ALERT-FG = "N";

    else

      if (VDBCONTROL.URC == 100)

        AIN30P9-TCONIOL1();

        if (VDBCONTROL.URC >= 104)

          WCM00P2-TO-CEP01A();

        end
      end
    end
  end

  /*  */
end // end AIN30P9-CRE-CSETRK


// Create DOD Alert
Function AIN30P9-DOD-ALERT()
  /* ******************** WI 21295:WNMLS:2002-08-16 *************************/
  /* WHEN SR-QSIF-REC.SVES-VERIFICATION-CODE = 'X', A CLOG AND AN ALERT*/
  /* WILL BE CREATED TO NOTIFY THE WORKER OF THE DATE OF DEATH.*/
  /* NO ROW WILL BE WRITTEN TO THE REPORT.  THE SSN-VRFN-STS-CD COLUMN*/
  /* IN TWNPERSON WILL BE UPDATED WITH 'E'. THE SSN-SRC-CD COLUMN IN*/
  /* TWNPERSON WILL BE UPDATED WITH 'SSA'.*/
  /* THIS PROCESS IS A CLONE OF AIN30P9-IVA-ALERT WITH SOME MODIFICATIONS*/
  /* INCLUDING CLOG AND U01 PROCESSING.*/
  /* ************************************************************************/

  set H2-3-CMH-FAC-SPT empty;
  H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-PROC-DT;

  AIN30P9-READ-S03X(); /* GET ALL ICI'S FOR THE UPI*/
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    AIN30P9-SCAN-S03X();
    if (sysVar.sqlData.sqlcode == 0)
      while (sysVar.sqlData.sqlcode == 0)

        AIN30P9-DOD-CLOG();

        PCALINP.PAL-ALERT-CD = 129046;
        PCALINP.PAL-UPI = H2-3-CMH-FAC-SPT.ICI;
        PCALINP.PAL-ALERT-ACTION = "C";
        call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
        H2-PERSON.SSN-VRFN-STS-CD = "E";
        H2-PERSON.SSN-SRC-CD = "SSA";
        AIN30P9-U01-PROC();
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        AIN30P9-SCAN-S03X();
      end
  /* Changes due to WI 15300 *** Begin*/
    else
      AIN30W.WS-CURR-DT = AIN30W.WS-PROC-DT;
  /* 19228 start: example if ws-proc-dt = 1/30/99 date created*/
  /* would have been 2/30/99 thus -181*/
      if (AIN30W.WS-PROC-DT-DD > 28)
        AIN30W.WS-CURR-DT-DD = 28;
      end
  /* 19228 end*/
      AIN30W.WS-CURR-DT-MM = AIN30W.WS-CURR-DT-MM + 1;
      if (AIN30W.WS-CURR-DT-MM == 13)
        AIN30W.WS-CURR-DT-MM = 01;
        AIN30W.WS-CURR-DT-CCYY = AIN30W.WS-CURR-DT-CCYY + 1;
      end

      set H2-3-CMH-FAC-SPT empty;
      H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
      H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-CURR-DT;
      H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-CURR-DT;
      H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-CURR-DT;
  /*  */
      AIN30P9-READ-S03X();
      while (sysVar.sqlData.sqlcode == 0)
        AIN30P9-SCAN-S03X();
        if (sysVar.sqlData.sqlcode == 0)

          AIN30P9-DOD-CLOG();

          PCALINP.PAL-ALERT-CD = 129046;
          PCALINP.PAL-UPI = H2-3-CMH-FAC-SPT.ICI;
          PCALINP.PAL-ALERT-ACTION = "C";
          call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};
          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end

          H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
          H2-PERSON.SSN-VRFN-STS-CD = "E";
          H2-PERSON.SSN-SRC-CD = "SSA";
          AIN30P9-U01-PROC();
          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end

        end
  /* Changes due to WI 15300 *** End*/
      end
    end
  end
  /*  */
end // end AIN30P9-DOD-ALERT


// BUILD CLOG DATA
Function AIN30P9-DOD-CLOG()
  /* ******************** WI 21295:WNMLS:2002-08-16 *************************/
  /* WHEN SR-QSIF-REC.SVES-VERIFICATION-CODE = 'X', A CLOG*/
  /* WILL BE CREATED TO NOTIFY THE WORKER OF THE DATE OF DEATH.*/
  /* ************************************************************************/

  set H2-CASE-LOG empty;
  AIN30W.WS-CLOG-TS = "0001-01-01-00.00.00.000000"; /* WI 24604*/

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  AIN30W.WS-CLOG-TS = GDW.TS;

  H2-CASE-LOG.ICI = H2-3-CMH-FAC-SPT.ICI;
  H2-CASE-LOG.PRGM-CASE-TYPE = "FS";
  H2-CASE-LOG.LOG-ENTRY-TYPE = "S";
  H2-CASE-LOG.WRKR-ID = H2-3-CMH-FAC-SPT.CASLD-ID;

  H2-CASE-LOG.LOG-CRN-TS = AIN30W.WS-CLOG-TS;
  H2-CASE-LOG.ACTVY-DT = AIN30W.WS-CLOG-DATE;
  H2-CASE-LOG.ACTVY-TM = AIN30W.WS-CLOG-TIME;
  AIN30W.WS-CLOG-ACTVY-TEXT = "INDIVIDUAL IS DECEASED, PER SSA - DOD IS ";
  AIN30W.WS-SVES-VERFD-DATA = SR-QSIF-REC.SVES-VERIFIED-SSN-DATA;
  AIN30W.WS-CLOG-ACTVY-DOD = AIN30W.WS-SVES-DOD;

  H2-CASE-LOG.CL-ACTVY-DESC = AIN30W.WS-CLOG-ACTVY-DESC;
  H2-CASE-LOG.LOG-ENTRY-DESC = "ECS ACTION REQUIRED";

  AIN30I1-INSRT-CLOG();
end // end AIN30P9-DOD-CLOG


// Create Case Tracking
Function AIN30P9-GET-NCPUPI()
  /* ------------------------------------------------------*/
  /* This process retrieves the ncp's upi when the given participant*/
  /* is a CST or a CHD.  This process created due to WI 14465, not all*/
  /* IV-D case members where being tracked correctly, and therefore were*/
  /* not being displayed correctly, if at all, on TR01 screen*/
  /* ------------------------------------------------------*/
  /*  */
  /* WI 18648 - The actual WI referred to above was 14446, which caused*/
  /* tracking records to be created for ALL cases for the NCP, not just*/
  /* the one(s) associated with the CST or CHD.  WI 18648 adds suffix*/
  /* to the case tracking logic.*/
  set H2-IVD-CASE empty;
  set H2-IVD-CASE-CHILD empty;

  /* if participant is a custodian, get ncp-upi's of all cases the custodia*/
  /* is on and create case tracking in IVD-CONTACTS table.*/
  if (H2-PERSON.CST-FG == "Y")

    H2-IVD-CASE.CST-UPI = H2-PERSON.UPI;
    AIN30Q05-IDC();
    if (sysVar.sqlData.sqlcode == 0)
      AIN30Q05-IDC-SCAN();
    end

    while (sysVar.sqlData.sqlcode == 0)

      AIN30W.WS-NCP-UPI = H2-IVD-CASE.NCP-UPI;
  /* WI 18648 begin*/
      AIN30W.WS-NCP-SUFFIX = H2-IVD-CASE.CASE-SUFX;
  /* WI 18648 end*/
      AIN30P9-CRE-CSETRK();
      AIN30Q05-IDC-SCAN();

    end
  end

  /* if participant is a CHILD, get ncp-upi's of all cases the CHILD*/
  /* is on and create case tracking in IVD-CONTACTS table.*/
  if (H2-PERSON.CHD-FG == "Y")

    H2-IVD-CASE-CHILD.CHD-UPI = H2-PERSON.UPI;
    AIN30Q06-DCC();
    if (sysVar.sqlData.sqlcode == 0)
      AIN30Q06-DCC-SCAN();
    end

    while (sysVar.sqlData.sqlcode == 0)

      AIN30W.WS-NCP-UPI = H2-IVD-CASE-CHILD.NCP-UPI;
  /* WI 18648 begin*/
      AIN30W.WS-NCP-SUFFIX = H2-IVD-CASE-CHILD.CASE-SUFX;
  /* WI 18648 end*/
      AIN30P9-CRE-CSETRK();
      AIN30Q06-DCC-SCAN();

    end
  end

  if (H2-PERSON.NCP-FG == "Y")

    AIN30W.WS-NCP-UPI = H2-PERSON.UPI;
    AIN30P9-CRE-CSETRK();

  end
end // end AIN30P9-GET-NCPUPI


// ADD NMDT SSN VRFDTL TABLE
Function AIN30P9-I01-PROC()
  /*  */
  VDBCONTROL.UPROC-NM = "AIN30P9-I01-PROC";
  VDBCONTROL.UPROC-OBJ = "H2-NMDT-SSN-VRFDTL";
  VDBCONTROL.UPROC-OPT = "ADD";
  VDBCOMMON.USQLREC = "H2-NMDT-SSN-VRFDTL";
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 BEGIN----------------*/
  /*  */
  H2-NMDT-SSN-VRFDTL.PROCESS-DT = AIN30W.WS-PROC-DT;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 END------------------*/
  /*  */
  try
    add H2-NMDT-SSN-VRFDTL ;
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
  end
  /*  */
end // end AIN30P9-I01-PROC


// Create Verified Names Record
Function AIN30P9-I02-PROC()
  /*  */
  VDBCONTROL.UPROC-NM = "AIN30P9-I02-PROC";
  VDBCONTROL.UPROC-OBJ = "H2-VRFD-NAMES";
  VDBCONTROL.UPROC-OPT = "ADD";
  VDBCOMMON.USQLREC = "H2-VRFD-NAMES";
  /*  */
  try
    add H2-VRFD-NAMES
      with #sql{
        insert into TWNVRFD_NAMES
        (UPI, ALT_SSN, AKA_MODFR, AKA_MID_NM, AKA_FRST_NM, AKA_LST_NM)
        values (:UPI, :ALT-SSN,:AKA-MODFR, :AKA-MID-NM, :AKA-FRST-NM,
            :AKA-LST-NM)
      } ;
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
  end
  /*  */
end // end AIN30P9-I02-PROC


Function AIN30P9-I03-PROC()
  try
    add H2-ALTERNATE-SSN ;
  end
end // end AIN30P9-I03-PROC


// INITIALISATION PROC
Function AIN30P9-INIT-PROC()
  /* CHANGE HISTORY*/
  /* ---------------------------------------------*/
  /* DATE           PGR          DESCRIPTION*/
  /* -------------------------------------------*/
  /* 01-27-95      TBST184        CREATION*/

  /* CBSI START*/

  set AIN30W empty;
  set AIN30W1 empty;
  SR-QCON-REC.AININT-CNT-NO-RECS = 0;
  SR-QCON-REC.AININT-CNT-REC-PRO = 0;
  SR-QCON-REC.AININT-CNT-REC-SKIP = 0;
  /* PTR4782 BEGIN*/
  AIN30W.WS-FIRST-TIME-FLAG = "T";
  AIN30W.WS-PREV-SSN = " ";
  /* PTR4782 END*/
  /* IT IS ASSUMED THAT THE INPUT FILE IS BEING SORTED BY*/
  /* A JCL EXTERNALLY.*/
  /* CBSI END*/
end // end AIN30P9-INIT-PROC


// Create SSN Alert
Function AIN30P9-IVA-S-ALRT()
  /* ****************** WI 24604:WNMLS:2003-08-26 ***************************/
  /* THIS PROCESS IS A CLONE OF AIN30P9-DOD-ALERT WITH SOME MODIFICATIONS.*/
  /* WHEN THE ALERT 129008 ('PRIMARY SSN NOT VERIFIED') IS GENERATED,*/
  /* A CLOG WILL BE CREATED TO NOTIFY THE WORKER OF THE SSN.*/
  /* ************************************************************************/

  set H2-3-CMH-FAC-SPT empty;
  H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-PROC-DT;

  AIN30P9-READ-S03X(); /* GET ALL ICI'S FOR THE UPI*/
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    AIN30P9-SCAN-S03X();
    if (sysVar.sqlData.sqlcode == 0)
      while (sysVar.sqlData.sqlcode == 0)

        AIN30P9-IVA-S-CLOG();

        PCALINP.PAL-ALERT-CD = 129008;
        PCALINP.PAL-UPI = H2-3-CMH-FAC-SPT.ICI;
        PCALINP.PAL-ALERT-ACTION = "C";
        call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        AIN30P9-SCAN-S03X();
      end /* WHILE*/

    else
      AIN30W.WS-CURR-DT = AIN30W.WS-PROC-DT;
  /* 19228 start: example if ws-proc-dt = 1/30/99 date created*/
  /* would have been 2/30/99 thus -181*/
      if (AIN30W.WS-PROC-DT-DD > 28)
        AIN30W.WS-CURR-DT-DD = 28;
      end
  /* 19228 end*/
      AIN30W.WS-CURR-DT-MM = AIN30W.WS-CURR-DT-MM + 1;
      if (AIN30W.WS-CURR-DT-MM == 13)
        AIN30W.WS-CURR-DT-MM = 01;
        AIN30W.WS-CURR-DT-CCYY = AIN30W.WS-CURR-DT-CCYY + 1;
      end

      set H2-3-CMH-FAC-SPT empty;
      H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
      H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-CURR-DT;
      H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-CURR-DT;
      H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-CURR-DT;
  /*  */
      AIN30P9-READ-S03X();
      while (sysVar.sqlData.sqlcode == 0)
        AIN30P9-SCAN-S03X();
        if (sysVar.sqlData.sqlcode == 0)

          AIN30P9-IVA-S-CLOG();

          PCALINP.PAL-ALERT-CD = 129008;
          PCALINP.PAL-UPI = H2-3-CMH-FAC-SPT.ICI;
          PCALINP.PAL-ALERT-ACTION = "C";
          call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};
          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end

        end /* IF*/

      end /* WHILE*/
    end /* IF CURR-DT RECS*/
  end /* IF PROC-DT RECS*/
  /*  */
end // end AIN30P9-IVA-S-ALRT


// BUILD CLOG DATA
Function AIN30P9-IVA-S-CLOG()
  /* ****************** WI 24604:WNMLS:2003-08-26 ***************************/
  /* WHEN ALERT 129008 IS GENERATED, 'PRIMARY SSN NOT VERIFIED',*/
  /* A CLOG WILL BE CREATED TO NOTIFY THE WORKER OF THE SSN.*/
  /* ************************************************************************/

  set H2-CASE-LOG empty;
  AIN30W.WS-SSN = " ";
  AIN30W.WS-CLOG-TS = "0001-01-01-00.00.00.000000";
  AIN30W.WS-CLOG-ACTVY-SSN-DESC = " ";

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  AIN30W.WS-CLOG-TS = GDW.TS;

  H2-CASE-LOG.ICI = H2-3-CMH-FAC-SPT.ICI;
  H2-CASE-LOG.PRGM-CASE-TYPE = "FS";
  H2-CASE-LOG.LOG-ENTRY-TYPE = "S";
  H2-CASE-LOG.WRKR-ID = H2-3-CMH-FAC-SPT.CASLD-ID;

  H2-CASE-LOG.LOG-CRN-TS = AIN30W.WS-CLOG-TS;
  H2-CASE-LOG.ACTVY-DT = AIN30W.WS-CLOG-DATE;
  H2-CASE-LOG.ACTVY-TM = AIN30W.WS-CLOG-TIME;
  AIN30W.WS-CLOG-ACTVY-SSN-TEXT = "PRIMARY SSN NOT VERIFIED - SSN IS ";

  AIN30W.WS-SSN = H2-PERSON.SSN; /* FROM READ-S01*/
  AIN30W.WS-CLOG-ACTVY-SSN-3 = AIN30W.WS-SSN-3;
  AIN30W.WS-CLOG-ACTVY-SSN-FIL1 = " ";
  AIN30W.WS-CLOG-ACTVY-SSN-2 = AIN30W.WS-SSN-2;
  AIN30W.WS-CLOG-ACTVY-SSN-FIL2 = " ";
  AIN30W.WS-CLOG-ACTVY-SSN-4 = AIN30W.WS-SSN-4;

  H2-CASE-LOG.CL-ACTVY-DESC = AIN30W.WS-CLOG-ACTVY-SSN-DESC;
  H2-CASE-LOG.LOG-ENTRY-DESC = AIN30W.WS-CLOG-ACTVY-SSN-DESC;

  AIN30I1-INSRT-CLOG();
end // end AIN30P9-IVA-S-CLOG


// Build IVA Interface
Function AIN30P9-IVABI-PROC()
  /* -------------------------------------------------------*/
  /* Build IVA Interface                                   */
  /* -------------------------------------------------------*/
  /*  */
  /* IVA BUILD INTERFACE PROCESS*/
  /* ************ CHANGES DUE TO RELEASE I SYSTEM TESTING ********/
  /* *** THE TWNNMDT SSN VRFDTL IS READ TO DETERMINE IF A RECORD EXISTS*/
  /* **** FOR THE SSN AND UPI. IF A RECORD EXISTS AND SSN STS IS VERIFIED*/
  /* **** THEN NO PROCESSING NEEDS TO BE DONE*/

  /* ** KEY SETTING*/

  H2-NMDT-SSN-VRFDTL.UPI = SR-QSIF-REC.SVES-UPI;
  H2-NMDT-SSN-VRFDTL.TEMP-SSN = SR-QSIF-REC.SVES-INPUT-SSN;
  /* ** END KEY SETTING*/
  WDB00PI();
  /*  */
  AIN30P9-READ-S06();
  VDBCOMMON.UNRF = "Y";
  /*  */
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  if (VDBCONTROL.URC == 0)
    if (H2-NMDT-SSN-VRFDTL.SSN-STS == "V")
      return;
    else
  /*  */
  /* --------------PTR# 2444 CHANGE BEGIN March 14, 1996--------------*/
  /*  */
      H2-NMDT-SSN-VRFDTL.SSN-STS = AIN30W.WS-CHECK-SSN-CD;
  /*  */
  /* --------------PTR# 2444 CHANGE END   March 14, 1996--------------*/
  /*  */
      WDB00PI();
      /*  */
      AIN30P9-UPD-U03();
      VDBCOMMON.UNRF = "Y";
      /*  */
      WDB00PE-SQLERR();
      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end
    end
  end
  /*  */
  set H2-NMDT-SSN-VRFDTL empty;
  H2-NMDT-SSN-VRFDTL.UPI = SR-QSIF-REC.SVES-UPI;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 BEGIN----------------*/
  /*  */
  H2-NMDT-SSN-VRFDTL.PROCESS-DT = AIN30W.WS-PROC-DT;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 END------------------*/
  /*  */
  /* --------------PTR# 2444 CHANGE BEGIN March 14, 1996--------------*/
  /*  */
  H2-NMDT-SSN-VRFDTL.SSN-STS = AIN30W.WS-CHECK-SSN-CD;
  /*  */
  /* --------------PTR# 2444 CHANGE END   March 14, 1996--------------*/
  /*  */
  H2-NMDT-SSN-VRFDTL.TEMP-SSN = SR-QSIF-REC.SVES-INPUT-SSN;
  /*  */
  AIN30W.WS-DATE2 = SR-QSIF-REC.SVES-DATE-OF-BIRTH;
  /* MOVE SR-QSIF-REC.SVES-DOB-MO TO AIN30W.WS-DOB-MO;*/
  /* MOVE SR-QSIF-REC.SVES-DOB-DY TO AIN30W.WS-DOB-DY;*/
  /* MOVE SR-QSIF-REC.SVES-DOB-YR TO AIN30W.WS-DOB-YR;*/
  /*  */
  /* Obtain the century part of DOB from the year value given*/
  /*  */
  /* IF AIN30W.WS-DOB-YR > '05';*/
  /*  */
  /* MOVE '19' TO AIN30W.WS-DOB-CC;*/
  /* ELSE;*/
  /*  */
  /* MOVE '20' TO AIN30W.WS-DOB-CC;*/
  /* D;*/
  /*  */
  WDB00PI();
  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIN30A";
  AIN30P9-I01-PROC();
  /*  */
  VDBCOMMON.UDUP = "Y";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
  /* ********* CHANGES DUE TO RELEASE I SYSTEM TEST - END *******/
  /*  */
end // end AIN30P9-IVABI-PROC


// Build IVA Discrepancy Report
Function AIN30P9-IVADR-PROC()
  /* ************************************************************************/
  /* BUILD IVA DISCREPANCY REPORT*/
  /* ************************************************************************/

  set H2-3-CMH-FAC-SPT empty;

  H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-PROC-DT;

  WDB00PI();

  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN30A";

  AIN30P9-READ-S03();

  VDBCOMMON.UNRF = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC > 104)

    WCM00P2-TO-CEP01A();

  end

  if (sysVar.sqlData.sqlcode == 0)

    SR-Q01F-REC.AIN30A-01-OFC-CD = H2-3-CMH-FAC-SPT.OFC-CD;
    SR-Q01F-REC.AIN30A-01-CASLD-ID = H2-3-CMH-FAC-SPT.CASLD-ID;
    SR-Q01F-REC.AIN30A-01-NOMADS-USRID = H2-3-CMH-FAC-SPT.NOMADS-USRID;

  else

    H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
    AIN30W.WS-CURR-DT = AIN30W.WS-PROC-DT;

    AIN30W.WS-CURR-DT-MM = AIN30W.WS-CURR-DT-MM + 1;

    if (AIN30W.WS-PROC-DT-DD > 28)
      AIN30W.WS-CURR-DT-DD = 28;

    end

    if (AIN30W.WS-CURR-DT-MM == 13)
      AIN30W.WS-CURR-DT-MM = 01;

      AIN30W.WS-CURR-DT-CCYY = AIN30W.WS-CURR-DT-CCYY + 1;

    end

    H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-CURR-DT;
    H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-CURR-DT;
    H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-CURR-DT;

    WDB00PI();

    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "AIN30A";

    AIN30P9-READ-S03();

    VDBCOMMON.UNRF = "Y";

    WDB00PE-SQLERR();

    if (VDBCONTROL.URC > 104)

      WCM00P2-TO-CEP01A();

    end

    if (sysVar.sqlData.sqlcode == 0)

      SR-Q01F-REC.AIN30A-01-OFC-CD = H2-3-CMH-FAC-SPT.OFC-CD;
      SR-Q01F-REC.AIN30A-01-CASLD-ID = H2-3-CMH-FAC-SPT.CASLD-ID;
      SR-Q01F-REC.AIN30A-01-NOMADS-USRID = H2-3-CMH-FAC-SPT.NOMADS-USRID;

    end
  end

  SR-Q01F-REC.AIN30A-01-LAST-NM = SR-QSIF-REC.SVES-INPUT-SURNAME;
  SR-Q01F-REC.AIN30A-01-MD-INIT = SR-QSIF-REC.SVES-INPUT-INITIAL;
  SR-Q01F-REC.AIN30A-01-FST-NM = SR-QSIF-REC.SVES-INPUT-GIVEN-NAME;
  SR-Q01F-REC.AIN30A-01-PROCESS-DATE = AIN30W.WS-PROC-DT-F;
  SR-Q01F-REC.AIN30A-01-SSN = SR-QSIF-REC.SVES-INPUT-SSN;

  /* ***********************************************************************/
  /* WI #27602 -*/
  /* IF THE NUMIDENT VERF CODE = 3, 4, OR 5, THE DOB FOR TRACKING IS*/
  /* TO BE PICKED FROM SVES-VERIFIED-SSN-DATA INSTEAD OF*/
  /* SVES-DATE-OF-BIRTH. THE DATE OF BIRTH IS VERIFIED THEN MOVED BACK INTO*/
  /* SR-QSIF-REC.SVES-DATE-OF-BIRTH.*/
  /* ***********************************************************************/

  if (((SR-QSIF-REC.SVES-VERIFICATION-CODE == "3"
   || SR-QSIF-REC.SVES-VERIFICATION-CODE == "4"
   || SR-QSIF-REC.SVES-VERIFICATION-CODE == "5")
   && (SR-QSIF-REC.SVES-VERIFIED-SSN-DATA > " ")))

    AIN30W2.WS-VAR11 = " ;CORRECTED DOB: ";

    move SVES-VERIFIED-SSN-DATA to WS-NUMIDENT-VERF-3-DT withV60Compat;
    SVES-DOB-MO = AIN30W.WS-NUMIDENT-DATE-MM;
    SVES-DOB-DY = AIN30W.WS-NUMIDENT-DATE-DD;
    SVES-DOB-YR = AIN30W.WS-NUMIDENT-DATE-YY;

  end

  AIN30W.WS-DATE2 = SR-QSIF-REC.SVES-DATE-OF-BIRTH;
  SR-Q01F-REC.AIN30A-01-DOB = AIN30W.WS-DATE2;

  /* ************************************************************************/
  /* WI #27602 - MOVE 'SSNCODE' TO CODE_TBL_TYP TO RETRIEVE PROPER ERROR*/
  /* MESSAGE. ALSO, MOVE SR-QSIF-REC.SVES-VERIFICATION-CODE*/
  /* TO H-TCDTS1.CODE-TBL-CD SINCE AIN30W.WS-NOMADS-VERIF-CODE*/
  /* IS NOT ALWAYS POPULATED.*/
  /* ************************************************************************/

  set H-TCDTS1 empty;

  /* MOVE AIN30W.WS-NOMADS-VERIF-CODE TO H-TCDTS1.CODE-TBL-CD;*/
  H-TCDTS1.CODE-TBL-CD = SR-QSIF-REC.SVES-VERIFICATION-CODE;
  H-TCDTS1.CODE-TBL-TYP = "SSNCODE";

  call "TCDTS1A" (VDBCONTROL, VMESSAGE, H-TCDTS1) {isNoRefresh = yes};

  if (VDBCONTROL.URC > 104)

    WCM00P2-TO-CEP01A();

  end

  if (VDBCONTROL.URC == 0)

    SR-Q01F-REC.AIN30A-01-CODE-DESC = H-TCDTS1.CODE-DESC;

  end

  /* ************************************************************************/
  /* WI #27602 - MOVE SR-QSIF-REC.SVES-VERIFICATION-CODE TO*/
  /* AIN30A-01-VERIFIED-CODE WHEN CODES ARE NOT PRESENT IN*/
  /* AIN30W.WS-NOMADS-VERIF-CODE*/
  /* ************************************************************************/

  if (AIN30W.WS-NOMADS-VERIF-CODE == " ")

    AIN30A-01-VERIFIED-CODE = SR-QSIF-REC.SVES-VERIFICATION-CODE;

  end

  SR-Q01F-REC.AIN30A-02-DIS-VER = 0;
  SR-Q01F-REC.AIN30A-02-DIS-PRO = 0;
  SR-Q01F-REC.AIN30A-02-DIS-TOT = 0;
  SR-Q01F-REC.AIN30A-03-SUM-VER = 0;
  SR-Q01F-REC.AIN30A-03-SUM-PRO = 0;
  SR-Q01F-REC.AIN30A-03-SUM-TOT = 0;

  AIN30P9-ADD-01-REC();
  /*  */
end // end AIN30P9-IVADR-PROC


// Build IVA Report
Function AIN30P9-IVAR-PROC()
  /*  */
  set H2-3-CMH-FAC-SPT empty;
  /*  */
  H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-PROC-DT;
  H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-PROC-DT;
  /*  */
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN30A";
  /*  */
  AIN30P9-READ-S03();
  VDBCOMMON.UNRF = "Y";
  /*  */
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    SR-Q04F-REC.AIN30A-04-OFC-CD = H2-3-CMH-FAC-SPT.OFC-CD;
    SR-Q04F-REC.AIN30A-04-CASLD-ID = H2-3-CMH-FAC-SPT.CASLD-ID;
    SR-Q04F-REC.AIN30A-04-NOMADS-USRID = H2-3-CMH-FAC-SPT.NOMADS-USRID;
  /* ** Changes due to WI 15300 *** Begin*/
  else
    H2-3-CMH-FAC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
    AIN30W.WS-CURR-DT = AIN30W.WS-PROC-DT;
    AIN30W.WS-CURR-DT-MM = AIN30W.WS-CURR-DT-MM + 1;
  /* 19228 start: example if ws-proc-dt = 1/30/99 date created*/
  /* would have been 2/30/99 thus -181*/
    if (AIN30W.WS-PROC-DT-DD > 28)
      AIN30W.WS-CURR-DT-DD = 28;
    end
  /* 19228 end*/
    if (AIN30W.WS-CURR-DT-MM == 13)
      AIN30W.WS-CURR-DT-MM = 01;
      AIN30W.WS-CURR-DT-CCYY = AIN30W.WS-CURR-DT-CCYY + 1;
    end
    H2-3-CMH-FAC-SPT.PRD-BEG-DT = AIN30W.WS-CURR-DT;
    H2-3-CMH-FAC-SPT.PRD-END-DT = AIN30W.WS-CURR-DT;
    H2-3-CMH-FAC-SPT.ASMNT-BEG-DT = AIN30W.WS-CURR-DT;

    WDB00PI();
    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "AIN30A";
  /*  */
    AIN30P9-READ-S03();
    VDBCOMMON.UNRF = "Y";
  /*  */
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end

    if (sysVar.sqlData.sqlcode == 0)
      SR-Q04F-REC.AIN30A-04-OFC-CD = H2-3-CMH-FAC-SPT.OFC-CD;
      SR-Q04F-REC.AIN30A-04-CASLD-ID = H2-3-CMH-FAC-SPT.CASLD-ID;
      SR-Q04F-REC.AIN30A-04-NOMADS-USRID = H2-3-CMH-FAC-SPT.NOMADS-USRID;
    end

  /* ** Changes due to WI 15300 *** End*/
  end
  SR-Q04F-REC.AIN30A-04-LAST-NM = SR-QSIF-REC.SVES-INPUT-SURNAME;
  SR-Q04F-REC.AIN30A-04-MD-INIT = SR-QSIF-REC.SVES-INPUT-INITIAL;
  SR-Q04F-REC.AIN30A-04-FST-NM = SR-QSIF-REC.SVES-INPUT-GIVEN-NAME;
  SR-Q04F-REC.AIN30A-04-PROCESS-DATE = AIN30W.WS-PROC-DT-F;
  SR-Q04F-REC.AIN30A-04-SSN = SR-QSIF-REC.SVES-INPUT-SSN;
  SR-Q04F-REC.AIN30A-04-DOB = SR-QSIF-REC.SVES-DATE-OF-BIRTH;
  SR-Q04F-REC.AIN30A-04-VERF-SSN-1 = SR-QSIF-REC.SVES-VERIFIED-SSN[1];
  SR-Q04F-REC.AIN30A-04-VERF-SSN-2 = SR-QSIF-REC.SVES-VERIFIED-SSN[2];
  SR-Q04F-REC.AIN30A-04-VERF-SSN-3 = SR-QSIF-REC.SVES-VERIFIED-SSN[3];
  SR-Q04F-REC.AIN30A-04-VERF-SSN-4 = SR-QSIF-REC.SVES-VERIFIED-SSN[4];
  SR-Q04F-REC.AIN30A-04-VERF-SSN-5 = SR-QSIF-REC.SVES-VERIFIED-SSN[5];
  SR-Q04F-REC.AIN30A-05-DIS-TOT = 0;
  SR-Q04F-REC.AIN30A-06-SUM-TOT = 0;
    /*  */
  AIN30P9-ADD-04-REC();
  /*  */
end // end AIN30P9-IVAR-PROC


// Create IVD Alerts
Function AIN30P9-IVD-ALERT()
  /* -------------------------------------------------------*/
  /* Create IVD Alerts if the SSN is not verified          */
  /* -------------------------------------------------------*/
  /*  */
  set AIN30W1 empty;
  PCALINP.PAL-ALERT-CD = 320086;
  PCALINP.PAL-UPI = SR-QSIF-REC.SVES-UPI;
  PCALINP.PAL-ALERT-ACTION = "C";
  /*  */
  call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
end // end AIN30P9-IVD-ALERT


// Build IVD Discrepancy Report
Function AIN30P9-IVDDR-PROC()
  /* ************************************************************************/
  /* BUILD IVD DISCREPANCY REPORT*/
  /* ************************************************************************/

  set H2-2-DCC-SPT empty;

  H2-2-DCC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-2-DCC-SPT.CASELD-IND = "N";

  WDB00PI();

  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN30A";

  AIN30P9-SETINQ-S04();

  if (sysVar.sqlData.sqlcode == 0)

    SR-Q01F-REC.AIN30A-01-OFC-CD = H2-2-DCC-SPT.OFC-CD;
    SR-Q01F-REC.AIN30A-01-CASLD-ID = H2-2-DCC-SPT.CASLD-ID;
    SR-Q01F-REC.AIN30A-01-NOMADS-USRID = H2-2-DCC-SPT.NOMADS-USRID;
    SR-Q01F-REC.AIN30A-01-LAST-NM = SR-QSIF-REC.SVES-INPUT-SURNAME;
    SR-Q01F-REC.AIN30A-01-MD-INIT = SR-QSIF-REC.SVES-INPUT-INITIAL;
    SR-Q01F-REC.AIN30A-01-FST-NM = SR-QSIF-REC.SVES-INPUT-GIVEN-NAME;
    SR-Q01F-REC.AIN30A-01-PROCESS-DATE = AIN30W.WS-PROC-DT-F;
    SR-Q01F-REC.AIN30A-01-SSN = SR-QSIF-REC.SVES-INPUT-SSN;

  /* ***********************************************************************/
  /* WI #27602 -*/
  /* IF THE NUMIDENT VERF CODE = 3, 4, OR 5, THE DOB FOR TRACKING IS*/
  /* TO BE PICKED FROM SVES-VERIFIED-SSN-DATA INSTEAD OF*/
  /* SVES-DATE-OF-BIRTH. THE DATE OF BIRTH IS VERIFIED THEN MOVED BACK INTO*/
  /* SR-QSIF-REC.SVES-DATE-OF-BIRTH.*/
  /* ***********************************************************************/

    if (((SR-QSIF-REC.SVES-VERIFICATION-CODE == "3"
     || SR-QSIF-REC.SVES-VERIFICATION-CODE == "4"
     || SR-QSIF-REC.SVES-VERIFICATION-CODE == "5")
     && (SR-QSIF-REC.SVES-VERIFIED-SSN-DATA > " ")))

      AIN30W2.WS-VAR11 = " ;CORRECTED DOB: ";

      move SVES-VERIFIED-SSN-DATA to WS-NUMIDENT-VERF-3-DT withV60Compat;
      SVES-DOB-MO = AIN30W.WS-NUMIDENT-DATE-MM;
      SVES-DOB-DY = AIN30W.WS-NUMIDENT-DATE-DD;
      SVES-DOB-YR = AIN30W.WS-NUMIDENT-DATE-YY;

    end

    AIN30W.WS-DATE2 = SR-QSIF-REC.SVES-DATE-OF-BIRTH;

    SR-Q01F-REC.AIN30A-01-DOB = AIN30W.WS-DATE2;

  /* ************************************************************************/
  /* WI #27602 - MOVE 'SSNCODE' TO CODE_TBL_TYP TO RETRIEVE PROPER ERROR*/
  /* MESSAGE. ALSO, MOVE SR-QSIF-REC.SVES-VERIFICATION-CODE*/
  /* TO H-TCDTS1.CODE-TBL-CD SINCE AIN30W.WS-NOMADS-VERIF-CODE*/
  /* IS NOT ALWAYS POPULATED.*/
  /* ************************************************************************/

    set H-TCDTS1 empty;

  /* MOVE AIN30W.WS-NOMADS-VERIF-CODE TO H-TCDTS1.CODE-TBL-CD;*/
    H-TCDTS1.CODE-TBL-CD = SR-QSIF-REC.SVES-VERIFICATION-CODE;
    H-TCDTS1.CODE-TBL-TYP = "SSNCODE";

    call "TCDTS1A" (VDBCONTROL, VMESSAGE, H-TCDTS1) {isNoRefresh = yes};

    if (VDBCONTROL.URC > 104)

      WCM00P2-TO-CEP01A();

    end

    SR-Q01F-REC.AIN30A-01-CODE-DESC = H-TCDTS1.CODE-DESC;

  /* ************************************************************************/
  /* WI #27602 - MOVE SR-QSIF-REC.SVES-VERIFICATION-CODE TO*/
  /* AIN30A-01-VERIFIED-CODE WHEN CODES ARE NOT PRESENT IN*/
  /* AIN30W.WS-NOMADS-VERIF-CODE*/
  /* ************************************************************************/

    if (AIN30W.WS-NOMADS-VERIF-CODE == " ")

      AIN30A-01-VERIFIED-CODE = SR-QSIF-REC.SVES-VERIFICATION-CODE;

    end

    SR-Q01F-REC.AIN30A-02-DIS-VER = 0;
    SR-Q01F-REC.AIN30A-02-DIS-PRO = 0;
    SR-Q01F-REC.AIN30A-02-DIS-TOT = 0;
    SR-Q01F-REC.AIN30A-03-SUM-VER = 0;
    SR-Q01F-REC.AIN30A-03-SUM-PRO = 0;
    SR-Q01F-REC.AIN30A-03-SUM-TOT = 0;

    AIN30P9-ADD-01-REC();

  end

  VDBCOMMON.UNRF = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC > 104)

    WCM00P2-TO-CEP01A();

  end

  /*  */
end // end AIN30P9-IVDDR-PROC


// Build IVD Report
Function AIN30P9-IVDR-PROC()
  /*  */
  set H2-2-DCC-SPT empty;
  H2-2-DCC-SPT.UPI = SR-QSIF-REC.SVES-UPI;
  H2-2-DCC-SPT.CASELD-IND = "N";
  /*  */
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN30A";
  AIN30P9-SETINQ-S04();
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    SR-Q04F-REC.AIN30A-04-OFC-CD = H2-2-DCC-SPT.OFC-CD;
    SR-Q04F-REC.AIN30A-04-CASLD-ID = H2-2-DCC-SPT.CASLD-ID;
    SR-Q04F-REC.AIN30A-04-NOMADS-USRID = H2-2-DCC-SPT.NOMADS-USRID;
    SR-Q04F-REC.AIN30A-04-LAST-NM = SR-QSIF-REC.SVES-INPUT-SURNAME;
    SR-Q04F-REC.AIN30A-04-MD-INIT = SR-QSIF-REC.SVES-INPUT-INITIAL;
    SR-Q04F-REC.AIN30A-04-FST-NM = SR-QSIF-REC.SVES-INPUT-GIVEN-NAME;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 BEGIN----------------*/
  /*  */
    SR-Q04F-REC.AIN30A-04-PROCESS-DATE = AIN30W.WS-PROC-DT-F;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 END------------------*/
  /*  */
    SR-Q04F-REC.AIN30A-04-SSN = SR-QSIF-REC.SVES-INPUT-SSN;
    SR-Q04F-REC.AIN30A-04-DOB = SR-QSIF-REC.SVES-DATE-OF-BIRTH;
    SR-Q04F-REC.AIN30A-04-VERF-SSN-1 = SR-QSIF-REC.SVES-VERIFIED-SSN[1];
    SR-Q04F-REC.AIN30A-04-VERF-SSN-2 = SR-QSIF-REC.SVES-VERIFIED-SSN[2];
    SR-Q04F-REC.AIN30A-04-VERF-SSN-3 = SR-QSIF-REC.SVES-VERIFIED-SSN[3];
    SR-Q04F-REC.AIN30A-04-VERF-SSN-4 = SR-QSIF-REC.SVES-VERIFIED-SSN[4];
    SR-Q04F-REC.AIN30A-04-VERF-SSN-5 = SR-QSIF-REC.SVES-VERIFIED-SSN[5];
    SR-Q04F-REC.AIN30A-05-DIS-TOT = 0;
    SR-Q04F-REC.AIN30A-06-SUM-TOT = 0;
    /*  */
    AIN30P9-ADD-04-REC();
  end
  VDBCOMMON.UNRF = "Y";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
end // end AIN30P9-IVDR-PROC


// MAIN PROCEDURE
Function AIN30P9-MAIN-PROC()
  /*  */
  VGVar.handleHardIOErrors = 1;
  AIN30P9-INIT-PROC();
  /*  */
  /* PTR 4782 BEGIN*/
  /* it is essential to read all the records for a given SSN before*/
  /* determining the value of the SSN status that needs to be updated.*/
  /* The structure of the program is therefore altered.*/
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 BEGIN----------------*/
  /*  */
  /* PERFORM THE COMMON PROCESS, WHICH WILL GET THE COMMON DATES USED*/
  /* IN BATCH PROCESS FROM BDATPARM FILE.*/
  /*  */
  WCM00P3-FETCHBDTS();
  /*  */
  AIN30W.WS-PROC-DT-CC = BDATEREC.BDATE-PROCESS-DATE-CC;
  AIN30W.WS-PROC-DT-YY = BDATEREC.BDATE-PROCESS-DATE-YY;
  AIN30W.WS-PROC-DT-MM = BDATEREC.BDATE-PROCESS-DATE-MM;
  AIN30W.WS-PROC-DT-DD = BDATEREC.BDATE-PROCESS-DATE-DD;
  AIN30W.WS-PROC-DT-SEP-1 = "-";
  AIN30W.WS-PROC-DT-SEP-2 = "-";
  AIN30W.WS-PROC-DT-F-DD = AIN30W.WS-PROC-DT-DD;
  AIN30W.WS-PROC-DT-F-MM = AIN30W.WS-PROC-DT-MM;
  AIN30W.WS-PROC-DT-F-CC = AIN30W.WS-PROC-DT-CC;
  AIN30W.WS-PROC-DT-F-YY = AIN30W.WS-PROC-DT-YY;
  /*  */
  /* ---------------CHANGES DUE TO PTR # 3100 BEGIN----------------*/
  /*  */
  AIN30P9-READ-SIF();
  /*  */
  while (sysVar.errorCode == "00000000")

    SR-QCON-REC.AININT-CNT-NO-RECS = SR-QCON-REC.AININT-CNT-NO-RECS + 1;
    if (AIN30W.WS-VERIFY-FG == "Y")

  /* ******************** WI 21295:WNMLS:2002-08-16 START *******************/
  /* WHEN SR-QSIF-REC.SVES-VERIFICATION-CODE = 'X', A CLOG AND AN ALERT*/
  /* WILL BE CREATED TO NOTIFY THE WORKER OF THE DATE OF DEATH.*/
  /* NO ROW WILL BE WRITTEN TO THE REPORT.  THE SSN-VRFN-STS-CD COLUMN*/
  /* IN TWNPERSON WILL BE UPDATED WITH 'X'. THE SSN-SRC-CD COLUMN IN*/
  /* TWNPERSON WILL BE UPDATED WITH 'SSA'.*/
  /* ************************************************************************/
      if (SR-QSIF-REC.SVES-VERIFICATION-CODE == "X")
        AIN30P9-DOD-ALERT(); /* ALERTS, U01(UPD VERIF-CD), DOD-CLOG*/
      else
  /* ******************** WI 21295:WNMLS:2002-08-16 END *********************/
        AIN30P9-PROCESS();
      end
  /*  */
  /* CHANGES DUE TO PTR 14878 *** BEGIN ****/
  /* IF THE PARTICIPANT IS NOT KNOWN TO NOMADS , INCREMENT THE SKIP*/
  /* COUNTER BY 1*/
  /*  */
    else
      SR-QCON-REC.AININT-CNT-REC-SKIP = SR-QCON-REC.AININT-CNT-REC-SKIP + 1;
  /*  */
  /* CHANGES DUE TO PTR 14878 *** END ****/
  /*  */
    end
    AIN30P9-READ-SIF();
    set SR-Q01F-REC empty;
  /* SET SR-Q04F-REC EMPTY;*/
  end
  if (sysVar.errorCode == "00000102")
    AIN30P9-PROC-UPD();
  end
  /* PTR 4782 END*/
  /*  */
  AIN30P9-ADDCON-REC();
  /*  */
  if (SR-QCON-REC.AININT-CNT-REC-SKIP > 0)

    VMESSAGE.UMSGCODE = "AIN2701E";
    VMESSAGE.UMSGINS[2] = "AIN30A";
    VDBCONTROL.UPROC-NM = "AIN27P9-MAIN-PROC";
    VDBCONTROL.UPROC-OPT = "EXECUTE";
    VDBCONTROL.UPROC-OBJ = "SR-QSIF-REC";
    VMESSAGE.UMSGCODE-JCL-ERR = 4;
  /* MOVE 'SOME RECORDS WERE SKIPPED FROM INPUT DATA'*/
  /* TO VDBCONTROL.UEZESQRRM;*/

    VMESSAGE.UMSGINS[1] = " ";
    VDBCONTROL.UMSQLCODE = 0;

    WCM00P2-TO-CEP01A();

  end
  if (SR-QCON-REC.AININT-CNT-NO-RECS == 0)

    VMESSAGE.UMSGCODE = "ARX0103E";
    VMESSAGE.UMSGINS[2] = "AIN30A";
    VDBCONTROL.UPROC-NM = "AIN30P9-MAIN-PROC";
    VDBCONTROL.UPROC-OPT = "EXECUTE";
    VDBCONTROL.UPROC-OBJ = "SR-QSIF-REC";
    VMESSAGE.UMSGCODE-JCL-ERR = 8;
  /* MOVE 'SOME RECORDS WERE SKIPPED FROM INPUT DATA'*/
  /* TO VDBCONTROL.UEZESQRRM;*/

    VMESSAGE.UMSGINS[1] = " ";
    VDBCONTROL.UMSQLCODE = 0;

    WCM00P2-TO-CEP01A();

  end
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();
  /*  */
end // end AIN30P9-MAIN-PROC


// PROCESS DATA
Function AIN30P9-PROC-DATA()
  /* CREATED DUE TO PTR 4782*/
  /* BEGIN*/
  /* CHANGES DUE TO PTR 2444 BEGIN*/
  /* for each record read the verification code received from interface*/
  /* is converted to verification codes known to NOMADS. If the converted*/
  /* code is not known to NOMADS, the verification code is written into the*/
  /* NUMIDENT discrepancy report*/
  /*  */
  AIN30P9-CON-VER-CD();
  if (AIN30W.WS-KNOWN-TO-NOMADS-CODE == "N")
    SR-QCON-REC.AININT-CNT-REC-SKIP = SR-QCON-REC.AININT-CNT-REC-SKIP + 1;
    return;
  end
  SR-QCON-REC.AININT-CNT-REC-PRO = SR-QCON-REC.AININT-CNT-REC-PRO + 1;

  AIN30P9-CHK-SSN-HR();
  /*  */
  /* AS PER PTR# 9660 UPDATE IS DONE IN TWNLCTE_ACTVY*/
  /* FOR ALL UPI*/
  /*  */
  set H2-PERSON empty;
  H2-PERSON.UPI = SR-QSIF-REC.SVES-UPI;
  AIN30P9-READ-S01();
  /*  */
  /* WI 22199 begin*/
  /* Initialize Create-Alert-Flag.  Flag can be set in P9-CRE-CSETRK,*/
  /* and is checked before performing P9-CP-PROC to create IV-D alert*/
  /*  */
  AIN30W.WS-CRE-ALERT-FG = "Y";
  /* WI 22199 end*/
  if (H2-PERSON.NCP-FG == "Y" || 
  H2-PERSON.CST-FG == "Y" || 
  H2-PERSON.CHD-FG == "Y")
    AIN30P9-UPD-LOCATE();
  /* get the ncp-upi for the given IV-D case member and create tracking*/
  /* for that person*/
    AIN30P9-GET-NCPUPI();

  /* fcr triggers are created here if alt-ssn is added per wi13442*/
    if (AIN30W.WS-ALT-SSN-FLG == "Y")
      AIN30P9-ALTSSN-CHG();
    end
  /* fcr triggers are created here if alt-ssn is added per wi13442*/
  end
  /*  */
  if (SR-QSIF-REC.SVES-PERSON-NR == "PP")
    if (AIN30W.WS-NOMADS-VERIF-CODE != "V")
  /* WI 22199 begin*/
  /* Don't create IV-D alert if flag is set to 'N'*/
      if (AIN30W.WS-CRE-ALERT-FG == "Y")
  /* WI 22199 end*/
  /*  */
  /* depending on whether the person is in IV-A or IV-D, either the IV-A or*/
  /* the iv-d worker is alerted, if the ssn is not verified*/
  /*  */
        AIN30P9-CP-PROC();
      end
    end
  else
    if (AIN30W.WS-NOMADS-VERIF-CODE == "V")
      AIN30P9-WVN-PROC();
    end
  end
  /* PTR 2444 END*/
  /* END*/
  /* PTR 4782 END*/
end // end AIN30P9-PROC-DATA