package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN86A ****
// This is a new application created for keeping the nomads
// database in sync with managed care database.WI#17952
// ***********************
Program AIN86A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIN86W AIN86W; // record
  BDATEREC BDATEREC; // record
  CEP01W CEP01W; // record
  GDW GDW; // record
  H2-2-CMH-PCH H2-2-CMH-PCH; // record
  H2-CASE-MEMBER-HST H2-CASE-MEMBER-HST; // record
  H2-CLNDR H2-CLNDR; // record
  H2-HMO-INFO H2-HMO-INFO; // record
  H2-PERSON H2-PERSON; // record
  PCALINP PCALINP; // record
  SR-AIN86A-IN-REC SR-AIN86A-IN-REC; // record
  SR-AIN86A-OUT-REC SR-AIN86A-OUT-REC; // record
  VCOMMON VCOMMON; // record
  VCONTROL VCONTROL; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN86P9-MAIN: AIN86P9-MAIN();
  end // end main
end // end AIN86A


// alert worker if demos changes
Function AIN86P9-ALRT-WRKR()
  /* ************************************************************************/
  /* WI #28459 - MOVING H2-2-CMH-PCH.ICI INSTEAD OF H2-CASE-MEMBER-HST.ICI*/
  /* TO PCALINP.PAL-UPI.*/
  /* ************************************************************************/

  /* IF AIN86W.NAME-IND = 'Y';*/
  /*  */
  /* MOVE 129027 TO PCALINP.PAL-ALERT-CD;/* name change alert*/
  /* MOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE H2-2-CMH-PCH.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE 'C' TO PCALINP.PAL-ALERT-ACTION;*/
  /*  */
  /* CALL CAL11A VDBCONTROL,VMESSAGE,PCALINP (NOMAPS;*/
  /*  */
  /* IF VDBCONTROL.URC > 104;*/
  /*  */
  /* PERFORM WCM00P2-TO-CEP01A;*/
  /*  */
  /* END;*/
  /* END;*/

  /* iF AIN86W.SEX-IND = 'Y';*/

  /* MOVE 129028 TO PCALINP.PAL-ALERT-CD;/* sex change alert*/
  /* MOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE H2-2-CMH-PCH.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE 'C' TO PCALINP.PAL-ALERT-ACTION;*/
  /*  */
  /* CALL CAL11A VDBCONTROL,VMESSAGE,PCALINP (NOMAPS;*/
  /*  */
  /* IF VDBCONTROL.URC > 104;*/
  /*  */
  /* PERFORM WCM00P2-TO-CEP01A;*/
  /*  */
  /* END;*/
  /* END;*/

  /* IF AIN86W.ADDRESS-IND = 'Y';*/
  /*  */
  /* MOVE 129029 TO PCALINP.PAL-ALERT-CD;/* address change alert*/
  /* MOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE H2-2-CMH-PCH.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE 'C' TO PCALINP.PAL-ALERT-ACTION;*/
  /*  */
  /* CALL CAL11A VDBCONTROL,VMESSAGE,PCALINP (NOMAPS;*/
  /*  */
  /* IF VDBCONTROL.URC > 104;*/
  /*  */
  /* PERFORM WCM00P2-TO-CEP01A;*/
  /*  */
  /* END;*/
  /* END;*/

  /* IF AIN86W.PHONE-IND = 'Y';*/
  /*  */
  /* MOVE 129030 TO PCALINP.PAL-ALERT-CD;/* phone number change alert*/
  /* MOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE H2-2-CMH-PCH.ICI TO PCALINP.PAL-UPI;*/
  /* MOVE 'C' TO PCALINP.PAL-ALERT-ACTION;*/
  /*  */
  /* CALL CAL11A VDBCONTROL,VMESSAGE,PCALINP (NOMAPS;*/
  /*  */
  /* IF VDBCONTROL.URC > 104;*/
  /*  */
  /* PERFORM WCM00P2-TO-CEP01A;*/
  /*  */
  /* END;*/
  /* END;*/

  if (AIN86W.DATE-OF-BIRTH-IND == "Y")

    PCALINP.PAL-ALERT-CD = 129031; /* date of birth change alert*/
  /* mOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
    PCALINP.PAL-UPI = H2-2-CMH-PCH.ICI;
    PCALINP.PAL-ALERT-ACTION = "C";

    call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};

    if (VDBCONTROL.URC > 104)

      WCM00P2-TO-CEP01A();

    end
  end

  if (AIN86W.NEW-BORN-IND == "Y")
    if (SR-AIN86A-IN-REC.NEW-BORN-IND == "T")

      PCALINP.PAL-ALERT-CD = 129032; /* child born alive alert*/

    else

      if (SR-AIN86A-IN-REC.NEW-BORN-IND == "S")

        PCALINP.PAL-ALERT-CD = 129033; /* child born dead alert*/

      else

        if (SR-AIN86A-IN-REC.NEW-BORN-IND == "M")

          PCALINP.PAL-ALERT-CD = 129034; /* miscarriage alert*/

        end
      end
    end

  /* MOVE H2-CASE-MEMBER-HST.ICI TO PCALINP.PAL-UPI;*/
    PCALINP.PAL-UPI = H2-2-CMH-PCH.ICI;
    PCALINP.PAL-ALERT-ACTION = "C";

    call "CAL11A" (VDBCONTROL, VMESSAGE, PCALINP) {isNoRefresh = yes};

    if (VDBCONTROL.URC > 104)

      WCM00P2-TO-CEP01A();

    end
  end
  /*  */
end // end AIN86P9-ALRT-WRKR


// add to  TWNCASE_MEMBER_HST
Function AIN86P9-CMH-I01()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-I01";
  VDBCONTROL.UPROC-OPT = "ADD";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  /*  */
  try
    add H2-CASE-MEMBER-HST ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-CMH-I01


// READ TWNCASE_MEMBER_HST
Function AIN86P9-CMH-S05()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-S05";
  VDBCONTROL.UPROC-OPT = "SCAN   ";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  /*  */
  try
    get next H2-2-CMH-PCH ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-CMH-S05


// READ TWNCASE_MEMBER_HST
Function AIN86P9-CMH-SETINQ()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-S05";
  VDBCONTROL.UPROC-OPT = "SETINQ ";
  VDBCONTROL.UPROC-OBJ = "H2-2-CMH-PCH";
  VDBCOMMON.USQLREC = "H2-2-CMH-PCH";
  /*  */
  try
    open AIN86P9-CMH-SETINQ_RSI01
      with #sql{
        select DISTINCT(T1.ICI), T1.UPI, T1.PRD_BEG_DT, T1.FS_ASST_IND,
          T1.FS_ELIG_CD, T1.MA_30_1_3_D1_DT,
          T1.AFDC_ASST_IND, T1.MA_30_BEG_DT,
          T1.AFDC_30_BEG_DT, T1.AFDC_AID_CD,
          T1.MA_ASST_IND, T1.PRNTL_REIMB_AMT,
          T1.MA_AID_CD, T1.FS_QUIT_SANC_DT,
          T1.MA_ELIG_CD, T1.SFU_IND, T1.AFDC_DSRGD_CD,
          T1.MA_DSRGD_CD, T1.VOL_QUIT_EX_IND,
          T1.HH_LEFT_DT, T1.RESP_PERSON2_UPI,
          T1.HOUSE_ARST_IND, T1.JOIN_HH_DT,
          T1.RESP_PERSON1_UPI, T1.HH_LEFT_RSN_CD,
          T1.RESP_PERSON3_UPI, T1.JOIN_RPRTD_DT,
          T1.TAX_DPNDT_CD, T1.EXC_CHD_QTR1_AMT,
          T1.EXC_CHD_QTR2_AMT, T1.PRI_WGE_ERNR_IND,
          T1.EXC_CHD_QTR3_AMT, T1.EXC_CHD_QTR4_AMT,
          T1.PCN_CD, T1.EXC_AL_NTV_AMT, T1.PCN_RMVD_CD,
          T1.SUB_UNIT_NMB, T1.AFDC_30_1_3_D1_DT,
          T1.AFDC_30_1_3_D2_DT, T1.AFDC_30_1_3_D3_DT,
          T1.AFDC_30_1_3_D4_DT, T1.MA_30_1_3_D2_DT,
          T1.MA_30_1_3_D3_DT, T1.MA_30_1_3_D4_DT,
          T1.AFDC_DUPL_ASST_IND, T1.FS_DUPL_ASST_IND,
          T1.MA_DUPL_ASST_IND, T1.AFDC_BEG_DT,
          T1.FS_BEG_DT, T1.ET_PRTCP_CD,
          T1.ET_EXMPT_RSN_CD, T1.ET_VOL_STAT_IND,
          T1.ECO_RSTRC_IND, T1.FS_AID_CD,
          T1.MEDIC_BLNG_SQ_NMB, T1.PRD_END_DT,
          T1.AFDC_ELIG_CD, T1.ET_NON_COOP_CD,
          T1.PTNT_LBLTY_AMT, T1.APLD_AFDC_AID_CD,
          T1.RSRC_EXCL_FACTR, T1.IVE_ELIG_CD,
          T1.IVE_AID_CD, T1.MAINT_CD,
          T1.AFDCAID_CD_CHNG_DT, T1.PREV_AFDC_AID_CD,
          T1.MAAID_CD_CHNG_DT, T1.PREV_MA_AID_CD,
          T1.QMB_SLMB_IND, T1.WRKD_IN_LST_YR_IND,
          T1.MNRLVNG_ARRGT_FG, T1.ABAWD_FG,
          T1.EXCL_FR_TANF_IND, T1.HRDSHP_CD,
          T1.HRDSHP_DNL_CD, T1.MNR_SCHL_ATNDC_FG,
          T1.NEON_CD, T1.AJS_PRTCP_CD, T1.TANF_CRTKR_IND,
          T1.CHLD_ENTRD_HOME_DT, T1.LGL_GRDNSHP_EFF_DT,
          T1.CRIMINAL_BKGRND_FG, T1.FP_ASST_IND,
          T1.FP_CLSRE_RSN_CD, T1.SSG_HRDSHP_CD,
          T1.SSG_HRDSHP_DNL_CD, T1.MCB_ASST_IND,
          T1.CDC_TYPE, T1.GRS250_MBR_IND,
          T1.MBR_PMED_IND, T1.MBR_CH_APPL_DT,
          T1.MBR_CLOSURE_RSNCD, T1.INTL_CH_INCM_TST,
          T1.TANF_SSP_FG, T1.TANF_SSP_RSN_CD,
          T1.SG_AID_CD, T1.SG_APLD_AID_CD, T1.SG_ASST_IND,
          T1.SG_BEG_DT, T1.SG_ELIG_CD,
          T1.TC_AID_CD, T1.TC_APLD_AID_CD, T1.TC_ASST_IND,
          T1.TC_BEG_DT, T1.TC_ELIG_CD,
          T1.TL_AID_CD, T1.TL_APLD_AID_CD, T1.TL_ASST_IND,
          T1.TL_BEG_DT, T1.TL_ELIG_CD,
          T1.TN_AID_CD, T1.TN_APLD_AID_CD, T1.TN_ASST_IND,
          T1.TN_BEG_DT, T1.TN_ELIG_CD,
          T1.TP_AID_CD, T1.TP_APLD_AID_CD, T1.TP_ASST_IND,
          T1.TP_BEG_DT, T1.TP_ELIG_CD
        from TWNCASE_MEMBER_HST T1,
             TWNPRGM_CASE_HSTRY T2
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE T1.UPI  = :UPI
          AND T1.PRD_BEG_DT <= :PRD-BEG-DT
          AND T1.PRD_END_DT >= :PRD-END-DT
          AND T2.PRD_BEG_DT <= :PRD-BEG-DT
          AND T2.PRD_END_DT >= :PRD-END-DT
          AND T1.ICI  = T2.ICI
          AND (T1.MA_ASST_IND = 'Y' OR T1.AFDC_ASST_IND = 'Y' OR
               T1.SG_ASST_IND = 'Y' OR T1.TC_ASST_IND = 'Y' OR
               T1.TL_ASST_IND = 'Y' OR T1.TN_ASST_IND = 'Y' OR
               T1.TP_ASST_IND = 'Y' OR
               T2.PRGM_CASE_TYPE = 'CC' OR T2.PRGM_CASE_TYPE = 'CW')
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into ICI, UPI, PRD-BEG-DT, FS-ASST-IND, FS-ELIG-CD,
           MA-30-1-3-D1-DT, AFDC-ASST-IND, MA-30-BEG-DT,
           AFDC-30-BEG-DT, AFDC-AID-CD, MA-ASST-IND,
           PRNTL-REIMB-AMT, MA-AID-CD, FS-QUIT-SANC-DT,
           MA-ELIG-CD, SFU-IND, AFDC-DSRGD-CD,
           MA-DSRGD-CD, VOL-QUIT-EX-IND, HH-LEFT-DT,
           RESP-PERSON2-UPI, HOUSE-ARST-IND, JOIN-HH-DT,
           RESP-PERSON1-UPI, HH-LEFT-RSN-CD,
           RESP-PERSON3-UPI, JOIN-RPRTD-DT, TAX-DPNDT-CD,
           EXC-CHD-QTR1-AMT, EXC-CHD-QTR2-AMT,
           PRI-WGE-ERNR-IND, EXC-CHD-QTR3-AMT,
           EXC-CHD-QTR4-AMT, PCN-CD, EXC-AL-NTV-AMT,
           PCN-RMVD-CD, SUB-UNIT-NMB, AFDC-30-1-3-D1-DT,
           AFDC-30-1-3-D2-DT, AFDC-30-1-3-D3-DT,
           AFDC-30-1-3-D4-DT, MA-30-1-3-D2-DT,
           MA-30-1-3-D3-DT, MA-30-1-3-D4-DT,
           AFDC-DUPL-ASST-IND, FS-DUPL-ASST-IND,
           MA-DUPL-ASST-IND, AFDC-BEG-DT, FS-BEG-DT,
           ET-PRTCP-CD, ET-EXMPT-RSN-CD, ET-VOL-STAT-IND,
           ECO-RSTRC-IND, FS-AID-CD, MEDIC-BLNG-SQ-NMB,
           PRD-END-DT, AFDC-ELIG-CD, ET-NON-COOP-CD,
           PTNT-LBLTY-AMT, APLD-AFDC-AID-CD,
           RSRC-EXCL-FACTR, IVE-ELIG-CD, IVE-AID-CD,
           MAINT-CD, AFDCAID-CD-CHNG-DT, PREV-AFDC-AID-CD,
           MAAID-CD-CHNG-DT, PREV-MA-AID-CD, QMB-SLMB-IND,
           WRKD-IN-LST-YR-IND, MNRLVNG-ARRGT-FG, ABAWD-FG,
           EXCL-FR-TANF-IND, HRDSHP-CD, HRDSHP-DNL-CD,
           MNR-SCHL-ATNDC-FG, NEON-CD, AJS-PRTCP-CD,
           TANF-CRTKR-IND, CHLD-ENTRD-HOME-DT,
           LGL-GRDNSHP-EFF-DT, CRIMINAL-BKGRND-FG,
           FP-ASST-IND, FP-CLSRE-RSN-CD, SSG-HRDSHP-CD,
           SSG-HRDSHP-DNL-CD, MCB-ASST-IND, CDC-TYPE,
           GRS250-MBR-IND, MBR-PMED-IND, MBR-CH-APPL-DT,
           MBR-CLOSURE-RSNCD, INTL-CH-INCM-TST,
           TANF-SSP-FG, TANF-SSP-RSN-CD,
           SG-AID-CD, SG-APLD-AID-CD, SG-ASST-IND,
           SG-BEG-DT, SG-ELIG-CD,
           TC-AID-CD, TC-APLD-AID-CD, TC-ASST-IND,
           TC-BEG-DT, TC-ELIG-CD,
           TL-AID-CD, TL-APLD-AID-CD, TL-ASST-IND,
           TL-BEG-DT, TL-ELIG-CD,
           TN-AID-CD, TN-APLD-AID-CD, TN-ASST-IND,
           TN-BEG-DT, TN-ELIG-CD,
           TP-AID-CD, TP-APLD-AID-CD, TP-ASST-IND,
           TP-BEG-DT, TP-ELIG-CD
      for H2-2-CMH-PCH ;
  end

  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
  /*  */
end // end AIN86P9-CMH-SETINQ


// UPDATION OF TWNCASE_MEMBER_HST
Function AIN86P9-CMH-U01()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-U01";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  /*  */
  try
    execute update 
      #sql{
        update twncase_member_hst
        set pcn_cd     = :PCN-CD,
            pcn_rmvd_cd = :PCN-RMVD-CD
        where
           upi = :UPI and
           ici = :ICI and
           prd_beg_dt >= :PRD-BEG-DT
      }
      for H2-CASE-MEMBER-HST ; // model = update
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-CMH-U01


// UPDATION OF TWNCASE_MEMBER_HST
Function AIN86P9-CMH-U02()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-U02";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  /*  */
  try
    execute update 
      #sql{
        update twncase_member_hst
        set PRD_END_DT = :PRD-END-DT
        where
           upi = :UPI and
           ici = :ICI and
           prd_beg_dt = :PRD-BEG-DT
      }
      for H2-CASE-MEMBER-HST ; // model = update
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-CMH-U02


// UPDATION TWNCASE_MEMBER_HST
Function AIN86P9-CMH-U03()
  VDBCONTROL.UPROC-NM = "AIN86P9-CMH-U03";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  /*  */
  try
    execute update 
      #sql{
        update twncase_member_hst
        set pcn_cd     = :PCN-CD,
            pcn_rmvd_cd = :PCN-RMVD-CD
        where
           upi = :UPI and
           ici = :ICI and
           prd_beg_dt > :PRD-BEG-DT
      }
      for H2-CASE-MEMBER-HST ; // model = update
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-CMH-U03


// UPDATION OF PCN IN DATABASE
Function AIN86P9-CMH-UPD()
  /* ************************************************************************/
  /* POPULATE FROM H2-2-CMH-PCH TO H2-CASE-MEMBER-HST*/
  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  AIN86P9-POP-CMH();

  if (H2-2-CMH-PCH.PRD-BEG-DT == AIN86W.MONTH-EFFECTIVE-DATE)

  /* MOVE AIN86W.PCN-CODE TO H2-CASE-MEMBER-HST.PCN-CD;*/
  /* MOVE SR-AIN86A-IN-REC.PCN-REMOVAL-CODE*/
  /* TO H2-CASE-MEMBER-HST.PCN-RMVD-CD;*/

    WDB00PI();

    AIN86P9-CMH-U01();

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

    if (VDBCONTROL.URC >= 104)

      WCM00P2-TO-CEP01A();

    end

  else

    if (H2-2-CMH-PCH.PRD-BEG-DT < AIN86W.MONTH-EFFECTIVE-DATE)

      AIN86W.PRD-END-DT = H2-2-CMH-PCH.PRD-END-DT;
      H2-CASE-MEMBER-HST.PRD-END-DT = AIN86W.PREV-MONTH-END-DATE;

      WDB00PI();

      AIN86P9-CMH-U02();

      VDBCOMMON.UDUP = "N";

      WDB00PE-SQLERR();

      if (VDBCONTROL.URC >= 104)

        WCM00P2-TO-CEP01A();

      end

      H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN86W.MONTH-EFFECTIVE-DATE;
      H2-CASE-MEMBER-HST.PRD-END-DT = AIN86W.PRD-END-DT;

  /* MOVE AIN86W.PCN-CODE TO H2-CASE-MEMBER-HST.PCN-CD;*/
  /* MOVE SR-AIN86A-IN-REC.PCN-REMOVAL-CODE*/
  /* TO H2-CASE-MEMBER-HST.PCN-RMVD-CD;*/

      WDB00PI();

      AIN86P9-CMH-I01();

      VDBCOMMON.UDUP = "N";

      WDB00PE-SQLERR();

      if (VDBCONTROL.URC >= 104)

        WCM00P2-TO-CEP01A();

      end

      if (AIN86W.PRD-END-DT != "9999-12-31")

        WDB00PI();
        AIN86P9-CMH-U03();

        VDBCOMMON.UDUP = "N";

        WDB00PE-SQLERR();

        if (VDBCONTROL.URC >= 104)

          WCM00P2-TO-CEP01A();

        end
      end
    end
  end
  /*  */
end // end AIN86P9-CMH-UPD


// DATE VALIDATION ROUTINE
Function AIN86P9-DATE-CHK()
  /* cbsi start;*/
  /* ** this process validates the values rerceived for the date of birth*/
  /* ** fields in the input file*/
  /*  */
  AIN86W.WS-D-DOB = SR-AIN86A-IN-REC.DEMO-DOB;
  AIN86W.WS-DOB-TEN = H2-PERSON.DOB;
  AIN86W.WS-DOB-CCYY = AIN86W.WS-DOB-YEAR;
  AIN86W.WS-DOB-MM = AIN86W.WS-DOB-MONTH;
  AIN86W.WS-DOB-DD = AIN86W.WS-DOB-DAY;

  if (AIN86W.WS-D-DOB == AIN86W.WS-DOB-CCYYMMDD)
    AIN86W.DATE-OF-BIRTH-IND = "N";
    return;
  end

  if (AIN86W.WS-D-MM >= "01" && AIN86W.WS-D-MM <= "12")
  /* ** if month is valid*/
  else /* ** a valid value is not received in*/
                                   /* the month field*/
    DATE-OF-BIRTH-IND = "N";
    AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "D";
    AIN86W.REJECT-RECORD-IND = "Y";
    REJECT-OCCURANCE = REJECT-OCCURANCE + 1;
    return;
  end /* ** end check for valid month*/
  /*  */
  /* check whether the date value is within the limit for the*/
  /* different month values*/
  /*  */
  if ((AIN86W.WS-D-MM == "01"
   || AIN86W.WS-D-MM == "03"
   || AIN86W.WS-D-MM == "05"
   || AIN86W.WS-D-MM == "07"
   || AIN86W.WS-D-MM == "08"
   || AIN86W.WS-D-MM == "10"
   || AIN86W.WS-D-MM == "12") && 
  AIN86W.WS-D-DD >= "01" && AIN86W.WS-D-DD <= "31")
    DATE-OF-BIRTH-IND = "Y";
    return;
  else
    if ((AIN86W.WS-D-MM == "04"
     || AIN86W.WS-D-MM == "06"
     || AIN86W.WS-D-MM == "09"
     || AIN86W.WS-D-MM == "11") && 
    AIN86W.WS-D-DD >= "01" && AIN86W.WS-D-DD <= "30")
      DATE-OF-BIRTH-IND = "Y";
      return;
    else
      if (AIN86W.WS-D-MM == "02")
        AIN86W.WS-LEAP-FLAG = "N";
        AIN86W.WS-TEMP = AIN86W.WS-D-CCYY-N % 4;
        if ((AIN86W.WS-TEMP == 0))
          AIN86W.WS-TEMP = AIN86W.WS-D-CCYY-N % 100;
          if (AIN86W.WS-TEMP != 0)
            AIN86W.WS-LEAP-FLAG = "Y";
          else
            AIN86W.WS-TEMP = AIN86W.WS-D-CCYY-N % 400;
            if (AIN86W.WS-TEMP == 0)
              AIN86W.WS-LEAP-FLAG = "Y";
            end
          end
        end
      else
        DATE-OF-BIRTH-IND = "N";
        AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "D";
        AIN86W.REJECT-RECORD-IND = "Y";
        REJECT-OCCURANCE = REJECT-OCCURANCE + 1;
        return;
      end
    end
  end
  if ((AIN86W.WS-LEAP-FLAG == "Y" && 
  AIN86W.WS-D-DD <= "29") || 
  (AIN86W.WS-LEAP-FLAG == "N" && 
  AIN86W.WS-D-DD <= "28"))
    DATE-OF-BIRTH-IND = "Y";
  else
    DATE-OF-BIRTH-IND = "N";
    AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "D";
    AIN86W.REJECT-RECORD-IND = "Y";
    REJECT-OCCURANCE = REJECT-OCCURANCE + 1;
  end
  /* cbsi end;*/
end // end AIN86P9-DATE-CHK


// CALCULATION OF CUTOFF DATE
Function AIN86P9-GET-CUTOF()
  /* cbsi start;*/
  WDB00PI();
  AIN86P9-READ-S02();
  VDBCOMMON.UNRF = "Y";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC >= 104)
    WCM00P2-TO-CEP01A();
  end

  MONTH-EFFECTIVE-DATE-DD = "01";
  MONTH-EFFECTIVE-DATE-SEP1 = "-";
  MONTH-EFFECTIVE-DATE-SEP2 = "-";
  if (CURRENT-DATE <= H2-CLNDR.CLNDR-DT)
    if (CURRENT-DATE-MM-N == 12)
      MONTH-EFFECTIVE-DATE-MM = "01";
      MONTH-EFFECTIVE-DATE-CCYY-N = CURRENT-DATE-CCYY-N + 1;
    else
      MONTH-EFFECTIVE-DATE-MM-N = CURRENT-DATE-MM-N + 1;
      move CURRENT-DATE-CCYY to MONTH-EFFECTIVE-DATE-CCYY withV60Compat;
    end
  else
    if (CURRENT-DATE-MM-N == 12)
      MONTH-EFFECTIVE-DATE-MM = "02";
      MONTH-EFFECTIVE-DATE-CCYY-N = CURRENT-DATE-CCYY-N + 1;
    else
      if (CURRENT-DATE-MM-N == 11)
        MONTH-EFFECTIVE-DATE-MM = "01";
        MONTH-EFFECTIVE-DATE-CCYY-N = CURRENT-DATE-CCYY-N + 1;
      else
        MONTH-EFFECTIVE-DATE-MM-N = CURRENT-DATE-MM-N + 2;
        move CURRENT-DATE-CCYY to MONTH-EFFECTIVE-DATE-CCYY withV60Compat;
      end
    end
  end
  /* cbsi end;*/
end // end AIN86P9-GET-CUTOF


// last day of current month
Function AIN86P9-GT-END-DT()
  /* cbsi - start ;*/
  /* LAST DAY OF THE MONTH FROM THE GIVEN DATE*/
  move CURRENT-DATE-CCYY to MONTH-END-DATE-CCYY withV60Compat;
  move CURRENT-DATE-CCYY to MONTH-START-DATE-CCYY withV60Compat;
  move CURRENT-DATE-MM to MONTH-END-DATE-MM withV60Compat;
  move CURRENT-DATE-MM to MONTH-START-DATE-MM withV60Compat;
  MONTH-START-DATE-DD = "01";
  MONTH-START-DATE-SEP1 = "-";
  MONTH-START-DATE-SEP2 = "-";
  MONTH-END-DATE-SEP1 = "-";
  MONTH-END-DATE-SEP2 = "-";
  if (CURRENT-DATE-MM == "04" || 
  CURRENT-DATE-MM == "06" || 
  CURRENT-DATE-MM == "09" || 
  CURRENT-DATE-MM == "11")
    MONTH-END-DATE-DD = "30";
  end

  if (CURRENT-DATE-MM == "01" || 
  CURRENT-DATE-MM == "03" || 
  CURRENT-DATE-MM == "05" || 
  CURRENT-DATE-MM == "07" || 
  CURRENT-DATE-MM == "08" || 
  CURRENT-DATE-MM == "10" || 
  CURRENT-DATE-MM == "12")
    MONTH-END-DATE-DD = "31";
  end
  if (CURRENT-DATE-MM == "02")

    AIN86W.WS-REM1 = CURRENT-DATE-CCYY-N % 4;
    AIN86W.WS-REM2 = CURRENT-DATE-CCYY-N % 100;
    AIN86W.WS-REM3 = CURRENT-DATE-CCYY-N % 400;

    if (AIN86W.WS-REM1 != 0)
      MONTH-END-DATE-DD = "28";
    else
      if (AIN86W.WS-REM2 == 0)
        if (AIN86W.WS-REM3 == 0)
          MONTH-END-DATE-DD = "29";
        else
          MONTH-END-DATE-DD = "28";
        end
      else
        MONTH-END-DATE-DD = "29";
      end
    end
  end
  /* cbsi end*/
end // end AIN86P9-GT-END-DT


// last day of previous month
Function AIN86P9-GT-LST-DT()
  /* cbsi start;*/
  /* LAST DAY OF THE previous MONTH FROM THE GIVEN DATE*/
  PREV-MONTH-END-DATE-SEP1 = "-";
  PREV-MONTH-END-DATE-SEP2 = "-";

  if (MONTH-EFFECTIVE-DATE-MM == "01")
    PREV-MONTH-END-DATE-DD = "31";
    PREV-MONTH-END-DATE-MM = "12";
    PREV-MONTH-END-DATE-CCYY-N = MONTH-EFFECTIVE-DATE-CCYY-N - 1;
  end

  if (MONTH-EFFECTIVE-DATE-MM == "02" || 
  MONTH-EFFECTIVE-DATE-MM == "04" || 
  MONTH-EFFECTIVE-DATE-MM == "06" || 
  MONTH-EFFECTIVE-DATE-MM == "08" || 
  MONTH-EFFECTIVE-DATE-MM == "09" || 
  MONTH-EFFECTIVE-DATE-MM == "11")
    PREV-MONTH-END-DATE-DD = "31";
    PREV-MONTH-END-DATE-MM-N = MONTH-EFFECTIVE-DATE-MM-N - 1;
    move MONTH-EFFECTIVE-DATE-CCYY-N to PREV-MONTH-END-DATE-CCYY-N withV60Compat;
  end
  if (MONTH-EFFECTIVE-DATE-MM == "05" || 
  MONTH-EFFECTIVE-DATE-MM == "07" || 
  MONTH-EFFECTIVE-DATE-MM == "10" || 
  MONTH-EFFECTIVE-DATE-MM == "12")
    PREV-MONTH-END-DATE-DD = "30";
    PREV-MONTH-END-DATE-MM-N = MONTH-EFFECTIVE-DATE-MM-N - 1;
    move MONTH-EFFECTIVE-DATE-CCYY-N to PREV-MONTH-END-DATE-CCYY-N withV60Compat;
  end
  if (MONTH-EFFECTIVE-DATE-MM == "03")
    PREV-MONTH-END-DATE-MM = "02";
    move MONTH-EFFECTIVE-DATE-CCYY-N to PREV-MONTH-END-DATE-CCYY-N withV60Compat;
    AIN86W.WS-REM1 = MONTH-EFFECTIVE-DATE-CCYY-N % 4;
    AIN86W.WS-REM2 = MONTH-EFFECTIVE-DATE-CCYY-N % 100;
    AIN86W.WS-REM3 = MONTH-EFFECTIVE-DATE-CCYY-N % 400;

    if (AIN86W.WS-REM1 != 0)
      PREV-MONTH-END-DATE-DD = "28";
    else
      if (AIN86W.WS-REM2 == 0)
        if (AIN86W.WS-REM3 == 0)
          PREV-MONTH-END-DATE-DD = "29";
        else
          PREV-MONTH-END-DATE-DD = "28";
        end
      else
        PREV-MONTH-END-DATE-DD = "29";
      end
    end
  end
  /* cbsi end*/
end // end AIN86P9-GT-LST-DT


// insert a record to twnhmo_info
Function AIN86P9-HMO-I02()
  VDBCONTROL.UPROC-NM = "AIN86P9-HMO-I02";
  VDBCONTROL.UPROC-OPT = "ADD";
  VDBCONTROL.UPROC-OBJ = "H2-HMO-INFO";
  VDBCOMMON.USQLREC = "H2-HMO-INFO";
  /*  */
  try
    add H2-HMO-INFO
      with #sql{
        insert into TWNHMO_INFO
        (UPI, CRTN_TS, pcn_cd, PCN_RMVD_cd,
          dob, Lst_nm, frst_nm, mid_nm,
          new_born_ind, sex, adr_ln1, adr_ln2,
          city, zip_CD, phone_nmb)
        values (:UPI, :CRTN-TS, :PCN-CD, :PCN-RMVD-CD,
          :DOB, :LST-NM, :FRST-NM, :MID-NM,
          :NEW-BORN-IND, :SEX, :ADR-LN1, :ADR-LN2,
          :CITY, :ZIP-CD, :PHONE-NMB)
      } ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-HMO-I02


// READ TWNHMO_INFO
Function AIN86P9-HMO-S06()
  VDBCONTROL.UPROC-NM = "AIN86P9-HMO-S06";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-HMO-INFO";
  VDBCOMMON.USQLREC = "H2-HMO-INFO";
  /*  */
  try
    get H2-HMO-INFO singleRow
      with #sql{
        select UPI, CRTN_TS, pcn_cd, PCN_RMVD_Cd, dob, lst_nm,
          frst_nm, mid_nm, new_born_ind, sex, adr_ln1, adr_ln2,
          city, zip_CD, phone_nmb
        from TWNHMO_INFO T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI  = :UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI, CRTN-TS, PCN-CD, PCN-RMVD-CD, DOB, LST-NM,
           FRST-NM, MID-NM, NEW-BORN-IND, SEX, ADR-LN1, ADR-LN2,
           CITY, ZIP-CD, PHONE-NMB ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-HMO-S06


// UPDATION TWNHMO_INFO
Function AIN86P9-HMO-U04()
  VDBCONTROL.UPROC-NM = "AIN86P9-HMO-U04";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-HMO-INFO";
  VDBCOMMON.USQLREC = "H2-HMO-INFO";
  /*  */
  try
    execute update 
      #sql{
        UPDATE
          TWNhmo_info T1
        SET
          UPI=:UPI,
          CRTN_TS=:CRTN-TS,
          PCN_CD=:PCN-CD,
          PCN_RMVD_cd=:PCN-RMVD-CD,
          dob=:DOB,
          lst_nm=:LST-NM,
          frst_nm=:FRST-NM,
          mid_nm=:MID-NM,
          new_born_ind=:NEW-BORN-IND,
          sex=:SEX,
          adr_ln1=:ADR-LN1,
          adr_ln2=:ADR-LN2,
          city=:CITY,
          zip_CD=:ZIP-CD,
          phone_nmb=:PHONE-NMB
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
          where upi=:UPI
      }
      for H2-HMO-INFO ; // model = update
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-HMO-U04


// UPDATION OF HMO_INFO TABLE
Function AIN86P9-HMO-UPD()
  /*  */
  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};

  AIN86W.TIME-STAMP = GDW.TS;
  H2-HMO-INFO.UPI = H2-2-CMH-PCH.UPI;

  WDB00PI();
  AIN86P9-HMO-S06();

  VDBCOMMON.UNRF = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC >= 104)

    WCM00P2-TO-CEP01A();

  end

  if (AIN86W.WS-SQCOD == 0)

    H2-HMO-INFO.CRTN-TS = AIN86W.TIME-STAMP;

    if (AIN86W.NAME-IND == "Y")

      H2-HMO-INFO.LST-NM = SR-AIN86A-IN-REC.DEMO-LAST-NAME;
      H2-HMO-INFO.FRST-NM = SR-AIN86A-IN-REC.DEMO-FRST-NAME;
      H2-HMO-INFO.MID-NM = SR-AIN86A-IN-REC.DEMO-MIDDLE-NAME;

    end

    if (AIN86W.SEX-IND == "Y")

      H2-HMO-INFO.SEX = SR-AIN86A-IN-REC.DEMO-SEX;

    end

    if (AIN86W.ADDRESS-IND == "Y")

      H2-HMO-INFO.ADR-LN1 = SR-AIN86A-IN-REC.DEMO-ADDR-LINE1;
      H2-HMO-INFO.ADR-LN2 = SR-AIN86A-IN-REC.DEMO-ADDR-LINE2;
      H2-HMO-INFO.CITY = SR-AIN86A-IN-REC.DEMO-ADDR-CITY;
      AIN86W.ADDR-ZIP5 = SR-AIN86A-IN-REC.DEMO-ADDR-ZIP5;
      AIN86W.ADDR-ZIP4 = SR-AIN86A-IN-REC.DEMO-ADDR-ZIP4;
      H2-HMO-INFO.ZIP-CD = AIN86W.ZIP-CODE;

    end

    if (AIN86W.PHONE-IND == "Y")

      H2-HMO-INFO.PHONE-NMB = SR-AIN86A-IN-REC.DEMO-PHONE-NUMB;

    end

    if (AIN86W.DATE-OF-BIRTH-IND == "Y")

      AIN86W.WS-DOB-CCYYMMDD = SR-AIN86A-IN-REC.DEMO-DOB;
      AIN86W.WS-DOB-YEAR = AIN86W.WS-DOB-CCYY;
      AIN86W.WS-DOB-MONTH = AIN86W.WS-DOB-MM;
      AIN86W.WS-DOB-DAY = AIN86W.WS-DOB-DD;
      AIN86W.WS-DOB-SEP1 = "-";
      AIN86W.WS-DOB-SEP2 = "-";
      H2-HMO-INFO.DOB = AIN86W.WS-DOB-TEN;

    end

    if (AIN86W.NEW-BORN-IND == "Y")

      H2-HMO-INFO.NEW-BORN-IND = SR-AIN86A-IN-REC.NEW-BORN-IND;

    end

  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  /* IF AIN86W.PCN-CODE-IND = 'Y';*/
  /* MOVE SR-AIN86A-IN-REC.PCN-CODE TO H2-HMO-INFO.PCN-CD;*/
  /* END;*/
  /* IF AIN86W.DISENROLMENT-IND = 'Y';*/
  /* MOVE SR-AIN86A-IN-REC.PCN-REMOVAL-CODE TO*/
  /* H2-HMO-INFO.PCN-RMVD-CD;*/
  /* END;*/

    WDB00PI();
    AIN86P9-HMO-U04();

    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

    if (VDBCONTROL.URC >= 104)

      WCM00P2-TO-CEP01A();

    end

  else

    if (AIN86W.WS-SQCOD == 100)

      H2-HMO-INFO.UPI = H2-2-CMH-PCH.UPI;
      H2-HMO-INFO.CRTN-TS = AIN86W.TIME-STAMP;
      H2-HMO-INFO.LST-NM = SR-AIN86A-IN-REC.DEMO-LAST-NAME;
      H2-HMO-INFO.FRST-NM = SR-AIN86A-IN-REC.DEMO-FRST-NAME;
      H2-HMO-INFO.MID-NM = SR-AIN86A-IN-REC.DEMO-MIDDLE-NAME;
      H2-HMO-INFO.SEX = SR-AIN86A-IN-REC.DEMO-SEX;
      AIN86W.WS-DOB-CCYYMMDD = SR-AIN86A-IN-REC.DEMO-DOB;
      AIN86W.WS-DOB-YEAR = AIN86W.WS-DOB-CCYY;
      AIN86W.WS-DOB-MONTH = AIN86W.WS-DOB-MM;
      AIN86W.WS-DOB-DAY = AIN86W.WS-DOB-DD;
      AIN86W.WS-DOB-SEP1 = "-";
      AIN86W.WS-DOB-SEP2 = "-";
      H2-HMO-INFO.DOB = AIN86W.WS-DOB-TEN;
      H2-HMO-INFO.ADR-LN1 = SR-AIN86A-IN-REC.DEMO-ADDR-LINE1;
      H2-HMO-INFO.ADR-LN2 = SR-AIN86A-IN-REC.DEMO-ADDR-LINE2;
      H2-HMO-INFO.CITY = SR-AIN86A-IN-REC.DEMO-ADDR-CITY;
      AIN86W.ADDR-ZIP5 = SR-AIN86A-IN-REC.DEMO-ADDR-ZIP5;
      AIN86W.ADDR-ZIP4 = SR-AIN86A-IN-REC.DEMO-ADDR-ZIP4;
      H2-HMO-INFO.ZIP-CD = AIN86W.ZIP-CODE;
      H2-HMO-INFO.PHONE-NMB = SR-AIN86A-IN-REC.DEMO-PHONE-NUMB;
      H2-HMO-INFO.NEW-BORN-IND = SR-AIN86A-IN-REC.NEW-BORN-IND;

  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  /* MOVE SR-AIN86A-IN-REC.PCN-CODE TO H2-HMO-INFO.PCN-CD;*/
  /* MOVE SR-AIN86A-IN-REC.PCN-REMOVAL-CODE TO H2-HMO-INFO.PCN-RMVD-CD;*/

      WDB00PI();
      AIN86P9-HMO-I02();

      VDBCOMMON.UDUP = "N";

      WDB00PE-SQLERR();

      if (VDBCONTROL.URC >= 104)

        WCM00P2-TO-CEP01A();

      end
    end
  end
  /*  */
end // end AIN86P9-HMO-UPD


Function AIN86P9-INITIALIZE()
  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  REJECT-OCCURANCE = 1;

  set H2-PERSON empty;
  set H2-CASE-MEMBER-HST empty;

  /* MOVE 'N' TO AIN86W.UPDATE-PCN-IND;*/
  /* MOVE ' ' TO AIN86W.PCN-CODE-IND;*/
  /* MOVE ' ' TO AIN86W.PCN-CODE-KNOWN-IND;*/
  /* MOVE ' ' TO AIN86W.DISENROLMENT-IND;*/
  /* MOVE ' ' TO AIN86W.REMOVAL-IND;*/

  AIN86W.REJECT-RECORD-IND = "N";
  AIN86W.BILLING-NMB-IND = " ";
  /* MOVE ' ' TO AIN86W.NAME-IND;*/
  /* MOVE ' ' TO AIN86W.SEX-IND;*/
  /* MOVE ' ' TO AIN86W.ADDRESS-IND;*/
  /* MOVE ' ' TO AIN86W.PHONE-IND;*/
  AIN86W.DATE-OF-BIRTH-IND = " ";
  AIN86W.NEW-BORN-IND = " ";
  AIN86W.DATA-CHANGE-IND = " ";
  /*  */
end // end AIN86P9-INITIALIZE


// MAIN PROCESS
Function AIN86P9-MAIN()

  set AIN86W empty;

  WCM00P3-FETCHBDTS();

  AIN86W.CURRENT-DATE-CC = BDATEREC.BDATE-PROCESS-DATE-CC;
  AIN86W.CURRENT-DATE-YY = BDATEREC.BDATE-PROCESS-DATE-YY;
  AIN86W.CURRENT-DATE-MM = BDATEREC.BDATE-PROCESS-DATE-MM;
  AIN86W.CURRENT-DATE-DD = BDATEREC.BDATE-PROCESS-DATE-DD;
  AIN86W.CURRENT-DATE-SEP1 = "-";
  AIN86W.CURRENT-DATE-SEP2 = "-";

  AIN86P9-GT-END-DT(); /* last day of the current month;*/
  AIN86P9-GET-CUTOF(); /* cutoff date for the current month;*/
  AIN86P9-GT-LST-DT(); /* last day of the month previous to*/
                                   /* effective*/
                                   /* month;*/

  AIN86P9-READ-FILE();

  while (sysVar.errorCode == "00000000")

    AIN86W.WS-BILL-NMB = SR-AIN86A-IN-REC.BILL-NMB;

    if (AIN86W.WS-BILL-NMB is numeric)

      AIN86P9-PROC-PARA();

      if (REJECT-RECORD-IND == "Y")

        move SR-AIN86A-IN-REC to SR-AIN86A-OUT-REC withV60Compat;
        SR-AIN86A-OUT-REC.STATUS-OF-RECORD = AIN86W.REJECT-REASON-FIELD;

        AIN86P9-WRT-FILE();

      else

        move SR-AIN86A-IN-REC to SR-AIN86A-OUT-REC withV60Compat;
        AIN86W.REJECT-REASON-FIELD = "Y";
        SR-AIN86A-OUT-REC.STATUS-OF-RECORD = AIN86W.REJECT-REASON-FIELD;

        AIN86P9-WRT-FILE();

      end

      AIN86W.REJECT-REASON-FIELD = " ";

      set SR-AIN86A-IN-REC empty;
      set SR-AIN86A-OUT-REC empty;

    end

    AIN86P9-READ-FILE();

  end
  /*  */
end // end AIN86P9-MAIN


// CHECK PERSON KNOWN TO NOMADS
Function AIN86P9-PER-SRCH()
  /* CBSI start;*/
  /* read TWNPERSON table to check whether the child is  known to;*/
  /* NOMADS;*/
  WDB00PI();
  AIN86P9-READ-S01();
  VDBCOMMON.UNRF = "Y";
  /* changes due to wi#23120;*/
  /* PERFORM WDB00PE-SQLERR;*/
  /* IF VDBCONTROL.URC >= 104;*/
  /* PERFORM WCM00P2-TO-CEP01A;*/
  /* END;*/

  if (AIN86W.WS-SQCOD == 0)
    AIN86W.BILLING-NMB-IND = "Y";
  else
    if ((AIN86W.WS-SQCOD == 100 || 
     /* changes due to wi#23120;*/
    AIN86W.WS-SQCOD == -811))
      AIN86W.BILLING-NMB-IND = "N";
      AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "B";
    else
      WCM00P2-TO-CEP01A();
    end
  end
  /* CBSI - end;*/
end // end AIN86P9-PER-SRCH


// process para
Function AIN86P9-POP-CMH()
  /*  */
  H2-CASE-MEMBER-HST.UPI = H2-2-CMH-PCH.UPI;
  H2-CASE-MEMBER-HST.ICI = H2-2-CMH-PCH.ICI;
  H2-CASE-MEMBER-HST.PRD-BEG-DT = H2-2-CMH-PCH.PRD-BEG-DT;
  H2-CASE-MEMBER-HST.FS-ASST-IND = H2-2-CMH-PCH.FS-ASST-IND;
  H2-CASE-MEMBER-HST.FS-ELIG-CD = H2-2-CMH-PCH.FS-ELIG-CD;
  H2-CASE-MEMBER-HST.MA-30-1-3-D1-DT = H2-2-CMH-PCH.MA-30-1-3-D1-DT;
  H2-CASE-MEMBER-HST.AFDC-ASST-IND = H2-2-CMH-PCH.AFDC-ASST-IND;
  H2-CASE-MEMBER-HST.MA-30-BEG-DT = H2-2-CMH-PCH.MA-30-BEG-DT;
  H2-CASE-MEMBER-HST.AFDC-30-BEG-DT = H2-2-CMH-PCH.AFDC-30-BEG-DT;
  H2-CASE-MEMBER-HST.AFDC-AID-CD = H2-2-CMH-PCH.AFDC-AID-CD;
  H2-CASE-MEMBER-HST.MA-ASST-IND = H2-2-CMH-PCH.MA-ASST-IND;
  H2-CASE-MEMBER-HST.PRNTL-REIMB-AMT = H2-2-CMH-PCH.PRNTL-REIMB-AMT;
  H2-CASE-MEMBER-HST.MA-AID-CD = H2-2-CMH-PCH.MA-AID-CD;
  H2-CASE-MEMBER-HST.FS-QUIT-SANC-DT = H2-2-CMH-PCH.FS-QUIT-SANC-DT;
  H2-CASE-MEMBER-HST.MA-ELIG-CD = H2-2-CMH-PCH.MA-ELIG-CD;
  H2-CASE-MEMBER-HST.SFU-IND = H2-2-CMH-PCH.SFU-IND;
  H2-CASE-MEMBER-HST.AFDC-DSRGD-CD = H2-2-CMH-PCH.AFDC-DSRGD-CD;
  H2-CASE-MEMBER-HST.MA-DSRGD-CD = H2-2-CMH-PCH.MA-DSRGD-CD;
  H2-CASE-MEMBER-HST.VOL-QUIT-EX-IND = H2-2-CMH-PCH.VOL-QUIT-EX-IND;
  H2-CASE-MEMBER-HST.HH-LEFT-DT = H2-2-CMH-PCH.HH-LEFT-DT;
  H2-CASE-MEMBER-HST.RESP-PERSON2-UPI = H2-2-CMH-PCH.RESP-PERSON2-UPI;
  H2-CASE-MEMBER-HST.HOUSE-ARST-IND = H2-2-CMH-PCH.HOUSE-ARST-IND;
  H2-CASE-MEMBER-HST.JOIN-HH-DT = H2-2-CMH-PCH.JOIN-HH-DT;
  H2-CASE-MEMBER-HST.RESP-PERSON1-UPI = H2-2-CMH-PCH.RESP-PERSON1-UPI;
  H2-CASE-MEMBER-HST.HH-LEFT-RSN-CD = H2-2-CMH-PCH.HH-LEFT-RSN-CD;
  H2-CASE-MEMBER-HST.RESP-PERSON3-UPI = H2-2-CMH-PCH.RESP-PERSON3-UPI;
  H2-CASE-MEMBER-HST.JOIN-RPRTD-DT = H2-2-CMH-PCH.JOIN-RPRTD-DT;
  H2-CASE-MEMBER-HST.TAX-DPNDT-CD = H2-2-CMH-PCH.TAX-DPNDT-CD;
  H2-CASE-MEMBER-HST.EXC-CHD-QTR1-AMT = H2-2-CMH-PCH.EXC-CHD-QTR1-AMT;
  H2-CASE-MEMBER-HST.EXC-CHD-QTR2-AMT = H2-2-CMH-PCH.EXC-CHD-QTR2-AMT;
  H2-CASE-MEMBER-HST.PRI-WGE-ERNR-IND = H2-2-CMH-PCH.PRI-WGE-ERNR-IND;
  H2-CASE-MEMBER-HST.EXC-CHD-QTR3-AMT = H2-2-CMH-PCH.EXC-CHD-QTR3-AMT;
  H2-CASE-MEMBER-HST.EXC-CHD-QTR4-AMT = H2-2-CMH-PCH.EXC-CHD-QTR4-AMT;
  H2-CASE-MEMBER-HST.EXC-AL-NTV-AMT = H2-2-CMH-PCH.EXC-AL-NTV-AMT;

  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  /* MOVE H2-2-CMH-PCH.PCN-CD TO H2-CASE-MEMBER-HST.PCN-CD;*/
  /* MOVE H2-2-CMH-PCH.PCN-RMVD-CD TO H2-CASE-MEMBER-HST.PCN-RMVD-CD;*/

  H2-CASE-MEMBER-HST.SUB-UNIT-NMB = H2-2-CMH-PCH.SUB-UNIT-NMB;
  H2-CASE-MEMBER-HST.AFDC-30-1-3-D1-DT = H2-2-CMH-PCH.AFDC-30-1-3-D1-DT;
  H2-CASE-MEMBER-HST.AFDC-30-1-3-D2-DT = H2-2-CMH-PCH.AFDC-30-1-3-D2-DT;
  H2-CASE-MEMBER-HST.AFDC-30-1-3-D3-DT = H2-2-CMH-PCH.AFDC-30-1-3-D3-DT;
  H2-CASE-MEMBER-HST.AFDC-30-1-3-D4-DT = H2-2-CMH-PCH.AFDC-30-1-3-D4-DT;
  H2-CASE-MEMBER-HST.MA-30-1-3-D2-DT = H2-2-CMH-PCH.MA-30-1-3-D2-DT;
  H2-CASE-MEMBER-HST.MA-30-1-3-D3-DT = H2-2-CMH-PCH.MA-30-1-3-D3-DT;
  H2-CASE-MEMBER-HST.MA-30-1-3-D4-DT = H2-2-CMH-PCH.MA-30-1-3-D4-DT;
  H2-CASE-MEMBER-HST.AFDC-DUPL-ASST-IND = H2-2-CMH-PCH.AFDC-DUPL-ASST-IND;
  H2-CASE-MEMBER-HST.FS-DUPL-ASST-IND = H2-2-CMH-PCH.FS-DUPL-ASST-IND;
  H2-CASE-MEMBER-HST.MA-DUPL-ASST-IND = H2-2-CMH-PCH.MA-DUPL-ASST-IND;
  H2-CASE-MEMBER-HST.AFDC-BEG-DT = H2-2-CMH-PCH.AFDC-BEG-DT;
  H2-CASE-MEMBER-HST.FS-BEG-DT = H2-2-CMH-PCH.FS-BEG-DT;
  H2-CASE-MEMBER-HST.ET-PRTCP-CD = H2-2-CMH-PCH.ET-PRTCP-CD;
  H2-CASE-MEMBER-HST.ET-EXMPT-RSN-CD = H2-2-CMH-PCH.ET-EXMPT-RSN-CD;
  H2-CASE-MEMBER-HST.ET-VOL-STAT-IND = H2-2-CMH-PCH.ET-VOL-STAT-IND;
  H2-CASE-MEMBER-HST.ECO-RSTRC-IND = H2-2-CMH-PCH.ECO-RSTRC-IND;
  H2-CASE-MEMBER-HST.FS-AID-CD = H2-2-CMH-PCH.FS-AID-CD;
  H2-CASE-MEMBER-HST.MEDIC-BLNG-SQ-NMB = H2-2-CMH-PCH.MEDIC-BLNG-SQ-NMB;
  H2-CASE-MEMBER-HST.PRD-END-DT = H2-2-CMH-PCH.PRD-END-DT;
  H2-CASE-MEMBER-HST.AFDC-ELIG-CD = H2-2-CMH-PCH.AFDC-ELIG-CD;
  H2-CASE-MEMBER-HST.ET-NON-COOP-CD = H2-2-CMH-PCH.ET-NON-COOP-CD;
  H2-CASE-MEMBER-HST.PTNT-LBLTY-AMT = H2-2-CMH-PCH.PTNT-LBLTY-AMT;
  H2-CASE-MEMBER-HST.RSRC-EXCL-FACTR = H2-2-CMH-PCH.RSRC-EXCL-FACTR;
  H2-CASE-MEMBER-HST.IVE-ELIG-CD = H2-2-CMH-PCH.IVE-ELIG-CD;
  H2-CASE-MEMBER-HST.IVE-AID-CD = H2-2-CMH-PCH.IVE-AID-CD;
  H2-CASE-MEMBER-HST.MAINT-CD = H2-2-CMH-PCH.MAINT-CD;
  H2-CASE-MEMBER-HST.AFDCAID-CD-CHNG-DT = H2-2-CMH-PCH.AFDCAID-CD-CHNG-DT;
  H2-CASE-MEMBER-HST.PREV-AFDC-AID-CD = H2-2-CMH-PCH.PREV-AFDC-AID-CD;
  H2-CASE-MEMBER-HST.MAAID-CD-CHNG-DT = H2-2-CMH-PCH.MAAID-CD-CHNG-DT;
  H2-CASE-MEMBER-HST.PREV-MA-AID-CD = H2-2-CMH-PCH.PREV-MA-AID-CD;
  H2-CASE-MEMBER-HST.QMB-SLMB-IND = H2-2-CMH-PCH.QMB-SLMB-IND;
  H2-CASE-MEMBER-HST.APLD-AFDC-AID-CD = H2-2-CMH-PCH.APLD-AFDC-AID-CD;
  H2-CASE-MEMBER-HST.WRKD-IN-LST-YR-IND = H2-2-CMH-PCH.WRKD-IN-LST-YR-IND;
  H2-CASE-MEMBER-HST.MNRLVNG-ARRGT-FG = H2-2-CMH-PCH.MNRLVNG-ARRGT-FG;
  H2-CASE-MEMBER-HST.ABAWD-FG = H2-2-CMH-PCH.ABAWD-FG;
  H2-CASE-MEMBER-HST.EXCL-FR-TANF-IND = H2-2-CMH-PCH.EXCL-FR-TANF-IND;
  H2-CASE-MEMBER-HST.HRDSHP-CD = H2-2-CMH-PCH.HRDSHP-CD;
  H2-CASE-MEMBER-HST.HRDSHP-DNL-CD = H2-2-CMH-PCH.HRDSHP-DNL-CD;
  H2-CASE-MEMBER-HST.MNR-SCHL-ATNDC-FG = H2-2-CMH-PCH.MNR-SCHL-ATNDC-FG;
  H2-CASE-MEMBER-HST.NEON-CD = H2-2-CMH-PCH.NEON-CD;
  H2-CASE-MEMBER-HST.AJS-PRTCP-CD = H2-2-CMH-PCH.AJS-PRTCP-CD;
  H2-CASE-MEMBER-HST.TANF-CRTKR-IND = H2-2-CMH-PCH.TANF-CRTKR-IND;

  /* ************************************************************************/
  /* CHANGES DUE TO WI# 22229 & 22230*/
  /* ************************************************************************/

  H2-CASE-MEMBER-HST.CHLD-ENTRD-HOME-DT = H2-2-CMH-PCH.CHLD-ENTRD-HOME-DT;
  H2-CASE-MEMBER-HST.LGL-GRDNSHP-EFF-DT = H2-2-CMH-PCH.LGL-GRDNSHP-EFF-DT;
  H2-CASE-MEMBER-HST.CRIMINAL-BKGRND-FG = H2-2-CMH-PCH.CRIMINAL-BKGRND-FG;
  H2-CASE-MEMBER-HST.FP-ASST-IND = H2-2-CMH-PCH.FP-ASST-IND;
  H2-CASE-MEMBER-HST.FP-CLSRE-RSN-CD = H2-2-CMH-PCH.FP-CLSRE-RSN-CD;
  H2-CASE-MEMBER-HST.SSG-HRDSHP-CD = H2-2-CMH-PCH.SSG-HRDSHP-CD;
  H2-CASE-MEMBER-HST.SSG-HRDSHP-DNL-CD = H2-2-CMH-PCH.SSG-HRDSHP-DNL-CD;
  H2-CASE-MEMBER-HST.MCB-ASST-IND = H2-2-CMH-PCH.MCB-ASST-IND;
  H2-CASE-MEMBER-HST.CDC-TYPE = H2-2-CMH-PCH.CDC-TYPE;
  H2-CASE-MEMBER-HST.GRS250-MBR-IND = H2-2-CMH-PCH.GRS250-MBR-IND;

  H2-CASE-MEMBER-HST.MBR-PMED-IND = H2-2-CMH-PCH.MBR-PMED-IND;
  H2-CASE-MEMBER-HST.MBR-CH-APPL-DT = H2-2-CMH-PCH.MBR-CH-APPL-DT;
  H2-CASE-MEMBER-HST.MBR-CLOSURE-RSNCD = H2-2-CMH-PCH.MBR-CLOSURE-RSNCD;
  H2-CASE-MEMBER-HST.INTL-CH-INCM-TST = H2-2-CMH-PCH.INTL-CH-INCM-TST;
  /*  */
end // end AIN86P9-POP-CMH


// process para
Function AIN86P9-PROC-PARA()
  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ALSO, COMMENTED OUT REFERENCES TO NAME, ADDRESS, SEX,*/
  /* AND PHONE PER ROUND TABLE, 11/16/06. NO LONGER WILL*/
  /* ALERTS BE GENERATED FOR THESE FIELDS.*/
  /* ************************************************************************/

  AIN86P9-INITIALIZE();

  /* IF SR-AIN86A-IN-REC.PCN-CODE = ' ' AND*/
  /* SR-AIN86A-IN-REC.PCN-REMOVAL-IND = ' ' AND*/
  /* SR-AIN86A-IN-REC.PCN-REMOVAL-CODE = ' ' AND*/

  if (SR-AIN86A-IN-REC.NEW-BORN-IND == " " && 
   /* SR-AIN86A-IN-REC.DEMO-LAST-NAME = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-FRST-NAME = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-MIDDLE-NAME = '*/
   /* ' AND*/
   /* SR-AIN86A-IN-REC.DEMO-ADDR-LINE1 = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-ADDR-LINE2 = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-ADDR-CITY = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-ADDR-ZIP5 = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-ADDR-ZIP4 = ' '*/
   /* AND*/
   /* SR-AIN86A-IN-REC.DEMO-SEX = ' ' AND*/
  SR-AIN86A-IN-REC.DEMO-DOB == " ")
  /* SR-AIN86A-IN-REC.DEMO-PHONE-NUMB = ' ';*/
    AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "X";
    AIN86W.REJECT-RECORD-IND = "Y";

    return;

  end

  H2-PERSON.MEDIC-BLNG-SQ-NMB = SR-AIN86A-IN-REC.BILL-NMB;

  AIN86P9-PER-SRCH();

  /* ************************************************************************/
  /* CHECK FOR BILLING NUMBER KNOWN TO NOMADS*/
  /* ************************************************************************/

  if (AIN86W.BILLING-NMB-IND == "N")

    AIN86W.REJECT-RECORD-IND = "Y";

    return;

  end

  /* PERFORM AIN86P9-NAME-CHK;*/

  /* IF SR-AIN86A-IN-REC.DEMO-SEX = 'M' OR*/
  /* SR-AIN86A-IN-REC.DEMO-SEX = 'F';*/
  /*  */
  /* IF SR-AIN86A-IN-REC.DEMO-SEX NE H2-PERSON.SEX-CD;*/
  /*  */
  /* MOVE 'Y' TO AIN86W.SEX-IND;*/
  /*  */
  /* ELSE;*/
  /*  */
  /* MOVE 'N' TO AIN86W.SEX-IND;*/

  /* END;*/

  /* ELSE;*/

  /* IF SR-AIN86A-IN-REC.DEMO-SEX NE ' ';*/
  /*  */
  /* MOVE 'N' TO AIN86W.SEX-IND;*/
  /* MOVE 'S' TO AIN86W.REJECT-REASON(REJECT-OCCURANCE);*/
  /*  */
  /* REJECT-OCCURANCE = REJECT-OCCURANCE + 1;*/
  /*  */
  /* MOVE 'Y' TO AIN86W.REJECT-RECORD-IND;*/

  /* END;*/
  /* END;*/

  /* PERFORM AIN86P9-ADDR-CHK;*/

  /* IF SR-AIN86A-IN-REC.DEMO-PHONE-NUMB NE ' ';*/
  /*  */
  /* PERFORM AIN86P9-PHONE-CHK;*/
  /*  */
  /* END;*/

  if (SR-AIN86A-IN-REC.DEMO-DOB != " ")

    AIN86P9-DATE-CHK();

  end

  if (SR-AIN86A-IN-REC.NEW-BORN-IND == "T" || 
  SR-AIN86A-IN-REC.NEW-BORN-IND == "S" || 
  SR-AIN86A-IN-REC.NEW-BORN-IND == "M")

    AIN86W.NEW-BORN-IND = "Y";

  else

    if (SR-AIN86A-IN-REC.NEW-BORN-IND != " ")

      AIN86W.NEW-BORN-IND = "N";
      AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "N";

      REJECT-OCCURANCE = REJECT-OCCURANCE + 1;

      AIN86W.REJECT-RECORD-IND = "Y";

    end
  end

  /* ************************************************************************/
  /* WI# 28459 - COMMENTED OUT REFERENCE TO PCN SINCE THIS INFO IS NO*/
  /* LONGER STORED OR USED.*/
  /* ************************************************************************/

  /* IF SR-AIN86A-IN-REC.PCN-REMOVAL-IND = 'Y';*/
  /* MOVE 'Y' TO AIN86W.REMOVAL-IND;*/
  /* ELSE;*/
  /* IF SR-AIN86A-IN-REC.PCN-REMOVAL-IND NE ' ';*/
  /* MOVE 'N' TO AIN86W.REMOVAL-IND;*/
  /* MOVE 'Q' TO AIN86W.REJECT-REASON(REJECT-OCCURANCE);*/
  /* REJECT-OCCURANCE = REJECT-OCCURANCE + 1;*/
  /* MOVE 'Y' TO AIN86W.REJECT-RECORD-IND;*/
  /* END;*/
  /* END;*/

  /* IF SR-AIN86A-IN-REC.PCN-REMOVAL-CODE NE ' ';*/
  /* MOVE SR-AIN86A-IN-REC.PCN-REMOVAL-CODE TO H2-CODE-TBL.CODE-TBL-CD;*/
  /* MOVE 'PCNREMCD' TO H2-CODE-TBL.CODE-TBL-TYP;*/
  /* PERFORM AIN86P9-DISN-SRCH;*/
  /* END;*/

  /* PERFORM AIN86P9-REML-DISN;       /*validate removal and disenrollment*/

  /* IF SR-AIN86A-IN-REC.PCN-CODE NE ' ';*/
  /* MOVE SR-AIN86A-IN-REC.PCN-CODE TO H2-PCN-ADR-DTLS.PCN-CD;*/
  /* PERFORM AIN86P9-PCN-SRCH;*/
  /* END;*/

  H2-2-CMH-PCH.UPI = H2-PERSON.UPI;
  H2-2-CMH-PCH.PRD-BEG-DT = AIN86W.MONTH-EFFECTIVE-DATE;
  H2-2-CMH-PCH.PRD-END-DT = AIN86W.MONTH-EFFECTIVE-DATE;

  WDB00PI();

  AIN86P9-CMH-SETINQ();

  VDBCOMMON.UNRF = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC >= 104)

    WCM00P2-TO-CEP01A();

  end

  WDB00PI();

  AIN86P9-CMH-S05();

  VDBCOMMON.UNRF = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC >= 104)

    WCM00P2-TO-CEP01A();

  end

  if (sysVar.sqlData.sqlcode == 100)

    AIN86W.REJECT-REASON[REJECT-OCCURANCE] = "C";

    REJECT-OCCURANCE = REJECT-OCCURANCE + 1;

    AIN86W.REJECT-RECORD-IND = "Y";

  end

  while (sysVar.sqlData.sqlcode == 0)

  /* MOVE ' ' TO AIN86W.PCN-CODE-IND;*/

  /* IF SR-AIN86A-IN-REC.PCN-CODE NE H2-2-CMH-PCH.PCN-CD AND*/
  /* AIN86W.PCN-CODE-KNOWN-IND = 'Y';*/
  /* MOVE 'Y' TO AIN86W.PCN-CODE-IND;*/
  /* END;*/

  /* PERFORM AIN86P9-VALID-PCN;*/

  /* MOVE AIN86W.PCN-CODE TO AIN86W.WS-FILE-PCN;*/
  /* MOVE H2-2-CMH-PCH.PCN-CD TO AIN86W.WS-DB-PCN;*/

  /* IF AIN86W.UPDATE-PCN-IND = 'Y' AND*/
  /* (AIN86W.WS-FILE-PCN-1 = AIN86W.WS-DB-PCN-1 OR*/
  /* AIN86W.WS-FILE-PCN = ' ');*/

    AIN86P9-CMH-UPD();

  /* END;*/

    if (AIN86W.REJECT-RECORD-IND == "N" && 
     /* (AIN86W.NAME-IND = 'Y' OR*/
     /* AIN86W.SEX-IND = 'Y' OR*/
     /* AIN86W.ADDRESS-IND = 'Y' OR*/
     /* AIN86W.PHONE-IND = 'Y' OR*/
    (AIN86W.DATE-OF-BIRTH-IND == "Y" || 
    AIN86W.NEW-BORN-IND == "Y"))

  /* AIN86W.PCN-CODE-IND = 'Y' OR*/
  /* AIN86W.DISENROLMENT-IND = 'Y');*/

      AIN86P9-ALRT-WRKR();
      AIN86P9-HMO-UPD();

    end

    WDB00PI();

    AIN86P9-CMH-S05();

    VDBCOMMON.UNRF = "Y";

    WDB00PE-SQLERR();

    if (VDBCONTROL.URC >= 104)

      WCM00P2-TO-CEP01A();

    end
  end
  /*  */
end // end AIN86P9-PROC-PARA


// READ INPUT MANAGE FILE
Function AIN86P9-READ-FILE()
  VGVar.handleHardIOErrors = 1;
  try
    get next SR-AIN86A-IN-REC ;
  end
  if (SR-AIN86A-IN-REC is ioError && SR-AIN86A-IN-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIN86P9-READ-FILE";
    VDBCONTROL.UPROC-OBJ = "SR-AIN86A-IN-REC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIN86A";
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-AIN86A-IN-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIN86A-IN-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIN86A-IN-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
end // end AIN86P9-READ-FILE


// READ TWNPERSON
Function AIN86P9-READ-S01()
  VDBCONTROL.UPROC-NM = "AIN86P9-READ-S01";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON";
  VDBCOMMON.USQLREC = "H2-PERSON";
  /*  */
  try
    get H2-PERSON singleRow
      with #sql{
        select upi,SEX_CD,DOB,MID_NM,FRST_NM,LST_NM,HM_PHN_NMB,
            WRK_PHN_NMB,MEDIC_BLNG_SQ_NMB
        from TWNPERSON T1
        WHERE MEDIC_BLNG_SQ_NMB =  :MEDIC-BLNG-SQ-NMB
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI,SEX-CD,DOB,MID-NM,FRST-NM,LST-NM,HM-PHN-NMB,
           WRK-PHN-NMB,MEDIC-BLNG-SQ-NMB ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-READ-S01


// READ TWNCLNDR
Function AIN86P9-READ-S02()
  VDBCONTROL.UPROC-NM = "AIN86P9-READ-S02";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CLNDR";
  VDBCOMMON.USQLREC = "H2-CLNDR";
  /*  */
  try
    get H2-CLNDR singleRow
      with #sql{
        select CLNDR_DT
        from TWNCLNDR T1
        WHERE CLNDR_DT >= :MONTH-START-DATE
          AND CLNDR_DT <= :MONTH-END-DATE
          AND AFDC_BNFT_TYPE = 'RS'
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into CLNDR-DT ;
  end
  AIN86W.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN86P9-READ-S02


// WRITE REC TO OUT GOING FILE
Function AIN86P9-WRT-FILE()
  /* CBSI start;*/
  try
    add SR-AIN86A-OUT-REC ;
  end
  if (SR-AIN86A-OUT-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN86P9-WRITE-FILE";
    VDBCONTROL.UPROC-OBJ = "SR-AIN86A-OUT-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[2] = "AIN86A";
     /*  */
     /* the following conditions are added to move the corresponding*/
     /* error message*/
   /*  */
    if (SR-AIN86A-OUT-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIN86A-OUT-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIN86A-OUT-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end
  /* CBSI end;*/
end // end AIN86P9-WRT-FILE


Record AIN86W type basicRecord
  10 WS-INDICATORS char(11) ; 
    15 BILLING-NMB-IND char(1) ; 
    15 NAME-IND char(1) ; 
    15 SEX-IND char(1) ; 
    15 ADDRESS-IND char(1) ; 
    15 PHONE-IND char(1) ; 
    15 DATE-OF-BIRTH-IND char(1) ; 
    15 NEW-BORN-IND char(1) ; 
    15 PCN-CODE-IND char(1) ; 
    15 REMOVAL-IND char(1) ; 
    15 DISENROLMENT-IND char(1) ; 
    15 DATA-CHANGE-IND char(1) ; 
  10 REJECT-REASON-FIELD char(11) ; 
    15 REJECT-REASON char(1) [11] ; 
  10 REJECT-OCCURANCE num(2) ; 
  10 REJECT-RECORD-IND char(1) ; 
  10 CURRENT-DATE char(10) ; 
    15 CURRENT-DATE-CCYY-N num(4) ; 
      20 CURRENT-DATE-CCYY char(4) ; 
        25 CURRENT-DATE-CC char(2) ; 
        25 CURRENT-DATE-YY char(2) ; 
    15 CURRENT-DATE-SEP1 char(1) ; 
    15 CURRENT-DATE-MM-N num(2) ; 
      20 CURRENT-DATE-MM char(2) ; 
    15 CURRENT-DATE-SEP2 char(1) ; 
    15 CURRENT-DATE-DD-N num(2) ; 
      20 CURRENT-DATE-DD char(2) ; 
  10 MONTH-START-DATE char(10) ; 
    15 MONTH-START-DATE-CCYY char(4) ; 
      20 MONTH-START-DATE-CC char(2) ; 
      20 MONTH-START-DATE-YY char(2) ; 
    15 MONTH-START-DATE-SEP1 char(1) ; 
    15 MONTH-START-DATE-MM char(2) ; 
    15 MONTH-START-DATE-SEP2 char(1) ; 
    15 MONTH-START-DATE-DD char(2) ; 
  10 MONTH-END-DATE char(10) ; 
    15 MONTH-END-DATE-CCYY char(4) ; 
      20 MONTH-END-DATE-CC char(2) ; 
      20 MONTH-END-DATE-YY char(2) ; 
    15 MONTH-END-DATE-SEP1 char(1) ; 
    15 MONTH-END-DATE-MM char(2) ; 
    15 MONTH-END-DATE-SEP2 char(1) ; 
    15 MONTH-END-DATE-DD char(2) ; 
  10 MONTH-EFFECTIVE-DATE char(10) ; 
    15 MONTH-EFFECTIVE-DATE-CCYY-N num(4) ; 
      20 MONTH-EFFECTIVE-DATE-CCYY char(4) ; 
        25 MONTH-EFFECTIVE-DATE-CC-N num(2) ; 
          30 MONTH-EFFECTIVE-DATE-CC char(2) ; 
        25 MONTH-EFFECTIVE-DATE-YY-N num(2) ; 
          30 MONTH-EFFECTIVE-DATE-YY char(2) ; 
    15 MONTH-EFFECTIVE-DATE-SEP1 char(1) ; 
    15 MONTH-EFFECTIVE-DATE-MM-N num(2) ; 
      20 MONTH-EFFECTIVE-DATE-MM char(2) ; 
    15 MONTH-EFFECTIVE-DATE-SEP2 char(1) ; 
    15 MONTH-EFFECTIVE-DATE-DD-N num(2) ; 
      20 MONTH-EFFECTIVE-DATE-DD char(2) ; 
  10 PREV-MONTH-END-DATE char(10) ; 
    15 PREV-MONTH-END-DATE-CCYY-N num(4) ; 
      20 PREV-MONTH-END-DATE-CCYY char(4) ; 
        25 PREV-MONTH-END-DATE-CC-N num(2) ; 
          30 PREV-MONTH-END-DATE-CC char(2) ; 
        25 PREV-MONTH-END-DATE-YY-N num(2) ; 
          30 PREV-MONTH-END-DATE-YY char(2) ; 
    15 PREV-MONTH-END-DATE-SEP1 char(1) ; 
    15 PREV-MONTH-END-DATE-MM-N num(2) ; 
      20 PREV-MONTH-END-DATE-MM char(2) ; 
    15 PREV-MONTH-END-DATE-SEP2 char(1) ; 
    15 PREV-MONTH-END-DATE-DD-N num(2) ; 
      20 PREV-MONTH-END-DATE-DD char(2) ; 
  10 UPDATE-PCN-IND char(1) ; 
  10 PCN-CODE char(4) ; 
  10 PCN-CODE-KNOWN-IND char(4) ; 
  10 WS-REM1 num(4) ; 
  10 WS-REM2 num(4) ; 
  10 WS-REM3 num(4) ; 
  10 WS-SQCOD smallint ; 
  10 WS-D-DOB char(8) ; 
    15 WS-D-CCYY char(4) ; 
      20 WS-D-CCYY-N num(4) ; 
    15 WS-D-MM char(2) ; 
    15 WS-D-DD char(2) ; 
  10 WS-DOB-CCYYMMDD char(8) ; 
    15 WS-DOB-CCYY char(4) ; 
    15 WS-DOB-MM char(2) ; 
    15 WS-DOB-DD char(2) ; 
  10 WS-DOB-TEN char(10) ; 
    15 WS-DOB-YEAR char(4) ; 
    15 WS-DOB-SEP1 char(1) ; 
    15 WS-DOB-MONTH char(2) ; 
    15 WS-DOB-SEP2 char(1) ; 
    15 WS-DOB-DAY char(2) ; 
  10 WS-LEAP-FLAG char(1) ; 
  10 WS-TEMP num(4) ; 
  10 PRD-END-DT char(10) ; // PRD-END-DT
  10 TIME-STAMP char(26) ; 
  10 ZIP-CODE char(9) ; 
    15 ADDR-ZIP5 char(5) ; 
    15 ADDR-ZIP4 char(4) ; 
  10 WS-FILE-PCN char(4) ; 
    15 WS-FILE-PCN-1 char(1) ; 
    15 WS-FILE-PCN-3 char(3) ; 
  10 WS-DB-PCN char(4) ; 
    15 WS-DB-PCN-1 char(1) ; 
    15 WS-DB-PCN-3 char(3) ; 
  10 WS-BILL-NMB char(11) ; 
end // end AIN86W


