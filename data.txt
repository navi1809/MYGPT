package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN97A ****
// COMPONENT NAME: AIN97A SCHOOL LUNCH REPORT
// ===============
// 
// DESCRIPTION:
// ============
// REPORT OF ALL CHILDREN 4 TO 19 TANF 'FS' PARTICIPANTS
// ***********************
// WI 1842 Reconfigure Direct Certification Data for Department of Education (05-08-2013)
//         1) Include all SNAP-eligible clients except those with zero month-to-date entitlement allotments
//         2) Include TN, TC and AF clients with COA, COS, COK and CON aid codes
// Coded by Hedy Russell; tested by Catherine Boedenauer

Program AIN97A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIN97W AIN97W; // record
  AIN97W-DET AIN97W-DET; // record
  AIN97W-HEAD AIN97W-HEAD; // record
  BDATEREC BDATEREC; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  H2-4-CMHFCE-PAHPER H2-4-CMHFCE-PAHPER; // record
  H2-MEMBER-REL H2-MEMBER-REL; // record
  H2-PERSON H2-PERSON; // record
  H2-ELIG-VERSION H2-ELIG-VERSION; // record
  P-DATE-REC3 P-DATE-REC3; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SCHLEXT SCHLEXT; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AIN97-RECIN SR-AIN97-RECIN; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC4 VSTRREC4; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN97P9-MAIN: AIN97P9-MAIN();
  end // end main
end // end AIN97A


// APPLICATION SPECIFIC LOGIC
Function AIN97P9-APPLSPEC()
  /* *********************************************************************/
  /* STRATEGY - ISSUE THE SQL TO PULL ALL SCHOOL RECORDS THAT QUALIFY*/
  /* *********************************************************************/
  AIN97Q1-S01();
  if (AIN97W.WS-MAIN-URC == 0)
  /* IF EZESQCOD = 0;*/
    AIN97Q1-S01-SCAN();
  end
  if (AIN97W.WS-MAIN-URC != 0)
    REP132P9-NRF-PROC();
    AIN97P9-CLOS-PARA();
  end
  /* WHILE EZESQCOD = 0;*/
  while (WS-MAIN-URC == 0)
  /* PERFORM AIN97P9-DETR-AGE2;*/
  /* IF (AIN97W.WS-YEARS > 3 AND AIN97W.WS-YEARS < 20);*/
    AIN97P9-ELIGIBILITY(); // WI 1842
    IF (WS-ELIG-FLAG == "Y")
        AIN97P9-POP-REPT();
        AIN97P9-MOVE-DATA();
        AIN97P9-WRITE-EXTR();
    END  
    AIN97P9-CLEAR-WS();
    AIN97Q1-S01-SCAN();
  end
  AIN97W-DET.LINE2 = " ";
  SR-132REP-RECOUT.PRNT-CC = "1";
  AIN97W-DET.EXTR-CTR-OUT = AIN97W.WS-EXTR-CTR;
  SR-132REP-RECOUT.UFIELD = AIN97W-DET.LINE2;
  WR-132REP-OUT-FILE();
  exit program;
end // end AIN97P9-APPLSPEC

// WI 1842
Function AIN97P9-ELIGIBILITY()
  WS-ELIG-FLAG = "N";
  WS-FS-PROG-STAT = " ";
  WS-TANF-PROG-STAT = "B";
  IF (WS-AFDC-ELIG-CD == "1") 
      IF (WS-AFDC-AID-CD == "COA" || 
          WS-AFDC-AID-CD == "COK" || 
          WS-AFDC-AID-CD == "CON" || 
          WS-AFDC-AID-CD == "COS")
          	 WS-TANF-PROG-STAT = "A";
  	 	     WS-ELIG-FLAG = "Y"; 
  	  END
  END
  IF (WS-TC-ELIG-CD == "1")
      IF (WS-TC-AID-CD == "COA" || 
          WS-TC-AID-CD == "COK" || 
          WS-TC-AID-CD == "CON" || 
          WS-TC-AID-CD == "COS")
          	 WS-TANF-PROG-STAT = "A";
  	 	     WS-ELIG-FLAG = "Y"; 
  	  END
  END
  IF (WS-TN-ELIG-CD == "1")
      IF (WS-TN-AID-CD == "TN " || 
          WS-TN-AID-CD == "TN1" ||
          WS-TN-AID-CD == "TN2")
          	 WS-TANF-PROG-STAT = "A";
  	 	     WS-ELIG-FLAG = "Y"; 
  	   END
  END
  IF (WS-FS-ELIG-CD == "1")
     WS-MTD-ENTLM-AMT = 0;
     AIN97Q4-ENTITLEMENT();
     IF (WS-MTD-ENTLM-AMT > 0)
         WS-FS-PROG-STAT = "F";
      	 WS-ELIG-FLAG = "Y";
     END	   
  END  
END // AIN97P9-ELIGIBILITY()
   	
// CLEAR WORKING STORAGE
Function AIN97P9-CLEAR-WS()
  WS-LST-NM = " ";
  WS-FRST-NM = " ";
  WS-DOB = " ";
  WS-ETHNC-CD = " ";
  WS-RSDN-CNTY-CD = " ";
  WS-CITY = " ";
  WS-ZIP-CD = " ";
  WS-FS-ELIG-CD = " ";
  WS-AFDC-ELIG-CD = " ";
  WS-TC-ELIG-CD = " ";
  WS-TN-ELIG-CD = " ";
  WS-FS-AID-CD = " ";
  WS-AFDC-AID-CD = " ";
  WS-TC-AID-CD = " ";
  WS-TN-AID-CD = " ";
  WDS-SSN = " ";
  WS-CHLD-NAME = " ";
  WS-HOH-NAME = " ";
  WS-SPOUSE-NAME = " ";
  WS-PROG-STAT = " ";
  WS-ICI = 0;
  WS-HOH-UPI = 0;
  WS-SPOUSE-UPI = 0;
  WS-LKUP-UPI = 0;
  WS-LKUP-ICI = 0;
  WS-ODD-DAYS = 0;
  WS-DIF-DAYS = 0;
  WS-YEARS = 0;
  set SCHLEXT empty;
end // end AIN97P9-CLEAR-WS


// CLOSES THE APPLICATION
Function AIN97P9-CLOS-PARA()
  /* *******************************************************************/
  /* process to close the application                  */
  /* *******************************************************************/
  exit program;
end // end AIN97P9-CLOS-PARA


// FIND COL OF LAST NON-BLNK CHAR
Function AIN97P9-COUNT-CHAR()
  WS-INDX1 = 1;
  WS-LASTX = 0;
  while (WS-INDX1 < 51)
    if (AIN97W.WS-TMP-ADDR-CHAR[WS-INDX1] != " ")
      move WS-INDX1 to WS-LASTX withV60Compat;
      WS-INDX1 = WS-INDX1 + 1;
    else
      WS-INDX1 = WS-INDX1 + 1;
    end
  end
end // end AIN97P9-COUNT-CHAR


// DETR APPROX DOBS FOR AGE 4-19
Function AIN97P9-DETR-AGE()
  AIN97W.WS-4YR-CCYY = AIN97W.WS-MTH-BEG-CCYY - 4;
  AIN97W.WS-4YR-MM = AIN97W.WS-MTH-BEG-MM;
  AIN97W.WS-4YR-DD = AIN97W.WS-MTH-BEG-DD;
  WS-HASH11 = "-";
  WS-HASH12 = "-";
  AIN97W.WS-19YR-CCYY = AIN97W.WS-MTH-BEG-CCYY - 19;
  AIN97W.WS-19YR-MM = AIN97W.WS-MTH-BEG-MM;
  AIN97W.WS-19YR-DD = AIN97W.WS-MTH-BEG-DD;
  WS-HASH13 = "-";
  WS-HASH14 = "-";
end // end AIN97P9-DETR-AGE


// ELIMINATE DUEL OR TRI SPACES
Function AIN97P9-ELIM-SPACE()
  WS-INDX1 = 1;
  WS-INDX2 = 2;
  WS-INDXX = 1;
  while (WS-INDX2 < 51)
    if (AIN97W.WS-TMP-ADDR-CHAR[WS-INDX1] == " "
     && AIN97W.WS-TMP-ADDR-CHAR[WS-INDX2] == " ")
      AIN97W.WS-CONCAT-ADDR-CHAR[WS-INDXX] = " ";
      WS-INDX1 = WS-INDX1 + 1;
      WS-INDX2 = WS-INDX2 + 1;
  /* WS-INDXX = WS-INDX1 - 1;*/
    else
      AIN97W.WS-CONCAT-ADDR-CHAR[WS-INDXX] = AIN97W.WS-TMP-ADDR-CHAR[WS-INDX1];
      WS-INDX1 = WS-INDX1 + 1;
      WS-INDX2 = WS-INDX2 + 1;
      WS-INDXX = WS-INDXX + 1;
    end
    if (WS-INDX1 > WS-LASTX)
      WS-INDX2 = 51;
    end
  end
end // end AIN97P9-ELIM-SPACE


// INSERT ', ' BETWIX LAST&FIRST
Function AIN97P9-INSRT-SPAC()
  WS-INDX1 = 1;
  WS-INDXX = 1;
  WS-INDX2 = 2;
  WS-INDX3 = 3;
  WS-INDX4 = 4;
  AIN97W.WS-SPACE-FND = "N";
  while (WS-INDX3 < 27)
    if (AIN97W.WS-TMP-NAME-CHAR[WS-INDX1] != " "
     && AIN97W.WS-TMP-NAME-CHAR[WS-INDX2] == " "
     && AIN97W.WS-TMP-NAME-CHAR[WS-INDX3] != " "
     && WS-INDX2 > VSTRREC4.USTINDX2
     && AIN97W.WS-SPACE-FND == "N")
      AIN97W.WS-SPACE-FND = "Y";
      AIN97W.WS-TMP-NAME-CHAR[WS-INDX2] = ",";
      AIN97W.WS-CONCAT-CHAR[WS-INDX1] = AIN97W.WS-TMP-NAME-CHAR[WS-INDX1];
      AIN97W.WS-CONCAT-CHAR[WS-INDX2] = AIN97W.WS-TMP-NAME-CHAR[WS-INDX2];
      AIN97W.WS-CONCAT-CHAR[WS-INDX4] = AIN97W.WS-TMP-NAME-CHAR[WS-INDX3];
      AIN97W.WS-CONCAT-CHAR[WS-INDX3] = " ";
      move WS-INDX4 to WS-INDX1 withV60Compat;
      WS-INDXX = WS-INDX1 + 1;
      WS-INDX2 = WS-INDX1 + 1;
      WS-INDX3 = WS-INDX1 + 2;
    else
      AIN97W.WS-CONCAT-CHAR[WS-INDXX] = AIN97W.WS-TMP-NAME-CHAR[WS-INDX1];
      WS-INDX1 = WS-INDX1 + 1;
      WS-INDX2 = WS-INDX2 + 1;
      WS-INDX3 = WS-INDX3 + 1;
      WS-INDX4 = WS-INDX4 + 1;
      WS-INDXX = WS-INDXX + 1;
    end
  end
end // end AIN97P9-INSRT-SPAC


// INTIALISE ALL VARIABLES
Function AIN97P9-INTL-RTN()
  /* To return control back to program if hard error occurs*/
  VGVar.handleHardIOErrors = 1;
  /* process to initialize all additional records*/
  AIN97P9-SET-EMPTY();
  /* set standard header variables*/
  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL; /* current date*/
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AIN97W-HEAD.UDATE = REP-COMMON.WS-DATE;
  AIN97W-HEAD.UTIME = VGVar.currentFormattedTime; /* current time*/
  AIN97W-HEAD.UAPPL = "AIN97A"; /* report name*/
  VDBCOMMON.UAPPLNAM = "AIN97A";
  /* get the bdaterec*/
  AIN97P9-READIP-RTN();
  AIN97W.WS-MTH-BEG-CCYY = AIN97W.WS-RPT-CCYY;
  AIN97W.WS-MTH-BEG-MM = AIN97W.WS-RPT-MM;
  AIN97W.WS-MTH-BEG-DD = 01;
  AIN97W.WS-HASH7 = "-";
  AIN97W.WS-HASH8 = "-";
  AIN97W.WS-MTH-END-CCYY = AIN97W.WS-RPT-CCYY;
  AIN97W.WS-MTH-END-MM = AIN97W.WS-RPT-MM;
  AIN97W.WS-MTH-END-DD = 0;
  AIN97W.WS-HASH9 = "-";
  AIN97W.WS-HASH10 = "-";
  SCHOOL-LUNCH-TG = "SCHOOL LUNCH PROGRAM";
  PAGE-TG = "PAGE";
  LST-HDR = "LAST-NAME";
  DOB-HDR = "DOB";
  LINE3-ETHNC = "ETHNC";
  ETHNC-HDR = "CODE";
  LINE3-RSDN = "RSDN";
  RSDN-HDR = "CNTY";
  CITY-HDR = "CITY";
  ZIP-HDR = "ZIP-CD";
  LINE3-FS-ELIG = " SNAP";
  FS-ELIG-HDR = "ELG BNF";
  LINE3-AFDC-ELIG = "  TANF-CASH";
  AFDC-ELIG-HDR = "AFDC  TN  TC";
  SSN-HDR = "SSN";
  ICI-HDR = "ICI";
  HOH-UPI-HDR = "HOH";
  AIN97P9-LEAP-CHK();
  AIN97P9-VALIDATE();
  AIN97P9-DETR-AGE();
end // end AIN97P9-INTL-RTN


// leap year check
Function AIN97P9-LEAP-CHK()
  /* calculate the last day of the month*/
  if (AIN97W.WS-RPT-MM == 01 || 
  AIN97W.WS-RPT-MM == 03 || 
  AIN97W.WS-RPT-MM == 05 || 
  AIN97W.WS-RPT-MM == 07 || 
  AIN97W.WS-RPT-MM == 08 || 
  AIN97W.WS-RPT-MM == 10 || 
  AIN97W.WS-RPT-MM == 12)
    AIN97W.WS-MTH-END-DD = 31;
  end
  if (AIN97W.WS-RPT-MM == 04 || 
  AIN97W.WS-RPT-MM == 06 || 
  AIN97W.WS-RPT-MM == 09 || 
  AIN97W.WS-RPT-MM == 11)
    AIN97W.WS-MTH-END-DD = 30;
  end

  /* Check for LEAP YEAR*/
  /* Years divisible by 4 is a LEAP YEAR;  But every 100th year is not a*/
  /* LEAP YEAR; But every 400th year is a LEAP YEAR*/
  REP-COMMON.WS-YYYY = AIN97W.WS-RPT-CCYY;

  if (AIN97W.WS-RPT-MM == 02)
    REP-COMMON.WS-REM1 = REP-COMMON.WS-YYYY % 4;
    REP-COMMON.WS-REM2 = REP-COMMON.WS-YYYY % 100;
    REP-COMMON.WS-REM3 = REP-COMMON.WS-YYYY % 400;
    if (REP-COMMON.WS-REM1 != 0)
      REP-COMMON.WS-LEAP-FLAG = "N";
    else
      REP-COMMON.WS-LEAP-FLAG = "Y";
      if (REP-COMMON.WS-REM2 == 0)
        REP-COMMON.WS-LEAP-FLAG = "N";
        if (REP-COMMON.WS-REM3 == 0)
          REP-COMMON.WS-LEAP-FLAG = "Y";
        end
      end
    end
    if (REP-COMMON.WS-LEAP-FLAG == "Y")
      AIN97W.WS-MTH-END-DD = 29;
    else
      AIN97W.WS-MTH-END-DD = 28;
    end
  end
end // end AIN97P9-LEAP-CHK


// PROCESS MAIN LINE
Function AIN97P9-MAIN()
  AIN97P9-INTL-RTN();
  AIN97P9-APPLSPEC();
end // end AIN97P9-MAIN


// MOVE DATA FIELDS TO EXTR
Function AIN97P9-MOVE-DATA()
  /* ********************************************************************/
  /* PROCESS TO MOVE EXTRACT DATA TO EXTRACT RECORD*/
  /* ********************************************************************/

  SLX-RECORD = " ";

  /* ********************************************************************/
  /* POPULATE RECORD-TYPE*/
  /* ********************************************************************/

  SLX-REC-TYP = "E"; /* E=ELIGIBLE,D=DELETED-INELIGBLE,A=NEW-APPROVAL*/

  /* ********************************************************************/
  /* POPULATE FISCAL-YEAR*/
  /* ********************************************************************/

  if (WS-MTH-BEG-MM == 10 || WS-MTH-BEG-MM == 11 || WS-MTH-BEG-MM == 12)

    WS-FSCL-CCYY = WS-MTH-BEG-CCYY + 1;

  else

    move WS-MTH-BEG-CCYY to WS-FSCL-CCYY withV60Compat;

  end

  move WS-FSCL-CCYY to SLX-FSCL-CCYY withV60Compat;

  /* ********************************************************************/
  /* POPULATE SSN*/
  /* ********************************************************************/

  SLX-SSN = AIN97W.WDS-SSN;

  /* ********************************************************************/
  /* POPULLATE PROGRAM-STATUS*/ 
  /*  
  /* WI 1842 PROGRAM-STATUS IS POPULATED IN AIN97P9-ELIGIBILITY */ 

/*  if (AIN97W.WS-FS-ELIG-CD == "1")
      if (AIN97W.WS-AFDC-ELIG-CD == "1")
            AIN97W.WS-PROG-STAT = "FA";
      else if ((AIN97W.WS-AFDC-ELIG-CD != " " && 
                AIN97W.WS-AFDC-ELIG-CD != "1" && 
                AIN97W.WS-AFDC-ELIG-CD != "3" && 
                AIN97W.WS-AFDC-ELIG-CD != "7" && 
                AIN97W.WS-AFDC-ELIG-CD != "9"))
                      AIN97W.WS-PROG-STAT = "FB";
           else       AIN97W.WS-PROG-STAT = "F ";
           end
     end
  end

  if (AIN97W.WS-FS-ELIG-CD != "1")
      if (AIN97W.WS-AFDC-ELIG-CD == "1")
           AIN97W.WS-PROG-STAT = " A";
      else AIN97W.WS-PROG-STAT = " B";
      end
  end
  /* END WI 1842   ************************************************/
  
  

  SLX-PROG-STAT = AIN97W.WS-PROG-STAT;

  /* ************************************************************************/
  /* POPULATE CHILD-NAME*/
  /* ************************************************************************/

  SLX-LST-NAME = AIN97W.WS-LST-NM;
  SLX-FST-NAME = AIN97W.WS-FRST-NM;
  SLX-MODFR = AIN97W.WS-MODFR;

  /* ************************************************************************/
  /* POPULATE CHILD-DOB*/
  /* ************************************************************************/

  if (AIN97W.WS-CC < "20")

    SLX-DOBCENT = "19";

  else

    SLX-DOBCENT = "20";

  end

  SLX-DOBYY = AIN97W.WS-YY;
  SLX-DOBMM = AIN97W.WS-MM;
  SLX-DOBDD = AIN97W.WS-DD;

  /* ************************************************************************/
  /* POPULATE HOH-NAME*/
  /* ************************************************************************/

  if (AIN97W.WS-APPL-UPI != AIN97W.WS-HOH-UPI
   && AIN97W.WS-APPL-UPI != 0)

    AIN97W.WS-LKUP-UPI = AIN97W.WS-APPL-UPI;

    AIN97Q2-S02();

  else

    AIN97W.WS-LKUP-UPI = AIN97W.WS-HOH-UPI;

    AIN97Q2-S02();

  end

  if (VDBCONTROL.URC == 0)

    AIN97W.WS-HOH-SSN = H2-PERSON.SSN;
    VSTRREC4.USTINDX2 = 0;
    VSTRREC4.USTRING = H2-PERSON.LST-NM;
    VSTRREC4.USTRLEN = 21;
    VSTRREC4.UCONCAT = H2-PERSON.FRST-NM;
    VSTRREC4.UCONLEN = 16;

    call "WST50A" (VSTRREC4) {isNoRefresh = yes};

    AIN97W.WS-HOH-NAME = VSTRREC4.USTRING;
    AIN97W.WS-TMP-NAME = AIN97W.WS-HOH-NAME;
    AIN97P9-INSRT-SPAC();
  /* PERFORM AIN97P9-INSRT-COMA;*/

    /* MOVE ' ' TO WS-CONCAT-NM;*/
  /* ************************************************************************/
  /* WI #28336 - ELIMINATED CALL TO AIN97P9-INSRT-SPAC. REPORT GETTING*/
  /* STUCK IN WHILE LOOP WHEN COMMA IS ALREADY PRESENT IN*/
  /* CLIENT'S NAME.*/
  /* ************************************************************************/

  /* PERFORM AIN97P9-INSRT-SPAC;*/

    SLX-HOH-NM = AIN97W.WS-CONCAT-NM;

    set VSTRREC4 empty;

  else

    SLX-HOH-NM = " ";
    AIN97W.WS-HOH-SSN = " ";

  end

  /* ************************************************************************/
  /* POPULATE SPOUSE-NAME*/
  /* ************************************************************************/

  if (AIN97W.WS-APPL-UPI != AIN97W.WS-HOH-UPI
   && AIN97W.WS-APPL-UPI != 0)

    AIN97W.WS-LKUP-UPI = AIN97W.WS-APPL-UPI;

  else

    AIN97W.WS-LKUP-UPI = AIN97W.WS-HOH-UPI;

  end

  AIN97W.WS-LKUP-ICI = AIN97W.WS-ICI;

  AIN97Q3-S03();

  if (VDBCONTROL.URC == 0)

    AIN97W.WS-LKUP-UPI = AIN97W.WS-SPOUSE-UPI;

    AIN97Q2-S02();

    if (VDBCONTROL.URC == 0)

      VSTRREC4.USTINDX2 = 0;
      VSTRREC4.USTRING = H2-PERSON.LST-NM;
      VSTRREC4.USTRLEN = 21;
      VSTRREC4.UCONCAT = H2-PERSON.FRST-NM;
      VSTRREC4.UCONLEN = 16;

      call "WST50A" (VSTRREC4) {isNoRefresh = yes};

      AIN97W.WS-TMP-NAME = VSTRREC4.USTRING;

   /* PERFORM AIN97P9-INSRT-COMA;*/


      AIN97P9-INSRT-SPAC();

      SLX-SPOUSE-NM = AIN97W.WS-CONCAT-NM;

      set VSTRREC4 empty;

    else

      SLX-SPOUSE-NM = " ";

    end

  else

    SLX-SPOUSE-NM = " ";

  end

  /* ************************************************************************/
  /* POPULATE ADDRESS-1*/
  /* ************************************************************************/

  VSTRREC4.USTRING = AIN97W.WS-HOUSE-NMB;
  VSTRREC4.UCONCAT = AIN97W.WS-STR-DIR;
  VSTRREC4.UCONCAT2 = AIN97W.WS-STR-NM;
  VSTRREC4.UCONCAT3 = AIN97W.WS-STR-TYPE;
  VSTRREC4.USTRLEN = 8;
  VSTRREC4.UCONLEN = 2;
  VSTRREC4.UCONLEN2 = 25;
  VSTRREC4.UCONLEN3 = 4;

  call "WST50A" (VSTRREC4) {isNoRefresh = yes};

  AIN97W.WS-TEST-ADDR = VSTRREC4.USTRING;

  set VSTRREC4 empty;

  VSTRREC4.USTRING = AIN97W.WS-TEST-ADDR;
  VSTRREC4.UCONCAT = AIN97W.WS-APT-NMB;
  VSTRREC4.USTRLEN = 39;
  VSTRREC4.UCONLEN = 5;

  call "WST50A" (VSTRREC4) {isNoRefresh = yes};

  AIN97W.WS-50CH-ADDR = VSTRREC4.USTRING;

  set VSTRREC4 empty;

  AIN97W.WS-TMP-ADDR = AIN97W.WS-50CH-ADDR;

  AIN97P9-COUNT-CHAR();

  AIN97W.WS-CONCAT-ADDR = " ";

  AIN97P9-ELIM-SPACE();

  SLX-ADDR = AIN97W.WS-CONCAT-ADDR;

  /* ************************************************************************/
  /* POPULATE CITY*/
  /* ************************************************************************/

  SLX-CITY = AIN97W.WS-CITY;

  /* ************************************************************************/
  /* POPULATE ZIP-CD*/
  /* ************************************************************************/

  SLX-ZIP9L = AIN97W.WS-ZIP9L;

  /* ************************************************************************/
  /* POPULATE COUNTY-CODE*/
  /* ************************************************************************/

  SLX-RSDN-CNTY-CD = AIN97W.WS-RSDN-CNTY-CD;

  /* ************************************************************************/
  /* SET CREATE DATE TO DATE AT TIME OF EXECUTION*/
  /* ************************************************************************/

  SLX-CCYY-OF-RUN = REP-COMMON.WS-CCYY;
  SLX-MM-OF-RUN = REP-COMMON.WS-MM;
  SLX-DD-OF-RUN = REP-COMMON.WS-DD;

  /* ************************************************************************/
  /* POPULATE CASE-NBR OR HOH-SSN*/
  /* ************************************************************************/

  SLX-CASE-NBR = AIN97W.WS-HOH-SSN;

  /* ************************************************************************/
  /* ETHNIC CONVERSION*/
  /* ************************************************************************/

  if (AIN97W.WS-ETHNC-CD == "A") /* asian non-hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "B") /* black non-hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "H") /* hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "I") /* native amer/alaskan nat non-hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "W") /* white non-hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "O") /* other non-hispanic*/

    SLX-ETHNC-CD = AIN97W.WS-ETHNC-CD;

  end

  if (AIN97W.WS-ETHNC-CD == "T") /* white hispanic*/

    SLX-ETHNC-CD = "H";

  end

  if (AIN97W.WS-ETHNC-CD == "Q") /* black hispanic*/

    SLX-ETHNC-CD = "H";

  end

  if (AIN97W.WS-ETHNC-CD == "R") /* native amer/alaskan native hispanic*/

    SLX-ETHNC-CD = "H";

  end

  if (AIN97W.WS-ETHNC-CD == "P") /* asian hispanic*/

    SLX-ETHNC-CD = "H";

  end

  if (AIN97W.WS-ETHNC-CD == "S") /* other hispanic*/

    SLX-ETHNC-CD = "H";

  end

  if (AIN97W.WS-ETHNC-CD != "A"
   && AIN97W.WS-ETHNC-CD != "B"
   && AIN97W.WS-ETHNC-CD != "H"
   && AIN97W.WS-ETHNC-CD != "I"
   && AIN97W.WS-ETHNC-CD != "W"
   && AIN97W.WS-ETHNC-CD != "O"
   && AIN97W.WS-ETHNC-CD != "T"
   && AIN97W.WS-ETHNC-CD != "Q"
   && AIN97W.WS-ETHNC-CD != "R"
   && AIN97W.WS-ETHNC-CD != "P"
   && AIN97W.WS-ETHNC-CD != "S")

    SLX-ETHNC-CD = "O";

  end

  /* ************************************************************************/
  /* POPULATE SEX-CODE*/
  /* ************************************************************************/

  SLX-SEX-CD = AIN97W.WS-SEX-CD;

  /* ************************************************************************/
  /* POPULATE PHONE #*/
  /* ************************************************************************/

  SLX-HM-PHN-NMB = AIN97W.WS-HM-PHN-NMB;
  /*  */
end // end AIN97P9-MOVE-DATA


// PRINT THE REPORT'S HEADER
Function AIN97P9-POP-REPT()
  /* ********************************************************************/
  /* process to print DETAIL*/
  /* ********************************************************************/
  AIN97W-DET.LINE1 = " ";
  VSTRREC4.USTRING = WS-LST-NM;
  VSTRREC4.USTRLEN = 21;
  VSTRREC4.UCONCAT = WS-FRST-NM;
  VSTRREC4.UCONLEN = 16;
  call "WST50A" (VSTRREC4) {isNoRefresh = yes};
  AIN97W.WS-CHLD-NAME = VSTRREC4.USTRING;
  set VSTRREC4 empty;
  move WS-CHLD-NAME to NAME-OUT withV60Compat;
  DOB-OUT = AIN97W.WS-DOB;
  ETHNC-OUT = AIN97W.WS-ETHNC-CD;
  RSDN-OUT = AIN97W.WS-RSDN-CNTY-CD;
  CITY-OUT = AIN97W.WS-CITY;
  ZIP-OUT = AIN97W.WS-ZIP-CD;
 // WI 1842 START
  FS-ELIG-OUT = AIN97W.WS-FS-ELIG-CD;
  FS-BNFT-OUT = " ";
  IF ((FS-ELIG-OUT == "1") && (WS-MTD-ENTLM-AMT == 0))
  	  FS-BNFT-OUT = "N";
  END
  AFDC-ELIG-OUT = AIN97W.WS-AFDC-ELIG-CD;
  TN-ELIG-OUT = AIN97W.WS-TN-ELIG-CD;
  TC-ELIG-OUT = AIN97W.WS-TC-ELIG-CD;
 // WI 1842 END
  
  
/* WI 1842 PROGRAM-STATUS IS POPULATED IN AIN97P9-ELIGIBILITY  */
  
/*if (AIN97W.WS-FS-ELIG-CD == "1" && (AIN97W.WS-AFDC-ELIG-CD != "1" && 
  AIN97W.WS-AFDC-ELIG-CD != " "))
    WS-PROG-STAT = "FB";
  end
  
 /* WI 1842 END  */
 
  SSN-OUT = AIN97W.WDS-SSN;
  ICI-OUT = AIN97W.WS-ICI;
  /* 09-25-2002;wi#24198;wds - when case is a sub case use appl-upi*/
  if (AIN97W.WS-APPL-UPI != AIN97W.WS-HOH-UPI
   && AIN97W.WS-APPL-UPI != 0)
    HOH-UPI-OUT = AIN97W.WS-APPL-UPI;
  else
    HOH-UPI-OUT = AIN97W.WS-HOH-UPI;
  end
  if (REP-COMMON.WS-LINE-NO == 0 || REP-COMMON.WS-LINE-NO > 60)
    REP-COMMON.WS-LINE-NO = 0;
    AIN97P9-PRN-HEAD();
  end
  SR-132REP-RECOUT.UFIELD = AIN97W-DET.LINE1;
  WR-132REP-OUT-FILE();
  AIN97W.WS-EXTR-CTR = AIN97W.WS-EXTR-CTR + 1;
  SR-132REP-RECOUT.PRNT-CC = " ";
end // end AIN97P9-POP-REPT


// PRINT THE REPORT'S HEADER
Function AIN97P9-PRN-HEAD()
  /* ********************************************************************/
  /* process to print header*/
  /* ********************************************************************/
  SR-132REP-RECOUT.PRNT-CC = "1";
  /* move page-no to header variable*/
  REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
  AIN97W-HEAD.UPAGE = REP-COMMON.WS-PAGE-NO;
  /* move each line of header to output rcd and print*/
  SR-132REP-RECOUT.UFIELD = AIN97W-HEAD.LINE1;
  WR-132REP-OUT-FILE();
  /* reset control character*/
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AIN97W-HEAD.LINE2;
  WR-132REP-OUT-FILE();
  /* set control character to skip a line after printing header*/
  SR-132REP-RECOUT.UFIELD = AIN97W-HEAD.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.PRNT-CC = " ";
  SR-132REP-RECOUT.UFIELD = AIN97W-HEAD.LINE3A;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.PRNT-CC = "0";
end // end AIN97P9-PRN-HEAD


// READ INPUT RECORD
Function AIN97P9-READIP-RTN()
  /* ***********************************************************/
  /* This process to Read the input file and validate the*/
  /* record to check for numeric field*/
  /* ***********************************************************/
  /* -----------------------------------------------------------*/
  /* THE DATE PARM MUST REPRESENT THE YEAR MONTH DAY*/
  /* -----------------------------------------------------------*/
  VDBCONTROL.UPROC-NM = "AIN97A-READIP-RTN";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "SR-AIN97-RECIN";
  try
    get next SR-AIN97-RECIN ;
  end
  /* check if any i/o error has occured*/
  if (SR-AIN97-RECIN is ioError && SR-AIN97-RECIN not endOfFile)
    VMESSAGE.UMSGINS[2] = "AIN97A";
    VMESSAGE.UMSGCODE = sysVar.errorCode;
    AIN97W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN97W.WS-ERR-LAST-FOUR;
    VDBCONTROL.UEZESQRRM = "INPUT PARAMETER FILE - I/O ERROR";
    WCM00P2-TO-CEP01A();
  end
  if (SR-AIN97-RECIN is endOfFile)
    VMESSAGE.UMSGCODE = "AIN9702E";
    VMESSAGE.UMSGINS[2] = "AIN97A";
    VDBCONTROL.UEZESQRRM = "MISSING INPUT PARAMETER - DATE";
    WCM00P2-TO-CEP01A();
    exit program;
  end
  /* check for numeric field*/
  /* if not prints invalid input*/
  if ((SR-AIN97-RECIN.PI1-LST-MTH-YR not numeric))
    VMESSAGE.UMSGCODE = "AIN9702E";
    VMESSAGE.UMSGINS[2] = "AIN97A";
    VDBCONTROL.UEZESQRRM = "NON-NUMERIC PARAMETER - DATE";
    WCM00P2-TO-CEP01A();
    exit program;
  end
  /* move input param to your working stoage*/
  /* to convert char input to num input*/
  AIN97W.WS-TOPREC = SR-AIN97-RECIN.TOPREC;
  move WS-RPT-CCYY to WS-RPT-Y withV60Compat;
  move WS-RPT-MM to WS-RPT-M withV60Compat;
  move WS-RPT-DD to WS-RPT-D withV60Compat;
  WS-DASH1 = "-";
  WS-DASH2 = "-";
end // end AIN97P9-READIP-RTN


// CLEAR ALL RECORDS
Function AIN97P9-SET-EMPTY()
  /* *******************************************************************/
  /* process to initialize all records                */
  /* *******************************************************************/
  set P-DATE-REC3 empty;
  set REP-COMMON empty;
  set REP-EOFNOF empty;
  set AIN97W-DET empty;
  set AIN97W-HEAD empty;
  set VMESSAGE empty;
  set CEP01W empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;
  set FORMATW empty;
  set AIN97W empty;
  set SR-AIN97-RECIN empty;
  set BDATEREC empty;
  set H2-4-CMHFCE-PAHPER empty;
  set SCHLEXT empty;
end // end AIN97P9-SET-EMPTY


// VALIDATES  INPUT  PARAMETERS
Function AIN97P9-VALIDATE()
  /* check for month & year validation*/
  if ((AIN97W.WS-RPT-MM < 1 || 
  AIN97W.WS-RPT-MM > 12) || 
  AIN97W.WS-RPT-CCYY < 1900)
    VMESSAGE.UMSGINS[2] = "AIN97A";
    VDBCONTROL.UEZESQRRM = "INVALID DATE PARAMETER ";
    WCM00P2-TO-CEP01A();
    exit program;
  end
end // end AIN97P9-VALIDATE


// WRITE THE EXTRACT RECORD
Function AIN97P9-WRITE-EXTR()
  try
    add SCHLEXT ;
  end
  /*  */
  /* Check for ABEND.*/
  if (SCHLEXT is ioError)
    VDBCONTROL.UPROC-NM = "AIN97P9-WRITE-EXTR";
    VDBCONTROL.UPROC-OBJ = "SCHLEXT";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[2] = "AIN97A";
    AIN97W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN97W.WS-ERR-LAST-FOUR;
  /* MOVE 'WRITE ON OUTPUT RECORD FAILED'*/
  /* TO VDBCONTROL.UEZESQRRM;*/
    VDBCONTROL.UMSQLCODE = 0;
    WCM00P2-TO-CEP01A();
  end
end // end AIN97P9-WRITE-EXTR


// GET SCHOOL RECORDS
Function AIN97Q1-S01()
  /* *********************************************************/
  /* process to set cursor to fetch SCHOOL RECORDS*/
  /* *********************************************************/
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN97A";
  VDBCOMMON.USQLREC = "H2-4-CMHFCE-PAHPER";
  VDBCONTROL.UPROC-NM = "AIN97Q1-S01";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-4-CMHFCE-PAHPER";
  try
    open AIN97Q1-S01_RSI01
      with #sql{SELECT 
                T4.LST_NM,
                T4.FRST_NM,
                T4.DOB,
                T4.ETHNC_CD,
                T4.SSN,
                T4.SEX_CD,
                T3.RSDN_CNTY_CD,
                T3.CITY,
                T3.ZIP_CD,
                T3.ST_CD,
                T3.APT_NMB,
                T3.STR_TYPE,
                T3.STR_NM,
                T3.STR_DIR,
                T3.HOUSE_NMB,
                T1.FS_ELIG_CD,
                T1.AFDC_ELIG_CD,
                T1.TC_ELIG_CD,
                T1.TN_ELIG_CD,
                T1.AFDC_AID_CD,
                T1.FS_AID_CD,
                T1.TC_AID_CD,
                T1.TN_AID_CD,
                T1.ICI,
                T2.HOH_UPI,
                T2.APPL_UPI,
                T4.HM_PHN_NMB,
                T4.MODFR,
                T1.HH_LEFT_DT
      FROM TWNCASE_MEMBER_HST T1,
           TWNFAM_CASE T2,
           TWNPERSON_ADRS_HST T3,
           TWNPERSON T4
      WHERE T4.UPI > 0
      AND   T4.DOB <= :AIN97W.WS-4YR-DOB-DT 
      AND   T4.DOB >= :AIN97W.WS-19YR-DOB-DT     
      AND   T4.UPI = T1.UPI
      AND   T1.PRD_BEG_DT <= :AIN97W.WS-MTH-BEG-DATE
      AND   T1.PRD_END_DT >= :AIN97W.WS-MTH-END-DATE
      AND   T1.HH_LEFT_DT >= :AIN97W.WS-MTH-BEG-DATE
      AND  (T1.FS_ELIG_CD = '1' 
            OR T1.AFDC_ELIG_CD = '1' 
            OR T1.TC_ELIG_CD = '1'
            OR T1.TN_ELIG_CD = '1')      
--09-25-2002;WI#24198;WDS - SELECT EITHER HOH OR APPL UPI
      AND   T1.ICI = T2.ICI
      AND   ((T2.HOH_UPI = T3.UPI) 
             OR (T2.APPL_UPI = T3.UPI))
--09-30-2002;wi#24198;wds - eliminate ".." cty-codes
      AND   T3.RSDN_CNTY_CD > ' ' 
      AND   T3.ADR_TYPE = 'CR' 
--** SUB SELECT ELIMINATES DUP ADDRESS RECORDS
      AND   T3.PRD_BEG_TS = (SELECT MAX(T5.PRD_BEG_TS)
                             FROM TWNPERSON_ADRS_HST T5
                             WHERE T5.UPI = T3.UPI
                             AND   ((T5.UPI = T2.HOH_UPI) 
                                    OR (T5.UPI = T2.APPL_UPI))
                             AND T5.RSDN_CNTY_CD > ' '
                             AND T5.ADR_TYPE = 'CR')
    ORDER BY T3.RSDN_CNTY_CD, T4.LST_NM, T4.FRST_NM
    FOR FETCH ONLY
      }      
      into AIN97W.WS-LST-NM,AIN97W.WS-FRST-NM,AIN97W.WS-DOB,
           AIN97W.WS-ETHNC-CD,AIN97W.WDS-SSN,AIN97W.WS-SEX-CD,
           AIN97W.WS-RSDN-CNTY-CD,AIN97W.WS-CITY,AIN97W.WS-ZIP-CD,
           AIN97W.WS-ST-CD,AIN97W.WS-APT-NMB,AIN97W.WS-STR-TYPE,
           AIN97W.WS-STR-NM,AIN97W.WS-STR-DIR,AIN97W.WS-HOUSE-NMB,
           AIN97W.WS-FS-ELIG-CD,AIN97W.WS-AFDC-ELIG-CD,
           AIN97W.WS-TC-ELIG-CD,AIN97W.WS-TN-ELIG-CD,
           AIN97W.WS-FS-AID-CD,AIN97W.WS-AFDC-AID-CD,
           AIN97W.WS-TC-AID-CD,AIN97W.WS-TN-AID-CD,
           AIN97W.WS-ICI,
           AIN97W.WS-HOH-UPI,AIN97W.WS-APPL-UPI,AIN97W.WS-HM-PHN-NMB,
           AIN97W.WS-MODFR,AIN97W.WS-HH-LEFT-DT
      for H2-4-CMHFCE-PAHPER ;
  end
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
    WDB00PE-SQLERR();
    AIN97W.WS-MAIN-URC = VDBCONTROL.URC;
  
end // end AIN97Q1-S01


// FETCH SCHOOL ROWS
Function AIN97Q1-S01-SCAN()
  /* ********************************************************************/
  /* process to fetch the SCHOOL RECORD*/
  /* ********************************************************************/
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN97A";
  VDBCOMMON.USQLREC = "H2-4-CMHFCE-PAHPER";
  VDBCONTROL.UPROC-NM = "AIN97Q1-S01-SCAN";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "H2-4-CMHFCE-PAHPER";
  set H2-4-CMHFCE-PAHPER empty;
  try
    get next H2-4-CMHFCE-PAHPER ;
  end
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
    WDB00PE-SQLERR();
    AIN97W.WS-MAIN-URC = VDBCONTROL.URC;
end // end AIN97Q1-S01-SCAN


// GET HOH NAME
Function AIN97Q2-S02()
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN97A";
  VDBCOMMON.USQLREC = "H2-PERSON";
  VDBCONTROL.UPROC-NM = "AIN97Q3-S02";
  VDBCONTROL.UPROC-OPT = "SELECT";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON";
  try
    get H2-PERSON singleRow
      with #sql{
        select UPI, LST_NM, FRST_NM, SSN
        from TWNPERSON T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
        T1.UPI = :AIN97W.WS-LKUP-UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI, LST-NM, FRST-NM, SSN ;
  end
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
    WDB00PE-SQLERR();
end // end AIN97Q2-S02


// GET SPUOSE UPI
Function AIN97Q3-S03()
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN97A";
  VDBCOMMON.USQLREC = "H2-MEMBER-REL";
  VDBCONTROL.UPROC-NM = "AIN97Q3-S03";
  VDBCONTROL.UPROC-OPT = "SELECT";
  VDBCONTROL.UPROC-OBJ = "H2-MEMBER-REL";
  try
    get H2-MEMBER-REL
      with #sql{
        select FROM_UPI, ICI, TO_UPI, PRD_BEG_DT, PRD_END_DT
        from TWNMEMBER_REL T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
        T1.FROM_UPI = :AIN97W.WS-LKUP-UPI AND
        T1.ICI = :AIN97W.WS-LKUP-ICI AND
        T1.PRD_BEG_DT <= :AIN97W.WS-MTH-BEG-DATE AND
        T1.PRD_END_DT >= :AIN97W.WS-MTH-END-DATE AND
        T1.RELSH_CD = '02'
         --** INSERT ORDER BY CLAUSE HERE **
        ORDER BY T1.PRD_BEG_DT DESC
        FOR FETCH ONLY
      }
      into FROM-UPI, ICI, WS-SPOUSE-UPI, PRD-BEG-DT, PRD-END-DT ;
  end
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
    WDB00PE-SQLERR();
  
end // end AIN97Q3-S03

// WI 1842: GET FS MTD-ENTITLEMENT
FUNCTION AIN97Q4-ENTITLEMENT()
  WDB00PI();
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.USQLREC = "H2-ELIG-VERSION";
  VDBCONTROL.UPROC-NM = "AIN97Q4-ENTITLEMENT";
  VDBCONTROL.UPROC-OPT = "SELECT";
  VDBCONTROL.UPROC-OBJ = "H2-ELIG-VERSION";	
  TRY
  	GET H2-ELIG-VERSION
  	  WITH #SQL{
  	    SELECT MTD_ENTLM_AMT
  	    FROM TWNELIG_VERSION
  	    WHERE ICI = :WS-ICI
  	    AND   PRGM_CASE_TYPE = 'FS'
  	    AND   BNFT_YR = :WS-RPT-CCYY
  	    AND   BNFT_MTH = :WS-RPT-MM
  	    AND   LST_POSTD_VER_IND = 'Y'
  	    FOR FETCH ONLY 
  	  }
  	  INTO WS-MTD-ENTLM-AMT;
  END
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
    WDB00PE-SQLERR();
    if ( VDBCONTROL.URC != 0)
        WS-MTD-ENTLM-AMT = 0;
    end
END


Record AIN97W type basicRecord
  5 WS-WORKING-STORAGE-AREA char(824) ; 
    10 WS-TOPREC char(80) ; 
      15 WS-RPT-CCYY num(4) ; 
      15 WS-RPT-MM num(2) ; 
      15 WS-RPT-DD num(2) ; 
      15 * char(72) ; 
    10 WS-DB-CREATE-DT char(10) ; 
      15 WS-DB-MM char(2) ; 
      15 * char(1) ; 
      15 WS-DB-DD char(2) ; 
      15 * char(3) ; 
      15 WS-DB-YY char(2) ; 
    10 WS-TODAYS-DATE char(10) ; 
    10 WS-RPT-DT char(10) ; 
      15 WS-RPT-Y num(4) ; 
      15 WS-DASH1 char(1) ; 
      15 WS-RPT-M num(2) ; 
      15 WS-DASH2 char(1) ; 
      15 WS-RPT-D num(2) ; 
    10 WS-FSCL-CCYY num(4) ; 
    10 WS-MTH-BEG-DATE char(10) ; 
      15 WS-MTH-BEG-CCYY num(4) ; 
        20 WS-MTH-BEG-CC char(2) ; 
        20 WS-MTH-BEG-YY num(2) ; 
      15 WS-HASH7 char(1) ; 
      15 WS-MTH-BEG-MM num(2) ; 
      15 WS-HASH8 char(1) ; 
      15 WS-MTH-BEG-DD num(2) ; 
    10 WS-MTH-END-DATE char(10) ; 
      15 WS-MTH-END-CCYY num(4) ; 
      15 WS-HASH9 char(1) ; 
      15 WS-MTH-END-MM num(2) ; 
      15 WS-HASH10 char(1) ; 
      15 WS-MTH-END-DD num(2) ; 
    10 WS-4YR-DOB-DT char(10) ; 
      15 WS-4YR-CCYY num(4) ; 
      15 WS-HASH11 char(1) ; 
      15 WS-4YR-MM num(2) ; 
      15 WS-HASH12 char(1) ; 
      15 WS-4YR-DD num(2) ; 
    10 WS-19YR-DOB-DT char(10) ; 
      15 WS-19YR-CCYY num(4) ; 
      15 WS-HASH13 char(1) ; 
      15 WS-19YR-MM num(2) ; 
      15 WS-HASH14 char(1) ; 
      15 WS-19YR-DD num(2) ; 
    10 WS-LEAP-YEAR-FLAG char(1) ; 
    10 WS-ERR-CD char(4) ; 
      15 WS-ERR-LAST-FOUR char(4) ; 
    10 WS-LKUP-UPI int ; 
    10 WS-SPOUSE-UPI int ; 
    10 WS-LKUP-ICI int ; 
    10 WS-CHLD-NAME char(26) ; 
    10 WS-HOH-NAME char(26) ; 
    10 WS-TMP-NAME char(26) ; 
      15 WS-TMP-NAME-CHAR char(1) [26] ; 
    10 WS-CONCAT-NM char(26) ; 
      15 WS-CONCAT-CHAR char(1) [26] ; 
    10 WS-INDX1 num(2) ; 
    10 WS-INDX2 num(2) ; 
    10 WS-INDX3 num(2) ; 
    10 WS-INDX4 num(2) ; 
    10 WS-INDXX num(2) ; 
    10 WS-LASTX num(2) ; 
    10 WS-SPOUSE-NAME char(26) ; 
      15 WS-SPOUSE-CHAR char(1) [26] ; 
    10 WS-PROG-STAT char(2) ;
       15 WS-FS-PROG-STAT CHAR(1) ;
       15 WS-TANF-PROG-STAT CHAR(1); 
    10 WDS-SSN char(9) ; 
    10 WS-LST-NM char(21) ; 
    10 WS-FRST-NM char(16) ; 
    10 WS-DOB char(10) ; 
      15 WS-CC char(2) ; 
      15 WS-YY char(2) ; 
      15 * char(1) ; 
      15 WS-MM char(2) ; 
      15 * char(1) ; 
      15 WS-DD char(2) ; 
    10 WS-ETHNC-CD char(1) ; 
    10 WS-RSDN-CNTY-CD char(2) ; 
    10 WS-CITY char(20) ; 
    10 WS-ZIP-CD char(11) ; 
      15 WS-ZIP9L char(9) ; 
      15 WS-ZIP2R char(2) ; 
    10 WS-FS-ELIG-CD char(1) ;
    10 WS-MTD-ENTLM-AMT num(7,2); 
    10 WS-AFDC-ELIG-CD char(1) ; 
    10 WS-TC-ELIG-CD char(1) ; 
    10 WS-TN-ELIG-CD char(1) ; 
    10 WS-FS-AID-CD char(3) ; 
    10 WS-AFDC-AID-CD char(3) ; 
    10 WS-TC-AID-CD char(3) ; 
    10 WS-TN-AID-CD char(3) ;
    10 WS-ELIG-FLAG char(1); 
    10 WS-TANF-FLAG char(1); 
    10 WS-FS-FLAG char(1);
    10 WS-MAIN-URC NUM(3); 
    10 WS-SSN char(9) ; 
    10 WS-ICI int ; 
    10 WS-HOH-UPI int ; 
    10 WS-APPL-UPI int ; 
    10 WS-HOH-SSN char(9) ; 
    10 WS-HOUSE-NMB char(8) ; 
    10 WS-STR-DIR char(2) ; 
    10 WS-STR-NM char(25) ; 
    10 WS-STR-TYPE char(4) ; 
    10 WS-APT-NMB char(5) ; 
    10 WS-OTH-ADDR char(25) ; 
    10 WS-SEX-CD char(1) ; 
    10 WS-HM-PHN-NMB char(10) ; 
    10 WS-MODFR char(3) ; 
    10 WS-ST-CD char(3) ; 
    10 WS-TEST-ADDR char(40) ; 
    10 WS-50CH-ADDR char(50) ; 
    10 WS-TMP-ADDR char(50) ; 
      15 WS-TMP-ADDR-CHAR char(1) [50] ; 
    10 WS-CONCAT-ADDR char(50) ; 
      15 WS-CONCAT-ADDR-CHAR char(1) [50] ; 
    10 WS-LFT-JST-ADDR char(50) ; 
      15 WS-LFT-BLNK-BLNK char(2) ; 
      15 WS-RT-48CHAR char(48) ; 
    10 WS-EXTR-CTR num(8) ; 
    10 WS-AGE-VAR char(15) ; 
      15 WS-DIF-DAYS num(8) ; 
      15 WS-ODD-DAYS num(4) ; 
      15 WS-YEARS num(3) ; 
    10 WS-HH-LEFT-DT char(10) ; 
    10 WS-SPACE-FND char(1) ; 
end // end AIN97W


Record AIN97W-DET type basicRecord
  10 LINE1 char(132) ; 
    15 NAME-OUT char(26) ; 
    15 FILLER1A char(1) ; 
    15 DOB-OUT char(10) ; 
    15 FILLER1C char(2) ; 
    15 ETHNC-OUT char(1) ; 
    15 FILLER1D char(5) ; 
    15 RSDN-OUT char(2) ; 
    15 FILLER1E char(3) ; 
    15 CITY-OUT char(20) ; 
    15 FILLER1F char(2) ; 
    15 ZIP-OUT char(5) ; 
    15 FILLER1G char(2) ; 
    15 FS-ELIG-OUT char(1) ;     
    15 FILL-1A char(3) ;
    15 FS-BNFT-OUT CHAR (1);
    15 FILLER1H CHAR (4);	 
    15 AFDC-ELIG-OUT char(1) ; 
    15 FILL-1B char(3) ;
    15 TN-ELIG-OUT CHAR (1);
    15 FILL-1C CHAR (3);
    15 TC-ELIG-OUT CHAR (1);
    15 FILLER1I CHAR (4); 
    15 SSN-OUT char(9) ; 
    15 FILLER1J char(1) ; 
    15 ICI-OUT num(9) ; 
    15 FILLER1K char(1) ; 
    15 HOH-UPI-OUT num(9) ; 
    15 FILLER1L char(2) ; 
  10 LINE2 char(132) ; 
    15 FILLER2A char(2) ; 
    15 EXTR-CTR-OUT num(8) ; 
    15 FILLER2B char(122) ; 
end // end AIN97W-DET


Record AIN97W-HEAD type basicRecord
  10 LINE1 char(132) ; 
    15 PAGE-TG char(4) ; 
    15 FILLER1 char(1) ; 
    15 UPAGE char(4) ; 
    15 FILLER2 char(45) ; 
    15 NEV-TG char(30) ; 
    15 FILLER3 char(34) ; 
    15 DATE-TG char(4) ; 
    15 FILLER4 char(2) ; 
    15 UDATE char(8) ; 
  10 LINE2 char(132) ; 
    15 UAPPL char(8) ; 
    15 FILLER5 char(35) ; 
    15 SCHOOL-LUNCH-TG char(20) ; 
    15 FILLER6 char(55) ; 
    15 TIME-TG char(4) ; 
    15 FILLER8 char(2) ; 
    15 UTIME char(8) ;
  10 LINE3 CHAR(132);
    15 LINE3-FIL1 CHAR(37);
    15 LINE3-ETHNC CHAR(7);
    15 LINE3-RSDN CHAR(6);
    15 LINE3-FIL2 CHAR(28);
    15 LINE3-FS-ELIG CHAR(8);
    15 LINE3-AFDC-ELIG CHAR(15);
    15 LINE3-FIL3 CHAR(31);  
  10 LINE3A char(132) ; 
    15 LST-HDR char(27) ; 
    15 DOB-HDR char(10) ; 
    15 ETHNC-HDR char(7) ; 
    15 RSDN-HDR char(6) ; 
    15 CITY-HDR char(21) ; 
    15 ZIP-HDR char(7) ; 
    15 FS-ELIG-HDR char(8) ; 
    15 AFDC-ELIG-HDR char(15) ; 
    15 SSN-HDR char(10) ; 
    15 ICI-HDR char(10) ; 
    15 HOH-UPI-HDR char(9) ; // HOH_UPI
    15 FILLER9 char(2) ; // HOH_UPI
end // end AIN97W-HEAD


