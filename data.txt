var people = [];
people.push(document.getElementById('person'));
var buttonAddPerson = document.getElementById('addPerson');
buttonAddPerson.onclick = addPerson;

function addPerson() {
    const peopleCount = people.length + 1;
    const defaultPerson = document.getElementById('person');
    const newPerson = defaultPerson.cloneNode(true);

    const buttonDeleteDiv = newPerson.querySelector('#buttons');
    var buttonAddPerson = document.getElementById('addPerson');
    const newAddPersonBtn = buttonAddPerson.cloneNode(true);
    newAddPersonBtn.onclick = addPerson;
    newAddPersonBtn.style.alignSelf = 'flex-start';
    buttonDeleteDiv.appendChild(newAddPersonBtn);

    const deleteButton = document.createElement('button');
    deleteButton.innerText = deletePersonText + ' ' + peopleCount;
    deleteButton.id = 'deleteButton';
    deleteButton.name = 'Delete Person ' + peopleCount;
    deleteButton.type = 'button';
    deleteButton.style.alignSelf = 'flex-end';
    deleteButton.classList.add('button');
    deleteButton.classList.add('button-col-light');
    deleteButton.onclick = function() {
        deletePerson(this.id);
    };

    buttonDeleteDiv.appendChild(deleteButton);

    newPerson.querySelector('#personFirstName').value = '';
    newPerson.querySelector('#personFirstName').disabled = false;
    newPerson.querySelector('#personFirstName').classList.add("otherFirstName");
    newPerson.querySelector('#personFirstName').style.maxWidth = '275px';
    newPerson.querySelector('#personMiddle').value = '';
    newPerson.querySelector('#personMiddle').disabled = false;
    newPerson.querySelector('#personLastName').value = '';
    newPerson.querySelector('#personLastName').disabled = false;
    newPerson.querySelector('#personLastName').classList.add("otherLastName");
    newPerson.querySelector('#personLastName').style.maxWidth = '275px';
    newPerson.querySelector('#personRelationship').value = '';
    newPerson.querySelector('#personRelationship').disabled = false;
    newPerson.querySelector('#personSuffix').value = '';
    newPerson.querySelector('#personSuffix').disabled = false;
    newPerson.querySelector('#personFormerName').value = '';
    newPerson.querySelector('#personFormerName').disabled = false;
    newPerson.querySelector('#personFormerName').style.maxWidth = '275px';
    
    const ssnTogglePassword = newPerson.querySelector('#togglePassword');
    ssnTogglePassword.onclick = function() {
    	toggleSSNFields(this.id);
    }
    const newPersonElements = newPerson.querySelectorAll('*');
    newPersonElements.forEach((child) => {
    	if(child.tagName !== 'OPTION' ){
    		child.value = '';
    	}
    	if(child.id !=="togglePassword"){
    	child.checked = false;
    	}
    });
    
    const healthPlanRadio = newPerson.querySelectorAll('input[name*="programHealthCare"]');
    healthPlanRadio.forEach(function(radio){
    	radio.checked = false;
    	radio.removeAttribute('checked');
    });
    
    const newPersonTypeOfFacility = newPerson.querySelector('#typeOfFacility');
    if(newPersonTypeOfFacility){
    	 newPersonTypeOfFacility.addEventListener('change', function(event) {
    	    	
    	    	const selectedValue = this.value;
    			for(var i=0; i<this.options.length;i++){
    				if(this.options[i].value === selectedValue){
    					this.options[i].setAttribute('selected', 'selected');
    				}else{
    					this.options[i].removeAttribute('selected', 'selected');
    				}
    			}
    	    });
    	
    }
    
    const newRelations = newPerson.querySelector('#relation');
    if(newRelations){
    	 newRelations.addEventListener('change', function(event) {
    	    	
    	    	const selectedValue = this.value;
    			for(var i=0; i<this.options.length;i++){
    				if(this.options[i].value === selectedValue){
    					this.options[i].setAttribute('selected', 'selected');
    				}else{
    					this.options[i].removeAttribute('selected', 'selected');
    				}
    			}
    	    });
    }
     
    adjustWidths(newPerson);
    people.push(newPerson);
    updatepeopleIds();
    document.getElementById('people').appendChild(newPerson);
    toggleButtonAddPerson();
    addHover();
    attachFamilyPlanListeners();
}

function adjustWidths(newPerson) {
	 const spouseHCWidth = newPerson.querySelectorAll('.listSpouseHC');
	    spouseHCWidth.forEach(input => {
	    	input.style.maxWidth = '350px';
	    });
    const depndtsHCWidth = newPerson.querySelectorAll('.listDepndtsHC');
    depndtsHCWidth.forEach(input => {
    	input.style.maxWidth = '350px';
    });
    const taxFilerHCWidth = newPerson.querySelectorAll('.TaxFilerNameHC');
    depndtsHCWidth.forEach(input => {
    	input.style.maxWidth = '350px';
    });
}

function deletePerson(deleteId) {
    const index = Number(deleteId.split('_')[1]) - 1;
    people[index].remove();
    people.splice(index, 1);
    updatepeopleIds();
    toggleButtonAddPerson();
}

function toggleButtonAddPerson() {
    const peopleCount = people.length + 1;
    const buttonAddPerson = document.getElementById('addPerson');
    const extraPeople = document.getElementById('extraPeople');
    const dfltAddTxt = document.getElementById('dfltAddTxt');
    if (peopleCount == 7) {
        buttonAddPerson.style.display = 'none';
        dfltAddTxt.style.display = 'none';
        extraPeople.style.display = 'inline';
    } else {
        buttonAddPerson.style.display = 'inline';
        dfltAddTxt.style.display = 'inline';
    }
    people.forEach((person, index) => {
        if (index > 0) {
            const childElements = person.querySelectorAll('*');
            const personOriginalId = person.id.replace(/_\d+$/, '');
            person.id = personOriginalId + '_' + Number(index + 1);
            childElements.forEach((child) => {
                if (child.id == ('addPerson_' + Number(index + 1))) {
                    if (peopleCount == 7) {
                    	person.querySelector('#prsnAddTxt_'+ Number(index + 1)).style.display='none';
                        child.style.display = 'none';
                    } else {
                    	person.querySelector('#prsnAddTxt_'+ Number(index + 1)).style.display='inline';
                        child.style.display = 'inline';
                    }
                }
            });
        }
    });
}

function updatepeopleIds() {
    people.forEach((person, index) => {
        if (index > 0) {
            const childElements = person.querySelectorAll('*');
            const personOriginalId = person.id.replace(/_\d+$/, '');
            person.id = personOriginalId + '_' + Number(index + 1);
            childElements.forEach((child) => {
                if (child.id) {
                    const originalId = child.id.replace(/_\d+$/, '');
                    child.id = originalId + '_' + Number(index + 1);
                }
                if (child.name) {
                    const originalName = child.name.replace(/_\d+$/, '');
                    child.name = originalName + '_' + Number(index + 1);
                }
                if (child.id == ('startPersonNumber_' + Number(index + 1))) {
                    child.innerText = startPersonText + ' ' + Number(index + 1);
                }

                if (child.id == ('endPersonNumber_' + Number(index + 1))) {
                    child.innerText = endpersontext + ' ' + Number(index + 1);
                }

                if (child.id == ('deleteButton_' + Number(index + 1))) {
                    child.innerText = deletePersonText + ' ' + Number(index + 1);
                }
            });
        }
    });
}
function getDatesForPdf() {
	const options ={ year: 'numeric', month: 'long' , day: 'numeric' };	
	if(language == 'ES'){
		var date = new Date().toLocaleDateString('es-ES',options);		
	}else{
		var date = new Date().toLocaleDateString('en-US',options);
	}
	var currentDate = new Date();
	// Extract time components
	let hours = currentDate.getHours();
	let minutes = currentDate.getMinutes();
	let formattedHours = formatHours(hours);
	let amPm = getAmPm(hours);
	let formattedTime = `${addLeadingZero(formattedHours)}:${addLeadingZero(minutes)} ${amPm}`;
	document.getElementById('dataTest').innerHTML= startDateTxt + " " + date +" " + secDateTxt + " " + formattedTime + " " +  endDateTxt;
	document.getElementById('dateInfo').style.display='inline';
}
function formatHours(hours) {
return hours % 12 || 12; // Convert 0 to 12 for midnight
}
function getAmPm(hours) {
return hours >= 12 ? 'P.M.' : 'A.M.';
}
function addLeadingZero(value) {
return value < 10 ? '0' + value : value;
}
function updatePdfSpaces() {
	document.getElementById('dfltAddTxt').style.display='none';
	document.getElementById('addPerson').style.display='none';
	document.getElementById('braces').style.display='inline';
	document.getElementById('nextPersonBraces').style.display='inline';
	document.getElementById('migSpaces').style.display='inline';
	document.getElementById('resSpaces').style.display='inline';
	
    people.forEach((person, index) => {
        if (index > 0) {
            const prsnAddTxt = person.querySelector('#prsnAddTxt' + '_' + Number(index + 1));
            const prsnAddBtns = person.querySelector('#buttons' + '_' + Number(index + 1));
            const befRaceBraces = person.querySelector('#beforeRaceBraces' + '_' + Number(index + 1));
            const gQueBraces = person.querySelector('#generalQueBraces' + '_' + Number(index + 1));     
            prsnAddTxt.style.display='none';
            prsnAddBtns.style.display='none';
            befRaceBraces.style.display='inline';                      
            gQueBraces.style.display='inline';
         
        }
    });
    var elems = document.querySelectorAll(".divscroll");
    
    [].forEach.call(elems, function(el) {
        el.classList.remove("divscroll");
    });
}

function syncRadioBtns(sourceName,targetName){
	
	var sourceRadios=document.querySelectorAll('input[name="'+sourceName+'"]');
	
	var targetRadios=document.querySelectorAll('input[name="'+targetName+'"]');
	
	sourceRadios.forEach(function(srcRadio){
		srcRadio.addEventListener('change',function(){
			
			targetRadios.forEach(function(trgtRadio){
				if(trgtRadio.value===srcRadio.value){
					trgtRadio.checked=true;
				}
			});
			
		});
		
	});
}

syncRadioBtns('aplEligibleMedPgm','eligibleMedPgm');
syncRadioBtns('aplBackDate','backDate');
syncRadioBtns('aplProgramSNAP','programSNAP');
syncRadioBtns('aplProgramHealthCare','programHealthCare');
syncRadioBtns('aplProgramCash','programCash');
syncRadioBtns('aplProgramFamilyPlan','programFamilyPlan');

const appFstName = document.getElementById('applicantFirstName');
const personFstName = document.getElementById('personFirstName');
appFstName.addEventListener('input', function() {
    personFstName.value = appFstName.value;
});
const appMi = document.getElementById('applicantMiddle');
const personMi = document.getElementById('personMiddle');
appMi.addEventListener('input', function() {
    personMi.value = appMi.value;
});
const appLast = document.getElementById('applicantLastName');
const personLast = document.getElementById('personLastName');
appLast.addEventListener('input', function() {
    personLast.value = appLast.value;
});

const appSuffix = document.getElementById('applicantSuffix');
const personSuffix = document.getElementById('personSuffix');
appSuffix.addEventListener('input', function() {
	personSuffix.value = appSuffix.value;
});

const appFormer = document.getElementById('applicantFormerName');
const personFormer = document.getElementById('personFormerName');
appFormer.addEventListener('input', function() {
	personFormer.value = appFormer.value;
});

const presentZipCode = document.getElementById('presentZipCode');

var pdfUrl = null;
function printPDFApp() {
	window.open(pdfUrl);
}

document.onkeydown = (event) => {
	const eventKey = event.key;
    const eventTarget = event.target.tagName;
	if (eventKey && eventKey === "Enter"  && eventTarget !== "BUTTON") {
		document.getElementById("sumitApp").click();
	}
}
document.getElementById("sumitApp").addEventListener("click", function() {
	const elementTop = document.getElementById('errorTable');
	var messageContents=document.getElementById('errMessageText');
	messageContents.innerHTML='';
	const errorTable=document.getElementById("errorTable");
	var showErrorTable=false;
	var ssnFldFlag=false;
	var zipCdMdtryFlag=false;
	var zipCdNumrcFlag=false;
	var zipCdMinChrFlag=false;
	var affidavitFlag=false;
	var elecSigFlag=false;
	var fstNameFlag=false;
	var lstNameFlag=false;
	var addrFlag=false;
	var cityFlag=false;
	var stateFlag=false;
	var elcFstNameFlag=false;
	var elcLstNameFlag=false;
	var homePhnFldFlag=false;
	var workPhnFldFlag=false;
	var cellPhnFldFlag=false;
	var altPhnFldFlag=false;
	var fstNameSplCharFlag=false;
	var lstNameSplCharFlag=false;
	var elcFstNameSplFlag=false;
	var elcLstNameSplFlag=false;
	var taxFieldsFlag=false;
	
	const appFstNameSend = document.getElementById('applicantFirstName');
	const appMiSend = document.getElementById('applicantMiddle');
	const appLastSend = document.getElementById('applicantLastName');
	const aplLastName = document.getElementById('applicantLastName');
	const aplAddress = document.getElementById('applicantAddress');
	const aplCity = document.getElementById('applicantCity');
	const aplState = document.getElementById('applicantState');
	
	if(appFstNameSend.value.trim() === ''){
		fstNameFlag=true;
	} else if(!isValidName(appFstNameSend.value)){
		fstNameSplCharFlag=true;
	}
	
	if(appLastSend.value.trim() === ''){
		lstNameFlag=true;
	}else if(!isValidName(appLastSend.value)){
		lstNameSplCharFlag=true;
	}
	
	const homeless=document.getElementById('homeless');
	
	if(!homeless.checked){
		
		if(aplAddress.value.trim() === ''){
			addrFlag=true;
		}
		if(aplCity.value.trim() === ''){
			cityFlag=true;
		}
		if(aplState.value.trim() === ''){
			stateFlag=true;
		}
		
		if(presentZipCode.value.trim() === ''){
			zipCdMdtryFlag=true;
		}
		else if(!isNumeric(presentZipCode.value)){
			zipCdNumrcFlag=true;
		}
		else {
			if (presentZipCode.value.length<5) {
				zipCdMinChrFlag=true;
			}
		}
	}
	const  mailZipCode = document.getElementById('applicantMailZipCode');
	const  repZipCode = document.getElementById('approvedRepZip');
	
	if(mailZipCode.value.trim() !== ''){
		if(!isNumeric(mailZipCode.value)){
			zipCdNumrcFlag=true;
		}
		else {
			if (mailZipCode.value.length<5) {
				zipCdMinChrFlag=true;
			}
		}
	}
	
	if(repZipCode.value.trim() !== ''){
		if(!isNumeric(repZipCode.value)){
			zipCdNumrcFlag=true;
		}
		else {
			if (repZipCode.value.length<5) {
				zipCdMinChrFlag=true;
			}
		}
	}
	
	const otherFirstNameFlds = document.querySelectorAll('.otherFirstName');
	otherFirstNameFlds.forEach(otherFirstNameFld => {
		var value=otherFirstNameFld.value;
		if(value.trim()!== ''){
			if(!isValidName(value)){
				fstNameSplCharFlag=true;
			}
		}
	});
	
	const otherLastNameFlds = document.querySelectorAll('.otherLastName');
	otherLastNameFlds.forEach(otherLastNameFld => {
		var value=otherLastNameFld.value;
		if(value.trim()!== ''){
			if(!isValidName(value)){
				lstNameSplCharFlag=true;
			}
		}
	});

	const ssnFlds = document.querySelectorAll('.ssnFld');
	ssnFlds.forEach(ssnFld => {
		var value=ssnFld.value;
		if(value.trim()!== ''){
			if(!isNumeric(value)){
				ssnFldFlag=true;
			}
		}
	});
	
	const homePhnFlds = document.querySelectorAll('.homePhn');
	homePhnFlds.forEach(homePhnFld => {
		var value=homePhnFld.value;
		if(value.trim()!== ''){
			if(!isNumeric(value)){
				homePhnFldFlag=true;
			}
		}
	});
	const workPhnFlds = document.querySelectorAll('.workPhn');
	workPhnFlds.forEach(workPhnFld => {
		var value=workPhnFld.value;
		if(value.trim()!== ''){
			if(!isNumeric(value)){
				workPhnFldFlag=true;
			}
		}
	});
	const cellPhnFlds = document.querySelectorAll('.cellPhn');
	cellPhnFlds.forEach(cellPhnFld => {
		var value=cellPhnFld.value;
		if(value.trim()!== ''){
			if(!isNumeric(value)){
				cellPhnFldFlag=true;
			}
		}
	});
	const altPhnFlds = document.querySelectorAll('.altPhn');
	altPhnFlds.forEach(altPhnFld => {
		var value=altPhnFld.value;
		if(value.trim()!== ''){
			if(!isNumeric(value)){
				altPhnFldFlag=true;
			}
		}
	});
	
	const affidavit = document.getElementById('fpAffidavit');
	const electronicSignature = document.getElementById('electronicSignature');
	const electronicFirstName = document.getElementById('electronicFirstName');
	const electronicLastName = document.getElementById('electronicLastName');
	
	if(!affidavit.checked){
		affidavitFlag=true;
	}
	if(!electronicSignature.checked){
		elecSigFlag=true;
	}
	
	if(electronicFirstName.value.trim() === ''){
		elcFstNameFlag=true;
	}	else if(!isValidName(electronicFirstName.value)){
		elcFstNameSplFlag=true;
	}
	
	if(electronicLastName.value.trim() === ''){
		elcLstNameFlag=true;
	} else if(!isValidName(electronicLastName.value)){
		elcLstNameSplFlag=true;
	}
	
	//START ILIES-312006 --- Household / Residence Validation/Tax filing validation ---
    var q1 = parseInt(document.getElementById("peopleInYourHome")?.value, 10);
    var q2 = parseInt(document.getElementById("outsideHomeType")?.value, 10);
 
    if (isNaN(q1)) q1 = 0;
    if (isNaN(q2)) q2 = 0;
 
    var totalTop = q1 + q2;
 
    const allSelects  = document.querySelectorAll("select.formNoStyle");
    const selects = Array.prototype.filter.call(allSelects, function(sel){
    	const nm = sel.getAttribute("name") || "";
    	const id = sel.getAttribute("id") || "";
    	return nm.includes("livingArrangement") || id.includes("livingArrangement");
    });
    let inHome = 0, outside = 0;
    for (var i = 0; i < selects.length; i++) {
        var val = selects[i].value;
        if (!val || val === "SEL") continue;
        if (val === "HO") inHome++;
        else outside++;
    }
    var personsAdded = selects.length;
    
  //END ILIES-312006 --- Household / Residence Validation/Tax filing validation ---
    

    if (!validateTaxFieldsForAllMembers()) {
        taxFieldsFlag = true;
    }

	 
	const errorImg="<br> <img src=\"/access/images/icon_error.gif\" alt=\"Error\" width=\"17\" height=\"17\" vspace=\"2\" align=\"middle\">";
	
	if(fstNameFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+fstNameValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(fstNameSplCharFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+fstNameSplValidationMsg+"</label>";  
		showErrorTable=true;
	}
	
	if(lstNameFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+lstNameValidationMsg+"</label>";
		showErrorTable=true;
	}
	
	if(lstNameSplCharFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+lstNameSplValidationMsg+"</label>";  
		showErrorTable=true;
	}
	if(addrFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+addrValidationMsg+"</label>"; 
		showErrorTable=true;
	}
	if(cityFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+cityValidationMsg+"</label>"; 
		showErrorTable=true;
	}
	if(stateFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+stateValidationMsg+"</label>"; 	
		showErrorTable=true;
	}
	
	if(zipCdMdtryFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML +="&nbsp;<label>"+zipCdValidationMsg+"</label>"; 
		showErrorTable=true;
	}
	if(zipCdNumrcFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+zipCdNumValidationMsg+"</label>"; 
		showErrorTable=true;
	}
	if(zipCdMinChrFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+zpCdLenValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(ssnFldFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+ssnValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(homePhnFldFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+homePhValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(workPhnFldFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+workPhValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(cellPhnFldFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+cellPhValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(altPhnFldFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+altPhPhValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(affidavitFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+afdvtValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(elecSigFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+elecValidationMsg+"</label>";
		showErrorTable=true;
		
	}
	if(elcFstNameFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+elecFstNameValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(elcFstNameSplFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+fstNameSplValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(elcLstNameFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+elecLstNameValidationMsg+"</label>";
		showErrorTable=true;
	}
	if(elcLstNameSplFlag){
		document.getElementById('errMessageText').innerHTML += errorImg;
		document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+lstNameSplValidationMsg+"</label>";
		showErrorTable=true;
	}
	
    if(taxFieldsFlag){
        document.getElementById('errMessageText').innerHTML += errorImg;
        document.getElementById('errMessageText').innerHTML += "&nbsp;<label>Tax related questions are required when Health Care Plan is selected.</label>";
        showErrorTable=true;
    }

	
	//ILIES-312006 Showing error message for Tax filing
	
    if (totalTop !== personsAdded || q1 !== inHome || q2 !== outside) {
    	document.getElementById('errMessageText').innerHTML += errorImg;
	 	document.getElementById('errMessageText').innerHTML += "&nbsp;<label>"+"You have told us that there are a total of " +totalTop+ " household members ("+q1+" people in the household and "+q2+" people out of the household), however the household composition and residency information is not matching. Please update the Household Composition and/or Residency Information accordingly."+"</label>";
    }
	    
	    
	
	if(showErrorTable){
		errorTable.style.display='block';
		elementTop.scrollIntoView({
			behavior: 'smooth', block: 'center'
		});
		return false;
	}
	else{
		errorTable.style.display='none';
	}	
	submitted=true;
	window.onmousemove = null;
	window.onkeypress = null;
	window.onscroll = null;
	window.onclick = null;
	clearInterval(countdownInterval);
	timeLeft = 900;
	startCountdown();
	updatePdfSpaces();
	getDatesForPdf();
	const element = document.getElementById('containarApp');
    const inputsUnMaskFields = element.querySelectorAll('input[type="password"]');
    inputsUnMaskFields.forEach(input => {
    	input.type='text';
    });
	const sumitAppHide = document.getElementById('sumitApp');
	sumitAppHide.style.display = 'none';	
    const rect = sending.getBoundingClientRect();
    const bottomPosition = rect.bottom + window.scrollY;  // Add scrollY to account for scrolled page
    document.body.style.height = bottomPosition + 'px';
	const thankYou = document.getElementById('thankYou');
	const errorSubmission = document.getElementById('errorSubmission');
    const options = {
        margin: [.5, 0], filename: 'ASApplication.pdf',
        image: {
            type: 'jpeg',
            quality: 1
        },
        html2canvas: {
            scale: .90
        },
        jsPDF: {
            unit: 'in',
            format: 'letter',
            orientation: 'portrait'
        }
    };
    html2pdf().from(element).set(options).toPdf().output('blob').then((pdfBlob) => {
    	element.style.display = 'none';
		const sending = document.getElementById('sending');
		sending.style.display = 'inline';
		sending.scrollIntoView({
			behavior: 'smooth', block: 'center'
		});
    	pdfUrl = URL.createObjectURL(pdfBlob);
        const formData = new FormData();
        formData.append('file', pdfBlob);
        formData.append('appFstName', appFstName);
        formData.append('applicantMiddle', appFstName);
        formData.append('applicantLastName', appFstName);
        formData.append('presentZipCode', presentZipCode);
        const queryParam = '/access/FwOctetStreamReader?&requestType=1&PAGE_ACTION=ABWACSubmit&firstName=' + appFstNameSend.value 
        					+ '&middleInitial=' + appMiSend.value + '&lastName=' + appLastSend.value + '&zipCode=' + presentZipCode.value + '&LANGUAGE=' + language;
        const xhr = new XMLHttpRequest();
        xhr.open('POST', queryParam, true);

        xhr.onload = function() {
        	sending.style.display = 'none';
            if (xhr.readyState == 4 && xhr.status === 200) {
            	var data = null;
            	try {
            		data = JSON.parse(xhr.responseText);
            		if(data && data.status && data.status === 'SUCCESS'){
	                   	 console.log('File uploaded successfully!');
	                   	 if(document.getElementById('trackingNum')){
	                   		document.getElementById('trackingNum').textContent=DOMPurify.sanitize(data.trackingNum);
	                   	 } 
                         thankYou.style.display = 'inline';
            		} else{
	                   	errorSubmission.style.display = 'inline';
                   }
            		
        		} catch (e) {
        			errorSubmission.style.display = 'inline';
        			console.error('Error while parsing response', e);
        		}
                
            } else {
                console.log('Error occurred during file upload');
                errorSubmission.style.display = 'inline';
            }
        };

        try {
        	xhr.send(formData);
		} catch (e) {
			sending.style.display = 'none';
			errorSubmission.style.display = 'inline';
			console.log("Error while sending application: " + e); 
		}
    });
});

const printMyApplication = document.getElementById('printMyApplication');
printMyApplication.onclick = printPDFApp;
const tablesMWidth = document.querySelectorAll('*');
tablesMWidth.forEach(table => {
	table.style.maxWidth = '800px';
});
const inputsMWidth = document.querySelectorAll('input[type="text"]');
inputsMWidth.forEach(input => {
	input.style.maxWidth = '130px';
});

document.getElementById('applicantAddress').style.maxWidth = '440px';
document.getElementById('aplicantMailingAddress').style.maxWidth = '440px';
document.getElementById('incPersonName1').style.maxWidth = '500px';
document.getElementById('employerName1').style.maxWidth = '500px';
document.getElementById('employerAddress1').style.maxWidth = '500px';
document.getElementById('employerPhone1').style.maxWidth = '160px';
document.getElementById('incPersonName2').style.maxWidth = '500px';
document.getElementById('employerName2').style.maxWidth = '500px';
document.getElementById('employerAddress2').style.maxWidth = '500px';
document.getElementById('employerPhone2').style.maxWidth = '160px';
document.getElementById('medicaidNames').style.maxWidth = '650px';
document.getElementById('chipNames').style.maxWidth = '650px';
document.getElementById('medicareNames').style.maxWidth = '650px';
document.getElementById('tricare').style.maxWidth = '650px';
document.getElementById('veteransIns').style.maxWidth = '650px';
document.getElementById('peaceCorpsIns').style.maxWidth = '650px';
document.getElementById('emplIns').style.maxWidth = '650px';
document.getElementById('insuranceName').style.maxWidth = '460px';
document.getElementById('emplName').style.maxWidth = '420px';
document.getElementById('emplAddress').style.maxWidth = '420px';
document.getElementById('empPhNum').style.maxWidth = '160px';
document.getElementById('empIdNum').style.maxWidth = '160px';
document.getElementById('emplContPerson').style.maxWidth = '330px';
document.getElementById('emplContPh').style.maxWidth = '280px';
document.getElementById('emplContEmail').style.maxWidth = '280px';
document.getElementById('covFromJob').style.maxWidth = '365px';
document.getElementById('noCoverageProvided').style.maxWidth = '360px';
document.getElementById('endingInsurance').style.maxWidth = '360px';
document.getElementById('reasonForInsEnd').style.maxWidth = '360px';
document.getElementById('appliedPersonName').style.maxWidth = '100%';
document.getElementById('veteranFamily').style.maxWidth = '100%';
document.getElementById('emplPersonName1').style.maxWidth = '100%';
document.getElementById('emplPersonName2').style.maxWidth = '100%';
document.getElementById('approvedRepAdd').style.maxWidth = '51%';
document.getElementById('payingCompanyName').style.maxWidth = '100%';
document.getElementById('Ils_rel').style.maxWidth = '500px';
document.getElementById('OthSt_rel').style.maxWidth = '500px';
document.getElementById('ChkSa_rel').style.maxWidth = '500px';
document.getElementById('Cert_rel').style.maxWidth = '500px';
document.getElementById('Stock_rel').style.maxWidth = '500px';
document.getElementById('Other_rel').style.maxWidth = '500px';
document.getElementById('Explain_text').style.maxWidth = '500px';
document.getElementById('empItemsBought1').style.maxWidth = '250px';
document.getElementById('otherTrnsprt1').style.maxWidth = '160px';
document.getElementById('costOthrTrnspt1').style.maxWidth = '240px';
document.getElementById('empItemsBought2').style.maxWidth = '250px';
document.getElementById('otherTrnsprt2').style.maxWidth = '160px';
document.getElementById('costOthrTrnspt2').style.maxWidth = '240px';
document.getElementById('listSpouse').style.maxWidth = '350px';
document.getElementById('listDepndts').style.maxWidth = '350px';
document.getElementById('TaxFilerName').style.maxWidth = '350px';
document.getElementById('listBillsAmt').style.maxWidth = '300px';
document.getElementById('applicantFirstName').style.maxWidth = '210px';
document.getElementById('applicantLastName').style.maxWidth = '275px';
document.getElementById('applicantFormerName').style.maxWidth = '275px';
document.getElementById('applicantAddress').style.maxWidth = '475px';
document.getElementById('applicantAddressSec').style.maxWidth = '475px';
document.getElementById('aplicantMailingAddress').style.maxWidth = '475px';
document.getElementById('aplicantMailingAddressSec').style.maxWidth = '475px';
document.getElementById('electronicFirstName').style.maxWidth = '210px';
document.getElementById('electronicMiddle').style.maxWidth = '75px';
document.getElementById('electronicLastName').style.maxWidth = '275px';
document.getElementById('appRepFirstName').style.maxWidth = '275px';
document.getElementById('appRepLastName').style.maxWidth = '275px';
document.getElementById('appRepOrgName').style.maxWidth = '750px';
document.getElementById('applicantCity').style.maxWidth = '750px';
document.getElementById('applicantMailCity').style.maxWidth = '750px';
document.getElementById('approvedRepAddSec').style.maxWidth = '475px';
document.getElementById('approvedRepAdd').style.maxWidth = '475px';
document.getElementById('approvedRepCity').style.maxWidth = '750px';
document.getElementById('approvedRepFirstName').style.maxWidth = '210px';
document.getElementById('approvedRepLastName').style.maxWidth = '275px';
document.getElementById('personFirstName').style.maxWidth = '275px';
document.getElementById('personLastName').style.maxWidth = '275px';
document.getElementById('personFormerName').style.maxWidth = '275px';
document.getElementById('extraFirstName1').style.maxWidth = '200px';
document.getElementById('extraLastName1').style.maxWidth = '275px';
document.getElementById('extraRelationship1').style.maxWidth = '275px';
document.getElementById('extraFirstName2').style.maxWidth = '200px';
document.getElementById('extraLastName2').style.maxWidth = '275px';
document.getElementById('extraRelationship2').style.maxWidth = '275px';
document.getElementById('extraFirstName3').style.maxWidth = '200px';
document.getElementById('extraLastName3').style.maxWidth = '275px';
document.getElementById('extraRelationship3').style.maxWidth = '275px';
document.getElementById('extraFirstName4').style.maxWidth = '200px';
document.getElementById('extraLastName4').style.maxWidth = '275px';
document.getElementById('extraRelationship4').style.maxWidth = '275px';
document.getElementById('extraFirstName5').style.maxWidth = '200px';
document.getElementById('extraLastName5').style.maxWidth = '275px';
document.getElementById('extraRelationship5').style.maxWidth = '275px';
function validateAmount(input){
	if(!input.value.startsWith('$')){
		input.value = '$' + input.value.replace('$', '');
	}
	input.value = '$' + input.value.substring(1).replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');	
}

const RsrcCompNameWidth = document.querySelectorAll('.RsrcBankCompNames');
RsrcCompNameWidth.forEach(input => {
	input.style.maxWidth = '230px';
});

function settingValue(){
document.getElementById('empWeeklyAmt2').addEventListener('change', function(event){
	var selectElement = event.target;
	var selectedValue = selectElement.value;

	for(var i=0; i<selectElement.options.length;i++){
		if(selectElement.options[i].value === selectedValue){
			selectElement.options[i].setAttribute('selected', 'selected');
		}else{
			selectElement.options[i].removeAttribute('selected', 'selected');
		}
	}
});
}
function settingValueFirst(){
	document.getElementById('empWeeklyAmt1').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;
	
		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected');
			}
		}
	});
}
function settingDurSec(){
	document.getElementById('durOfPrePlan2').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
}

function empOftenPaidSec(){
	document.getElementById('empOftenPaid2').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
}
function empOftenPaid(){
	document.getElementById('empOftenPaid1').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
}

function intByPhoneValue(){
	document.getElementById('intByPhone').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
}

	document.getElementById('typeOfFacility').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});

	document.getElementById('whatCounty').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	const relationId = document.getElementById('relation');
	if(relationId){
		relationId.addEventListener('change', function(event){
			var selectElement = event.target;
			var selectedValue = selectElement.value;

			for(var i=0; i<selectElement.options.length;i++){
				if(selectElement.options[i].value === selectedValue){
					selectElement.options[i].setAttribute('selected', 'selected');
				}else{
					selectElement.options[i].removeAttribute('selected', 'selected');
				}
			}
		});
	}
	
	document.getElementById('Elec_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	document.getElementById('Water_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('Garbage_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('Fuel_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	document.getElementById('Phone_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('Tank_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('Well_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	document.getElementById('Fee_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('Flat_due').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
		
	document.getElementById('whatCounty_suffName').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
	document.getElementById('whatCounty_appRepZip').addEventListener('change', function(event){
		var selectElement = event.target;
		var selectedValue = selectElement.value;

		for(var i=0; i<selectElement.options.length;i++){
			if(selectElement.options[i].value === selectedValue){
				selectElement.options[i].setAttribute('selected', 'selected');
			}else{
				selectElement.options[i].removeAttribute('selected', 'selected');
			}
		}
	});
	
function toggleSSNFields(id) {
		var idNumber = Number(id.split('_')[1]);
		var title = document.getElementById("togglePassword_" + idNumber );
		if(title.title=="SSN entered is displayed as DOT"){
			title.title="SSN is displayed as numbers" }
		else if(title.title=="SSN is displayed as numbers")
			title.title="SSN entered is displayed as DOT"
		else if(title.title=="SSN ingresado se muestra como DOT"){
			title.title="SSN se muestra como n meros" }
		else if(title.title=="SSN se muestra como n meros")
			title.title="SSN ingresado se muestra como DOT"
		var ssnId1="ssn1socialSecurity_" + idNumber;
		var ssnId2="ssn2socialSecurity_" + idNumber;
		var ssnId3="ssn3socialSecurity_" + idNumber;
	    var ssn1 = document.getElementById(ssnId1);
		var ssn2 = document.getElementById(ssnId2);
		var ssn3 = document.getElementById(ssnId3);
		if(ssn1.type=='password'){
			ssn1.type='text'
			ssn2.type='text'
			ssn3.type='text';
		} else if (ssn1.type=='text'){
			ssn1.type='password'
			ssn2.type='password'
			ssn3.type='password';
		}
}
function toggleSSNFieldsEP(id) {
	var idNumber = Number(id.split('_')[1]);
	var title = document.getElementById("togglePasswordEP_" + idNumber );
	if(title.title=="SSN entered is displayed as DOT"){
		title.title="SSN is displayed as numbers" }
	else if(title.title=="SSN is displayed as numbers")
		title.title="SSN entered is displayed as DOT"
	else if(title.title=="SSN ingresado se muestra como DOT"){
		title.title="SSN se muestra como n meros" }
	else if(title.title=="SSN se muestra como n meros")
		title.title="SSN ingresado se muestra como DOT"
	var ssnId1="ssn1socialSecurityEP_" + idNumber;
	var ssnId2="ssn2socialSecurityEP_" + idNumber;
	var ssnId3="ssn3socialSecurityEP_" + idNumber;
    var ssn1 = document.getElementById(ssnId1);
	var ssn2 = document.getElementById(ssnId2);
	var ssn3 = document.getElementById(ssnId3);
	if(ssn1.type=='password'){
		ssn1.type='text'
		ssn2.type='text'
		ssn3.type='text';
	} else if (ssn1.type=='text'){
		ssn1.type='password'
		ssn2.type='password'
		ssn3.type='password';
	}
}

function isNumeric(value){
	return /^[0-9]+$/.test(value);
}

function isValidName(name){
	const regex=/^[a-zA-Z][a-zA-Z0-9' -]*$/;
	
	return regex.test(name);
}

function addHover(){
	$(document).ready(function() {
		$('.hover-help').hover(function(a) {
			titles = [];
			$('table[title]').each(function(index) {
				titles.push([ index, $(this).attr('title') ]);
			});
			$('table[title]').attr('title', '');
			$(this).css({"z-index":"1000"}).find('.hover-help-msg').show(100);
			start_secds();
		}, function(a) {
			$(this).css({"z-index":"auto"}).find('.hover-help-msg').hide();
			$('table[title]').each(function(index) {
				$(this).attr('title', titles[index][1]);
			});
			if(!$(this).parent().find('.hover-help-msg').is(":visible") && time_opened > 0)
			{
			//Was requested.
			var hidden_count = $(this).parent().find('.hit_count');
			var secds_accesd = $(this).parent().find('.secds_accesd');
			set_hit_count(hidden_count);
			set_secds(secds_accesd);
			}
		});
			
		$('.hover-help a').click(function(){
			$(this).parent().css({"z-index" : "1000"});
			$(this).parent().find('.hover-help-msg').toggle(100,function(){
				//Was requested.
				if(!$(this).is(":visible"))
				{
					var hidden_count = $(this).parent().find('.hit_count');
					var secds_accesd = $(this).parent().find('.secds_accesd');
					set_hit_count(hidden_count);
					set_secds(secds_accesd);
				}else{
					start_secds();
				}			
			});
		});
		
		$('.hover-help a').blur(function(){
			//Was requested.
			if($(this).parent().find('.hover-help-msg').is(":visible"))
			{
				var hidden_count = $(this).parent().find('.hit_count');
				var secds_accesd = $(this).parent().find('.secds_accesd');
				set_hit_count(hidden_count);
				set_secds(secds_accesd);
			}	
			$(this).parent().css({"z-index":"auto"}).find('.hover-help-msg').hide();
		});
		
		
	});
}
document.getElementById("hit_count_id_180012904").id += "_apl";
document.getElementById("secds_accesd_id_180012904").id += "_apl";
document.getElementById("hit_count_id_180012905").id += "_apl";
document.getElementById("secds_accesd_id_180012905").id += "_apl";
document.getElementById("control_180012904").id += "_apl"; 
document.getElementById("control_180012905").id += "_apl";


const hoverWidth = document.querySelectorAll('.msg');
hoverWidth.forEach(input => {
	input.style.width = '420px';
});


//START ILIES-312006 --- Household Composition SUM  ---

function updateHouseholdTotal() {
    var live = document.getElementById("peopleInYourHome").value;
    var outside = document.getElementById("outsideHomeType").value;
   // var dependent = document.getElementById("taxDependent").value;
    var totalField = document.getElementById("totalPeopleHousehold");
    var totalFieldHidden = document.getElementById("totalPeopleHouseholdHidden");
 
    function num(v) { var n=parseInt(v,10); return isNaN(n)?0:n; }
    var total = num(live) + num(outside);
    if(totalField){
    	 totalField.innerText = total;
    	// totalFieldHidden.val(total);
    }
 
//END ILIES-312006 --- Household Composition SUM  ---
}

function toggleTaxFieldsMandatory(isMandatory) {
    var taxFieldIds = [
        'fileFederalTaxReturn_asterisk',
        'fileJointlyWithSpouse_asterisk', 
        'dependents_asterisk',
        'dependentTaxReturn_asterisk'
    ];
    
    // Handle original fields
    taxFieldIds.forEach(function(fieldId) {
        var asterisk = document.getElementById(fieldId);
        if (asterisk) {
            asterisk.style.display = isMandatory ? 'inline' : 'none';
        }
    });
    
    
}

function attachFamilyPlanListeners() {
    const programFamilyPlanY = document.getElementById('programHealthCare_Y');
    const programFamilyPlanN = document.getElementById('programHealthCare_N');

    if (programFamilyPlanY && programFamilyPlanN ) {
        // Remove existing listeners to prevent duplicates
      //  programFamilyPlanY.removeEventListener('change', handleFamilyPlanYChange);
        //programFamilyPlanN.removeEventListener('change', handleFamilyPlanNChange);
        
        // Add listeners
        programFamilyPlanY.addEventListener('change', handleFamilyPlanYChange);
        programFamilyPlanN.addEventListener('change', handleFamilyPlanNChange);
        
        // Check initial state
        if (programFamilyPlanY.checked) {
            toggleTaxFieldsMandatory(true);
        }
    }
}

function handleFamilyPlanYChange() {
    if (this.checked) {
        toggleTaxFieldsMandatory(true);
    }
}

function handleFamilyPlanNChange() {
    if (this.checked) {
        toggleTaxFieldsMandatory(false);
    }
}

if(document.readyState === 'loading'){
	document.addEventListener('DOMContentLoaded', attachFamilyPlanListeners);
}else{
	attachFamilyPlanListeners;
}

// Enhanced tax validation for multiple members
function validateTaxFieldsForAllMembers() {
    const programFamilyPlanY = document.getElementById('programHealthCare_Y');
    if (programFamilyPlanY && programFamilyPlanY.checked) {
    	 var taxFields = ['FileFederalTaxReturn', 'FileJointlyWithSpouse', 'Dependents', 'DependentTaxReturn'];
    	    
    	    // Check original tax fields
    	    for (var i = 0; i < taxFields.length; i++) {
    	        var radioButtons = document.getElementsByName(taxFields[i]);
    	        var isSelected = false;
    	        
    	        for (var j = 0; j < radioButtons.length; j++) {
    	            if (radioButtons[j].id && !radioButtons[j].id.includes('_') && radioButtons[j].checked) {
    	                isSelected = true;
    	                break;
    	            }
    	        }
    	        
    	        if (!isSelected) {
    	        	taxFieldsFlag = true;
    	        	break;
    	        }
    	    }
    }
    
 
}




 