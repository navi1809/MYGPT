package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AME48A ****
// COMPONENT NAME: AME48A Food Stamp Characteristic Study
// ===============
// 
// DESCRIPTION:
// ============
// Report of Food Stamps general statistics of active and
// recently closed cases that includes case composition,
// expense information, and counts of active cases.
// 
// 
// ***********************
Program AME48A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AME48W AME48W; // record
  AME48W-DET AME48W-DET; // record
  AME48W-HEAD AME48W-HEAD; // record
  AME48W-SUBH AME48W-SUBH; // record
  AME48W1 AME48W1; // record
  AME48W1-DET AME48W1-DET; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  H2-2-CMH-PER H2-2-CMH-PER; // record
  H2-2-EVR-FCH H2-2-EVR-FCH; // record
  H2-2-FAA-FAC H2-2-FAA-FAC; // record
  H2-2-FAC-PSY H2-2-FAC-PSY; // record
  H2-2-MED-MEP H2-2-MED-MEP; // record
  H2-3-FCE-PAH-PSY H2-3-FCE-PAH-PSY; // record
  H2-4-FACFCE-PAHPSY H2-4-FACFCE-PAHPSY; // record
  H2-CODE-TBL H2-CODE-TBL; // record
  H2-ELG-BDGT-UNIT H2-ELG-BDGT-UNIT; // record
  H2-ELIG-MBR-TSRSLT H2-ELIG-MBR-TSRSLT; // record
  H2-FAM-ACTNS H2-FAM-ACTNS; // record
  H2-FAM-AUTH-FACLTY H2-FAM-AUTH-FACLTY; // record
  H2-GEN-ASST-INC-DT H2-GEN-ASST-INC-DT; // record
  H2-INCAP-DSBLTY H2-INCAP-DSBLTY; // record
  H2-MEMBER-REL H2-MEMBER-REL; // record
  H2-OFFICE H2-OFFICE; // record
  H2-PERSON-DISQL H2-PERSON-DISQL; // record
  H2-STDNT-GR-INC-DT H2-STDNT-GR-INC-DT; // record
  H2-UERND-INCM-DTL H2-UERND-INCM-DTL; // record
  H2-UTILITIES H2-UTILITIES; // record
  H3-FAM-ACTNS H3-FAM-ACTNS; // record
  P-DATE-REC3 P-DATE-REC3; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AME48-RECIN SR-AME48-RECIN; // record
  VCONTROL VCONTROL; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VDTSREC VDTSREC; // record
  VMESSAGE VMESSAGE; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AME48P9-MAIN: AME48P9-MAIN();
  end // end main
end // end AME48A


// LOAD AGE CATEGORY ARRAY
Function AME48P9-AGE-INIT()
  /* LOAD ARRAY WITH AGE CATEGORIES*/

  AME48W.WS-AGE-CATGRY[1] = 6;
  AME48W.WS-AGE-CATGRY[2] = 7;
  AME48W.WS-AGE-CATGRY[3] = 13;
  AME48W.WS-AGE-CATGRY[4] = 16;
  AME48W.WS-AGE-CATGRY[5] = 18;
  AME48W.WS-AGE-CATGRY[6] = 21;
  AME48W.WS-AGE-CATGRY[7] = 26;
  AME48W.WS-AGE-CATGRY[8] = 31;
  AME48W.WS-AGE-CATGRY[9] = 36;
  AME48W.WS-AGE-CATGRY[10] = 41;
  AME48W.WS-AGE-CATGRY[11] = 46;
  AME48W.WS-AGE-CATGRY[12] = 51;
  AME48W.WS-AGE-CATGRY[13] = 56;
  AME48W.WS-AGE-CATGRY[14] = 60;
end // end AME48P9-AGE-INIT


// ACCUMULATE REPORT DETL VARS
Function AME48P9-APPLSPEC()
  /* cbsi start*/

  if (H2-OFFICE.OFC-NM != AME48W.WS-PREV-LEVEL)
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    AME48P9-PRN-HEAD(); /* print the header details*/
    AME48P9-PRN-SUBH(); /* print the subheader*/
  end

  set H2-2-FAC-PSY empty;
  H2-2-FAC-PSY.OFC-CD = H2-OFFICE.OFC-CD;

  H2-2-FAC-PSY.PRD-BEG-DT = AME48W.WS-RPT-BEG-DT;
  H2-2-FAC-PSY.PRD-END-DT = AME48W.WS-RPT-END-DT;

  AME48Q2-S02();

  if (sysVar.sqlData.sqlcode == 0)
    AME48Q2-S02-SCANP1();

    while (sysVar.sqlData.sqlcode == 0)
      set H2-2-EVR-FCH empty;
      H2-2-EVR-FCH.ICI = H2-2-FAC-PSY.ICI;
      H2-2-EVR-FCH.PRD-BEG-DT = AME48W.WS-RPT-BEG-DT;
      H2-2-EVR-FCH.PRD-END-DT = AME48W.WS-RPT-END-DT;

      H2-2-EVR-FCH.BNFT-YR = AME48W.WS-RPT-EN-YYYY;
      H2-2-EVR-FCH.BNFT-MTH = AME48W.WS-RPT-EN-MM;

      AME48W1.WS-HHAGE-18-FG = "N";
      AME48W1.WS-HHAGE-15-FG = "N";
      AME48W1.WS-SPOUSE-FG = "N";
      AME48W1.WS-SUA-FG = "N";
      AME48W1.WS-PSUA-FG = "N";
      AME48W1.WS-GAGA-INC-FG = "N";
      AME48W1.WS-EDIN-INC-FG = "N";

      AME48W1.WS-RE-HM-UT = 0;
      AME48W1.WS-ALL-AMT = 0;
      AME48W1.WS-MTH-GAGA-AMT = 0;

  /* re-init AGDDIS/UPI counts*/
      AME48W1.WS-AGED-CNT = 0;
      AME48W1.WS-DSBLD-CNT = 0;
      AME48W1.WS-DSBLD-OR-AGED-CNT = 0;
      AME48W1.WS-AGDDIS-UPI-CNT = 0;

      AME48Q2-S02-P2(); /* 1 ROW INQUIRY*/
      if (sysVar.sqlData.sqlcode == 0)

        AME48W1.WS-DS2-FLG = "Y";
        AME48W1.WS-ICI-CNT = AME48W1.WS-ICI-CNT + 1;
        AME48W.WS-S-ICI-CNT = AME48W.WS-S-ICI-CNT + 1;

        AME48P9-PROC-DSC3();

  /* start q01,q03,q04*/

        AME48W1.WS-ACTV-CSE = AME48W1.WS-ACTV-CSE + 1; /* q01*/
        AME48W.WS-S-ACTV-CSE = AME48W.WS-S-ACTV-CSE + 1;

        if (H2-2-EVR-FCH.MTHLY-RPTR-IND == "Y")
          AME48W1.WS-TOT-ACTV-CSE = AME48W1.WS-TOT-ACTV-CSE + 1; /* /q03*/
          AME48W.WS-S-TOT-ACTV-CSE = AME48W.WS-S-TOT-ACTV-CSE + 1;
        end

  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/
  /* THE REQUIREMENTS FOR PUBLIC ASSISTANCE HAVE CHANGED.  NOW, ONLY 'P',*/
  /* 'S', 'A', 'G' SHOULD BE INCLUDED AS 'PA' STATUS.  ALL OTHERS SHOULD*/
  /* BE INCLUDED AS 'NA' STATUS, PER FNS-388.  "IF AT LEAST ONE MEMBER*/
  /* OF THE HOUSEHOLD DOES NOT RECEIVE INCOME OR A BENEFIT FROM TANF,*/
  /* SSI, OR GA, IT IS A NA HOUSEHOLD."*/
  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/

        if (H2-2-EVR-FCH.FS-SUFX == "P" 
         || H2-2-EVR-FCH.FS-SUFX == "S" /* WI 20799*/
         || H2-2-EVR-FCH.FS-SUFX == "A" /* WI 20799*/
         || H2-2-EVR-FCH.FS-SUFX == "G") /* WI 20799*/

          AME48W1.WS-Q04-PA-CNT = AME48W1.WS-Q04-PA-CNT + 1; /* q04*/
          AME48W.WS-S-Q04-PA-CNT = AME48W.WS-S-Q04-PA-CNT + 1;

          AME48W1.WS-BNFT-CNT = AME48W1.WS-BNFT-CNT + 1; /* q34*/
          AME48W.WS-S-BNFT-CNT = AME48W.WS-S-BNFT-CNT + 1;

          AME48W1.WS-TOT-PA-BNFT = AME48W1.WS-TOT-PA-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34b*/

          AME48W.WS-S-TOT-PA-BNFT = AME48W.WS-S-TOT-PA-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34b*/

          AME48W1.WS-TOT-BNFT = AME48W1.WS-TOT-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34a*/

          AME48W.WS-S-TOT-BNFT = AME48W.WS-S-TOT-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34a*/

        else

          AME48W1.WS-Q04-NA-CNT = AME48W1.WS-Q04-NA-CNT + 1;
          AME48W.WS-S-Q04-NA-CNT = AME48W.WS-S-Q04-NA-CNT + 1; /* q04*/

          AME48W1.WS-BNFT-CNT = AME48W1.WS-BNFT-CNT + 1;
          AME48W.WS-S-BNFT-CNT = AME48W.WS-S-BNFT-CNT + 1; /* q34*/

          AME48W1.WS-TOT-NA-BNFT = AME48W1.WS-TOT-NA-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34c*/

          AME48W.WS-S-TOT-NA-BNFT = AME48W.WS-S-TOT-NA-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34c*/

          AME48W1.WS-TOT-BNFT = AME48W1.WS-TOT-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34a*/

          AME48W.WS-S-TOT-BNFT = AME48W.WS-S-TOT-BNFT +           H2-2-EVR-FCH.MTD-ENTLM-AMT; /* q34a*/

        end
  /* end q01,q03,q04*/

  /* start to get q37*/
        if (H2-2-FAC-PSY.REDET-FRQ == 1)
          AME48W1.WS-1-MO = AME48W1.WS-1-MO + 1;
          AME48W.WS-S-1-MO = AME48W.WS-S-1-MO + 1;
        else
          if (H2-2-FAC-PSY.REDET-FRQ == 2)
            AME48W1.WS-2-MO = AME48W1.WS-2-MO + 1;
            AME48W.WS-S-2-MO = AME48W.WS-S-2-MO + 1;
          else
            if (H2-2-FAC-PSY.REDET-FRQ == 3)
              AME48W1.WS-3-MO = AME48W1.WS-3-MO + 1;
              AME48W.WS-S-3-MO = AME48W.WS-S-3-MO + 1;
            else
              if (H2-2-FAC-PSY.REDET-FRQ == 4)
                AME48W1.WS-4-MO = AME48W1.WS-4-MO + 1;
                AME48W.WS-S-4-MO = AME48W.WS-S-4-MO + 1;
              else
                if (H2-2-FAC-PSY.REDET-FRQ == 5)
                  AME48W1.WS-5-MO = AME48W1.WS-5-MO + 1;
                  AME48W.WS-S-5-MO = AME48W.WS-S-5-MO + 1;
                else
                  if (H2-2-FAC-PSY.REDET-FRQ == 6)
                    AME48W1.WS-6-MO = AME48W1.WS-6-MO + 1;
                    AME48W.WS-S-6-MO = AME48W.WS-S-6-MO + 1;
                  else
                    if (H2-2-FAC-PSY.REDET-FRQ == 7)
                      AME48W1.WS-7-MO = AME48W1.WS-7-MO + 1;
                      AME48W.WS-S-7-MO = AME48W.WS-S-7-MO + 1;
                    else
                      if (H2-2-FAC-PSY.REDET-FRQ == 8)
                        AME48W1.WS-8-MO = AME48W1.WS-8-MO + 1;
                        AME48W.WS-S-8-MO = AME48W.WS-S-8-MO + 1;
                      else
                        if (H2-2-FAC-PSY.REDET-FRQ == 9)
                          AME48W1.WS-9-MO = AME48W1.WS-9-MO + 1;
                          AME48W.WS-S-9-MO = AME48W.WS-S-9-MO + 1;
                        else
                          if (H2-2-FAC-PSY.REDET-FRQ == 10)
                            AME48W1.WS-10-MO = AME48W1.WS-10-MO + 1;
                            AME48W.WS-S-10-MO = AME48W.WS-S-10-MO + 1;
                          else
                            if (H2-2-FAC-PSY.REDET-FRQ == 11)
                              AME48W1.WS-11-MO = AME48W1.WS-11-MO + 1;
                              AME48W.WS-S-11-MO = AME48W.WS-S-11-MO + 1;
                            else
                              if (H2-2-FAC-PSY.REDET-FRQ == 12)
                                AME48W1.WS-12-MO = AME48W1.WS-12-MO + 1;
                                AME48W.WS-S-12-MO = AME48W.WS-S-12-MO + 1;
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
        if (H2-2-FAC-PSY.REDET-FRQ == 24)
          AME48W1.WS-24-MO = AME48W1.WS-24-MO + 1;
          AME48W.WS-S-24-MO = AME48W.WS-S-24-MO + 1;
        end
  /* end to get q37*/

  /* start to get q39*/
  /* ************************************************************************/
  /* WS-DAY IS FROM S02, DAY(PRGM_EFF_DT)*/
  /* ************************************************************************/
        if (AME48W1.WS-DAY in AME48W.WS-DAY-OF-MTH)
          AME48W1.WS-DAY-CNT-IDX = sysVar.arrayIndex;
          AME48W1.WS-DAY-OF-MTH-CNT[WS-DAY-CNT-IDX] = AME48W1.WS-DAY-OF-MTH-CNT[WS-DAY-CNT-IDX] + 1;
          AME48W.WS-S-DAY-OF-MTH-CNT[WS-DAY-CNT-IDX] = AME48W.WS-S-DAY-OF-MTH-CNT[WS-DAY-CNT-IDX] + 1;
        end
  /* end to get q39*/

  /* start q46/q47*/

        if (AME48W1.WS-HHAGE-18-FG == "Y")
          if (AME48W1.WS-SPOUSE-FG == "Y")
            AME48W1.WS-HH-18-WS = AME48W1.WS-HH-18-WS + 1;
            AME48W.WS-S-HH-18-WS = AME48W.WS-S-HH-18-WS + 1;
          else
            AME48W1.WS-HH-18-NS = AME48W1.WS-HH-18-NS + 1;
            AME48W.WS-S-HH-18-NS = AME48W.WS-S-HH-18-NS + 1;
          end
        else
          if (AME48W1.WS-HHAGE-15-FG == "Y")
            if (AME48W1.WS-SPOUSE-FG == "Y")
              AME48W1.WS-HH-15-WS = AME48W1.WS-HH-15-WS + 1;
              AME48W.WS-S-HH-15-WS = AME48W.WS-S-HH-15-WS + 1;
            else
              AME48W1.WS-HH-15-NS = AME48W1.WS-HH-15-NS + 1;
              AME48W.WS-S-HH-15-NS = AME48W.WS-S-HH-15-NS + 1;
            end
          end
        end

        if (H2-2-EVR-FCH.HMLS-IND == "Y")
          AME48W1.WS-HMLS-CNT = AME48W1.WS-HMLS-CNT + 1;
          AME48W.WS-S-HMLS-CNT = AME48W.WS-S-HMLS-CNT + 1;
        end

  /* end q46/q47*/

  /* start q05*/
        if (H2-2-EVR-FCH.ELIG-NUM == 1)
          AME48W1.WS-HH-1 = AME48W1.WS-HH-1 + 1;
          AME48W.WS-S-HH-1 = AME48W.WS-S-HH-1 + 1;

          AME48W1.WS-TOT-HH1 = AME48W1.WS-TOT-HH1 +           H2-2-EVR-FCH.MTD-ENTLM-AMT;
          AME48W.WS-S-TOT-HH1 = AME48W.WS-S-TOT-HH1 +           H2-2-EVR-FCH.MTD-ENTLM-AMT;

        else
          if (H2-2-EVR-FCH.ELIG-NUM == 2)
            AME48W1.WS-HH-2 = AME48W1.WS-HH-2 + 1;
            AME48W.WS-S-HH-2 = AME48W.WS-S-HH-2 + 1;

            AME48W1.WS-TOT-HH2 = AME48W1.WS-TOT-HH2 +             H2-2-EVR-FCH.MTD-ENTLM-AMT;
            AME48W.WS-S-TOT-HH2 = AME48W.WS-S-TOT-HH2 +             H2-2-EVR-FCH.MTD-ENTLM-AMT;

          else
            if (H2-2-EVR-FCH.ELIG-NUM == 3)
              AME48W1.WS-HH-3 = AME48W1.WS-HH-3 + 1;
              AME48W.WS-S-HH-3 = AME48W.WS-S-HH-3 + 1;

              AME48W1.WS-TOT-HH3 = AME48W1.WS-TOT-HH3 +               H2-2-EVR-FCH.MTD-ENTLM-AMT;
              AME48W.WS-S-TOT-HH3 = AME48W.WS-S-TOT-HH3 +               H2-2-EVR-FCH.MTD-ENTLM-AMT;

            else
              if (H2-2-EVR-FCH.ELIG-NUM == 4)
                AME48W1.WS-HH-4 = AME48W1.WS-HH-4 + 1;
                AME48W.WS-S-HH-4 = AME48W.WS-S-HH-4 + 1;

                AME48W1.WS-TOT-HH4 = AME48W1.WS-TOT-HH4 +                 H2-2-EVR-FCH.MTD-ENTLM-AMT;
                AME48W.WS-S-TOT-HH4 = AME48W.WS-S-TOT-HH4 +                 H2-2-EVR-FCH.MTD-ENTLM-AMT;

              else
                if (H2-2-EVR-FCH.ELIG-NUM == 5)
                  AME48W1.WS-HH-5 = AME48W1.WS-HH-5 + 1;
                  AME48W.WS-S-HH-5 = AME48W.WS-S-HH-5 + 1;

                  AME48W1.WS-TOT-HH5 = AME48W1.WS-TOT-HH5 +                   H2-2-EVR-FCH.MTD-ENTLM-AMT;
                  AME48W.WS-S-TOT-HH5 = AME48W.WS-S-TOT-HH5 +                   H2-2-EVR-FCH.MTD-ENTLM-AMT;

                else
                  if (H2-2-EVR-FCH.ELIG-NUM == 6)
                    AME48W1.WS-HH-6 = AME48W1.WS-HH-6 + 1;
                    AME48W.WS-S-HH-6 = AME48W.WS-S-HH-6 + 1;

                    AME48W1.WS-TOT-HH6 = AME48W1.WS-TOT-HH6 +                     H2-2-EVR-FCH.MTD-ENTLM-AMT;
                    AME48W.WS-S-TOT-HH6 = AME48W.WS-S-TOT-HH6 +                     H2-2-EVR-FCH.MTD-ENTLM-AMT;

                  else
                    if (H2-2-EVR-FCH.ELIG-NUM > 6)
                      AME48W1.WS-HH-7 = AME48W1.WS-HH-7 + 1;
                      AME48W.WS-S-HH-7 = AME48W.WS-S-HH-7 + 1;

                      AME48W1.WS-TOT-HH7 = AME48W1.WS-TOT-HH7 +                       H2-2-EVR-FCH.MTD-ENTLM-AMT;
                      AME48W.WS-S-TOT-HH7 = AME48W.WS-S-TOT-HH7 +                       H2-2-EVR-FCH.MTD-ENTLM-AMT;

                    end
                  end
                end
              end
            end
          end
        end
  /* end q05*/

  /* start q06*/
  /* ************************************************************************/
  /* THE FOLLOWING IS MORE ACCURATE THAN INCREMENTING BY 7 WHEN THE*/
  /* ELIG_NUM IS >6.  SEE PREVIOUS PARAGRAPH FOR Q05.*/
  /* ************************************************************************/

        if (H2-2-EVR-FCH.ELIG-NUM > 0)
          AME48W1.WS-ELIG-NUM-TOT = AME48W1.WS-ELIG-NUM-TOT +           H2-2-EVR-FCH.ELIG-NUM;
          AME48W.WS-S-ELIG-NUM-TOT = AME48W.WS-S-ELIG-NUM-TOT +           H2-2-EVR-FCH.ELIG-NUM;
          AME48W1.WS-HH-TOT = AME48W1.WS-HH-TOT + 1;
          AME48W.WS-S-HH-TOT = AME48W.WS-S-HH-TOT + 1;
        end
  /* end q06*/

  /* start q13*/

        if (AME48W1.WS-AGED-CNT > 0
         || AME48W1.WS-DSBLD-CNT > 0)
          AME48W1.WS-Q13-A-CNT = AME48W1.WS-Q13-A-CNT + 1;
          AME48W.WS-S-Q13-A-CNT = AME48W.WS-S-Q13-A-CNT + 1;
        end

        if ((AME48W1.WS-AGED-CNT == 
        AME48W1.WS-AGDDIS-UPI-CNT)
         || (AME48W1.WS-DSBLD-CNT == 
        AME48W1.WS-AGDDIS-UPI-CNT)
         || (AME48W1.WS-DSBLD-OR-AGED-CNT == 
        AME48W1.WS-AGDDIS-UPI-CNT))
          AME48W1.WS-Q13-B-CNT = AME48W1.WS-Q13-B-CNT + 1;
          AME48W.WS-S-Q13-B-CNT = AME48W.WS-S-Q13-B-CNT + 1;
        end

  /* end q13*/

  /* start q26,q27*/
        if (AME48W1.WS-SUA-FG == "Y")
          AME48W1.WS-CASE-SUA-CNT = AME48W1.WS-CASE-SUA-CNT + 1; /* q26*/
          AME48W.WS-S-CASE-SUA-CNT = AME48W.WS-S-CASE-SUA-CNT + 1;
        else /* q26*/
          if (AME48W1.WS-PSUA-FG == "Y")
            AME48W1.WS-CASE-PSUA-CNT = AME48W1.WS-CASE-PSUA-CNT + 1; /* q27*/
            AME48W.WS-S-CASE-PSUA-CNT = AME48W.WS-S-CASE-PSUA-CNT + 1;
          end /* q27*/
        end
  /* end q26,q27*/

  /* start q38 -- bnft-reduction/debt*/
        if (H2-2-EVR-FCH.BNFT-RDCTN-AMT > 0)
          AME48W1.WS-DEBT-CNT = AME48W1.WS-DEBT-CNT + 1;
          AME48W.WS-S-DEBT-CNT = AME48W.WS-S-DEBT-CNT + 1;
        end
  /* end q38*/

  /* start q19,q20-er,to get q21,to get q32,q33,*/
  /* to get (q22-a,q22-mixed,q22-na,q23-avg-dis-inc-inc,*/
  /* q23-avg-dis-all-inc,q24-income-type-er)*/
  /* ************************************************************************/
  /* FOR FS, THERE WILL BE ONLY 1 ROW IN TWNELG_BDGT_UNIT THAT CORRESPONDS*/
  /* TO THE LST_POSTD_VER ROW IN TWNELIG_VERSION.*/
  /* ************************************************************************/

        H2-ELG-BDGT-UNIT.ICI = H2-2-FAC-PSY.ICI;
        H2-ELG-BDGT-UNIT.VER-NMB = H2-2-EVR-FCH.VER-NMB;
        H2-ELG-BDGT-UNIT.BNFT-YR = AME48W.WS-RPT-EN-YYYY;
        H2-ELG-BDGT-UNIT.BNFT-MTH = AME48W.WS-RPT-EN-MM;

        AME48Q11-S11();

        if (sysVar.sqlData.sqlcode == 0)

          if (H2-ELG-BDGT-UNIT.OG-MDCL-EXP-AMT > 0
           || H2-ELG-BDGT-UNIT.OTH-MDCL-EXP-AMT > 0)

            AME48W1.WS-CASE-MEDX-CNT = AME48W1.WS-CASE-MEDX-CNT + 1; /* q15*/
            AME48W.WS-S-CASE-MEDX-CNT = AME48W.WS-S-CASE-MEDX-CNT + 1;

            AME48W1.WS-MEDX-AMT = AME48W1.WS-MEDX-AMT +             H2-ELG-BDGT-UNIT.OG-MDCL-EXP-AMT +             H2-ELG-BDGT-UNIT.OTH-MDCL-EXP-AMT; /* q16*/
            AME48W.WS-S-MEDX-AMT = AME48W.WS-S-MEDX-AMT +             H2-ELG-BDGT-UNIT.OG-MDCL-EXP-AMT +             H2-ELG-BDGT-UNIT.OTH-MDCL-EXP-AMT;

          end /* MDCL-EXP*/

          if (H2-ELG-BDGT-UNIT.TOT-INCM-AMT > 0)

            AME48W1.WS-CASE-W-INC-CNT = AME48W1.WS-CASE-W-INC-CNT + 1; /* q19*/
            AME48W.WS-S-CASE-W-INC-CNT = AME48W.WS-S-CASE-W-INC-CNT + 1;

            AME48W1.WS-TOT-GRS-INC = AME48W1.WS-TOT-GRS-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT; /* q21-inc*/
            AME48W.WS-S-TOT-GRS-INC = AME48W.WS-S-TOT-GRS-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT;

  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/
  /* THE REQUIREMENTS FOR PUBLIC ASSISTANCE HAVE CHANGED.  NOW, ONLY 'P',*/
  /* 'S', 'A', 'G' SHOULD BE INCLUDED AS 'PA' STATUS.  ALL OTHERS SHOULD*/
  /* BE INCLUDED AS 'NA' STATUS, PER FNS-388.  "IF AT LEAST ONE MEMBER*/
  /* OF THE HOUSEHOLD DOES NOT RECEIVE INCOME OR A BENEFIT FROM TANF,*/
  /* SSI, OR GA, IT IS A NA HOUSEHOLD."*/
  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/

            if (H2-2-EVR-FCH.FS-SUFX == "P"
             || H2-2-EVR-FCH.FS-SUFX == "S"
             || H2-2-EVR-FCH.FS-SUFX == "A"
             || H2-2-EVR-FCH.FS-SUFX == "G")

              AME48W1.WS-Q22-PA-CNT = AME48W1.WS-Q22-PA-CNT + 1; /* q22-pa*/
              AME48W.WS-S-Q22-PA-CNT = AME48W.WS-S-Q22-PA-CNT + 1;

              AME48W1.WS-TOT-PA-INC = AME48W1.WS-TOT-PA-INC +               H2-ELG-BDGT-UNIT.TOT-INCM-AMT;
              AME48W.WS-S-TOT-PA-INC = AME48W.WS-S-TOT-PA-INC +               H2-ELG-BDGT-UNIT.TOT-INCM-AMT;

            else
              AME48W1.WS-Q22-NA-CNT = AME48W1.WS-Q22-NA-CNT + 1; /* q22-na*/
              AME48W.WS-S-Q22-NA-CNT = AME48W.WS-S-Q22-NA-CNT + 1;

              AME48W1.WS-TOT-NA-INC = AME48W1.WS-TOT-NA-INC +               H2-ELG-BDGT-UNIT.TOT-INCM-AMT;
              AME48W.WS-S-TOT-NA-INC = AME48W.WS-S-TOT-NA-INC +               H2-ELG-BDGT-UNIT.TOT-INCM-AMT;
            end /* FS-SUFX*/

          end /* IF TOT-INCM-AMT > 0*/

          if (H2-ELG-BDGT-UNIT.GRS-EARND-INCM-AMT > 0) /* q20*/
            AME48W1.WS-CASE-ER-INC-CNT = AME48W1.WS-CASE-ER-INC-CNT + 1;
            AME48W.WS-S-CASE-ER-INC-CNT = AME48W.WS-S-CASE-ER-INC-CNT + 1;

            AME48W1.WS-TOT-ER-INC = AME48W1.WS-TOT-ER-INC +             H2-ELG-BDGT-UNIT.GRS-EARND-INCM-AMT; /* q24*/
            AME48W.WS-S-TOT-ER-INC = AME48W.WS-S-TOT-ER-INC +             H2-ELG-BDGT-UNIT.GRS-EARND-INCM-AMT;
          end /* IF EARNED INC*/

          if (H2-ELG-BDGT-UNIT.AFDC-BNFT-AMT > 0) /* q20b,q24b*/
            AME48W1.WS-UNIN-TANF-CNT = AME48W1.WS-UNIN-TANF-CNT + 1;
            AME48W.WS-S-UNIN-TANF-CNT = AME48W.WS-S-UNIN-TANF-CNT + 1;

            AME48W1.WS-UNIN-TANF-TOT = AME48W1.WS-UNIN-TANF-TOT +             H2-ELG-BDGT-UNIT.AFDC-BNFT-AMT; /* q24b*/
            AME48W.WS-S-UNIN-TANF-TOT = AME48W.WS-S-UNIN-TANF-TOT +             H2-ELG-BDGT-UNIT.AFDC-BNFT-AMT; /* q24b*/

          end /* IF AFDC*/

  /* need test for tanf flag so case count for unearned income is*/
  /* counted only once when both tanf and unin exist in elg_bdgt_unit*/
          if (H2-ELG-BDGT-UNIT.UERND-INCM-AMT > 0
           || H2-ELG-BDGT-UNIT.AFDC-BNFT-AMT > 0
           || AME48W1.WS-GAGA-INC-FG == "Y"
           || AME48W1.WS-EDIN-INC-FG == "Y") /* q20, q24*/
            AME48W1.WS-CASE-UNIN-INC-CNT = AME48W1.WS-CASE-UNIN-INC-CNT + 1;
            AME48W.WS-S-CASE-UNIN-INC-CNT = AME48W.WS-S-CASE-UNIN-INC-CNT + 1;
          end /* IF UNIN, TANF, GAGA, EDIN,*/

          if (H2-ELG-BDGT-UNIT.UERND-INCM-AMT > 0)
            AME48W1.WS-TOT-UNIN-INC = AME48W1.WS-TOT-UNIN-INC +             H2-ELG-BDGT-UNIT.UERND-INCM-AMT; /* q24*/
            AME48W.WS-S-TOT-UNIN-INC = AME48W.WS-S-TOT-UNIN-INC +             H2-ELG-BDGT-UNIT.UERND-INCM-AMT;
          end /* IF UNIN*/

  /* q25 start*/
          if (H2-ELG-BDGT-UNIT.RENT-EXP-AMT > 0)

            AME48W1.WS-TOT-RM-AMT = AME48W1.WS-TOT-RM-AMT + H2-ELG-BDGT-UNIT.RENT-EXP-AMT;
            AME48W.WS-S-TOT-RM-AMT = AME48W.WS-S-TOT-RM-AMT + H2-ELG-BDGT-UNIT.RENT-EXP-AMT;

          end

          if (H2-ELG-BDGT-UNIT.HOME-EXP-AMT > 0)

            AME48W1.WS-TOT-RM-AMT = AME48W1.WS-TOT-RM-AMT + H2-ELG-BDGT-UNIT.HOME-EXP-AMT;
            AME48W.WS-S-TOT-RM-AMT = AME48W.WS-S-TOT-RM-AMT + H2-ELG-BDGT-UNIT.HOME-EXP-AMT;

          end

          if (H2-ELG-BDGT-UNIT.RENT-EXP-AMT > 0
           || H2-ELG-BDGT-UNIT.HOME-EXP-AMT > 0)
            AME48W1.WS-CASE-R-M-CNT = AME48W1.WS-CASE-R-M-CNT + 1;
            AME48W.WS-S-CASE-R-M-CNT = AME48W.WS-S-CASE-R-M-CNT + 1;
          end

  /* q25 end*/

          if (H2-ELG-BDGT-UNIT.DPNDT-CRE-EXP-AMT > 0)
            AME48W1.WS-DEP-CNT = AME48W1.WS-DEP-CNT + 1; /* q28*/
            AME48W.WS-S-DEP-CNT = AME48W.WS-S-DEP-CNT + 1;

            AME48W1.WS-TOT-DCEX-AMT = AME48W1.WS-TOT-DCEX-AMT +             H2-ELG-BDGT-UNIT.DPNDT-CRE-EXP-AMT; /* q29*/
            AME48W.WS-S-TOT-DCEX-AMT = AME48W.WS-S-TOT-DCEX-AMT +             H2-ELG-BDGT-UNIT.DPNDT-CRE-EXP-AMT;
          end

          if (H2-ELG-BDGT-UNIT.UTIL-EXP-AMT > 0)
            AME48W1.WS-CASE-UTIL-CNT = AME48W1.WS-CASE-UTIL-CNT + 1; /* q30*/
            AME48W.WS-S-CASE-UTIL-CNT = AME48W.WS-S-CASE-UTIL-CNT + 1;

            AME48W1.WS-TOT-UTIL-AMT = AME48W1.WS-TOT-UTIL-AMT +             H2-ELG-BDGT-UNIT.UTIL-EXP-AMT; /* q31*/
            AME48W.WS-S-TOT-UTIL-AMT = AME48W.WS-S-TOT-UTIL-AMT +             H2-ELG-BDGT-UNIT.UTIL-EXP-AMT;
          end

          AME48W1.WS-TOT-SHEL = AME48W1.WS-TOT-SHEL +           H2-ELG-BDGT-UNIT.RENT-EXP-AMT +           H2-ELG-BDGT-UNIT.HOME-EXP-AMT +           H2-ELG-BDGT-UNIT.UTIL-EXP-AMT; /* q32*/
          AME48W.WS-S-TOT-SHEL = AME48W.WS-S-TOT-SHEL +           H2-ELG-BDGT-UNIT.RENT-EXP-AMT +           H2-ELG-BDGT-UNIT.HOME-EXP-AMT +           H2-ELG-BDGT-UNIT.UTIL-EXP-AMT; /* q32*/

          AME48W1.WS-RE-HM-UT = (H2-ELG-BDGT-UNIT.RENT-EXP-AMT +           H2-ELG-BDGT-UNIT.HOME-EXP-AMT +           H2-ELG-BDGT-UNIT.UTIL-EXP-AMT); /* q32, q33*/

          if (AME48W1.WS-RE-HM-UT > 0) /* q32*/
            AME48W1.WS-CSE-W-SL = AME48W1.WS-CSE-W-SL + 1;
            AME48W.WS-S-CSE-W-SL = AME48W.WS-S-CSE-W-SL + 1;
          end

  /* q33a cases with no shelter or no utilities*/
          if (AME48W1.WS-RE-HM-UT == 0)
            AME48W1.WS-CSE-NO-SL = AME48W1.WS-CSE-NO-SL + 1;
            AME48W.WS-S-CSE-NO-SL = AME48W.WS-S-CSE-NO-SL + 1;
          end

          AME48W1.WS-ALL-AMT = (H2-ELG-BDGT-UNIT.DPNDT-CRE-EXP-AMT +           H2-ELG-BDGT-UNIT.UTIL-EXP-AMT +           H2-ELG-BDGT-UNIT.RENT-EXP-AMT +           H2-ELG-BDGT-UNIT.HOME-EXP-AMT +           H2-ELG-BDGT-UNIT.OG-MDCL-EXP-AMT +           H2-ELG-BDGT-UNIT.OTH-MDCL-EXP-AMT);

          if (AME48W1.WS-ALL-AMT > 0) /* q33b cases with any expenses*/
            AME48W1.WS-CASE-ANY-EXP = AME48W1.WS-CASE-ANY-EXP + 1;
            AME48W.WS-S-CASE-ANY-EXP = AME48W.WS-S-CASE-ANY-EXP + 1;
          end

          if ((AME48W1.WS-AGED-CNT > 0 || 
          AME48W1.WS-DSBLD-CNT > 0) && 
          H2-ELG-BDGT-UNIT.TOT-INCM-AMT > 0)
            AME48W1.WS-TOT-DIS-INC = AME48W1.WS-TOT-DIS-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT; /* q23*/
            AME48W.WS-S-TOT-DIS-INC = AME48W.WS-S-TOT-DIS-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT;

            AME48W1.WS-DIS-INC-CNT = AME48W1.WS-DIS-INC-CNT + 1;
            AME48W.WS-S-DIS-INC-CNT = AME48W.WS-S-DIS-INC-CNT + 1;
          end

          if ((AME48W1.WS-AGED-CNT > 0 || 
          AME48W1.WS-DSBLD-CNT > 0))
            AME48W1.WS-TOT-DSA-INC = AME48W1.WS-TOT-DSA-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT; /* q23*/
            AME48W.WS-S-TOT-DSA-INC = AME48W.WS-S-TOT-DSA-INC +             H2-ELG-BDGT-UNIT.TOT-INCM-AMT;

            AME48W1.WS-DIS-ALL-CNT = AME48W1.WS-DIS-ALL-CNT + 1;
            AME48W.WS-S-DIS-ALL-CNT = AME48W.WS-S-DIS-ALL-CNT + 1;
          end

        end /* IF EZE   H2-ELG-BDGT-UNIT*/

    /* end q19,q20-er,to get q21,to get q32,q33,*/
    /* to get (q22-a,q22-mixed,q22-na,q23-avg-dis-inc-inc,*/
    /* q23-avg-dis-all-inc,q24-income-type-er)*/

  /* start to get (q43,q45)*/

        H2-FAM-ACTNS.ICI = H2-2-FAC-PSY.ICI;
        AME48W1.WS-APL-DT = H2-2-FAC-PSY.RCRT-APL-DT; /* 08/06/02*/
        AME48W1.WS-APL-DEC = "-00.00.00.000000"; /* 08/06/02*/
        AME48Q31-S31();

        if (sysVar.sqlData.sqlcode == 0)
          AME48W1.WS-AP-TS = H2-FAM-ACTNS.ACTN-TS;

          set P-DATE-REC3 empty;
          AME48P9-DATE-DIFFA();

          AME48W1.WS-ICI-A-CNT = AME48W1.WS-ICI-A-CNT + 1; /* q43*/
          AME48W.WS-S-ICI-A-CNT = AME48W.WS-S-ICI-A-CNT + 1; /* q43*/

          AME48W1.WS-ICI-AD-CNT = AME48W1.WS-ICI-AD-CNT + 1; /* q45*/
          AME48W.WS-S-ICI-AD-CNT = AME48W.WS-S-ICI-AD-CNT + 1; /* q45*/
        end

  /* end to get (q43,q45)*/

  /* start q18*/
        AME48W1.WS-AR-COUNT = 0;
        H2-FAM-AUTH-FACLTY.ICI = H2-2-FAC-PSY.ICI;
        H2-FAM-AUTH-FACLTY.EFF-FR-DT = AME48W.WS-RPT-END-DT;
        H2-FAM-AUTH-FACLTY.EFF-TO-DT = AME48W.WS-RPT-BEG-DT;

        AME48Q15-S15();

        if (sysVar.sqlData.sqlcode == 0)
          if (AME48W1.WS-AR-COUNT > 0)
            AME48W1.WS-AR-CSE-CT = AME48W1.WS-AR-CSE-CT + 1;
            AME48W.WS-S-AR-CSE-CT = AME48W.WS-S-AR-CSE-CT + 1;
          end
        end
  /* end q18*/

      end /* IF S02-P2 ELIG_VERS*/

      AME48Q2-S02-SCANP1(); /* SCAN S02*/

    end /* WHILE RECS*/
  end /* IF S02 (MAIN)*/

  /* start q44, q45*/

  set H2-2-FAA-FAC empty;
  H2-2-FAA-FAC.OFC-CD = H2-OFFICE.OFC-CD;

  AME48Q25-S25(); /* GET ALL DENIED (FIRST ACTION) CASES*/
  if (sysVar.sqlData.sqlcode == 0)
    AME48Q25-S25-SCAN();

    while (sysVar.sqlData.sqlcode == 0) /* WHILE REC'S FOR THE OFC*/
      set H3-FAM-ACTNS empty;
      H3-FAM-ACTNS.ICI = H2-2-FAA-FAC.ICI;
      AME48W1.WS-DN-MIN-TS = H2-2-FAA-FAC.ACTN-TS;

      AME48Q32-S32();

      if (sysVar.sqlData.sqlcode == 0)

        AME48W1.WS-DN-PREV-TS = H3-FAM-ACTNS.ACTN-TS;

        set P-DATE-REC3 empty;
        AME48P9-DATE-DIFFD();
        AME48W1.WS-ICI-D-CNT = AME48W1.WS-ICI-D-CNT + 1; /* q44 denials*/
        AME48W.WS-S-ICI-D-CNT = AME48W.WS-S-ICI-D-CNT + 1; /* q44*/

        AME48W1.WS-ICI-AD-CNT = AME48W1.WS-ICI-AD-CNT + 1; /* q45 all cases*/
        AME48W.WS-S-ICI-AD-CNT = AME48W.WS-S-ICI-AD-CNT + 1; /* q45*/

      end /* IF S32 EZE=0*/

      AME48W1.WS-DN-PREV-TS = " ";
      AME48W1.WS-DN-MIN-TS = " ";

      AME48Q25-S25-SCAN();

    end /* WHILE S25*/
  end /* IF S25*/

  /* end q44, q45*/
  /* cbsi end*/
  /*  */
end // end AME48P9-APPLSPEC


// TO FIND BEG AND END DT
Function AME48P9-BEG-END-DT()
  /* cbsi start*/

  /* ******************** WI 20799:WNMLS:2002-03-15 *************************/
  /* THIS REPORT IS NOW TO BE PRODUCED ON A MONTHLY BASIS, SO THE FOLLOWING*/
  /* CODE IS REM'D OUT.  THE REPORT WILL RUN AFTER CLOSING ON THE LAST DAY*/
  /* OF THE MONTH.  THE DATA SELECTED WILL BE FOR THE REPORT MONTH.*/
  /* NOTE THAT THE EXISTING CODE IS INCORRECT FOR A QUARTERLY REPORT.*/
  /* ************************************************************************/
  /*  */
  /* IF AME48W.WS-MM-1 = 1;*/
  /* MOVE 10 TO AME48W.WS-RPT-ST-MM;*/
  /* AME48W.WS-RPT-ST-YYYY = AME48W.WS-YYYY-1 - 1;*/
  /* ELSE;*/
  /* IF AME48W.WS-MM-1 = 2;*/
  /* MOVE 11 TO AME48W.WS-RPT-ST-MM;*/
  /* AME48W.WS-RPT-ST-YYYY = AME48W.WS-YYYY-1 - 1;*/
  /* ELSE;*/
  /* IF AME48W.WS-MM-1 = 3;*/
  /* MOVE 12 TO AME48W.WS-RPT-ST-MM;*/
  /* AME48W.WS-RPT-ST-YYYY = AME48W.WS-YYYY-1 - 1;*/
  /* ELSE;*/
  /* AME48W.WS-RPT-ST-MM = AME48W.WS-MM-1 - 2;*/
  /* MOVE AME48W.WS-YYYY-1 TO AME48W.WS-RPT-ST-YYYY;*/
  /* END;*/
  /* END;*/
  /* END;*/

  AME48W.WS-RPT-ST-MM = AME48W.WS-MM-1; /* WI 20799*/
  AME48W.WS-RPT-ST-YYYY = AME48W.WS-YYYY-1; /* WI 20799*/

  AME48W.WS-RPT-ST-DD = 01;
  AME48W.WS-RPT-BEG-MM = AME48W.WS-RPT-ST-MM;
  AME48W.WS-RPT-BEG-DD = AME48W.WS-RPT-ST-DD;
  AME48W.WS-RPT-BEG-YYYY = AME48W.WS-RPT-ST-YYYY;

  AME48W.WS-FILLER1 = "-";
  AME48W.WS-FILLER2 = "-";
  AME48W.WS-RPT-ST-FILLER1 = "-";
  AME48W.WS-RPT-ST-FILLER2 = "-";

  /* date should be end date of the fiscal quarter*/
  AME48W.WS-RPT-END-MM = AME48W.WS-RPT-MONTH;
  AME48W.WS-RPT-END-DD = AME48W.WS-RPT-DAY;
  AME48W.WS-RPT-END-YYYY = AME48W.WS-RPT-YEAR;

  AME48W.WS-FILLER3 = "-";
  AME48W.WS-FILLER4 = "-";

  /* Checking for end date of the fiscal quarter*/
  if (AME48W.WS-RPT-END-DT != AME48W.WS-END-DT)
  /* -------------------PTR 11838 BEGIN-----------------------------*/
  /* for invalid input parameter CALL CEP01A with 'invalid input message'*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AME48W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AME48W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0050E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  /* -------------------PTR 11838 END ------------------------------*/
  end

  AME48W.WS-RPT-ED-MM = AME48W.WS-RPT-END-MM;
  AME48W.WS-RPT-ED-DD = AME48W.WS-RPT-END-DD;
  AME48W.WS-RPT-ED-YYYY = AME48W.WS-RPT-END-YYYY;

  AME48W.WS-FILLER21 = "-";
  AME48W.WS-FILLER22 = "-";

  /* cbsi end*/
end // end AME48P9-BEG-END-DT


// CALC OFC AVERAGES
Function AME48P9-CALC-AVGS()
  /* cbsi start*/

  /* q06 start*/
  if (AME48W1.WS-HH-TOT != 0)
    AME48W1.WS-AVG-HH = mathLib.round(AME48W1.WS-ELIG-NUM-TOT / AME48W1.WS-HH-TOT, -mathLib.decimals(AME48W1.WS-AVG-HH));
  end
  /* q06 end*/

  /* q16 start*/
  if (AME48W1.WS-CASE-MEDX-CNT != 0)
    AME48W1.WS-AVG-MEDX = mathLib.round(AME48W1.WS-MEDX-AMT / AME48W1.WS-CASE-MEDX-CNT, -mathLib.decimals(AME48W1.WS-AVG-MEDX));
  end
  /* q16 end*/

  /* q21 start*/
  /* WS-CASE-W-INC-CNT IS A COUNT OF CASES WITH INCOME FROM q19*/
  if (AME48W1.WS-CASE-W-INC-CNT != 0)
    AME48W1.WS-AVG-GRS-INC = mathLib.round(AME48W1.WS-TOT-GRS-INC / AME48W1.WS-CASE-W-INC-CNT, -mathLib.decimals(AME48W1.WS-AVG-GRS-INC));
  end
  /* q21 end*/

  /* q22 start*/
  /* pa/na with income*/
  if (AME48W1.WS-Q22-PA-CNT != 0)
    AME48W1.WS-AVG-Q22-PA = mathLib.round(AME48W1.WS-TOT-PA-INC / AME48W1.WS-Q22-PA-CNT, -mathLib.decimals(AME48W1.WS-AVG-Q22-PA));
  end

  if (AME48W1.WS-Q22-NA-CNT != 0)
    AME48W1.WS-AVG-Q22-NA = mathLib.round(AME48W1.WS-TOT-NA-INC / AME48W1.WS-Q22-NA-CNT, -mathLib.decimals(AME48W1.WS-AVG-Q22-NA));
  end

  /* pa/na all*/
  if (AME48W1.WS-Q04-PA-CNT != 0)
    AME48W1.WS-AVG-ALL-PA = mathLib.round(AME48W1.WS-TOT-PA-INC / AME48W1.WS-Q04-PA-CNT, -mathLib.decimals(AME48W1.WS-AVG-ALL-PA));
  end

  if (AME48W1.WS-Q04-NA-CNT != 0)
    AME48W1.WS-AVG-ALL-NA = mathLib.round(AME48W1.WS-TOT-NA-INC / AME48W1.WS-Q04-NA-CNT, -mathLib.decimals(AME48W1.WS-AVG-ALL-NA));
  end
  /* q22 end*/

  /* q23 start*/
  if (AME48W1.WS-DIS-INC-CNT != 0)
    AME48W1.WS-AVG-DIS-INC = mathLib.round(AME48W1.WS-TOT-DIS-INC / AME48W1.WS-DIS-INC-CNT, -mathLib.decimals(AME48W1.WS-AVG-DIS-INC));
  end

  if (AME48W1.WS-DIS-ALL-CNT != 0)
    AME48W1.WS-AVG-DSA-INC = mathLib.round(AME48W1.WS-TOT-DSA-INC /     AME48W1.WS-DIS-ALL-CNT, -mathLib.decimals(AME48W1.WS-AVG-DSA-INC));
  end
  /* q23 end*/

  /* q24 start*/
  /* WS-CASE-ER-INC-CNT IS A COUNT OF CASES WITH EARNED INCOME FROM q20*/
  if (AME48W1.WS-CASE-ER-INC-CNT != 0)
    AME48W1.WS-AVG-ER-INC = mathLib.round(AME48W1.WS-TOT-ER-INC / AME48W1.WS-CASE-ER-INC-CNT, -mathLib.decimals(AME48W1.WS-AVG-ER-INC));
  end

  /* WS-CASE-UNIN-INC-CNT IS A COUNT OF CASES WITH UNEARNED INCOME FROM q20*/
  if (AME48W1.WS-CASE-UNIN-INC-CNT != 0)
    AME48W1.WS-AVG-UNIN-INC = mathLib.round(AME48W1.WS-TOT-UNIN-INC / AME48W1.WS-CASE-UNIN-INC-CNT, -mathLib.decimals(AME48W1.WS-AVG-UNIN-INC));
  end

  if (AME48W1.WS-UNIN-GAGA-CNT != 0)
    AME48W1.WS-UNIN-GAGA-AVG = mathLib.round(AME48W1.WS-UNIN-GAGA-TOT / AME48W1.WS-UNIN-GAGA-CNT, -mathLib.decimals(AME48W1.WS-UNIN-GAGA-AVG));
  end

  if (AME48W1.WS-UNIN-TANF-CNT != 0)
    AME48W1.WS-UNIN-TANF-AVG = mathLib.round(AME48W1.WS-UNIN-TANF-TOT / AME48W1.WS-UNIN-TANF-CNT, -mathLib.decimals(AME48W1.WS-UNIN-TANF-AVG));
  end

  if (AME48W1.WS-UNIN-EDIN-CNT != 0)
    AME48W1.WS-UNIN-EDIN-AVG = mathLib.round(AME48W1.WS-UNIN-EDIN-TOT / AME48W1.WS-UNIN-EDIN-CNT, -mathLib.decimals(AME48W1.WS-UNIN-EDIN-AVG));
  end
  /* q24 end*/

  /* q25 start*/
  if (AME48W1.WS-CASE-R-M-CNT != 0)
    AME48W1.WS-AVG-RM-AMT = mathLib.round(AME48W1.WS-TOT-RM-AMT /     AME48W1.WS-CASE-R-M-CNT, -mathLib.decimals(AME48W1.WS-AVG-RM-AMT));
  end
  /* q25 end*/

  /* q29 start*/
  if (AME48W1.WS-DEP-CNT != 0)
    AME48W1.WS-AVG-DCEX-AMT = mathLib.round(AME48W1.WS-TOT-DCEX-AMT /     AME48W1.WS-DEP-CNT, -mathLib.decimals(AME48W1.WS-AVG-DCEX-AMT));
  end
  /* q29 end*/

  /* q31 start*/
  if (AME48W1.WS-CASE-UTIL-CNT != 0)
    AME48W1.WS-AVG-UTIL-AMT = mathLib.round(AME48W1.WS-TOT-UTIL-AMT /     AME48W1.WS-CASE-UTIL-CNT, -mathLib.decimals(AME48W1.WS-AVG-UTIL-AMT));
  end
  /* q31 end*/

  /* q32 start*/
  if (AME48W1.WS-CSE-W-SL != 0)
    AME48W1.WS-AVG-SHEL = mathLib.round(AME48W1.WS-TOT-SHEL / AME48W1.WS-CSE-W-SL, -mathLib.decimals(AME48W1.WS-AVG-SHEL));
  end
  /* q32 end*/

  /* q34 start*/
  if (AME48W1.WS-BNFT-CNT != 0)
    AME48W1.WS-AVG-BNFT-AMT = mathLib.round(AME48W1.WS-TOT-BNFT / AME48W1.WS-BNFT-CNT, -mathLib.decimals(AME48W1.WS-AVG-BNFT-AMT));
  end

  if (AME48W1.WS-Q04-PA-CNT != 0)
    AME48W1.WS-PA-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-PA-BNFT /     AME48W1.WS-Q04-PA-CNT, -mathLib.decimals(AME48W1.WS-PA-AVG-BNFT));
  end

  if (AME48W1.WS-Q04-NA-CNT != 0)
    AME48W1.WS-NA-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-NA-BNFT /     AME48W1.WS-Q04-NA-CNT, -mathLib.decimals(AME48W1.WS-NA-AVG-BNFT));
  end
  /* q34 end*/

  /* q35 start*/
  if (AME48W1.WS-HH-1 != 0)
    AME48W1.WS-HH1-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH1 / AME48W1.WS-HH-1, -mathLib.decimals(AME48W1.WS-HH1-AVG-BNFT));
  end

  if (AME48W1.WS-HH-2 != 0)
    AME48W1.WS-HH2-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH2 / AME48W1.WS-HH-2, -mathLib.decimals(AME48W1.WS-HH2-AVG-BNFT));
  end

  if (AME48W1.WS-HH-3 != 0)
    AME48W1.WS-HH3-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH3 / AME48W1.WS-HH-3, -mathLib.decimals(AME48W1.WS-HH3-AVG-BNFT));
  end

  if (AME48W1.WS-HH-4 != 0)
    AME48W1.WS-HH4-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH4 / AME48W1.WS-HH-4, -mathLib.decimals(AME48W1.WS-HH4-AVG-BNFT));
  end

  if (AME48W1.WS-HH-5 != 0)
    AME48W1.WS-HH5-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH5 / AME48W1.WS-HH-5, -mathLib.decimals(AME48W1.WS-HH5-AVG-BNFT));
  end

  if (AME48W1.WS-HH-6 != 0)
    AME48W1.WS-HH6-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH6 / AME48W1.WS-HH-6, -mathLib.decimals(AME48W1.WS-HH6-AVG-BNFT));
  end

  if (AME48W1.WS-HH-7 != 0)
    AME48W1.WS-HH7-AVG-BNFT = mathLib.round(AME48W1.WS-TOT-HH7 / AME48W1.WS-HH-7, -mathLib.decimals(AME48W1.WS-HH7-AVG-BNFT));
  end
  /* q35 end*/

  /* start q36*/
  AME48W1.WS-TOT-QDET-FREQ = (   AME48W1.WS-1-MO + AME48W1.WS-2-MO +   AME48W1.WS-3-MO + AME48W1.WS-4-MO +   AME48W1.WS-5-MO + AME48W1.WS-6-MO +   AME48W1.WS-7-MO + AME48W1.WS-8-MO +   AME48W1.WS-9-MO + AME48W1.WS-10-MO +   AME48W1.WS-11-MO + AME48W1.WS-12-MO +   AME48W1.WS-24-MO);
  AME48W1.WS-SUM-QDET-FREQ = ((AME48W1.WS-1-MO * 1) + (AME48W1.WS-2-MO * 2) +   (AME48W1.WS-3-MO * 3) + (AME48W1.WS-4-MO * 4) +   (AME48W1.WS-5-MO * 5) + (AME48W1.WS-6-MO * 6) +   (AME48W1.WS-7-MO * 7) + (AME48W1.WS-8-MO * 8) +   (AME48W1.WS-9-MO * 9) + (AME48W1.WS-10-MO * 10) +   (AME48W1.WS-11-MO * 11) + (AME48W1.WS-12-MO * 12) +   (AME48W1.WS-24-MO * 24));

  if (AME48W1.WS-TOT-QDET-FREQ != 0)
    AME48W1.WS-AVG-CERT = mathLib.round(AME48W1.WS-SUM-QDET-FREQ / AME48W1.WS-TOT-QDET-FREQ, -mathLib.decimals(AME48W1.WS-AVG-CERT));
  end
  /* end q36*/

  /* q40 start*/
  if (AME48W1.WS-ICI-C-CNT != 0)
    AME48W1.WS-AVGCERT-TM = mathLib.round(AME48W1.WS-DFF-C-DAYS / AME48W1.WS-ICI-C-CNT, -mathLib.decimals(AME48W1.WS-AVGCERT-TM));
  end
  /* q40 end*/

  /* q43 start*/
  if (AME48W1.WS-ICI-A-CNT != 0)
    AME48W1.WS-AVGAPR-TM = mathLib.round(AME48W1.WS-DFF-A-DAYS / AME48W1.WS-ICI-A-CNT, -mathLib.decimals(AME48W1.WS-AVGAPR-TM));
  end
  /* q43 end*/

  /* q44 start*/
  if (AME48W1.WS-ICI-D-CNT != 0)
    AME48W1.WS-AVGDNL-TM = mathLib.round(AME48W1.WS-DFF-D-DAYS / AME48W1.WS-ICI-D-CNT, -mathLib.decimals(AME48W1.WS-AVGDNL-TM));
  end
  /* q44 end*/

  /* q45 start*/
  if (AME48W1.WS-ICI-AD-CNT != 0)
    AME48W1.WS-AVGAPP-TM = mathLib.round(AME48W1.WS-DFF-DAYS / AME48W1.WS-ICI-AD-CNT, -mathLib.decimals(AME48W1.WS-AVGAPP-TM));
  end
  /* q45 end*/
  /*  */
  /* cbsi end*/
end // end AME48P9-CALC-AVGS


// CALC GAGA (UNIN) EXPENSE
Function AME48P9-CALC-GAGA()
  /*  */
  /* PRO-RATE GAGA INCOME*/
  /*  */

  set VDBCONTROL empty;
  set H2-GEN-ASST-INC-DT empty;

  /* THE SOURCE FOR H2-2-CMH-PER.UPI IS AME48P9-PROC-DSC3*/
  H2-GEN-ASST-INC-DT.UPI = H2-2-CMH-PER.UPI;

  AME48Q29-S29(); /* GET GAGA INCOME*/

  if (sysVar.sqlData.sqlcode == 0)
    AME48Q29-S29-SCAN();

    while (sysVar.sqlData.sqlcode == 0)
      if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "A") /* ANNUAL*/
        AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT / 12;
      else
        if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "B") /* BI-WEEKLY*/
          AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT / 2.15;
        else
          if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "M") /* MONTHLY*/
            AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT;
          else
            if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "Q") /* QUARTERLY*/
              AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT / 3;
            else
              if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "S") /* SEMI MTHLY*/
                AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT * 2;
              else
                if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "T") /* TWICE ANNLY*/
                  AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT / 6;
                else
                  if (H2-GEN-ASST-INC-DT.GEN-ASIST-FREQ == "W") /* WEEKLY*/
                    AME48W1.WS-MTH-GAGA-AMT = H2-GEN-ASST-INC-DT.GEN-ASIST-INC-AMT * 4.33;
                  end /* WEEKLY*/
                end /* TWICE ANNUALLY*/
              end /* SEMI MONTHLY*/
            end /* QUARTERLY*/
          end /* MONTHLY*/
        end /* BI-WEEKLY*/
      end /* ANNUAL*/

      if (AME48W1.WS-MTH-GAGA-AMT > 0)
        AME48W1.WS-GAGA-INC-FG = "Y";

        AME48W1.WS-UNIN-GAGA-CNT = AME48W1.WS-UNIN-GAGA-CNT + 1;
        AME48W.WS-S-UNIN-GAGA-CNT = AME48W.WS-S-UNIN-GAGA-CNT + 1;

        AME48W1.WS-UNIN-GAGA-TOT = AME48W1.WS-UNIN-GAGA-TOT +         AME48W1.WS-MTH-GAGA-AMT;
        AME48W.WS-S-UNIN-GAGA-TOT = AME48W.WS-S-UNIN-GAGA-TOT +         AME48W1.WS-MTH-GAGA-AMT;

      end /* IF AMT > 0*/

      AME48Q29-S29-SCAN();

      AME48W1.WS-MTH-GAGA-AMT = 0;

    end /* WHILE*/


  end /* IF*/
end // end AME48P9-CALC-GAGA


// CALC STATEWIDE AVERAGES
Function AME48P9-CALC-S-AVG()
  /* cbsi start*/

  /* q06 start*/
  if (AME48W.WS-S-HH-TOT != 0)
    AME48W.WS-S-AVG-HH = mathLib.round(AME48W.WS-S-ELIG-NUM-TOT / AME48W.WS-S-HH-TOT, -mathLib.decimals(AME48W.WS-S-AVG-HH));
  end
  /* q06 end*/

  /* q16 start*/
  if (AME48W.WS-S-CASE-MEDX-CNT != 0)
    AME48W.WS-S-AVG-MEDX = mathLib.round(AME48W.WS-S-MEDX-AMT / AME48W.WS-S-CASE-MEDX-CNT, -mathLib.decimals(AME48W.WS-S-AVG-MEDX));
  end
  /* q16 end*/

  /* q21 start*/
  /* WS-S-CASE-W-INC-CNT IS A COUNT OF CASES WITH INCOME FROM q19*/
  if (AME48W.WS-S-CASE-W-INC-CNT != 0)
    AME48W.WS-S-AVG-GRS-INC = mathLib.round(AME48W.WS-S-TOT-GRS-INC / AME48W.WS-S-CASE-W-INC-CNT, -mathLib.decimals(AME48W.WS-S-AVG-GRS-INC));
  end
  /* q21 end*/

  /* q22 start*/
  /* pa/na with income*/
  if (AME48W.WS-S-Q22-PA-CNT != 0)
    AME48W.WS-S-AVG-Q22-PA = mathLib.round(AME48W.WS-S-TOT-PA-INC / AME48W.WS-S-Q22-PA-CNT, -mathLib.decimals(AME48W.WS-S-AVG-Q22-PA));
  end

  if (AME48W.WS-S-Q22-NA-CNT != 0)
    AME48W.WS-S-AVG-Q22-NA = mathLib.round(AME48W.WS-S-TOT-NA-INC / AME48W.WS-S-Q22-NA-CNT, -mathLib.decimals(AME48W.WS-S-AVG-Q22-NA));
  end

  /* pa/na all*/
  if (AME48W.WS-S-Q04-PA-CNT != 0)
    AME48W.WS-S-AVG-ALL-PA = mathLib.round(AME48W.WS-S-TOT-PA-INC / AME48W.WS-S-Q04-PA-CNT, -mathLib.decimals(AME48W.WS-S-AVG-ALL-PA));
  end

  if (AME48W.WS-S-Q04-NA-CNT != 0)
    AME48W.WS-S-AVG-ALL-NA = mathLib.round(AME48W.WS-S-TOT-NA-INC / AME48W.WS-S-Q04-NA-CNT, -mathLib.decimals(AME48W.WS-S-AVG-ALL-NA));
  end
  /* q22 end*/

  /* q23 start*/
  if (AME48W.WS-S-DIS-INC-CNT != 0)
    AME48W.WS-S-AVG-DIS-INC = mathLib.round(AME48W.WS-S-TOT-DIS-INC / AME48W.WS-S-DIS-INC-CNT, -mathLib.decimals(AME48W.WS-S-AVG-DIS-INC));
  end

  if (AME48W.WS-S-DIS-ALL-CNT != 0)
    AME48W.WS-S-AVG-DSA-INC = mathLib.round(AME48W.WS-S-TOT-DSA-INC /     AME48W.WS-S-DIS-ALL-CNT, -mathLib.decimals(AME48W.WS-S-AVG-DSA-INC));
  end
  /* q23 end*/

  /* q24 start*/
  if (AME48W.WS-S-CASE-ER-INC-CNT != 0)
    AME48W.WS-S-AVG-ER-INC = mathLib.round(AME48W.WS-S-TOT-ER-INC / AME48W.WS-S-CASE-ER-INC-CNT, -mathLib.decimals(AME48W.WS-S-AVG-ER-INC));
  end

  if (AME48W.WS-S-CASE-UNIN-INC-CNT != 0)
    AME48W.WS-S-AVG-UNIN-INC = mathLib.round(AME48W.WS-S-TOT-UNIN-INC / AME48W.WS-S-CASE-UNIN-INC-CNT, -mathLib.decimals(AME48W.WS-S-AVG-UNIN-INC));
  end

  if (AME48W.WS-S-UNIN-GAGA-CNT != 0)
    AME48W.WS-S-UNIN-GAGA-AVG = mathLib.round(AME48W.WS-S-UNIN-GAGA-TOT / AME48W.WS-S-UNIN-GAGA-CNT, -mathLib.decimals(AME48W.WS-S-UNIN-GAGA-AVG));
  end

  if (AME48W.WS-S-UNIN-TANF-CNT != 0)
    AME48W.WS-S-UNIN-TANF-AVG = mathLib.round(AME48W.WS-S-UNIN-TANF-TOT / AME48W.WS-S-UNIN-TANF-CNT, -mathLib.decimals(AME48W.WS-S-UNIN-TANF-AVG));
  end

  if (AME48W.WS-S-UNIN-EDIN-CNT != 0)
    AME48W.WS-S-UNIN-EDIN-AVG = mathLib.round(AME48W.WS-S-UNIN-EDIN-TOT / AME48W.WS-S-UNIN-EDIN-CNT, -mathLib.decimals(AME48W.WS-S-UNIN-EDIN-AVG));
  end
  /* q24 end*/

  /* q25 start*/
  if (AME48W.WS-S-CASE-R-M-CNT != 0)
    AME48W.WS-S-AVG-RM-AMT = mathLib.round(AME48W.WS-S-TOT-RM-AMT /     AME48W.WS-S-CASE-R-M-CNT, -mathLib.decimals(AME48W.WS-S-AVG-RM-AMT));
  end
  /* q25 end*/

  /* q29 start*/
  if (AME48W.WS-S-DEP-CNT != 0)
    AME48W.WS-S-AVG-DCEX-AMT = mathLib.round(AME48W.WS-S-TOT-DCEX-AMT /     AME48W.WS-S-DEP-CNT, -mathLib.decimals(AME48W.WS-S-AVG-DCEX-AMT));
  end
  /* q29 end*/

  /* q31 start*/
  if (AME48W.WS-S-CASE-UTIL-CNT != 0)
    AME48W.WS-S-AVG-UTIL-AMT = mathLib.round(AME48W.WS-S-TOT-UTIL-AMT /     AME48W.WS-S-CASE-UTIL-CNT, -mathLib.decimals(AME48W.WS-S-AVG-UTIL-AMT));
  end
  /* q31 end*/

  /* q32 start*/
  if (AME48W.WS-S-CSE-W-SL != 0)
    AME48W.WS-S-AVG-SHEL = mathLib.round(AME48W.WS-S-TOT-SHEL / AME48W.WS-S-CSE-W-SL, -mathLib.decimals(AME48W.WS-S-AVG-SHEL));
  end
  /* q32 end*/

  /* q34 start*/
  if (AME48W.WS-S-BNFT-CNT != 0)
    AME48W.WS-S-AVG-BNFT-AMT = mathLib.round(AME48W.WS-S-TOT-BNFT / AME48W.WS-S-BNFT-CNT, -mathLib.decimals(AME48W.WS-S-AVG-BNFT-AMT));
  end

  if (AME48W.WS-S-Q04-PA-CNT != 0)
    AME48W.WS-S-PA-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-PA-BNFT /     AME48W.WS-S-Q04-PA-CNT, -mathLib.decimals(AME48W.WS-S-PA-AVG-BNFT));
  end

  if (AME48W.WS-S-Q04-NA-CNT != 0)
    AME48W.WS-S-NA-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-NA-BNFT /     AME48W.WS-S-Q04-NA-CNT, -mathLib.decimals(AME48W.WS-S-NA-AVG-BNFT));
  end
  /* q34 end*/


  /* q35 start*/
  if (AME48W.WS-S-HH-1 != 0)
    AME48W.WS-S-HH1-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH1 / AME48W.WS-S-HH-1, -mathLib.decimals(AME48W.WS-S-HH1-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-2 != 0)
    AME48W.WS-S-HH2-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH2 / AME48W.WS-S-HH-2, -mathLib.decimals(AME48W.WS-S-HH2-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-3 != 0)
    AME48W.WS-S-HH3-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH3 / AME48W.WS-S-HH-3, -mathLib.decimals(AME48W.WS-S-HH3-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-4 != 0)
    AME48W.WS-S-HH4-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH4 / AME48W.WS-S-HH-4, -mathLib.decimals(AME48W.WS-S-HH4-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-5 != 0)
    AME48W.WS-S-HH5-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH5 / AME48W.WS-S-HH-5, -mathLib.decimals(AME48W.WS-S-HH5-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-6 != 0)
    AME48W.WS-S-HH6-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH6 / AME48W.WS-S-HH-6, -mathLib.decimals(AME48W.WS-S-HH6-AVG-BNFT));
  end

  if (AME48W.WS-S-HH-7 != 0)
    AME48W.WS-S-HH7-AVG-BNFT = mathLib.round(AME48W.WS-S-TOT-HH7 / AME48W.WS-S-HH-7, -mathLib.decimals(AME48W.WS-S-HH7-AVG-BNFT));
  end
  /* q35 end*/

  /* start q36*/
  AME48W.WS-S-TOT-QDET-FREQ = (   AME48W.WS-S-1-MO + AME48W.WS-S-2-MO +   AME48W.WS-S-3-MO + AME48W.WS-S-4-MO +   AME48W.WS-S-5-MO + AME48W.WS-S-6-MO +   AME48W.WS-S-7-MO + AME48W.WS-S-8-MO +   AME48W.WS-S-9-MO + AME48W.WS-S-10-MO +   AME48W.WS-S-11-MO + AME48W.WS-S-12-MO +   AME48W.WS-S-24-MO);
  AME48W.WS-S-SUM-QDET-FREQ = ((AME48W.WS-S-1-MO * 1) + (AME48W.WS-S-2-MO * 2) +   (AME48W.WS-S-3-MO * 3) + (AME48W.WS-S-4-MO * 4) +   (AME48W.WS-S-5-MO * 5) + (AME48W.WS-S-6-MO * 6) +   (AME48W.WS-S-7-MO * 7) + (AME48W.WS-S-8-MO * 8) +   (AME48W.WS-S-9-MO * 9) + (AME48W.WS-S-10-MO * 10) +   (AME48W.WS-S-11-MO * 11) + (AME48W.WS-S-12-MO * 12) +   (AME48W.WS-S-24-MO * 24));

  if (AME48W.WS-S-TOT-QDET-FREQ != 0)
    AME48W.WS-S-AVG-CERT = mathLib.round(AME48W.WS-S-SUM-QDET-FREQ / AME48W.WS-S-TOT-QDET-FREQ, -mathLib.decimals(AME48W.WS-S-AVG-CERT));
  end
  /* end q36*/

  /* q40 start*/
  if (AME48W.WS-S-ICI-C-CNT != 0)
    AME48W.WS-S-AVGCERT-TM = mathLib.round(AME48W.WS-S-DFF-C-DAYS / AME48W.WS-S-ICI-C-CNT, -mathLib.decimals(AME48W.WS-S-AVGCERT-TM));
  end
  /* q40 end*/

  /* q43 start*/
  if (AME48W.WS-S-ICI-A-CNT != 0)
    AME48W.WS-S-AVGAPR-TM = mathLib.round(AME48W.WS-S-DFF-A-DAYS / AME48W.WS-S-ICI-A-CNT, -mathLib.decimals(AME48W.WS-S-AVGAPR-TM));
  end
  /* q43 end*/

  /* q44 start*/
  if (AME48W.WS-S-ICI-D-CNT != 0)
    AME48W.WS-S-AVGDNL-TM = mathLib.round(AME48W.WS-S-DFF-D-DAYS / AME48W.WS-S-ICI-D-CNT, -mathLib.decimals(AME48W.WS-S-AVGDNL-TM));
  end
  /* q44 end*/

  /* q45 start*/
  if (AME48W.WS-S-ICI-AD-CNT != 0)
    AME48W.WS-S-AVGAPP-TM = mathLib.round(AME48W.WS-S-DFF-DAYS / AME48W.WS-S-ICI-AD-CNT, -mathLib.decimals(AME48W.WS-S-AVGAPP-TM));
  end
  /* q45 end*/
  /*  */
  /* cbsi end*/
end // end AME48P9-CALC-S-AVG


// PROCESS TO CLOSE THE APPL
Function AME48P9-CLOS-PARA()
  /* cbsi start*/
  /* report termination process*/
  exit program;
  /* cbsi end*/
end // end AME48P9-CLOS-PARA


// DIF IN DAYS BET RPT AND DOB DT
Function AME48P9-DATE()
  /* cbsi start*/
  P-DATE-REC3.C-INPUT-DATE = AME48W.WS-RPT-END-DT;
  AME48W.WS-DOB-DT = H2-2-CMH-PER.DOB;
  AME48W.WS-FILLER5 = "-";
  AME48W.WS-FILLER6 = "-";
  AME48W.WS-DOB1-MM = AME48W.WS-DOB-MM;
  AME48W.WS-DOB1-DD = AME48W.WS-DOB-DD;
  AME48W.WS-DOB1-YYYY = AME48W.WS-DOB-YYYY;
  AME48W.WS-FILLER7 = "-";
  AME48W.WS-FILLER8 = "-";
  P-DATE-REC3.C-OUTPUT-DATE = AME48W.WS-DOB1-DT;
  call "DATED1A" (VDBCONTROL, VMESSAGE, P-DATE-REC3);
  AME48W1.WS-DIFF-DAYS = P-DATE-REC3.N-DIFF-DAYS;
  AME48W1.WS-NO-YRS = mathLib.round(AME48W1.WS-DIFF-DAYS / 365, -mathLib.decimals(AME48W1.WS-NO-YRS));
  /* cbsi end*/
end // end AME48P9-DATE


// DAYS BETW APPL DT & APRVD DT
Function AME48P9-DATE-DIFFA()
  /* cbsi start*/
  /* MOVE H2-2-FAC-PSY.PRGM-EFF-DT TO AME48W.WS-PRGM-EFF-DT;*/
  AME48W.WS-PRGM-EFF-DT = AME48W1.WS-AP-DT;
  AME48W.WS-FILLER13 = "-";
  AME48W.WS-FILLER14 = "-";
  AME48W.WS-PRGM-EFF1-MM = AME48W.WS-PRGM-EFF-MM;
  AME48W.WS-PRGM-EFF1-DD = AME48W.WS-PRGM-EFF-DD;
  AME48W.WS-PRGM-EFF1-YYYY = AME48W.WS-PRGM-EFF-YYYY;
  AME48W.WS-FILLER15 = "-";
  AME48W.WS-FILLER16 = "-";
  P-DATE-REC3.C-INPUT-DATE = AME48W.WS-PRGM-EFF1-DT;

  /* MOVE H2-4-EVRFAC-FCHPSY.APPL-DT TO AME48W.WS-APPL-DT;*/
  AME48W.WS-APPL-DT = H2-2-FAC-PSY.RCRT-APL-DT;
  AME48W.WS-FILLER17 = "-";
  AME48W.WS-FILLER18 = "-";
  AME48W.WS-APPL1-MM = AME48W.WS-APPL-MM;
  AME48W.WS-APPL1-DD = AME48W.WS-APPL-DD;
  AME48W.WS-APPL1-YYYY = AME48W.WS-APPL-YYYY;
  AME48W.WS-FILLER19 = "-";
  AME48W.WS-FILLER20 = "-";
  P-DATE-REC3.C-OUTPUT-DATE = AME48W.WS-APPL1-DT;
  call "DATED1A" (VDBCONTROL, VMESSAGE, P-DATE-REC3) {isNoRefresh = yes};
  AME48W1.WS-DFF-A-DAY = P-DATE-REC3.N-DIFF-DAYS;

  /* ************************************************************************/
  /* ONE DAY IS ADDED TO RESULT TO ACCOMODATE SAME-DAY POSTING. IF*/
  /* POSTING OCCURS ON THE APPLICATION DATE, THE RESULT SHOULD BE 1,*/
  /* NOT ZERO; THE RESULT FOR NEXT-DAY POSTING SHOULD BE 2, NOT 1.  ETC.*/
  /* ************************************************************************/

  if (AME48W.WS-PRGM-EFF1-DT < AME48W.WS-APPL1-DT)
    AME48W1.WS-DFF-A-DAY = 1;
  else
    AME48W1.WS-DFF-A-DAY = AME48W1.WS-DFF-A-DAY + 1;
  end

  AME48W1.WS-DFF-A-DAYS = AME48W1.WS-DFF-A-DAYS + AME48W1.WS-DFF-A-DAY;
  AME48W.WS-S-DFF-A-DAYS = AME48W.WS-S-DFF-A-DAYS + AME48W1.WS-DFF-A-DAY;

  AME48W1.WS-DFF-DAYS = AME48W1.WS-DFF-DAYS + AME48W1.WS-DFF-A-DAY; /* q45*/
  AME48W.WS-S-DFF-DAYS = AME48W.WS-S-DFF-DAYS + AME48W1.WS-DFF-A-DAY; /* q45*/
  /* cbsi end*/
end // end AME48P9-DATE-DIFFA


// DAYS BETW APPL DT & DENIED DT
Function AME48P9-DATE-DIFFD()
  /* cbsi start*/
  /* MOVE H2-2-FAC-PSY.PRGM-EFF-DT TO AME48W.WS-PRGM-EFF-DT;*/
  AME48W.WS-PRGM-EFF-DT = AME48W1.WS-DN-MIN-DT;
  AME48W.WS-FILLER13 = "-";
  AME48W.WS-FILLER14 = "-";
  AME48W.WS-PRGM-EFF1-MM = AME48W.WS-PRGM-EFF-MM;
  AME48W.WS-PRGM-EFF1-DD = AME48W.WS-PRGM-EFF-DD;
  AME48W.WS-PRGM-EFF1-YYYY = AME48W.WS-PRGM-EFF-YYYY;
  AME48W.WS-FILLER15 = "-";
  AME48W.WS-FILLER16 = "-";
  P-DATE-REC3.C-INPUT-DATE = AME48W.WS-PRGM-EFF1-DT;

  /* MOVE H2-2-FAC-PSY.APPL-DT TO AME48W.WS-APPL-DT;*/
  AME48W.WS-APPL-DT = AME48W1.WS-DN-PREV-DT;
  AME48W.WS-FILLER17 = "-";
  AME48W.WS-FILLER18 = "-";
  AME48W.WS-APPL1-MM = AME48W.WS-APPL-MM;
  AME48W.WS-APPL1-DD = AME48W.WS-APPL-DD;
  AME48W.WS-APPL1-YYYY = AME48W.WS-APPL-YYYY;
  AME48W.WS-FILLER19 = "-";
  AME48W.WS-FILLER20 = "-";
  P-DATE-REC3.C-OUTPUT-DATE = AME48W.WS-APPL1-DT;
  call "DATED1A" (VDBCONTROL, VMESSAGE, P-DATE-REC3) {isNoRefresh = yes};
  AME48W1.WS-DFF-D-DAY = P-DATE-REC3.N-DIFF-DAYS;

  /* ************************************************************************/
  /* ONE DAY IS ADDED TO RESULT TO ACCOMODATE SAME-DAY POSTING. IF*/
  /* POSTING OCCURS ON THE APPLICATION DATE, THE RESULT SHOULD BE 1,*/
  /* NOT ZERO; THE RESULT FOR NEXT-DAY POSTING SHOULD BE 2, NOT 1.  ETC.*/
  /* ************************************************************************/

  if (AME48W.WS-PRGM-EFF1-DT < AME48W.WS-APPL1-DT)
    AME48W1.WS-DFF-D-DAY = 1;
  else
    AME48W1.WS-DFF-D-DAY = AME48W1.WS-DFF-D-DAY + 1;
  end

  AME48W1.WS-DFF-D-DAYS = AME48W1.WS-DFF-D-DAYS + AME48W1.WS-DFF-D-DAY;
  AME48W.WS-S-DFF-D-DAYS = AME48W.WS-S-DFF-D-DAYS + AME48W1.WS-DFF-D-DAY;

  AME48W1.WS-DFF-DAYS = AME48W1.WS-DFF-DAYS + AME48W1.WS-DFF-D-DAY; /* q45*/
  AME48W.WS-S-DFF-DAYS = AME48W.WS-S-DFF-DAYS + AME48W1.WS-DFF-D-DAY; /* q45*/
  /* cbsi end*/
end // end AME48P9-DATE-DIFFD


// LOAD DAY-OF-EFF-DATE ARRAY
Function AME48P9-DAYS-INIT()

  AME48W.WS-DAY-IDX = 1;

  while (AME48W.WS-DAY-IDX <= 31)

    AME48W.WS-DAY-OF-MTH[WS-DAY-IDX] = AME48W.WS-DAY-IDX;
    AME48W.WS-DAY-IDX = AME48W.WS-DAY-IDX + 1;

  end
end // end AME48P9-DAYS-INIT


// INDIVIDUALS BY ETHNICITY & SEX
Function AME48P9-ETHNC-CNT()
  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/
  /* CHECK ONLY FOR SEX-CD OF 'M' OR 'F'.  DISREGARD ANY OTHER SEX-CD.*/
  /* ************************************************************************/
  if (H2-2-CMH-PER.ETHNC-CD != " "
   && H2-2-CMH-PER.ETHNC-CD != "U"
   && H2-2-CMH-PER.ETHNC-CD != "?")
    if (H2-2-CMH-PER.ETHNC-CD in AME48W.WS-ETHNC-CD)
      if (H2-2-CMH-PER.SEX-CD == "F")
        AME48W1.WS-ETHNC-F-IDX = sysVar.arrayIndex;
        AME48W1.WS-ETHNC-TOT-IDX = sysVar.arrayIndex;

        AME48W1.WS-ETHNC-F-CNT[WS-ETHNC-F-IDX] = AME48W1.WS-ETHNC-F-CNT[WS-ETHNC-F-IDX] + 1;
        AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;

        AME48W.WS-S-ETH-F-CNT[WS-ETHNC-F-IDX] = AME48W.WS-S-ETH-F-CNT[WS-ETHNC-F-IDX] + 1;
        AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;
      else
        if (H2-2-CMH-PER.SEX-CD == "M")
          AME48W1.WS-ETHNC-M-IDX = sysVar.arrayIndex;
          AME48W1.WS-ETHNC-TOT-IDX = sysVar.arrayIndex;

          AME48W1.WS-ETHNC-M-CNT[WS-ETHNC-M-IDX] = AME48W1.WS-ETHNC-M-CNT[WS-ETHNC-M-IDX] + 1;
          AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;

          AME48W.WS-S-ETH-M-CNT[WS-ETHNC-M-IDX] = AME48W.WS-S-ETH-M-CNT[WS-ETHNC-M-IDX] + 1;
          AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;
        end /* 'M'*/
      end /* 'F'*/
    end /* ETHNC-CD*/
  else
    if ("UNKNOWN" in AME48W.WS-ETHNC-DESC)
      if (H2-2-CMH-PER.SEX-CD == "F")
        AME48W1.WS-ETHNC-F-IDX = sysVar.arrayIndex;
        AME48W1.WS-ETHNC-TOT-IDX = sysVar.arrayIndex;

        AME48W1.WS-ETHNC-F-CNT[WS-ETHNC-F-IDX] = AME48W1.WS-ETHNC-F-CNT[WS-ETHNC-F-IDX] + 1;
        AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;

        AME48W.WS-S-ETH-F-CNT[WS-ETHNC-F-IDX] = AME48W.WS-S-ETH-F-CNT[WS-ETHNC-F-IDX] + 1;
        AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;
      else
        if (H2-2-CMH-PER.SEX-CD == "M")
          AME48W1.WS-ETHNC-M-IDX = sysVar.arrayIndex;
          AME48W1.WS-ETHNC-TOT-IDX = sysVar.arrayIndex;

          AME48W1.WS-ETHNC-M-CNT[WS-ETHNC-M-IDX] = AME48W1.WS-ETHNC-M-CNT[WS-ETHNC-M-IDX] + 1;
          AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W1.WS-ETHNC-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;

          AME48W.WS-S-ETH-M-CNT[WS-ETHNC-M-IDX] = AME48W.WS-S-ETH-M-CNT[WS-ETHNC-M-IDX] + 1;
          AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] = AME48W.WS-S-ETH-TOT-CNT[WS-ETHNC-TOT-IDX] + 1;
        end /* 'M'*/
      end /* 'F'*/
    end /* 'UNKNOWN'*/
  end /* NE ' ','U','?'*/
                                   /*  */
end // end AME48P9-ETHNC-CNT


// LOAD ETHNICITY ARRAY
Function AME48P9-ETHNC-INIT()
  AME48Q21-S21();

  if (sysVar.sqlData.sqlcode == 0)
    AME48W.WS-ETHNC-CD-IDX = 1;

    AME48Q21-S21-SCAN();
    while (sysVar.sqlData.sqlcode == 0)
      AME48W.WS-ETHNC-DESC[WS-ETHNC-CD-IDX] = H2-CODE-TBL.CODE-DESC;
      AME48W.WS-ETHNC-CD[WS-ETHNC-CD-IDX] = H2-CODE-TBL.CODE-TBL-CD;
      AME48W.WS-ETHNC-CD-IDX = AME48W.WS-ETHNC-CD-IDX + 1;

      AME48W.WS-ETHNC-ARRAY-SIZE = AME48W.WS-ETHNC-ARRAY-SIZE + 1;

      AME48Q21-S21-SCAN();

    end

  /* ************************************************************************/
  /* H2-2-CMH-PER.ETHNC-CD MIGHT BE ' ', '?' OR 'U'.  IN AME48P9-ETHNC-CNT,*/
  /* THE LAST AME48W.WS-ETHNC-CD(WS-ETHNC-CD-IDX) WILL BE INTERPRETED*/
  /* AS ' ', (UNKNOWN/BLANK).  SEPARATE WS FIELDS (WS-S-ETH-U-...) ARE*/
  /* USED TO COUNT OCCURRENCES OF MISC CHARACTERS (UNKNOWN/MISC).*/
  /* ************************************************************************/

    AME48W.WS-ETHNC-DESC[WS-ETHNC-CD-IDX] = "UNKNOWN";
    AME48W.WS-ETHNC-CD-IDX = AME48W.WS-ETHNC-CD-IDX + 1;

    AME48W.WS-ETHNC-ARRAY-SIZE = AME48W.WS-ETHNC-ARRAY-SIZE + 1;

  end

  /* DETERMINE THE SIZE OF THE OUTPUT BLOCK*/
  /* ADD 2 TO ARRAY-SIZE TO COUNT THE 'UNKNOWN/MISC' LINE AND*/
  /* THE ETHNIC DATA HEADER LINE.*/

  AME48W.WS-ETHNC-ARRAY-SIZE = AME48W.WS-ETHNC-ARRAY-SIZE + 2;

  /*  */
end // end AME48P9-ETHNC-INIT


// INTIALISE ALL VARIABLES
Function AME48P9-INIT-PARA()
  /* cbsi start*/
  /* perform process to initialize all additional records*/

  AME48P9-SET-EMPTY();

  /* set all report variables to initial values*/
  /* ws-page-no      - current printing page number*/
  /* ws-line-no      - current page line no*/
  /* ws-new-page     - a new page indicator*/
  /* ws-max-no-lines - lineage for a standard report frame*/

  VGVar.handleHardIOErrors = 1;
  REP-COMMON.WS-PAGE-NO = 1;
  REP-COMMON.WS-LINE-NO = 1;
  REP-COMMON.WS-NEW-PAGE = "Y";
  REP-COMMON.WS-MAX-NO-LINES = 56;
  AME48W.WS-2-LINE-GROUP-MAX = 55;
  AME48W.WS-3-LINE-GROUP-MAX = 54;
  AME48W.WS-4-LINE-GROUP-MAX = 53;
  AME48W.WS-5-LINE-GROUP-MAX = 52;
  AME48W.WS-6-LINE-GROUP-MAX = 51;
  AME48W.WS-9-LINE-GROUP-MAX = 48;

  /* perform process to initialize constants*/

  AME48P9-INITCON();

  /* set standard header variables*/

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL; /* current date*/
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AME48W-HEAD.UDATE = REP-COMMON.WS-DATE;
  AME48W-HEAD.UTIME = VGVar.currentFormattedTime; /* current time*/
  AME48W-HEAD.UAPPL = "AME48A"; /* report name*/
  VDBCOMMON.UAPPLNAM = "AME48A";
  /* perform process to read input parameter file*/
  /* perform process to read input parameter file*/
  /* validate date parameters, mandatory fields for*/
  /* input records*/
  AME48P9-READIP();
  if (SR-AME48-RECIN.RPT-DT is numeric)
    AME48W.WS-RPT-DT = SR-AME48-RECIN.RPT-DT;
  else
  /* -------------------PTR 11838 BEGIN-----------------------------*/
  /* for invalid input parameter CALL CEP01A with 'invalid input message'*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AME48W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AME48W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0043E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  /* -------------------PTR 11838 END ------------------------------*/
  end
  if (AME48W.WS-RPT-YEAR < 1900 || 
  AME48W.WS-RPT-MONTH < 1 || 
  AME48W.WS-RPT-MONTH > 12)
  /* -------------------PTR 11838 BEGIN-----------------------------*/
  /* for invalid input parameter CALL CEP01A with 'invalid input message'*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AME48W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AME48W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0043E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  /* -------------------PTR 11838 END ------------------------------*/
  end

  AME48W.WS-INP-DD = SR-AME48-RECIN.RPT-DAY;
  AME48W.WS-INP-MM = SR-AME48-RECIN.RPT-MONTH;
  AME48W.WS-INP-YY = SR-AME48-RECIN.RPT-YEAR;
  VDTSREC.UCSPDATI = AME48W.WS-INP-DT;
  call "WDT10A" (VCONTROL, VDTSREC) {isNoRefresh = yes};
  if (VCONTROL.URC != 0)
    AME48W.WS-DT-ERR-FLAG = "Y";
  end

  /* Report is generated every quarter. Checking for quarterly*/
  /* month.*/
  if (AME48W.WS-DT-ERR-FLAG == "Y" || 
  AME48W.WS-RPT-YEAR < 1900)
  /* *********** WI 20799:WNMLS:2002-03-15 **********************************/
  /* REPORT WILL NOW BE RUN MONTHLY.*/
  /* ************************************************************************/
  /* OR (AME48W.WS-RPT-MONTH NE 3 AND*/
  /* AME48W.WS-RPT-MONTH NE 6 AND*/
  /* AME48W.WS-RPT-MONTH NE 9 AND*/
  /* AME48W.WS-RPT-MONTH NE 12) OR*/
  /* (AME48W.WS-RPT-DAY NE 31 AND*/
  /* AME48W.WS-RPT-DAY NE 30);*/
  /* -------------------PTR 11838 BEGIN-----------------------------*/
  /* for invalid input parameter CALL CEP01A with 'invalid input message'*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AME48W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AME48W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0043E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  /* -------------------PTR 11838 END ------------------------------*/
  end

  /* Finding starting and ending date*/
  AME48W.WS-MON-DAYS = "310031303130313130313031";
  REP-COMMON.WS-YYYY = AME48W.WS-RPT-YEAR;
  LEAP-YEAR-CHECK();
  if (REP-COMMON.WS-LEAP-FLAG == "Y")
    AME48W.WS-DAYS[2] = "29";
  else
    AME48W.WS-DAYS[2] = "28";
  end

  AME48W.WS-ST-DD = "01";
  AME48W.WS-END-DD = AME48W.WS-DAYS[WS-RPT-MONTH];
  AME48W.WS-ST-MM = AME48W.WS-RPT-MONTH;
  AME48W.WS-END-MM = AME48W.WS-RPT-MONTH;
  AME48W.WS-ST-YY = AME48W.WS-RPT-YEAR;
  AME48W.WS-END-YY = AME48W.WS-RPT-YEAR;
  AME48W.WS-FIL1 = "-";
  AME48W.WS-FIL2 = "-";
  AME48W.WS-FIL3 = "-";
  AME48W.WS-FIL4 = "-";

  AME48W.WS-RPT-BEG-DEC = "-00.00.00.000000";
  AME48W.WS-RPT-END-DEC = "-23.59.59.999999";


  /* populate sub header variables*/
  AME48W-SUBH.S-REPORT-MM = SR-AME48-RECIN.RPT-MONTH;
  AME48W-SUBH.S-REPORT-DD = SR-AME48-RECIN.RPT-DAY;
  AME48W-SUBH.S-REPORT-YYYY = SR-AME48-RECIN.RPT-YEAR;
  /* cbsi end*/

  AME48P9-ETHNC-INIT(); /* WI 20799 POPULATE ETHNC-CD/DESC ARRAY*/

  AME48P9-IPVDQ-INIT(); /* WI 20799 POPULATE IPVDISQL-CD/DESC*/
                                   /* ARRAY*/
  AME48P9-UNIN-INIT(); /* WI 20799 POPULATE UNIN-CODE ARRAY*/

  AME48P9-AGE-INIT(); /* LOAD AGE-CATEGORY ARRAY*/

  AME48P9-DAYS-INIT(); /* LOAD DAYS-OF-MONTH ARRAY*/
end // end AME48P9-INIT-PARA


// INITIALISE CONSTANTS
Function AME48P9-INITCON()
  /* cbsi start*/
  /* this process intialises all the reports constants*/
  AME48W-HEAD.CONSTANT1 = "PAGE-NBR";
  AME48W-HEAD.FILLER1 = " ";
  AME48W-HEAD.FILLER2 = " ";
  AME48W-HEAD.CONSTANT2 = "STATE";
  AME48W-HEAD.FILLER3 = " ";
  AME48W-HEAD.CONSTANT3 = "OF";
  AME48W-HEAD.FILLER4 = " ";
  AME48W-HEAD.CONSTANT4 = "NEVADA";
  AME48W-HEAD.FILLER5 = " ";
  AME48W-HEAD.CONSTANT5 = "DATE";
  AME48W-HEAD.FILLER6 = " ";
  AME48W-HEAD.FILLER8 = " ";
  AME48W-HEAD.CONSTANT6 = "FOOD";
  AME48W-HEAD.FILLER9 = " ";
  AME48W-HEAD.CONSTANT7 = "STAMP";
  AME48W-HEAD.FILLER10 = " ";
  AME48W-HEAD.CONSTANT8 = "CHARACTERISTIC";
  AME48W-HEAD.FILLER11 = " ";
  AME48W-HEAD.CONSTANT9 = "STUDY";
  AME48W-HEAD.FILLER12 = " ";
  AME48W-HEAD.CONSTANT10 = "TIME";
  AME48W-HEAD.FILLER13 = " ";
  AME48W-HEAD.FILLER14 = " ";
  AME48W-SUBH.CONSTANT1 = "LEVEL:";
  AME48W-SUBH.FILLER1 = " ";
  AME48W-SUBH.FILLER2 = " ";
  AME48W-SUBH.FILLER3 = " ";
  AME48W-SUBH.CONSTANT2 = "CASES";
  AME48W-SUBH.FILLER4 = " ";
  AME48W-SUBH.CONSTANT3 = "ONGOING";
  AME48W-SUBH.FILLER5 = " ";
  AME48W-SUBH.CONSTANT4 = "AS";
  AME48W-SUBH.FILLER6 = " ";
  AME48W-SUBH.CONSTANT5 = "OF";
  AME48W-SUBH.FILLER7 = " ";
  AME48W-SUBH.FILLER8 = " ";
  AME48W-SUBH.FILLER9 = " ";
  AME48W-SUBH.FILLER10 = " ";
  AME48W-SUBH.CONSTANT6 = "OR";
  AME48W-SUBH.FILLER11 = " ";
  AME48W-SUBH.CONSTANT7 = "DENIED";
  AME48W-SUBH.FILLER12 = " ";
  AME48W-SUBH.CONSTANT8 = "OR";
  AME48W-SUBH.FILLER13 = " ";
  AME48W-SUBH.CONSTANT9 = "CLOSED";
  AME48W-SUBH.FILLER14 = " ";
  AME48W-SUBH.CONSTANT10 = "BETWEEN";
  AME48W-SUBH.FILLER15 = " ";
  AME48W-SUBH.FILLER16 = " ";
  AME48W-SUBH.FILLER17 = " ";
  AME48W-SUBH.FILLER18 = " ";
  AME48W-SUBH.CONSTANT11 = "AND";
  AME48W-SUBH.FILLER19 = " ";
  AME48W-SUBH.FILLER20 = " ";
  AME48W-SUBH.FILLER21 = " ";
  AME48W-SUBH.FILLER22 = " ";
  AME48W-SUBH.FILLER23 = " ";
  AME48W-DET.CONSTANT1 = "Q01";
  AME48W-DET.FILLER1 = " ";
  AME48W-DET.FILLER2 = " ";
  AME48W-DET.CONSTANT2 = "TOTAL";
  AME48W-DET.FILLER3 = " ";
  AME48W-DET.CONSTANT3 = "ACTIVE";
  AME48W-DET.FILLER4 = " ";
  AME48W-DET.CONSTANT4 = "CASES";
  AME48W-DET.FILLER5 = " ";
  AME48W-DET.CONSTANT5 = "Q02";
  AME48W-DET.FILLER7 = " ";
  AME48W-DET.FILLER8 = " ";
  AME48W-DET.CONSTANT6 = "TOTAL";
  AME48W-DET.FILLER9 = " ";
  AME48W-DET.CONSTANT7 = "PEOPLE";
  AME48W-DET.FILLER10 = " ";
  AME48W-DET.CONSTANT8 = "ON";
  AME48W-DET.FILLER11 = " ";
  AME48W-DET.CONSTANT9 = "ACTIVE";
  AME48W-DET.FILLER12 = " ";
  AME48W-DET.CONSTANT10 = "CASES";
  AME48W-DET.FILLER13 = " ";
  AME48W-DET.CONSTANT11 = "Q03";
  AME48W-DET.FILLER15 = " ";
  AME48W-DET.FILLER16 = " ";
  AME48W-DET.CONSTANT12 = "CASES";
  AME48W-DET.FILLER17 = " ";
  AME48W-DET.CONSTANT13 = "ON";
  AME48W-DET.FILLER18 = " ";
  AME48W-DET.CONSTANT14 = "MONTHLY";
  AME48W-DET.FILLER19 = " ";
  AME48W-DET.CONSTANT15 = "REPORTING";
  AME48W-DET.FILLER20 = " ";
  AME48W-DET.CONSTANT16 = "Q04";
  AME48W-DET.FILLER22 = " ";
  AME48W-DET.FILLER23 = " ";
  AME48W-DET.CONSTANT17 = "PA CASES";
  AME48W-DET.FILLER24 = " ";
  AME48W-DET.CONSTANT18 = "   ";
  AME48W-DET.FILLER26 = " ";
  AME48W-DET.FILLER27 = " ";
  AME48W-DET.CONSTANT19 = "NA CASES";
  AME48W-DET.FILLER28 = " ";
  AME48W-DET.Q05-HDR-FIL1 = " ";
  AME48W-DET.Q05-HDR-1 = "CASES BY HOUSEHOLD SIZE                 ";
  AME48W-DET.Q05-HDR-FIL1A = " ";
  AME48W-DET.FILLER31 = " ";
  AME48W-DET.CONSTANT20 = "HH-1";
  AME48W-DET.FILLER32 = " ";
  AME48W-DET.CONSTANT21 = "HH-2";
  AME48W-DET.FILLER33 = " ";
  AME48W-DET.CONSTANT22 = "HH-3";
  AME48W-DET.FILLER34 = " ";
  AME48W-DET.CONSTANT23 = "HH-4";
  AME48W-DET.FILLER35 = " ";
  AME48W-DET.CONSTANT24 = "HH-5";
  AME48W-DET.FILLER36 = " ";
  AME48W-DET.CONSTANT25 = "HH-6";
  AME48W-DET.FILLER37 = " ";
  AME48W-DET.CONSTANT26 = "HH-7+";
  AME48W-DET.FILLER38 = " ";
  AME48W-DET.CONSTANT27 = "Q05";
  AME48W-DET.CONSTANT27Q = "   ";
  AME48W-DET.FILLER39 = " ";
  AME48W-DET.FILLER40 = " ";
  AME48W-DET.FILLER41 = " ";
  AME48W-DET.FILLER42 = " ";
  AME48W-DET.FILLER43 = " ";
  AME48W-DET.FILLER44 = " ";
  AME48W-DET.FILLER45 = " ";
  AME48W-DET.FILLER46 = " ";
  AME48W-DET.CONSTANT28 = "Q06";
  AME48W-DET.FILLER48 = " ";
  AME48W-DET.FILLER49 = " ";
  AME48W-DET.CONSTANT29 = "AVERAGE";
  AME48W-DET.FILLER50 = " ";
  AME48W-DET.CONSTANT30 = "HOUSEHOLD-SIZE";
  AME48W-DET.FILLER51 = " ";
  AME48W-DET.CONSTANT47 = "Q07";
  AME48W-DET.Q07-HDR-FIL1 = " ";
  AME48W-DET.Q07-HDR-1 = "INDIVIDUALS BY AGE                      ";
  AME48W-DET.Q07-HDR-FIL1A = " ";
  AME48W-DET.FILLER53 = " ";
  AME48W-DET.CONSTANT31 = "0-5";
  AME48W-DET.FILLER54 = " ";
  AME48W-DET.CONSTANT32 = "6";
  AME48W-DET.FILLER55 = " ";
  AME48W-DET.CONSTANT33 = "7-12";
  AME48W-DET.FILLER56 = " ";
  AME48W-DET.CONSTANT34 = "13-15";
  AME48W-DET.FILLER57 = " ";
  AME48W-DET.CONSTANT35 = "16-17";
  AME48W-DET.FILLER58 = " ";
  AME48W-DET.CONSTANT36 = "18-20";
  AME48W-DET.FILLER59 = " ";
  AME48W-DET.CONSTANT37 = "21-25";
  AME48W-DET.FILLER60 = " ";
  AME48W-DET.CONSTANT38 = "26-30";
  AME48W-DET.FILLER61 = " ";
  AME48W-DET.CONSTANT39 = "31-35";
  AME48W-DET.FILLER62 = " ";
  AME48W-DET.CONSTANT40 = "36-40";
  AME48W-DET.FILLER63 = " ";
  AME48W-DET.CONSTANT41 = "41-45";
  AME48W-DET.FILLER64 = " ";
  AME48W-DET.CONSTANT42 = "46-50";
  AME48W-DET.FILLER65 = " ";
  AME48W-DET.CONSTANT43 = "51-55";
  AME48W-DET.FILLER66 = " ";
  AME48W-DET.CONSTANT44 = "56-59";
  AME48W-DET.FILLER67 = " ";
  AME48W-DET.CONSTANT45 = "60";
  AME48W-DET.FILLER68 = " ";
  AME48W-DET.CONSTANT46 = "+";
  AME48W-DET.FILLER69 = " ";
  AME48W-DET.CONSTANT47Q = " ";
  AME48W-DET.FILLER70 = " ";
  AME48W-DET.FILLER71 = " ";
  AME48W-DET.FILLER72 = " ";
  AME48W-DET.FILLER73 = " ";
  AME48W-DET.FILLER74 = " ";
  AME48W-DET.FILLER75 = " ";
  AME48W-DET.FILLER76 = " ";
  AME48W-DET.FILLER77 = " ";
  AME48W-DET.FILLER78 = " ";
  AME48W-DET.FILLER79 = " ";
  AME48W-DET.FILLER80 = " ";
  AME48W-DET.FILLER81 = " ";
  AME48W-DET.FILLER82 = " ";
  AME48W-DET.FILLER83 = " ";
  AME48W-DET.FILLER84 = " ";
  AME48W-DET.FILLER85 = " ";
  AME48W-DET.CONSTANT48 = "Q08";
  AME48W-DET.FILLER87 = " ";
  AME48W-DET.FILLER88 = " ";
  AME48W-DET.CONSTANT49 = "DISQUALIFIED";
  AME48W-DET.FILLER89 = " ";
  AME48W-DET.CONSTANT50 = "INDIVIDUALS";
  AME48W-DET.FILLER90 = " ";
  AME48W-DET.CONSTANT51 = "-";
  AME48W-DET.FILLER91 = " ";
  AME48W-DET.CONSTANT52 = "IPV      ";
  AME48W-DET.FILLER92 = " ";
  AME48W-DET.CONSTANT53 = "       ";
  AME48W-DET.FILLER93 = " ";
  AME48W-DET.FILLERIPVHDR1 = " ";
  AME48W-DET.CONSTANTIPVHDR = "OCCURRENCES OF IPV BY TYPE";
  AME48W-DET.CONSTANTIPVHDRCONTD = " ";
  AME48W-DET.FILLERIPVHDR2 = " ";
  AME48W-DET.CONSTANT54 = "Q09";
  AME48W-DET.FILLER95 = " ";
  AME48W-DET.FILLER96 = " ";
  AME48W-DET.CONSTANT55 = "DISQUALIFIED";
  AME48W-DET.FILLER97 = " ";
  AME48W-DET.CONSTANT56 = "INDIVIDUALS";
  AME48W-DET.FILLER98 = " ";
  AME48W-DET.CONSTANT57 = "-";
  AME48W-DET.FILLER99 = " ";
  AME48W-DET.CONSTANT58 = "OTHER         ";
  AME48W-DET.FILLER100 = " ";
  AME48W-DET.CONSTANT59 = "     ";
  AME48W-DET.FILLER101 = " ";
  AME48W-DET.FILLER20A = " ";
  AME48W-DET.FILLER20A1 = " ";
  AME48W-DET.CONSTANT20A1 = "SSN  ";
  AME48W-DET.FILLER20A2 = " ";
  AME48W-DET.CONSTANT20A2 = "CTZN ";
  AME48W-DET.FILLER20A3 = " ";
  AME48W-DET.CONSTANT20A3 = "FELON";
  AME48W-DET.FILLER20A4 = " ";
  AME48W-DET.CONSTANT20A4 = "DRUG ";
  AME48W-DET.FILLER20A5 = " ";
  AME48W-DET.CONSTANT60 = "Q10/Q12";
  AME48W-DET.FILLER104 = " ";
  AME48W-DET.CONSTANT61 = "TOTAL";
  AME48W-DET.FILLER105 = " ";
  AME48W-DET.CONSTANT62 = "MALE";
  AME48W-DET.FILLER106 = " ";
  AME48W-DET.CONSTANT63 = "FEMALE";
  AME48W-DET.FILLER107 = " ";
  AME48W-DET.CONSTANT64 = "ETHNICITY";
  AME48W-DET.FILLER108 = " ";
  AME48W-DET.FILLER110 = " ";
  AME48W-DET.FILLER111 = " ";
  AME48W-DET.FILLER112 = " ";
  AME48W-DET.FILLER113 = " ";
  AME48W-DET.FILLER114 = " ";
  AME48W-DET.FILLER117 = " ";
  AME48W-DET.CONSTANT67 = "MALE";
  AME48W-DET.FILLER118 = " ";
  AME48W-DET.CONSTANT68 = "FEMALE  (DOES NOT INCLUDE CASES NOT DESIGNATED AS M OR F)";
  AME48W-DET.FILLER119 = " ";
  AME48W-DET.CONSTANT69 = "Q11";
  AME48W-DET.FILLER120 = " ";
  AME48W-DET.FILLER121 = " ";
  AME48W-DET.FILLER122 = " ";
  AME48W-DET.CONSTANT79 = "Q13";
  AME48W-DET.FILLER146 = " ";
  AME48W-DET.FILLER147 = " ";
  AME48W-DET.CONSTANT80 = "CASES";
  AME48W-DET.FILLER148 = " ";
  AME48W-DET.CONSTANT81 = "WITH";
  AME48W-DET.FILLER149 = " ";
  AME48W-DET.CONSTANT82 = "60+";
  AME48W-DET.FILLER150 = " ";
  AME48W-DET.CONSTANT83 = "AGE";
  AME48W-DET.FILLER151 = " ";
  AME48W-DET.CONSTANT84 = "AND/OR";
  AME48W-DET.FILLER152 = " ";
  AME48W-DET.CONSTANT85 = "DISABLED & OTHERS";
  AME48W-DET.FILLER153 = " ";
  AME48W-DET.FILLER154 = " ";
  AME48W-DET.FILLER155 = " ";
  AME48W-DET.CONSTANT86 = "CASES";
  AME48W-DET.FILLER156 = " ";
  AME48W-DET.CONSTANT87 = "WITH";
  AME48W-DET.FILLER157 = " ";
  AME48W-DET.CONSTANT88 = "ONLY";
  AME48W-DET.FILLER158 = " ";
  AME48W-DET.CONSTANT89 = "60+ AGE AND/OR DISABLED";
  AME48W-DET.FILLER159 = " ";
  AME48W-DET.CONSTANT95 = "Q14";
  AME48W-DET.FILLER168 = " ";
  AME48W-DET.FILLER169 = " ";
  AME48W-DET.CONSTANT96 = "INDIVIDUALS";
  AME48W-DET.FILLER170 = " ";
  AME48W-DET.CONSTANT97 = "WITH";
  AME48W-DET.FILLER171 = " ";
  AME48W-DET.CONSTANT98 = "MEDICAL";
  AME48W-DET.FILLER172 = " ";
  AME48W-DET.CONSTANT99 = "EXPENSES";
  AME48W-DET.FILLER173 = " ";
  AME48W-DET.CONSTANT100 = "Q15";
  AME48W-DET.FILLER175 = " ";
  AME48W-DET.FILLER176 = " ";
  AME48W-DET.CONSTANT101 = "CASES";
  AME48W-DET.FILLER177 = " ";
  AME48W-DET.CONSTANT102 = "WITH";
  AME48W-DET.FILLER178 = " ";
  AME48W-DET.CONSTANT103 = "MEDICAL";
  AME48W-DET.FILLER179 = " ";
  AME48W-DET.CONSTANT104 = "EXPENSES";
  AME48W-DET.FILLER180 = " ";
  AME48W-DET.CONSTANT105 = "Q16";
  AME48W-DET.FILLER182 = " ";
  AME48W-DET.FILLER183 = " ";
  AME48W-DET.CONSTANT106 = "AVERAGE";
  AME48W-DET.FILLER184 = " ";
  AME48W-DET.CONSTANT107 = "MEDICAL";
  AME48W-DET.FILLER185 = " ";
  AME48W-DET.CONSTANT108 = "EXPENSE (AFTER $35 DEDUCTION)";
  AME48W-DET.FILLER186 = " ";
  AME48W-DET.FILLER-NOZIP-1 = " ";
  AME48W-DET.NOZIP-MSG = "NO ZIPS FOUND FOR THIS OFFICE";
  AME48W-DET.FILLER-NOZIP-2 = " ";
  AME48W-DET.CONSTANT109 = "Q17";
  AME48W-DET.ZIP-HDR-FIL1 = " ";
  AME48W-DET.ZIP-HDR-1 = "FS CASES BY RESIDENCE ZIP CODE          ";
  AME48W-DET.ZIP-HDR-FIL1A = " ";
  AME48W-DET.FILLER188 = " ";
  AME48W-DET.FILLER189 = " ";
  AME48W-DET.FILLER190 = " ";
  AME48W-DET.FILLER191 = " ";
  AME48W-DET.FILLER192 = " ";
  AME48W-DET.FILLER193 = " ";
  AME48W-DET.FILLER194 = " ";
  AME48W-DET.FILLER195 = " ";
  AME48W-DET.FILLER196 = " ";
  AME48W-DET.FILLER197 = " ";
  AME48W-DET.FILLER198 = " ";
  AME48W-DET.FILLER199 = " ";
  AME48W-DET.FILLER200 = " ";
  AME48W-DET.FILLER201 = " ";
  AME48W-DET.FILLER202 = " ";
  AME48W-DET.FILLER203 = " ";
  AME48W-DET.FILLER204 = " ";
  AME48W-DET.FILLER205 = " ";
  AME48W-DET.FILLER206 = " ";
  AME48W-DET.FILLER207 = " ";
  AME48W-DET.FILLER208 = " ";
  AME48W-DET.FILLER209 = " ";
  AME48W-DET.FILLER210 = " ";
  AME48W-DET.FILLER211 = " ";
  AME48W-DET.FILLER212 = " ";
  AME48W-DET.FILLER213 = " ";
  AME48W-DET.FILLER214 = " ";
  AME48W-DET.FILLER215 = " ";
  AME48W-DET.FILLER216 = " ";
  AME48W-DET.FILLER217 = " ";
  AME48W-DET.FILLER218 = " ";
  AME48W-DET.FILLER219 = " ";
  AME48W-DET.CONSTANT110 = "Q18";
  AME48W-DET.FILLER317 = " ";
  AME48W-DET.FILLER318 = " ";
  AME48W-DET.CONSTANT111 = "CASES";
  AME48W-DET.FILLER319 = " ";
  AME48W-DET.CONSTANT112 = "WITH";
  AME48W-DET.FILLER320 = " ";
  AME48W-DET.CONSTANT113 = "AUTHORIZED";
  AME48W-DET.FILLER321 = " ";
  AME48W-DET.CONSTANT114 = "REPRESENTATIVE";
  AME48W-DET.FILLER322 = " ";
  AME48W-DET.CONSTANT115INC = "Q19";
  AME48W-DET.FILLER324INC = " ";
  AME48W-DET.FILLER325INC = " ";
  AME48W-DET.CONSTANT116INC = "CASES WITH INCOME";
  AME48W-DET.FILLER326INC = " ";
  AME48W-DET.CONSTANT115EA = "Q20";
  AME48W-DET.FILLER324EA = " ";
  AME48W-DET.FILLER325EA = " ";
  AME48W-DET.CONSTANT116EA = "CASES WITH EARNED INCOME";
  AME48W-DET.FILLER326EA = " ";
  AME48W-DET.CONSTANT115 = "   ";
  AME48W-DET.FILLER324 = " ";
  AME48W-DET.FILLER324U1A = " ";
  AME48W-DET.CONSTANT116U1A = "OCCURRENCES OF MISC. UNEARNED INCOME";
  AME48W-DET.FILLER325U1A = " ";
  AME48W-DET.FILLER324U1B1 = " ";
  AME48W-DET.CONSTANT116U1B1 = "GAGA";
  AME48W-DET.FILLER324U1B2 = " ";
  AME48W-DET.CONSTANT116U1B2 = "TANF";
  AME48W-DET.FILLER324U1B3 = " ";
  AME48W-DET.CONSTANT116U1B3 = "EDIN";
  AME48W-DET.FILLER324U1B4 = " ";
  AME48W-DET.FILLER324U1C1 = " ";
  AME48W-DET.FILLER324U1C2 = " ";
  AME48W-DET.FILLER324U1C3 = " ";
  AME48W-DET.FILLER324U1C4 = " ";
  AME48W-DET.FILLER325 = " ";
  AME48W-DET.CONSTANT116 = "CASES";
  AME48W-DET.FILLER326 = " ";
  AME48W-DET.CONSTANT117 = "WITH";
  AME48W-DET.FILLER327 = " ";
  AME48W-DET.CONSTANT118 = "UNEARNED INCOME";
  AME48W-DET.FILLER328 = " ";
  AME48W-DET.CONSTANT115U = "   ";
  AME48W-DET.FILLER324U = " ";
  AME48W-DET.CONSTANT116U = "OCCURRENCES OF UNEARNED INCOME BY TYPE FROM UNIN SCREEN";
  AME48W-DET.CONSTANT116UCONTD = " ";
  AME48W-DET.FILLER325U = " ";
  AME48W-DET.CONSTANT127 = "Q21";
  AME48W-DET.FILLER347 = " ";
  AME48W-DET.FILLER348 = " ";
  AME48W-DET.CONSTANT128 = "AVERAGE-GROSS-INCOME - ALL CASES WITH INCOME";
  AME48W-DET.FILLER349 = " ";
  AME48W-DET.CONSTANT132 = "Q22";
  AME48W-DET.FILLER351 = " ";
  AME48W-DET.CONSTANT129 = "AVERAGE-GROSS-INCOME - ALL PA CASES";
  AME48W-DET.FILLER352 = " ";
  AME48W-DET.FILLER353 = " ";
  AME48W-DET.FILLER354 = " ";
  AME48W-DET.FILLER355 = " ";
  AME48W-DET.CONSTANT131 = "AVERAGE-GROSS-INCOME - ALL NA CASES";
  AME48W-DET.FILLER356 = " ";
  AME48W-DET.FILLER354C = " ";
  AME48W-DET.FILLER355C = " ";
  AME48W-DET.CONSTANT131C = "AVERAGE-GROSS-INCOME - PA CASES WITH INCOME";
  AME48W-DET.FILLER356C = " ";
  AME48W-DET.FILLER354D = " ";
  AME48W-DET.FILLER355D = " ";
  AME48W-DET.CONSTANT131D = "AVERAGE-GROSS-INCOME - NA CASES WITH INCOME";
  AME48W-DET.FILLER356D = " ";
  AME48W1-DET.CONSTANT133 = "Q23";
  AME48W1-DET.FILLER360 = " ";
  AME48W1-DET.FILLER361 = " ";
  AME48W1-DET.CONSTANT134 = "AVERAGE-GROSS-";
  AME48W1-DET.CONSTANT135 = "INCOME";
  AME48W1-DET.FILLER363 = " ";
  AME48W1-DET.CONSTANT136 = "- ELDERLY/DISABLED";
  AME48W1-DET.FILLER364 = " ";
  AME48W1-DET.CONSTANT137 = "CASES";
  AME48W1-DET.FILLER365 = " ";
  AME48W1-DET.CONSTANT138 = "WITH";
  AME48W1-DET.FILLER366 = " ";
  AME48W1-DET.CONSTANT139 = "INCOME";
  AME48W1-DET.FILLER367 = " ";
  AME48W1-DET.FILLER368 = " ";
  AME48W1-DET.FILLER369 = " ";
  AME48W1-DET.CONSTANT140 = "AVERAGE-GROSS-";
  AME48W1-DET.CONSTANT141 = "INCOME";
  AME48W1-DET.FILLER371 = " ";
  AME48W1-DET.CONSTANT142 = "- ALL";
  AME48W1-DET.FILLER372 = " ";
  AME48W1-DET.CONSTANT143 = "ELDERLY/DISABLED";
  AME48W1-DET.FILLER373 = " ";
  AME48W1-DET.CONSTANT144 = "CASES";
  AME48W1-DET.FILLER374 = " ";
  AME48W1-DET.CONSTANT115EA6 = "Q24";
  AME48W1-DET.FILLER324EA6 = " ";
  AME48W1-DET.FILLER325EA6 = " ";
  AME48W1-DET.CONSTANT116EA6 = "AVERAGE EARNED INCOME";
  AME48W1-DET.FILLER326EA6 = " ";
  AME48W1-DET.CONSTANT115UN = "   ";
  AME48W1-DET.FILLER324UN = " ";
  AME48W1-DET.FILLER325UN = " ";
  AME48W1-DET.CONSTANT116UN = "AVERAGE UNEARNED INCOME";
  AME48W1-DET.FILLER326UN = " ";
  AME48W1-DET.FILLER66U1A1 = " ";
  AME48W1-DET.CONSTANT66U1A1 = "MISC. UNEARNED INCOME AVERAGES";
  AME48W1-DET.FILLER66U1A2 = " ";
  AME48W1-DET.FILLER66U1B1 = " ";
  AME48W1-DET.CONSTANT66U1B1 = "GAGA";
  AME48W1-DET.FILLER66U1B2 = " ";
  AME48W1-DET.CONSTANT66U1B2 = "TANF";
  AME48W1-DET.FILLER66U1B3 = " ";
  AME48W1-DET.CONSTANT66U1B3 = "EDIN";
  AME48W1-DET.FILLER66U1B4 = " ";
  AME48W1-DET.FILLER66U1C1 = " ";
  AME48W1-DET.FILLER66U1C2 = " ";
  AME48W1-DET.FILLER66U1C3 = " ";
  AME48W1-DET.FILLER66U1C4 = " ";
  AME48W1-DET.CONSTANT115UNHDR = "   ";
  AME48W1-DET.FILLER324UNHDR = " ";
  AME48W1-DET.CONSTANT116UNHDR = "AVERAGE UNEARNED INCOME BY TYPE FROM UNIN SCREEN";
  AME48W1-DET.CONSTANT116UNHDRCONTD = " ";
  AME48W1-DET.FILLER326UNHDR = " ";
  AME48W1-DET.FILLER66AQ = "   ";
  AME48W1-DET.CONSTANT153 = "Q25";
  AME48W1-DET.FILLER393 = " ";
  AME48W1-DET.FILLER394 = " ";
  AME48W1-DET.CONSTANT154 = "AVERAGE";
  AME48W1-DET.FILLER395 = " ";
  AME48W1-DET.CONSTANT155 = "RENT/MORTGAGE";
  AME48W1-DET.FILLER396 = " ";
  AME48W1-DET.FILLER397 = " ";
  AME48W1-DET.FILLER398 = " ";
  AME48W1-DET.CONSTANT156 = "CASES";
  AME48W1-DET.FILLER399 = " ";
  AME48W1-DET.CONSTANT157 = "WITH";
  AME48W1-DET.FILLER400 = " ";
  AME48W1-DET.CONSTANT158 = "RENT/MORTGAGE";
  AME48W1-DET.FILLER401 = " ";
  AME48W1-DET.CONSTANT159 = "Q26";
  AME48W1-DET.FILLER403 = " ";
  AME48W1-DET.FILLER404 = " ";
  AME48W1-DET.CONSTANT160 = "CASES";
  AME48W1-DET.FILLER405 = " ";
  AME48W1-DET.CONSTANT161 = "ON";
  AME48W1-DET.FILLER406 = " ";
  AME48W1-DET.CONSTANT162 = "FULL";
  AME48W1-DET.FILLER407 = " ";
  AME48W1-DET.CONSTANT163 = "SUA";
  AME48W1-DET.FILLER408 = " ";
  AME48W1-DET.CONSTANT164 = "Q27";
  AME48W1-DET.FILLER410 = " ";
  AME48W1-DET.FILLER411 = " ";
  AME48W1-DET.CONSTANT165 = "CASES";
  AME48W1-DET.FILLER412 = " ";
  AME48W1-DET.CONSTANT166 = "ON";
  AME48W1-DET.FILLER413 = " ";
  AME48W1-DET.CONSTANT167 = "PARTIAL";
  AME48W1-DET.FILLER414 = " ";
  AME48W1-DET.CONSTANT168 = "SUA";
  AME48W1-DET.FILLER415 = " ";
  AME48W1-DET.CONSTANT169 = "Q28";
  AME48W1-DET.FILLER417 = " ";
  AME48W1-DET.FILLER418 = " ";
  AME48W1-DET.CONSTANT170 = "CASES";
  AME48W1-DET.FILLER419 = " ";
  AME48W1-DET.CONSTANT171 = "WITH";
  AME48W1-DET.FILLER420 = " ";
  AME48W1-DET.CONSTANT172 = "DEPENDENT";
  AME48W1-DET.FILLER421 = " ";
  AME48W1-DET.CONSTANT173 = "CARE";
  AME48W1-DET.FILLER422 = " ";
  AME48W1-DET.CONSTANT174 = "EXPENSE";
  AME48W1-DET.FILLER423 = " ";
  AME48W1-DET.CONSTANT175 = "Q29";
  AME48W1-DET.FILLER425 = " ";
  AME48W1-DET.FILLER426 = " ";
  AME48W1-DET.CONSTANT176 = "AVERAGE";
  AME48W1-DET.FILLER427 = " ";
  AME48W1-DET.CONSTANT177 = "DEPENDENT";
  AME48W1-DET.FILLER428 = " ";
  AME48W1-DET.CONSTANT178 = "CARE";
  AME48W1-DET.FILLER429 = " ";
  AME48W1-DET.CONSTANT179 = "Q30";
  AME48W1-DET.FILLER431 = " ";
  AME48W1-DET.FILLER432 = " ";
  AME48W1-DET.CONSTANT180 = "CASES";
  AME48W1-DET.FILLER433 = " ";
  AME48W1-DET.CONSTANT181 = "ON";
  AME48W1-DET.FILLER434 = " ";
  AME48W1-DET.CONSTANT182 = "ACTUAL";
  AME48W1-DET.FILLER435 = " ";
  AME48W1-DET.CONSTANT183 = "UTILITIES";
  AME48W1-DET.FILLER436 = " ";
  AME48W1-DET.CONSTANT184 = "Q31";
  AME48W1-DET.FILLER438 = " ";
  AME48W1-DET.FILLER439 = " ";