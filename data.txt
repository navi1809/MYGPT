// POP WS WITH NEW UNIN VALS
Function AIN22P9-UNIN-NEW()
  /*  */

  AIN22W-UNIN-NEW.WS-AFDC-CNTBL-IND = H2-UERND-INCM-DTL.AFDC-CNTBL-IND;

  AIN22W-UNIN-NEW.WS-FS-CNTBL-IND = H2-UERND-INCM-DTL.FS-CNTBL-IND;

  AIN22W-UNIN-NEW.WS-MA-CNTBL-CD = H2-UERND-INCM-DTL.MA-CNTBL-CD;

  AIN22W-UNIN-NEW.WS-PREV-AMT = H2-UERND-INCM-DTL.PREV-AMT;

  AIN22W-UNIN-NEW.WS-UERND-INC-TYPE-CD = H2-UERND-INCM-DTL.UERND-INC-TYPE-CD;

  AIN22W-UNIN-NEW.WS-UERND-INC-FREQ = H2-UERND-INCM-DTL.UERND-INC-FREQ;

  AIN22W-UNIN-NEW.WS-UERND-INC-AMT = H2-UERND-INCM-DTL.UERND-INC-AMT;

  AIN22W-UNIN-NEW.WS-UERND-INC-RCVD-DT = H2-UERND-INCM-DTL.UERND-INC-RCVD-DT;

  AIN22W-UNIN-NEW.WS-FS-CNTBL-AMT = H2-UERND-INCM-DTL.FS-CNTBL-AMT;

  /*  */
end // end AIN22P9-UNIN-NEW


// POP WS WITH EXIST UNIN VALS
Function AIN22P9-UNIN-OLD()
  /*  */

  AIN22W-UNIN-OLD.WS-AFDC-CNTBL-IND = H2-UERND-INCM-DTL.AFDC-CNTBL-IND;

  AIN22W-UNIN-OLD.WS-FS-CNTBL-IND = H2-UERND-INCM-DTL.FS-CNTBL-IND;

  AIN22W-UNIN-OLD.WS-MA-CNTBL-CD = H2-UERND-INCM-DTL.MA-CNTBL-CD;

  AIN22W-UNIN-OLD.WS-PREV-AMT = H2-UERND-INCM-DTL.PREV-AMT;

  AIN22W-UNIN-OLD.WS-UERND-INC-TYPE-CD = H2-UERND-INCM-DTL.UERND-INC-TYPE-CD;

  AIN22W-UNIN-OLD.WS-UERND-INC-FREQ = H2-UERND-INCM-DTL.UERND-INC-FREQ;

  AIN22W-UNIN-OLD.WS-UERND-INC-AMT = H2-UERND-INCM-DTL.UERND-INC-AMT;

  AIN22W-UNIN-OLD.WS-UERND-INC-RCVD-DT = H2-UERND-INCM-DTL.UERND-INC-RCVD-DT;

  AIN22W-UNIN-OLD.WS-FS-CNTBL-AMT = H2-UERND-INCM-DTL.FS-CNTBL-AMT;

  /*  */
end // end AIN22P9-UNIN-OLD


// POP UNIN FAM-STAT-LOG VALUES
Function AIN22P9-UNIN-SLOG()
  /* **/

  /* * BUILING AUTO TEXT CLOG:LINE1*/
  AIN22W-UNIN-W1.WS-TEXT11 = "CNT AF/FS/MA:OLD-";
  AIN22W-UNIN-W1.WS-VALU11 = AIN22W-UNIN-OLD.WS-AFDC-CNTBL-IND;
  AIN22W-UNIN-W1.WS-TEXT12 = "/";
  AIN22W-UNIN-W1.WS-VALU12 = AIN22W-UNIN-OLD.WS-FS-CNTBL-IND;
  AIN22W-UNIN-W1.WS-TEXT13 = "/";
  AIN22W-UNIN-W1.WS-VALU13 = AIN22W-UNIN-OLD.WS-MA-CNTBL-CD;
  AIN22W-UNIN-W1.WS-FILL13 = " ";
  AIN22W-UNIN-W1.WS-TEXT14 = "NEW-";
  AIN22W-UNIN-W1.WS-VALU14 = AIN22W-UNIN-NEW.WS-AFDC-CNTBL-IND;
  AIN22W-UNIN-W1.WS-TEXT15 = "/";
  AIN22W-UNIN-W1.WS-VALU15 = AIN22W-UNIN-NEW.WS-FS-CNTBL-IND;
  AIN22W-UNIN-W1.WS-TEXT16 = "/";
  AIN22W-UNIN-W1.WS-VALU16 = AIN22W-UNIN-NEW.WS-MA-CNTBL-CD;
  AIN22W-UNIN-W1.WS-FILL16 = " ";
  AIN22W-UNIN-W1.WS-TEXT17 = "TP:OLD-";
  AIN22W-UNIN-W1.WS-VALU17 = AIN22W-UNIN-OLD.WS-UERND-INC-TYPE-CD;
  AIN22W-UNIN-W1.WS-FILL17 = " ";
  AIN22W-UNIN-W1.WS-TEXT18 = "NEW-";
  AIN22W-UNIN-W1.WS-VALU18 = AIN22W-UNIN-NEW.WS-UERND-INC-TYPE-CD;
  AIN22W-UNIN-W1.WS-FILL18 = " ";
  AIN22W-UNIN-W1.WS-TEXT19 = "FQ:OLD-";
  AIN22W-UNIN-W1.WS-VALU19 = AIN22W-UNIN-OLD.WS-UERND-INC-FREQ;
  AIN22W-UNIN-W1.WS-FILL19 = " ";
  AIN22W-UNIN-W1.WS-TEXT110 = "NEW-";
  AIN22W-UNIN-W1.WS-VALU110 = AIN22W-UNIN-NEW.WS-UERND-INC-FREQ;

  /* * BUILING AUTO TEXT CLOG:LINE2*/
  AIN22W-UNIN-W1.WS-TEXT21 = "RCDT:OLD-";
  AIN22W-UNIN-W1.WS-VALU21 = AIN22W-UNIN-OLD.WS-UERND-INC-RCVD-DT-MM;
  AIN22W-UNIN-W1.WS-TEXT22 = "/";
  AIN22W-UNIN-W1.WS-VALU22 = AIN22W-UNIN-OLD.WS-UERND-INC-RCVD-DT-DD;
  AIN22W-UNIN-W1.WS-TEXT23 = "/";
  AIN22W-UNIN-W1.WS-VALU23 = AIN22W-UNIN-OLD.WS-UERND-INC-RCVD-DT-YY;
  AIN22W-UNIN-W1.WS-FILL23 = " ";
  AIN22W-UNIN-W1.WS-TEXT24 = "NEW-";
  AIN22W-UNIN-W1.WS-VALU24 = AIN22W-UNIN-NEW.WS-UERND-INC-RCVD-DT-MM;
  AIN22W-UNIN-W1.WS-TEXT25 = "/";
  AIN22W-UNIN-W1.WS-VALU25 = AIN22W-UNIN-NEW.WS-UERND-INC-RCVD-DT-DD;
  AIN22W-UNIN-W1.WS-TEXT26 = "/";
  AIN22W-UNIN-W1.WS-VALU26 = AIN22W-UNIN-NEW.WS-UERND-INC-RCVD-DT-YY;
  AIN22W-UNIN-W1.WS-FILL26 = " ";
  AIN22W-UNIN-W1.WS-TEXT27 = "PRV-AMT:OLD-";

  if (AIN22W-UNIN-OLD.WS-PREV-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU27 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-OLD.WS-PREV-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU27 = FORMATW.OUTPUT-CHAR;
  end

  AIN22W-UNIN-W1.WS-FILL27 = " ";
  AIN22W-UNIN-W1.WS-TEXT28 = "NEW-";
  if (AIN22W-UNIN-NEW.WS-PREV-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU28 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-NEW.WS-PREV-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU28 = FORMATW.OUTPUT-CHAR;
  end

  /* * BUILING AUTO TEXT CLOG:LINE3*/
  AIN22W-UNIN-W1.WS-TEXT31 = "AMT:OLD-";
  if (AIN22W-UNIN-OLD.WS-UERND-INC-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU31 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-OLD.WS-UERND-INC-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU31 = FORMATW.OUTPUT-CHAR;
  end

  AIN22W-UNIN-W1.WS-FILL31 = " ";
  AIN22W-UNIN-W1.WS-TEXT32 = "NEW-";
  if (AIN22W-UNIN-NEW.WS-UERND-INC-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU32 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-NEW.WS-UERND-INC-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU32 = FORMATW.OUTPUT-CHAR;
  end

  AIN22W-UNIN-W1.WS-FILL32 = " ";
  AIN22W-UNIN-W1.WS-TEXT33 = "FS-AMT:OLD-";
  if (AIN22W-UNIN-OLD.WS-FS-CNTBL-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU33 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-OLD.WS-FS-CNTBL-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU33 = FORMATW.OUTPUT-CHAR;
  end

  AIN22W-UNIN-W1.WS-FILL33 = " ";
  AIN22W-UNIN-W1.WS-TEXT34 = "NEW-";
  if (AIN22W-UNIN-NEW.WS-FS-CNTBL-AMT == 0)
    AIN22W-UNIN-W1.WS-VALU34 = " ";
  else
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN22W-UNIN-NEW.WS-FS-CNTBL-AMT;
    FORMATW.LENGTH = 8;
    FORMATW.DEC-COUNT = 2;
    FORMATW.FORMAT-FLAG = "Y";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN22W-UNIN-W1.WS-VALU34 = FORMATW.OUTPUT-CHAR;
  end
  /* **/
end // end AIN22P9-UNIN-SLOG


// UPDATE-FAM-CASE
Function AIN22P9-UPD-FAM()
  /* CBSI START*/
  set H2-CASE-MEMBER-HST empty;
  set H2-FAM-CASE empty;
  H2-CASE-MEMBER-HST.UPI = AIN22W.WS-UPI;
  H2-CASE-MEMBER-HST.PRD-END-DT = "9999-12-31";

  AIN22P9-QUERY-S04();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  while (sysVar.sqlData.sqlcode == 0)
    H2-FAM-CASE.ICI = H2-CASE-MEMBER-HST.ICI;
    H2-FAM-CASE.OOS-SSP-RCVD-IND = AIN22W.WS-MOVED-OUT-OF-STATE;
    AIN22P9-QUERY-U03();
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end
    AIN22P9-SCAN4();
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end
  end
  /* CBSI END*/
end // end AIN22P9-UPD-FAM


// update uernd-incm-dtl
Function AIN22P9-UPD1()
  /* DATE      PGR.       DESCRIPTION*/
  /* --------- ---------- -----------*/
  /* 03/07/95  TBST195     CREATION*/
  /*  */
  /* CBSI START*/
  /* Move name of SQL row record used to common record*/
  WDB00PI();
  VDBCOMMON.USQLREC = "H2-UERND-INCM-DTL";
  VDBCONTROL.UPROC-OBJ = "H2-UERND-INCM-DTL";
  VDBCONTROL.UPROC-NM = "AIN22P9-UPD1";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute update 
      #sql{
        UPDATE TWNUERND_INCM_DTL
        SET
          UERND_INC_AMT = :UERND-INC-AMT, UERND_INC_FREQ = :UERND-INC-FREQ,
          PRD_END_DT = :PRD-END-DT, INVO_MND_DEDN_AMT = :INVO-MND-DEDN-AMT,
          PREV_AMT = :PREV-AMT, BNFTS_APLD_IND = :BNFTS-APLD-IND,
          UNE_INC_VERF_BY = :UNE-INC-VERF-BY
        WHERE
          UPI = :UPI AND
          UERND_INC_TYPE_CD = :UERND-INC-TYPE-CD AND
          PRD_BEG_DT = :PRD-BEG-DT AND
          INCM_SQ_NMB = :INCM-SQ-NMB
      }
      for H2-UERND-INCM-DTL ; // model = update
  end
  /* WI 15653 ADD NO UPDATE ALERT  02/03/99*/
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
    AIN22W.WS-UPD-IND = "Y";
  end
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "N";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /* CBSI END*/
end // end AIN22P9-UPD1


// UPDATE INCAP_DSBLTY
Function AIN22P9-UPD2()
  /* DATE      PGR.       DESCRIPTION*/
  /* --------- ---------- -----------*/
  /* 03/08/95  TBST195    CREATION*/
  /*  */
  /* CBSI START*/
  /* Move name of SQL row record used to common record*/
  VDBCOMMON.USQLREC = "H2-INCAP-DSBLTY";
  VDBCONTROL.UPROC-OBJ = "H2-INCAP-DSBLTY";
  VDBCONTROL.UPROC-NM = "AIN22P9-UPD2";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute update 
      #sql{
        UPDATE TWNINCAP_DSBLTY
        SET
          UPI = :UPI,
          PRD_BEG_DT = :PRD-BEG-DT,
          DSBL_BEG_DT = :DSBL-BEG-DT,
          SSI_RFRL_STS_CD = :SSI-RFRL-STS-CD,
           --SSI_RFRL_DT = :SSI-RFRL-DT,
          PRD_END_DT  = :PRD-END-DT,
          DSBL_END_DT = :DSBL-END-DT
        WHERE UPI = :UPI AND
              PRD_BEG_DT = :PRD-BEG-DT
         -- CHANGES DUE TO PHASE IV MAABD IMPACT START-------*/
         -- Fields upi,prd-beg-dt and ssi-rfrl-sts-cd are also updated.
         -- the above fields were not updated in the earlier version of the dad
         -- CHANGES DUE TO PHASE IV MAABD IMPACT END---------*/
      }
      for H2-INCAP-DSBLTY ; // model = update
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
  end
  /* CBSI END*/
end // end AIN22P9-UPD2


// UPDATE FAM-CASE
Function AIN22P9-UPD3()
  /* DATE      PGR.       DESCRIPTION*/
  /* --------- ---------- -----------*/
  /* 03/08/95  TBST195     CREATION*/
  /*  */
  /* CBSI START*/
  /* Move name of SQL row record used to common record*/
  VDBCOMMON.USQLREC = "H2-FAM-CASE";
  VDBCONTROL.UPROC-OBJ = "H2-FAM-CASE";
  VDBCONTROL.UPROC-NM = "AIN22P9-UPD3";
  VDBCONTROL.UPROC-OPT = "UPDATE";
  try
    execute update 
      #sql{
        UPDATE TWNFAM_CASE
        SET
        OOS_SSP_RCVD_IND = :OOS-SSP-RCVD-IND
        WHERE
             ICI = :ICI
      }
      for H2-FAM-CASE ; // model = update
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
  end
  /* CBSI END*/
end // end AIN22P9-UPD3


// UPDATE UERND-INCM-DTL
Function AIN22P9-UPD4()
  /* DATE      PGR.       DESCRIPTION*/
  /* --------- ---------- -----------*/
  /* 03/08/95  TBST195     CREATION*/
  /*  */
  /* CBSI START*/
  /* Move name of SQL row record used to common record*/
  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIN22A";
  VDBCOMMON.USQLREC = "H2-UERND-INCM-DTL";
  VDBCONTROL.UPROC-OBJ = "H2-UERND-INCM-DTL";
  VDBCONTROL.UPROC-NM = "AIN22P9-UPD4";
  VDBCONTROL.UPROC-OPT = "REPLACE";
  try
    replace H2-UERND-INCM-DTL
      with #sql{
         update TWNUERND_INCM_DTL
         set PRD_END_DT = :PRD-END-DT,
              UERND_INC_AMT = :UERND-INC-AMT,
              UNE_INC_VERF_BY = :UNE-INC-VERF-BY
      } ;
  end
  /* WI 15653 ADD NO UPDATE ALERT  02/03/99*/
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
    AIN22W.WS-UPD-IND = "Y";
  end
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "N";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /* CBSI END*/
end // end AIN22P9-UPD4


// Initialize Numeric Fields
Function AIN22P9-VAL-NUM()
  /* --------------------PTR#2903 CHANGE BEGIN-------------------*/
  /* ------------------------------------------------------------*/
  /* Initialize the numeric fields to zero in case data is not  */
  /* present.                                                   */
  /* ------------------------------------------------------------*/
  /*  */
  if (SR-Q22IP-REC-R.TRE-SSN is blanks)
    SR-Q22IP-REC.TRE-SSN = 0;
  end
  if (SR-Q22IP-REC-R.TRE-INELIG-SPOUSE-OR-PARENT-SSN is blanks)
    SR-Q22IP-REC.TRE-INELIG-SPOUSE-OR-PARENT-SSN = 0;
  end
  if (SR-Q22IP-REC-R.TRE-DISABILITY-MO is blanks)
    SR-Q22IP-REC.TRE-DISABILITY-MO = 0;
  end
  if (SR-Q22IP-REC-R.TRE-DISABILITY-DY is blanks)
    SR-Q22IP-REC.TRE-DISABILITY-DY = 0;
  end
  if (SR-Q22IP-REC-R.TRE-DISABILITY-YR is blanks)
    SR-Q22IP-REC.TRE-DISABILITY-YR = 0;
  end
  if (SR-Q22IP-REC-R.TRE-SSN-CROSS-REF-IND is blanks)
    SR-Q22IP-REC.TRE-SSN-CROSS-REF-IND = 0;
  end
  if (SR-Q22IP-REC-R.TRE-EARNED-INC-WAGE-EST is blanks)
    SR-Q22IP-REC.TRE-EARNED-INC-WAGE-EST = 0;
  end
  if (SR-Q22IP-REC-R.TRE-EARNED-INC-EXCLUSION is blanks)
    SR-Q22IP-REC.TRE-EARNED-INC-EXCLUSION = 0;
  end
  if (SR-Q22IP-REC-R.TRE-EARNED-INC-NET-SELF-EMP-TEST is blanks)
    SR-Q22IP-REC.TRE-EARNED-INC-NET-SELF-EMP-TEST = 0;
  end
  if (SR-Q22IP-REC-R.TRE-UNEARN-INC-NBR-OF-ENTRIES is blanks)
    SR-Q22IP-REC.TRE-UNEARN-INC-NBR-OF-ENTRIES = 0;
  end
  if (SR-Q22IP-REC-R.TRE-UNEARNED-INC-AMT is blanks)
    SR-Q22IP-REC.TRE-UNEARNED-INC-AMT = 0;
  end
  if (SR-Q22IP-REC-R.TRE-UNEARNED-INC-VERIFY-CD is blanks)
    SR-Q22IP-REC.TRE-UNEARNED-INC-VERIFY-CD = 0;
  end
  if (SR-Q22IP-REC-R.TRE-SSI-MONTHLY-ASSIST-AMT is blanks)
    SR-Q22IP-REC.TRE-SSI-MONTHLY-ASSIST-AMT = 0;
  end
  if (SR-Q22IP-REC-R.TRE-SSI-GROSS-PAYABLE-AMT is blanks)
    SR-Q22IP-REC.TRE-SSI-GROSS-PAYABLE-AMT = 0;
  end
  if (SR-Q22IP-REC-R.TRE-STATE-SUPPLEMENT-AMT is blanks)
    SR-Q22IP-REC.TRE-STATE-SUPPLEMENT-AMT = 0;
  end
  if (SR-Q22IP-REC-R.TRE-STATE-SUPPLEMENT-GROSS-PAY is blanks)
    SR-Q22IP-REC.TRE-STATE-SUPPLEMENT-GROSS-PAY = 0;
  end
  /* PTR 12052 ---- IF ZERO DATE REPLACE PRCS DATE --- 06/16/97 -- BEGIN*/
  /* wi15502 corrects the year 0098 problem **** 12/09/98  ******/
  if (SR-Q22IP-REC-R.TRE-PAYMENT-MO is blanks
   || SR-Q22IP-REC-R.TRE-PAYMENT-MO == "00")
    SR-Q22IP-REC.TRE-PAYMENT-MO = SR-Q22IP-REC.TRE-MONTH-CHANGE-MO;
  end
  if (SR-Q22IP-REC-R.TRE-PAYMENT-DY is blanks
   || SR-Q22IP-REC-R.TRE-PAYMENT-DY == "00")
    SR-Q22IP-REC.TRE-PAYMENT-DY = "01";
  end
  if ((SR-Q22IP-REC-R.TRE-PAYMENT-YR is blanks
   && SR-Q22IP-REC-R.TRE-PAYMENT-CC is blanks)
   || (SR-Q22IP-REC-R.TRE-PAYMENT-YR == "00"
   && SR-Q22IP-REC-R.TRE-PAYMENT-CC == "00"))
    SR-Q22IP-REC.TRE-PAYMENT-YR = SR-Q22IP-REC.TRE-MONTH-CHANGE-YR;
  end
  if (SR-Q22IP-REC-R.TRE-PAYMENT-CC is blanks
   || SR-Q22IP-REC-R.TRE-PAYMENT-CC == "00")
    SR-Q22IP-REC.TRE-PAYMENT-CC = SR-Q22IP-REC.TRE-MONTH-CHANGE-CC;
  end
  if (SR-Q22IP-REC-R.TRE-RESIDENCE-START-DT is blanks
   || SR-Q22IP-REC-R.TRE-RESIDENCE-START-DT == "000000")
    SR-Q22IP-REC.TRE-RESIDENCE-START-DT = "010150";
  /* PTR 8547 ---- IF ZERO DATE REPLACE W/LOW DATE --- 11/22/96 -- END*/
  end
  /* --------------------PTR#2903 CHANGE END---------------------*/
end // end AIN22P9-VAL-NUM


// INSERTS INTO TWNCOST_INFC_DTLS
Function AIN22Q1-I-COST-IFC()
  WDB00PI();

  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIN22A";
  VDBCOMMON.USQLREC = "H2-COST-INFC-DTLS";
  VDBCONTROL.UPROC-OBJ = "H2-COST-INFC-DTLS";
  VDBCONTROL.UPROC-NM = "AIN22Q1-I-COST-IFC";
  VDBCONTROL.UPROC-OPT = "ADD";
  /*  */
  try
    add H2-COST-INFC-DTLS ;
  end
  /*  */
  /* PERFORM REPP9-SQL-CHKERR;*/
  /*  */
  /* Set error control flags*/
  /* UNRF - No record found flag (Y,N,1)*/
  /* UDUP - Duplicate key flag (Y,N)*/
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "Y";
  /*  */
  /* Perform DBM error processing*/
  VDBCONTROL.URC = 0;
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC >= 104)
    if (sysVar.sqlData.sqlcode == -803)
  /* do not abend*/
    else
  /* return error code to indicate abnormal ending*/
      sysVar.returnCode = 8;
      WCM00P2-TO-CEP01A();
    end
  end

  /*  */
end // end AIN22Q1-I-COST-IFC


// GET CO ROW
Function AIN22Q1-S-BG-EXIST()
  WDB00PI();
  /* Move name of SQL row record used to common record*/
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN22A";
  VDBCOMMON.USQLREC = "H2-BG-TRN";
  VDBCONTROL.UPROC-OBJ = "H2-BG-TRN";
  VDBCONTROL.UPROC-NM = "AIN22Q1-S-BG-EXIST";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    open AIN22Q1-S-BG-EXIST_RSI01
      with #sql{
        select T1.CRN_TS, T1.TRAN_STS_CD, T1.TRAN_PRD_FM_DT, T1.TRAN_PRD_TO_DT
        from twnbg_trn T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
          T1.ICI = :ICI
          AND T1.TRAN_TYPE = 'DI'
          AND T1.TRAN_STS_CD IN ('PE', 'CO')
          AND DATE(T1.CRN_TS) >= :AIN22W.WS-NOMADS-PROCESS-DATE
        ORDER BY T1.CRN_TS DESC
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into CRN-TS, TRAN-STS-CD, TRAN-PRD-FM-DT, TRAN-PRD-TO-DT
      for H2-BG-TRN ;
  end

  REPP9-SQL-CHKERR();
end // end AIN22Q1-S-BG-EXIST


// GET AID/ELIG CDS, ICI FOR UPI
Function AIN22Q1-S-CMH-FCH()
  WDB00PI();
  /* Move name of SQL row record used to common record*/
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN22A";
  VDBCOMMON.USQLREC = "H2-2-CMH-FCH";
  VDBCONTROL.UPROC-OBJ = "H2-2-CMH-FCH";
  VDBCONTROL.UPROC-NM = "AIN22Q1-S-CMH-FCH";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    open AIN22Q1-S-CMH-FCH_RSI01
      with #sql{
        select T1.ICI, T2.CASE_STS, T2.APPL_UPI, T2.HOH_UPI,
          T1.FS_ASST_IND, T1.FS_AID_CD, T1.FS_ELIG_CD,
          T1.AFDC_ASST_IND, T1.AFDC_AID_CD, T1.AFDC_ELIG_CD,
          T1.MA_ASST_IND, T1.MA_AID_CD, T1.MA_ELIG_CD
        from TWNCASE_MEMBER_HST T1,
             TWNFAM_CASE_HSTRY T2
        WHERE
          T1.UPI = :UPI
          AND T1.ICI = T2.ICI
          AND T1.PRD_BEG_DT <= :PRD-END-DT
          AND T1.PRD_END_DT >= :PRD-END-DT
          AND T2.PRD_BEG_DT <= :PRD-END-DT
          AND T2.PRD_END_DT >= :PRD-END-DT
          AND T1.HH_LEFT_DT = '9999-12-31'
          AND T1.MAINT_CD <> 'D'
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into ICI, CASE-STS, APPL-UPI, HOH-UPI,
           FS-ASST-IND, FS-AID-CD, FS-ELIG-CD,
           AFDC-ASST-IND, AFDC-AID-CD, AFDC-ELIG-CD,
           MA-ASST-IND, MA-AID-CD, MA-ELIG-CD
      for H2-2-CMH-FCH ;
  end
  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIN22Q1-S-CMH-FCH


// GET LAST VERSION
Function AIN22Q1-S-EVR()
  WDB00PI();
  /* Move name of SQL row record used to common record*/
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN22A";
  VDBCOMMON.USQLREC = "H2-ELIG-VERSION";
  VDBCONTROL.UPROC-OBJ = "H2-ELIG-VERSION";
  VDBCONTROL.UPROC-NM = "AIN22Q1-S-EVR";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  try
    open AIN22Q1-S-EVR_RSI01
      with #sql{
        select T1.CASE_RSLT_CD, T1.POSTD_DT, T1.SCHD_PAY_AMT, T1.PTNT_LBLTY_AMT,
          T1.VER_NMB, T1.LST_POSTD_VER_IND, T1.ENTLM_AMT
        from TWNELIG_VERSION T1
        WHERE
          T1.ICI = :ICI
          AND T1.PRGM_CASE_TYPE = :PRGM-CASE-TYPE
          AND T1.BNFT_YR = :BNFT-YR
          AND T1.BNFT_MTH = :BNFT-MTH
          AND T1.BNFT_TYPE IN
           ('RG', ' ')
        ORDER BY T1.VER_NMB DESC
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into CASE-RSLT-CD, POSTD-DT, SCHD-PAY-AMT, PTNT-LBLTY-AMT,
           VER-NMB, LST-POSTD-VER-IND, ENTLM-AMT
      for H2-ELIG-VERSION ;
  end
  if (sysVar.sqlData.sqlcode != 0)
    REPP9-SQL-CHKERR();
  end
end // end AIN22Q1-S-EVR


// SCAN AIN22Q1-S-BG-EXIST
Function AIN22Q1-SCAN-BG-TR()

  VDBCONTROL.UACCTYP = "R";
  VDBCONTROL.UPROC-OBJ = "H2-BG-TRN";
  VDBCONTROL.UPROC-NM = "AIN22Q1-SCAN-BG-TR";
  VDBCONTROL.UPROC-OPT = "SCAN"; /* OC-NM;*/
  VDBCOMMON.USQLREC = "H2-BG-TRN";
  try
    get next H2-BG-TRN ;
  end
  /*  */
  REPP9-SQL-CHKERR();
end // end AIN22Q1-SCAN-BG-TR


// SCAN AIN22Q1-S-EVR
Function AIN22Q1-SCAN-EVR()

  VDBCONTROL.UACCTYP = "R";
  VDBCONTROL.UPROC-OBJ = "H2-ELIG-VERSION";
  VDBCONTROL.UPROC-NM = "AIN22Q1-SCAN-EVR";
  VDBCONTROL.UPROC-OPT = "SCAN"; /* OC-NM;*/
  VDBCOMMON.USQLREC = "H2-ELIG-VERSION";
  try
    get next H2-ELIG-VERSION ;
  end
  /*  */
  REPP9-SQL-CHKERR();
end // end AIN22Q1-SCAN-EVR


// SCAN AIN22Q1-S-CMH-FCH
Function AIN22Q1-SCN-CMHFCH()

  VDBCONTROL.UACCTYP = "R";
  VDBCONTROL.UPROC-OBJ = "H2-2-CMH-FCH";
  VDBCONTROL.UPROC-NM = "AIN22Q1-SCN-CMHFCH";
  VDBCONTROL.UPROC-OPT = "SCAN"; /* OC-NM;*/
  VDBCOMMON.USQLREC = "H2-2-CMH-FCH";
  try
    get next H2-2-CMH-FCH ;
  end
  /*  */
  REPP9-SQL-CHKERR();
end // end AIN22Q1-SCN-CMHFCH


Record AIN22W type basicRecord
  10 WS-ALERT-FLAG char(1) ; 
  10 WS-UPD-IND char(1) ; 
  10 WS-ACTIVE-NOM char(1) ; 
  10 WS-END-SEARCH char(1) ; 
  10 WS-UERND-REC-EXIST char(1) ; 
  10 WS-TOLERANCE-LIMIT-FLAG char(1) ; 
  10 WS-INCAP-DISAB-FLAG char(1) ; 
  10 WS-EFF-DATE char(10) ; 
    15 WS-EFF-YR char(4) ; 
      20 WS-EFF-CC char(2) ; 
      20 WS-EFF-YY char(2) ; 
    15 WS-EFF-F1 char(1) ; 
    15 WS-EFF-MM char(2) ; 
    15 WS-EFF-F2 char(1) ; 
    15 WS-EFF-DD char(2) ; 
  10 WS-ERR-SEX char(1) ; 
  10 WS-ERR-DT-OF-BIRTH char(1) ; 
  10 WS-ERR-ZIP-CD char(1) ; 
  10 WS-ERR-PYMT-STS-CD char(1) ; 
  10 WS-ERR-PB-LAW-CD char(1) ; 
  10 WS-ERR-DTH-DT char(1) ; 
  10 WS-ERR-UERND-INC-AMT char(1) ; 
  10 WS-TRIGGER-ELIGIBILITY char(1) ; 
  10 WS-TERMINATION-STATUS char(1) ; 
  10 WS-STRT-ELIG-DT char(10) ; 
  10 WS-DSGNT-IND char(1) ; 
  10 WS-ZIP-CODE char(5) ; // ZIP CODE
    15 WS-NEVADA-ZIP-CODE char(2) ; // VALUE 89 - ZIP CODE
    15 * char(3) ; 
  10 WS-UPI int ; // UPI
  10 WS-MOVED-OUT-OF-STATE char(2) ; // MOVED OUT OF STATE CODE
  10 WS-TEMP-ICI char(9) ; 
    15 WS-ICI num(9) ; // ICI
  10 WS-START-DATE char(10) ; // START DATE
  10 WS-END-DATE char(10) ; // END STATE
  10 WS-UERND-INCM-AMT num(7,2) ; 
  10 WS-SEQ-NMBR num(2) ; // SEQUENCE NUMBER
  10 WS-PREV-AMT num(7,2) ; // PREVIOUS UNEARNED AMOUNT
  10 WS-NOMADS-SSI-AMT num(7,2) ; // NOMADS SSI AMOUNT
  10 WS-INTERFACE-SSI-AMT num(7,2) ; 
  10 WS-INDEX num(2) ; // INDEX
  10 WS-PUBLIC-LAW char(1) ; // PUBLIC LAW CODE
  10 WS-PERCENT num(6,3) ; // PERCENT
  10 WS-ZIP-CODE-9 char(9) ; // ZIP CODE
    15 WS-ZIP-CODE-5 char(5) ; 
    15 WS-ZIP-CODE-PLUS-4 char(4) ; 
  10 WS-RES-ZIP-CODE-9 char(9) ; // RESIDENT ZIP CODE
    15 WS-RES-ZIP-CODE-5 char(5) ; 
    15 WS-RES-ZIP-CODE-PLUS-4 char(4) ; 
  10 WS-FED-LIVING-ARR-CD char(1) ; // FEDERAL LIVING ARRANGEMENT CD
  10 WS-STA-LIVING-ARR-CD char(1) ; // STATE LIVING ARRANGEMENT CODE
  10 WS-PROCESS-DATE num(8) ; // PROCESS DATE
    15 WS-PROCESS-DATE-CCYY num(4) ; 
      20 WS-PROCESS-DATE-CC num(2) ; 
      20 WS-PROCESS-DATE-YR num(2) ; 
    15 WS-PROCESS-DATE-MO num(2) ; 
    15 WS-PROCESS-DATE-DT num(2) ; 
  10 WS-TERMINATION-CODE char(3) ; // TERMINATION CODE
    15 WS-TERMINATION-CODE-1 char(1) ; 
    15 * char(2) ; 
  10 WS-PAY-STATUS-CD char(3) ; // PAYMENT STATUS CODE
  10 WS-POSTING-TYPE char(1) ; // POSTING TYPE
  10 WS-CONVERSION-AMOUNT num(7,2) ; // MONTHLY UNEARNED AMOUNT
  10 WS-FACTOR num(6,3) ; // CONVERSION FACTOR
  10 WS-WKLY-FACTOR num(5,3) ; // WEEKLY CONVERSION FACTOR
  10 WS-BIWKLY-FACTOR num(5,3) ; // BIWEEKLY CONVERSION FACTOR
  10 WS-NUMBER-OF-RECS num(3) ; // NO OF UNEARNED INCOME RECS
  10 WS-CONVERSION-AMOUNT1 num(7,2) ; // NOMADS AMOUNT AFTER CONVERSION
  10 WS-CL-ACTVY-DESC char(120) ; // CL ACTIVITY DESCRIPTION
    15 WS-CL-ACTVY-DESC1 char(60) ; 
    15 WS-CL-ACTVY-DESC2 char(60) ; 
  10 WS-LOG-ENTRY-DE char(60) ; // LOG ENTRY DESCRIPTION
  10 WS-ONSET-DISABILITY-DT char(10) ; // ONSET DISABILITY DATE
    15 WS-ONSET-DSAB-DT-CY num(4) ; // ONSET DISABILITY DATE
    15 WS-ONSET-DSAB-DT-F1 char(1) ; // ONSET DISABILITY DATE
    15 WS-ONSET-DSAB-DT-MM num(2) ; // ONSET DISABILITY DATE
    15 WS-ONSET-DSAB-DT-F2 char(1) ; // ONSET DISABILITY DATE
    15 WS-ONSET-DSAB-DT-DD num(2) ; // ONSET DISABILITY DATE
  10 WS-REPORT-DIFF num(7,2) ; // DIFFERENCE IN AMT
  10 WS-REPORT-DIFF-PCT num(6,3) ; // DIFFERENCE IN PERCENTAGE
  10 WS-DISA-BEG-DT num(8) ; 
    15 WS-YEAR-DISA-BEG-DT num(4) ; 
    15 WS-MTH-DISA-BEG-DT num(2) ; 
    15 WS-DD-DISA-BEG-DT num(2) ; 
  10 WS-DISA-END-DT num(8) ; 
    15 WS-YEAR-DISA-END-DT num(4) ; 
    15 WS-MTH-DISA-END-DT num(2) ; 
    15 WS-DD-DISA-END-DT num(2) ; 
  10 WS-DISA-INDEX num(2) ; 
  10 WS-SYS-DATE char(10) ; 
    15 WS-SYS-MM char(2) ; 
    15 WS-SYS-F1 char(1) ; 
    15 WS-SYS-DD char(2) ; 
    15 WS-SYS-F2 char(1) ; 
    15 WS-SYS-YR char(4) ; 
      20 WS-SYS-NUM-YR num(4) ; 
        25 WS-SYS-CC char(2) ; 
        25 WS-SYS-YY char(2) ; 
  10 WS-NUM-DATE char(8) ; 
    15 WS-NUM1-DATE1 num(8) ; 
      20 WS-NUM1-MM num(2) ; 
      20 WS-NUM1-DD num(2) ; 
      20 WS-NUM1-YR num(4) ; 
        25 WS-NUM1-CC num(2) ; 
        25 WS-NUM1-YY num(2) ; 
  10 WS-NUM2-DATE2 num(8) ; 
    15 WS-NUM2-MM num(2) ; 
    15 WS-NUM2-DD num(2) ; 
    15 WS-NUM2-YR num(4) ; 
      20 WS-NUM2-CC num(2) ; 
      20 WS-NUM2-YY num(2) ; 
        25 WS-NUM2-Y1 num(1) ; 
        25 WS-NUM2-Y2 num(1) ; 
  10 WS-ARRAY1 num(2) [7] ; 
  10 WS-ARRAY2 num(2) [4] ; 
  10 WS-REM1 num(3) ; 
  10 WS-REM2 num(3) ; 
  10 WS-REM3 num(4) ; 
  10 WS-SSI-TOL-DIF num(7,2) ; 
  10 WS-SSI-TOL-ADD num(7,2) ; 
  10 WS-NEW-SSN char(9) ; 
  10 WS-SSN char(9) ; 
    15 WS-SSN1 num(9) ; 
  10 WS-NO-OF-RECS num(7) ; 
  10 WS-CHA-DATE char(8) ; 
    15 WS-CHA-DATE-NUM num(8) ; 
      20 WS-CHA-MM num(2) ; 
      20 WS-CHA-DD num(2) ; 
      20 WS-CHA-YR char(4) ; 
        25 WS-CHA-CC num(2) ; 
        25 WS-CHA-YY num(2) ; 
  10 WS-TEMP-CC char(2) ; 
    15 WS-TEMP1-CC num(2) ; 
  10 WS-TEMP-MM char(2) ; 
    15 WS-TEMP1-MM num(2) ; 
  10 WS-TEMP-DD char(2) ; 
    15 WS-TEMP1-DD num(2) ; 
  10 WS-SYS1-DATE char(10) ; 
    15 WS-SYS1-YR char(4) ; 
      20 WS-SYS1-CC char(2) ; 
      20 WS-SYS1-YY char(2) ; 
    15 WS-SYS1-F1 char(1) ; 
    15 WS-SYS1-MM char(2) ; 
    15 WS-SYS1-F2 char(1) ; 
    15 WS-SYS1-DD char(2) ; 
  10 WS-SYS2-DATE char(10) ; 
    15 WS-SYS2-YR num(4) ; 
      20 WS-SYS2-CC char(2) ; 
      20 WS-SYS2-YY char(2) ; 
    15 WS-SYS2-F1 char(1) ; 
    15 WS-SYS2-MM num(2) ; 
    15 WS-SYS2-F2 char(1) ; 
    15 WS-SYS2-DD num(2) ; 
  10 WS-CROSS-REF-IND char(2) ; 
    15 WS-CROSS1-REF-IND smallint ; 
  10 WS-EARNED-PER char(2) ; 
    15 WS-EARNED2-PER num(1) ; 
    15 WS-EARNED1-PER char(1) ; 
  10 WS-CUR-YR char(4) ; 
    15 WS-CUR1-YR num(4) ; 
      20 WS-CUR-CC num(2) ; 
      20 WS-CUR-YY num(2) ; 
  10 WS-FREQ char(1) ; 
  10 WS-TOLERANCE-AMT num(7,2) ; 
  10 WS-OFC-CD char(2) ; 
  10 WS-CLAIM-NBR char(12) ; 
    15 WS-CLAIM-FIRST-TEN char(9) ; 
    15 WS-CLAIM-LAST-TWO char(2) ; 
    15 WS-CLAIM-FIL char(1) ; 
  10 WS-RCVD-DATE char(10) ; // PROCESS DATE
    15 WS-RCVD-CC num(2) ; 
    15 WS-RCVD-YR num(2) ; 
    15 WS-RCVD-F1 char(1) ; 
    15 WS-RCVD-MO num(2) ; 
    15 WS-RCVD-F2 char(1) ; 
    15 WS-RCVD-DT num(2) ; 
  10 WS-INVO-MND-DEDN-AMT decimal(9,2) ; // INVO_MND_DEDN_AMT
  10 WS-BNFTS-APLD-IND char(1) ; // BNFTS_APLD_IND
  10 WS-PRD-BEG-DT char(10) ; 
  10 WS-PRD-END-DT char(10) ; 
  10 WS-UNIN-BEG-DT char(10) ; 
    15 WS-YEAR-UNIN-BEG-DT num(4) ; 
    15 WS-FILL-UNIN-BEG-1 char(1) ; 
    15 WS-MTH-UNIN-BEG-DT num(2) ; 
    15 WS-FILL-UNIN-BEG-2 char(1) ; 
    15 WS-DD-UNIN-BEG-DT num(2) ; 
  10 WS-UNIN-END-DT char(10) ; 
    15 WS-YEAR-UNIN-END-DT num(4) ; 
    15 WS-YR-END-FIL1 char(1) ; 
    15 WS-MTH-UNIN-END-DT num(2) ; 
    15 WS-YR-END-FIL2 char(1) ; 
    15 WS-DD-UNIN-END-DT num(2) ; 
  10 WS-DISA-PRD-BEG-DT char(10) ; 
    15 WS-YR-DISA-PRD-BEG-DT num(4) ; 
    15 WS-FILL-DISA-PRD-BEG-1 char(1) ; 
    15 WS-MTH-DISA-PRD-BEG-DT num(2) ; 
    15 WS-FILL-DISA-PRD-BEG-2 char(1) ; 
    15 WS-DD-DISA-PRD-BEG-DT num(2) ; 
  10 WS-DISA-PRD-END-DT char(10) ; 
    15 WS-YR-DISA-PRD-END-DT num(4) ; 
    15 WS-FILL-DISA-PRD-END-1 char(1) ; 
    15 WS-MTH-DISA-PRD-END-DT num(2) ; 
    15 WS-FILL-DISA-PRD-END-2 char(1) ; 
    15 WS-DD-DISA-PRD-END-DT num(2) ; 
  10 WS-RECOVER-AMOUNT num(9,2) ; 
  10 WS-TOLERANCE-LIMIT num(7,2) ; 
  10 WS-ERR-UERND-INCM-AMT char(1) ; 
  10 WS-UNIN-MORE-REC char(1) ; 
  10 WS-UNIN-FREQ-FLAG char(1) ; 
  10 WS-UNIN-UPDATED char(1) ; 
  10 WS-DISA-UPDATED char(1) ; 
  10 WS-NO-UNIN-REC char(1) ; 
  10 WS-LSUM-ADDED char(1) ; 
  10 WS-NOMADS-PROCESS-DATE char(10) ; 
    15 WS-NOMADS-PROCESS-CCYY num(4) ; 
      25 WS-NOMADS-PROCESS-CC num(2) ; 
      25 WS-NOMADS-PROCESS-YY num(2) ; 
    15 WS-NOMADS-PROCESS-HYPHEN-1 char(1) ; 
    15 WS-NOMADS-PROCESS-MM num(2) ; 
    15 WS-NOMADS-PROCESS-HYPHEN-2 char(1) ; 
    15 WS-NOMADS-PROCESS-DD num(2) ; 
  10 WS-NOMADS-PROCESS2-CCYYMM num(6) ; 
    15 WS-NOMADS-PROCESS2-CCYY num(4) ; 
    15 WS-NOMADS-PROCESS2-MM num(2) ; 
  10 WS-TEMP-CCYYMM num(6) ; 
    15 WS-TEMP-CCYY2 num(4) ; 
    15 WS-TEMP-MM2 num(2) ; 
  10 WS-MAX-SQ-NMB num(2) ; 
  10 WS-ERR-CD char(8) ; 
    15 WS-ERR-FRST-FOUR char(4) ; 
    15 WS-ERR-LAST-FOUR char(4) ; 
  10 WS-DUMMY-DATE num(6) ; // PROCESS DATE
    15 WS-DUM-MM num(2) ; // PROCESS DATE
    15 WS-DUM-YR num(4) ; // PROCESS DATE
      20 WS-DUM-CC num(2) ; // PROCESS DATE
      20 WS-DUM-YY num(2) ; // PROCESS DATE
  10 WS-FIRST-DATE char(10) ; // PROCESS DATE
    15 WS-FIRST-CCYY num(4) ; 
      20 WS-FIRST-CC num(2) ; 
      20 WS-FIRST-YY num(2) ; 
    15 WS-FIRST-F1 char(1) ; 
    15 WS-FIRST-MM num(2) ; 
    15 WS-FIRST-F2 char(1) ; 
    15 WS-FIRST-DD num(2) ; 
  10 WS-LAST-DATE char(10) ; // PROCESS DATE
    15 WS-LAST-CCYY num(4) ; 
      20 WS-LAST-CC num(2) ; 
      20 WS-LAST-YY num(2) ; 
    15 WS-LAST-F1 char(1) ; 
    15 WS-LAST-MM num(2) ; 
    15 WS-LAST-F2 char(1) ; 
    15 WS-LAST-DD num(2) ; 
  10 WS-PREV-DATE char(10) ; // PROCESS DATE
    15 WS-PREV-CCYY num(4) ; 
      20 WS-PREV-CC num(2) ; 
      20 WS-PREV-YY num(2) ; 
    15 WS-PREV-F1 char(1) ; 
    15 WS-PREV-MM num(2) ; 
    15 WS-PREV-F2 char(1) ; 
    15 WS-PREV-DD num(2) ; 
  10 WS-CASE-OPEN char(2) ; 
  10 WS-VALID-ENROL-DT char(10) ; 
    15 WS-VALID-ENROL-YY num(4) ; 
    15 WS-VALID-DASH-1 char(1) ; 
    15 WS-VALID-ENROL-MM num(2) ; 
    15 WS-VALID-DASH-2 char(1) ; 
    15 WS-VALID-ENROL-DD num(2) ; 
  10 WS-DATE-MM-CHA char(2) ; 
  10 WS-DATE-MM-NUM num(2) ; 
  10 WS-DATE-YR-CHA char(4) ; 
  10 WS-DATE-YR-NUM num(4) ; 
  10 WS-CUT-OFF char(10) ; 
    15 WS-CUT-OFF-YY char(4) ; 
    15 WS-CUT-OFF-DASH-1 char(1) ; 
    15 WS-CUT-OFF-MM char(2) ; 
    15 WS-CUT-OFF-DASH-2 char(1) ; 
    15 WS-CUT-OFF-DD char(2) ; 
  10 WS-DATE-BEG char(10) ; 
    15 WS-DATE-BEG-YY char(4) ; 
    15 WS-DATE-BEG-DASH-1 char(1) ; 
    15 WS-DATE-BEG-MM char(2) ; 
    15 WS-DATE-BEG-DASH-2 char(1) ; 
    15 WS-DATE-BEG-DD char(2) ; 
  10 WS-DATE-END char(10) ; 
    15 WS-DATE-END-YY char(4) ; 
    15 WS-DATE-END-DASH-1 char(1) ; 
    15 WS-DATE-END-MM char(2) ; 
    15 WS-DATE-END-DASH-2 char(1) ; 
    15 WS-DATE-END-DD char(2) ; 
  10 WS-SSI-RFRL-STS-CD char(1) ; 
end // end AIN22W


Record AIN22W-CLOG-RECD type basicRecord
  10 WS-AUTO-MSG char(192) ; 
    15 WS-LINE1 char(64) ; 
    15 WS-LINE2 char(64) ; 
    15 WS-LINE3 char(64) ; 
end // end AIN22W-CLOG-RECD


Record AIN22W-COST-ARRAY type basicRecord
  10 CWS-ARRAY-SIZE num(3) ; 
  10 CWS-ARRAY-IDX smallint ; 
  10 CWS-ARRAY char(111) [100] ; 
    15 CWS-UPI int ; 
    15 CWS-ICI int ; 
    15 CWS-PRGM-CASE-TYPE char(2) ; 
    15 CWS-BNFT-MTH smallint ; 
    15 CWS-BNFT-YR smallint ; 
    15 CWS-INFC-BDATE char(10) ; 
    15 CWS-INFC-TYPE char(8) ; 
    15 CWS-INFC-TS char(26) ; 
    15 CWS-PRIOR-VER-NMB smallint ; 
    15 CWS-PRIOR-ELIG-VER-AMT decimal(7,2) ; 
    15 CWS-PRIOR-CASE-RSLT-CD char(1) ; 
    15 CWS-PRIOR-AID-CD char(3) ; 
    15 CWS-PRIOR-ELIG-CD char(1) ; 
    15 CWS-TRAN-PRD-FM-DT char(10) ; 
    15 CWS-TRAN-PRD-TO-DT char(10) ; 
    15 CWS-REC-PROCESS-DT char(10) ; 
    15 CWS-BG-TRAN-STS-CD char(2) ; 
    15 CWS-MAINT-DT char(10) ; 
end // end AIN22W-COST-ARRAY


Record AIN22W-DATES type basicRecord
  10 BDATE-8 char(8) ; 
    15 BDATE-8-NUM num(8) ; 
      20 BDATE-8-CCYY char(4) ; 
        25 BDATE-8-CCYY-NUM num(4) ; 
      20 BDATE-8-MM char(2) ; 
      20 BDATE-8-DD char(2) ; 
  10 * char(1) ; 
  10 BDATE char(10) ; 
    15 BDATE-CCYY char(4) ; 
      20 BDATE-CC char(2) ; 
      20 BDATE-YY char(2) ; 
    15 BDATE-F1 char(1) ; 
    15 BDATE-MM char(2) ; 
    15 BDATE-F2 char(1) ; 
    15 BDATE-DD char(2) ; 
  10 * char(1) ; 
  10 WS-CURR-MTH-END-DT char(10) ; 
    15 WS-CURR-MTH-END-DT-CCYY char(4) ; 
      20 WS-CURR-MTH-END-DT-CCYY-NUM num(4) ; 
        25 WS-CURR-MTH-END-DT-CC char(2) ; 
        25 WS-CURR-MTH-END-DT-YY char(2) ; 
    15 WS-CURR-MTH-END-DT-F1 char(1) ; 
    15 WS-CURR-MTH-END-DT-MM char(2) ; 
      20 WS-CURR-MTH-END-DT-MM-NUM num(2) ; 
    15 WS-CURR-MTH-END-DT-F2 char(1) ; 
    15 WS-CURR-MTH-END-DT-DD char(2) ; 
  10 * char(1) ; 
  10 WS-CALC-EFF-DATE char(10) ; 
    15 WS-CALC-EFF-CCYY char(4) ; 
      17 WS-CALC-EFF-CCYY-NUM num(4) ; 
        20 WS-CALC-EFF-CC char(2) ; 
        20 WS-CALC-EFF-YY char(2) ; 
    15 WS-CALC-EFF-F1 char(1) ; 
    15 WS-CALC-EFF-MM char(2) ; 
      17 WS-CALC-EFF-MM-NUM num(2) ; 
    15 WS-CALC-EFF-F2 char(1) ; 
    15 WS-CALC-EFF-DD char(2) ; 
end // end AIN22W-DATES


//*** RECORD=AIN22W-HDR ****
// sdx header record definition
// **************************
Record AIN22W-HDR type basicRecord
  10 AIN22HDR char(3000) ; 
    15 F1 char(1) ; 
    15 SDX-ID char(3) ; 
    15 F2 char(1) ; 
    15 NV-ID char(2) ; 
    15 F3 char(1) ; 
    15 PROC-DT char(6) ; 
    15 F4 char(1) ; 
    15 H-T-IND char(1) ; 
    15 F5 char(4) ; 
    15 EFF-DT-MMYY char(4) ; 
      20 EFF-DT-MM char(2) ; 
      20 EFF-DT-YY char(2) ; 
    15 F6 char(2976) ; 
end // end AIN22W-HDR


Record AIN22W-ICI-ARRAY type basicRecord
  10 IWS-ARRAY-SIZE num(3) ; 
  10 IWS-ARRAY-IDX smallint ; 
  10 IWS-ARRAY char(4) [50] ; 
    15 IWS-ICI int ; 
end // end AIN22W-ICI-ARRAY


Record AIN22W-UNIN-NEW type basicRecord
  10 WS-AFDC-CNTBL-IND char(1) ; 
  10 WS-FS-CNTBL-IND char(1) ; 
  10 WS-MA-CNTBL-CD char(1) ; 
  10 WS-PREV-AMT decimal(10,2) ; 
  10 WS-UERND-INC-TYPE-CD char(2) ; 
  10 WS-UERND-INC-FREQ char(1) ; 
  10 WS-UERND-INC-AMT decimal(10,2) ; 
  10 WS-UERND-INC-RCVD-DT char(10) ; 
    15 WS-UERND-INC-RCVD-DT-CC char(2) ; 
    15 WS-UERND-INC-RCVD-DT-YY char(2) ; 
    15 WS-UERND-INC-RCVD-DT-FILL1 char(1) ; 
    15 WS-UERND-INC-RCVD-DT-MM char(2) ; 
    15 WS-UERND-INC-RCVD-DT-FILL2 char(1) ; 
    15 WS-UERND-INC-RCVD-DT-DD char(2) ; 
  10 WS-FS-CNTBL-AMT decimal(9,2) ; 
end // end AIN22W-UNIN-NEW


Record AIN22W-UNIN-OLD type basicRecord
  10 WS-AFDC-CNTBL-IND char(1) ; 
  10 WS-FS-CNTBL-IND char(1) ; 
  10 WS-MA-CNTBL-CD char(1) ; 
  10 WS-PREV-AMT decimal(10,2) ; 
  10 WS-UERND-INC-TYPE-CD char(2) ; 
  10 WS-UERND-INC-FREQ char(1) ; 
  10 WS-UERND-INC-AMT decimal(10,2) ; 
  10 WS-UERND-INC-RCVD-DT char(10) ; 
    15 WS-UERND-INC-RCVD-DT-CC char(2) ; 
    15 WS-UERND-INC-RCVD-DT-YY char(2) ; 
    15 WS-UERND-INC-RCVD-DT-FILL1 char(1) ; 
    15 WS-UERND-INC-RCVD-DT-MM char(2) ; 
    15 WS-UERND-INC-RCVD-DT-FILL2 char(1) ; 
    15 WS-UERND-INC-RCVD-DT-DD char(2) ; 
  10 WS-FS-CNTBL-AMT decimal(9,2) ; 
end // end AIN22W-UNIN-OLD


Record AIN22W-UNIN-W1 type basicRecord
  10 WS-CLOG-INS char(1) ; 
  10 WS-AUTO-MSG char(192) ; 
    15 WS-LINE1 char(64) ; 
      20 WS-TEXT11 char(17) ; 
      20 WS-VALU11 char(1) ; 
      20 WS-TEXT12 char(1) ; 
      20 WS-VALU12 char(1) ; 
      20 WS-TEXT13 char(1) ; 
      20 WS-VALU13 char(1) ; 
      20 WS-FILL13 char(1) ; 
      20 WS-TEXT14 char(4) ; 
      20 WS-VALU14 char(1) ; 
      20 WS-TEXT15 char(1) ; 
      20 WS-VALU15 char(1) ; 
      20 WS-TEXT16 char(1) ; 
      20 WS-VALU16 char(1) ; 
      20 WS-FILL16 char(1) ; 
      20 WS-TEXT17 char(7) ; 
      20 WS-VALU17 char(2) ; 
      20 WS-FILL17 char(1) ; 
      20 WS-TEXT18 char(4) ; 
      20 WS-VALU18 char(2) ; 
      20 WS-FILL18 char(1) ; 
      20 WS-TEXT19 char(7) ; 
      20 WS-VALU19 char(1) ; 
      20 WS-FILL19 char(1) ; 
      20 WS-TEXT110 char(4) ; 
      20 WS-VALU110 char(1) ; 
    15 WS-LINE2 char(64) ; 
      20 WS-TEXT21 char(9) ; 
      20 WS-VALU21 char(2) ; 
      20 WS-TEXT22 char(1) ; 
      20 WS-VALU22 char(2) ; 
      20 WS-TEXT23 char(1) ; 
      20 WS-VALU23 char(2) ; 
      20 WS-FILL23 char(1) ; 
      20 WS-TEXT24 char(4) ; 
      20 WS-VALU24 char(2) ; 
      20 WS-TEXT25 char(1) ; 
      20 WS-VALU25 char(2) ; 
      20 WS-TEXT26 char(1) ; 
      20 WS-VALU26 char(2) ; 
      20 WS-FILL26 char(1) ; 
      20 WS-TEXT27 char(12) ; 
      20 WS-VALU27 char(8) ; 
      20 WS-FILL27 char(1) ; 
      20 WS-TEXT28 char(4) ; 
      20 WS-VALU28 char(8) ; 
    15 WS-LINE3 char(64) ; 
      20 WS-TEXT31 char(8) ; 
      20 WS-VALU31 char(8) ; 
      20 WS-FILL31 char(1) ; 
      20 WS-TEXT32 char(4) ; 
      20 WS-VALU32 char(8) ; 
      20 WS-FILL32 char(3) ; 
      20 WS-TEXT33 char(11) ; 
      20 WS-VALU33 char(8) ; 
      20 WS-FILL33 char(1) ; 
      20 WS-TEXT34 char(4) ; 
      20 WS-VALU34 char(8) ; 
  10 WS-CCYY char(4) ; 
    15 WS-CC char(2) ; 
    15 WS-YY char(2) ; 
end // end AIN22W-UNIN-W1


Record AIN22W1 type basicRecord
  10 PALERT-PARMS char(37) ; 
    15 PALERT-ALERT-ID num(6) ; // ALERT IDENTIFICATION NO
    15 PALERT-CASE-ID char(10) ; // CASE ID OR SSN + SUFX
      20 PALERT-UPI num(9) ; 
      20 PALERT-SUFX char(1) ; 
    15 PALERT-ACTION char(1) ; 
    15 PALERT-ACTION-ID char(10) ; // ACTION
    15 PALERT-DISP-DT char(10) ; // DISPLAY DATE
end // end AIN22W1


Record AIN22W2 type basicRecord
  10 WS-DATE num(8) ; 
    15 WS-DATE-CCYY num(4) ; 
      20 WS-DATE-CC num(2) ; 
        25 WS-DATE-CC-C char(2) ; 
      20 WS-DATE-YY num(2) ; 
        25 WS-DATE-YY-C char(2) ; 
    15 WS-DATE-MM num(2) ; 
      20 WS-DATE-MM-C char(2) ; 
    15 WS-DATE-DD num(2) ; 
      20 WS-DATE-DD-C char(2) ; 
  10 WS-PREV-DATE char(10) ; 
    15 WS-PREV-CC char(2) ; 
    15 WS-PREV-YY char(2) ; 
    15 WS-PREV-FILLER1 char(1) ; 
    15 WS-PREV-MM char(2) ; 
    15 WS-PREV-FILLER2 char(1) ; 
    15 WS-PREV-DD char(2) ; 
  10 WS-CH2-DATE char(10) ; 
    15 WS-CH2-YR char(4) ; 
      20 WS-CH2-CC char(2) ; 
      20 WS-CH2-YY char(2) ; 
    15 WS-CH2-FILLER1 char(1) ; 
    15 WS-CH2-MM char(2) ; 
    15 WS-CH2-FILLER2 char(1) ; 
    15 WS-CH2-DD char(2) ; 
  10 WS-TEMP-MM num(2) ; 
    15 WS-TEMP-MM-C char(2) ; 
  10 WS-REM1 num(2) ; 
  10 WS-REM2 num(2) ; 
  10 WS-REM3 num(2) ; 
end // end AIN22W2


Record AIN22W2-COST type basicRecord
  10 PRIOR-ELIG-VER-AMT decimal(9,2) ; 
  10 NEW-ELIG-VER-AMT decimal(9,2) ; 
  10 AMT-DIFF decimal(9,2) ; 
  10 INFC-CHGD-ELIG-AMT-FG char(1) ; 
  10 INFC-BG-TRAN-STS char(2) ; 
  10 INFC-BG-TRAN-PRD-FM-DT char(10) ; 
  10 INFC-BG-TRAN-PRD-TO-DT char(10) ; 
  10 * char(3) ; 
  10 BFR-BG-TRAN-FR-DT char(10) ; 
    15 BFR-BG-TRAN-FR-CCYY char(4) ; 
    15 BFR-BG-TRAN-FR-FILL1 char(1) ; 
    15 BFR-BG-TRAN-FR-MM char(2) ; 
    15 BFR-BG-TRAN-FR-FILL2 char(1) ; 
    15 BFR-BG-TRAN-FR-DD char(2) ; 
  10 * char(3) ; 
  10 WORK-BNFT-DT char(10) ; 
    15 WORK-BNFT-CCYY num(4) ; 
      20 WORK-BNFT-CC num(2) ; 
      20 WORK-BNFT-YY num(2) ; 
    15 WORK-BNFT-FILL1 char(1) ; 
    15 WORK-BNFT-MM num(2) ; 
    15 WORK-BNFT-FILL2 char(1) ; 
    15 WORK-BNFT-DD num(2) ; 
  10 * char(3) ; 
  10 BFR-BG-TRAN-TO-DT char(10) ; 
    15 BFR-BG-TRAN-TO-CCYY char(4) ; 
    15 BFR-BG-TRAN-TO-FILL1 char(1) ; 
    15 BFR-BG-TRAN-TO-MM char(2) ; 
    15 BFR-BG-TRAN-TO-FILL2 char(1) ; 
    15 BFR-BG-TRAN-TO-DD char(2) ; 
  10 * char(3) ; 
  10 WORK-TO-BNFT-DT char(6) ; 
    15 WORK-TO-BNFT-CCYY char(4) ; 
    15 WORK-TO-BNFT-MM char(2) ; 
  10 * char(3) ; 
  10 BFR-FCH-BEG-DT char(10) ; 
  10 WS-CHECK-BG-SYS-DATE char(10) ; 
  10 WS-BG-CRN-TS char(26) ; 
    15 WS-BG-CRN-DATE char(10) ; 
    15 WS-BG-CRN-MISC char(16) ; 
  10 WS-CMH-FCH-PRD-END-DT char(10) ; 
  10 * char(1) ; 
  10 INFILE-DATE num(6) ; 
    15 INFILE-DATE-MM num(2) ; 
    15 INFILE-DATE-CCYY num(4) ; 
      20 INFILE-DATE-CC num(2) ; 
      20 INFILE-DATE-YY num(2) ; 
end // end AIN22W2-COST
