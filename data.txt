private static String left(String s, int n) {
    String t = nz(s).toUpperCase(); // do NOT trim: fixed-width behavior
    return t.length() <= n ? t : t.substring(0, n);
}

private static String padRight(String s, int n) {
    String t = nz(s).toUpperCase();
    if (t.length() >= n) return t.substring(0, n);
    StringBuilder sb = new StringBuilder(t);
    while (sb.length() < n) sb.append(' ');
    return sb.toString();
}

private static String normAid3(String aid) {
    // emulate char(3): uppercased, right-padded/truncated to 3
    return padRight(aid, 3);
}

private static String normCaseload5(String casld) {
    // FamCase CASLD is char(5) in EGL; pad/truncate to 5 for strictness
    return padRight(casld, 5);
}

private static String normOfc2(String ofc) {
    // OFC code is 2 chars in EGL
    return padRight(ofc, 2);
}






private static String normKey(String ofc, String casld, String aid) {
    return normOfc2(ofc) + "|" + normCaseload5(casld) + "|" + normAid3(aid);
}
