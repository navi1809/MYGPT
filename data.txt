package gov.illinois.fw.presentation.customtags;

/**
 * The group custom tag class builds the html tags to display
 * prefix,suffix,first,middle and last name parts of the Name field
 * inlcuding the custom styles and validation scripts
 * Creation date: (3/5/2002 1:56:30 PM)
 * Modified On:  	Purpose:								Modified By:
 * 08/28/02 		To add the HELPID and the lblDesc		Rajeswari Shankar
 * 10/02/02			Employee and client name display		Malathi Manivannan
 * 10/08/02			Remove table for client and employee
 * 						name display						Malathi Manivannan
 * 01/06/03			Changes for IReferenceTableManager		Malathi Manivannan
 * 01/17/03			Changes for Application scope		    Malathi Manivannan
 * @author: Rajeswari Shankar
 */

import gov.illinois.fw.management.util.FWAgeFinder;
import gov.illinois.ies.presentation.view.pageelements.FirstName;
import gov.illinois.ies.presentation.view.pageelements.IPageElement;
import gov.illinois.ies.presentation.view.pageelements.LastName;
import gov.illinois.ies.presentation.view.pageelements.MiddleName;
import gov.illinois.ies.presentation.view.pageelements.PrefixName;
import gov.illinois.ies.presentation.view.pageelements.SuffixName;
import gov.illinois.ies.presentation.view.viewconstants.ViewConstants;

import java.sql.Timestamp;
import java.util.HashMap;
import java.util.Map;


/**
 *
 *
 * @author Deloitte
 * @version %Revision%

 */
public class FWGroupNameTag extends  FWBaseCustomTag
{
//  private String variable to hold the prefixName
	/**
 * Field prefixName.
 */
private String prefixName      = null;
//  private String variable to hold the suffixName
	/**
 * Field suffixName.
 */
private String suffixName      = null;
//  private String variable to hold the firstName
	/**
 * Field firstName.
 */
private String firstName       = null;
//  private String variable to hold the lastName
	/**
 * Field lastName.
 */
private String lastName        = null;
//  private String variable to hold the middleName
	/**
 * Field middleName.
 */
private String middleName      = null;
//  private String variable to hold the pageMode
	/**
 * Field pageMode.
 */
private String pageMode        = "1";
//  private String variable to hold the tabIndex
	/**
 * Field tabIndex.
 */
private String tabIndex        = null;
//  private String variable to hold the prefix javascript
	/**
 * Field prNameScript.
 */
private String prNameScript    = null;
//  private String variable to hold the suffix javascript
	/**
 * Field sxNameScript.
 */
private String sxNameScript    = null;
//  private String variable to hold the firstName javascript
	/**
 * Field firstNameScript.
 */
private String firstNameScript = null;
//  private String variable to hold the lastName javascript
	/**
 * Field lastNameScript.
 */
private String lastNameScript  = null;
//  private String variable to hold the middleName javascript
	/**
 * Field middleNameScript.
 */
private String middleNameScript= null;
//  private String variable to hold flag for the mandatory marker
	/**
 * Field mandatoryMarker.
 */
private String mandatoryMarker = null;
//  private int variable to hold the tabindex
	/**
 * Field tabIdx.
 */
private int tabIdx=0;
//  private String variable to hold the label description
	/**
 * Field lblDesc.
 */
private String lblDesc="";
//  private String variable to hold the HELPID
	/**
 * Field HELPID.
 */
private String HELPID="";
//  private String variable to hold the security, if the fw security is overriden
	/**
 * Field mode.
 */
private String mode    =null;
private String disableLabel = null;
private String tagHelpId = null;


//  private String variable to hold the tagStyle
	/**
 * Field tagStyle.
 */
String tagStyle="";
//  private String variable to hold the tagStyle1
	/**
 * Field tagStyle1.
 */
String tagStyle1 = "form50";
//  private String variable to hold the tagStyle2
	/**
 * Field tagStyle2.
 */
String tagStyle2 = "form150";
	/**
	 * Field tagStyle3.
	 */
	String tagStyle3 = "form75";

//  private String variable to hold the requestdate
	/**
 * Field requestDate.
 */
private java.lang.String requestDate="";

//  private String variable to hold the selected value for the select box
	/**
 * Field selectedVal.
 */
String selectedVal = "";
//  private String variable to hold the script value for the select box
	/**
 * Field script.
 */
String script="";
//  private String variable to hold the emptyspace for the select box
	/**
 * Field emptySpace.
 */
String emptySpace = "NO";
//  private String variable to hold the referenceTableName value for the select box
	/**
 * Field referenceTableName.
 */
String referenceTableName="";
//  private String variable to hold the name of the select box
	/**
 * Field name.
 */
String name="";
//  private String variable to hold the name of the nameGroup bean id
	/**
 * Field nameGroupBeanId.
 */
String nameGroupBeanId=null;

//  private String variable to hold the name of the nameGroup bean id
	/**
 * Field userType.
 */
String userType=null;
//  private String variable to hold the firstName
	//private int age       = 0;
//  private String variable to hold the lastName
	/**
 * Field gender.
 */
private String altId = "";

private char gender   = 0;

	/**
	 * Field other.
	 */
	private String other=" ";

	/**
	 * Field dob.
	 */
	java.sql.Timestamp dob =  null;
	/**
	 * Field currentDt.
	 */
	private java.sql.Timestamp currentDt= new java.sql.Timestamp(new java.util.Date().getTime());

	/**
	 * Field age.
	 */
	int age = -1;
	/**
	 * Field textStyle.
	 */
	String textStyle = "capitalizeText";
	/**
	 * Field textTransformFunction.
	 */
	String textTransformFunction = ".toTitleCase()";

	// other values are .toUpperCase(), .toLowerCase(), .toSentenceCase(), .toTitleCase()
	// .toSentenceCase(), .toTitleCase() are non-standard custom functions


    /**
     * Constructor for FWGroupNameTag.
     */
	public FWGroupNameTag(){
  	super();
	  }


	/**This method creates and returns the html label and input tags for the
	 * Name fields including validation scripts.
	 * Method buildHTML.
	 * @return StringBuffer*/
	 public StringBuffer buildHTML() {

//   String buffer to carry the content of the constructed html content
     StringBuffer content = new StringBuffer();
	 String requiredStr = ViewConstants.REQUIRED_IMAGE;

     if (tagSuffixName != null && !(tagSuffixName.trim()).equals("")) {
	    	tagSuffixName = "_"+tagSuffixName;
     } else {
	    	tagSuffixName = "";
	 }

     try {

     	// take the instance of the page beans required for the name group

		PrefixName      pxName    = new PrefixName();
		SuffixName      sxName    = new SuffixName();
		FirstName       firstNam  = new FirstName();
		LastName        lastNam   = new LastName();
		MiddleName      midNam    = new MiddleName();



		if (prefixName == null ) prefixName="";
		if (firstName == null )  firstName="";
		if (lastName == null )   lastName="";
		if (middleName == null ) middleName="";
		if (suffixName == null ) suffixName="";
		if (userType == null) userType= "";


		if (!(firstName.equals("")) ){
		//firstName = firstName.toLowerCase();
		String firstCap = firstName.substring(0,1);
		firstCap = firstCap.toUpperCase();
		String fname = firstName.substring(1);
		firstName = firstCap + fname;
		}

		if (!(middleName.equals("")) ){
		//middleName = middleName.toLowerCase();
		String midCap = middleName.substring(0,1);
		midCap = midCap.toUpperCase();
		String mname = middleName.substring(1);
		middleName = midCap + mname;
		}

		if (!(lastName.equals("")) ){
		//lastName = lastName.toLowerCase();
		String lastCap = lastName.substring(0,1);
		lastCap = lastCap.toUpperCase();
		String lname = lastName.substring(1);
		lastName = lastCap + lname;
		}


		//decide the class attribute depending upon the security

		if((getControl() == 0) || (mode != null && mode.equals("0")) )
		{
		tagStyle1 = tagStyle1+"readOnly";
		tagStyle2 = tagStyle2+"readOnly";
		tagStyle3 = tagStyle3+"readOnly";

		}

		tagStyle2 = tagStyle2+" "+textStyle;
		tagStyle3 = tagStyle3+" "+textStyle;

 	  	// get the nameGroup name by using the use bean id defined in the jsp
          	IPageElement obj = null;
          	if(pageContext.getAttribute(nameGroupBeanId) != null){
          		obj = (IPageElement) pageContext.getAttribute(nameGroupBeanId);
          	}else{
          		obj = (IPageElement) pageContext.getServletContext().getAttribute(nameGroupBeanId);
          	}

		HELPID = obj.getFIELD_NAME();


			if(pageMode.equals("2"))
			{
				if (firstName.length()>10)
				{
					//firstName = firstName.substring(0,10);
					firstName = firstName.substring(0,firstName.length());
				}
				if (middleName.length()>10)
				{
					middleName = middleName.substring(0,10);
				}
				if (lastName.length()>10)
				{
					//lastName = lastName.substring(0,10);
					lastName = lastName.substring(0,lastName.length());
				}

				if (userType.equals("emp")){
					if( !(middleName.equals("")) ){
					middleName = middleName.substring(0,1);
					}
					content.append(lastName);
					content.append(", "); //BRGUS00103760-deshmukha-To add space after comma
					content.append(firstName);
					content.append(" ");
					content.append(middleName);
				}
				else if(userType.equals("client")){

					if( dob != null){
						age = FWAgeFinder.getYearsBetween(dob,currentDt);
					}
					content.append(lastName);
					content.append(", "); //BRGUS00103760-deshmukha-To add space after comma
					content.append(firstName);
					content.append(" ");
					//BRGUS00097916 – jampanip – if age is not entered , displaying it as blank instead of '#'
					if(age==-1)content.append(" ");
					if(age>=0)content.append(age);
					if(gender == 0){
						//content.append("U");
					}
					else
					{
						content.append(gender);
					}

				}else if(userType.equals("clientDetails"))
				{
					if( dob != null){
						age = FWAgeFinder.getYearsBetween(dob,currentDt);
					}
					content.append(lastName);
					content.append(", "); //BRGUS00103760-deshmukha-To add space after comma
					content.append(firstName);
					content.append(" ");
					content.append(middleName);
					content.append(" ");
					//BRGUS00097916 – jampanip – if age is not entered , displaying it as blank instead of '#'
					if(age==-1)content.append(" ");
					if(age>=0)content.append(age);
					if(gender == 0){
						//content.append("U");
					}
					else
					{
						content.append(gender);
					}	
				}
				
				else if(userType.equals(""))
				{
					content.append("<table width='722' border='0' class='bodyFormLabels'>");
					content.append("<tr>");
					content.append("<td Width = '52' >");
					content.append("<b>");


					content.append(pxName.getLABEL()+": ");
					content.append("</b>");


					content.append("</td>");
					content.append("<td Width = '40'>");
					content.append(FWReferenceData.getValueByKeyCode("NAMEPREFIX",prefixName,"DESCRIPTION",""));
					content.append("</td>");

					content.append("<td Width = '52'>");
					content.append("<b>");


					content.append(firstNam.getLABEL()+": ");

					content.append("</b>");
					content.append("</td>");
					content.append("<td Width = '104'>");
					content.append(firstName);
					content.append("</td>");
					content.append("<td Width = '35'>");
					content.append("<b>");
					content.append(midNam.getLABEL()+": ");
					content.append("</b>");
					content.append("</td>");
					content.append("<td Width = '85'>");
					content.append(middleName);
					content.append("</td>");

					content.append("</td>");
					content.append("<td Width = '52'>");
					content.append("<b>");
					content.append(lastNam.getLABEL()+": ");
					content.append("</b>");
					content.append("</td>");
					content.append("<td Width = '107'>");
					content.append(lastName);
					content.append("</td>");

					content.append("<td Width = '50' >");
					content.append("<b>");
					content.append(sxName.getLABEL()+": ");
					content.append("</b>");
					content.append("</td>");
					content.append("<td Width = '40'>");
					content.append(FWReferenceData.getValueByKeyCode("NAMESUFFIX",suffixName,"DESCRIPTION",""));
					content.append("</td>");
					content.append("</tr>");
					content.append("</table>");
				}

			}	else if(pageMode.equals("1"))	{


                if(tabIndex != null && !(tabIndex.equals("")))
                {
                  tabIdx = Integer.parseInt(tabIndex);
                }
				content.append("<table width='722' border='0' class='bodyFormLabels'>");
				content.append("<tr colspan = '10'>");
				//construct the prefix name
				content.append("<td Width = '52' >");
//This code added for LABEL HELP by Santosh
				//String beanName = obj.getFIELD_NAME();
				String beanName = obj.getFIELD_NAME();
		    	String prefixLabel = pxName.getLABEL();
				if(disableLabel == null){
					if (tagHelpId == null) {
		             	tagHelpId = beanName;
		             	tagID=beanName;
		             }
		            if(disableLabel == null)
		            	 content.append("<LABEL ");

		        	if (tagID != null) {
		        		if(altId!=null && getAltId().length()>0)
		        		{
		       		   content.append("FOR=\""+pxName.getFIELD_NAME()+tagSuffixName+"\"  ");
		        		}
		        		else
		        		{
		        			content.append("FOR=\""+pxName.getFIELD_NAME()+"\"  ");
		        		}
		         	}
		        	content.append("title=\""+prefixLabel+"\"  ");
		       	if (tagHelpId != null) {
		        		content.append("onClick=\"openHelpFromLabel('"+tagHelpId+"')\"");
		       	}

		       	content.append(">");
		       	content.append(prefixLabel);
		       	content.append("</LABEL>");
				//lblDesc = pxName.getLABEL();
				//content.append(lblDesc+": ");
//This code added for LABEL HELP by Santosh
				content.append("</td>");
				}
				content.append("<td Width = '40'>");

				referenceTableName = "NAMEPREFIX";
				name = pxName.getFIELD_NAME();
				tagStyle      = tagStyle1;
				selectedVal = prefixName;
				emptySpace    = "YES";
				script        = prNameScript;

				if(tabIndex != null && !(tabIndex.equals("")))
    		    {
					tabIndex = String.valueOf(tabIdx);
    		    }

				Map args1 = new HashMap();
				args1.put("refTableName", referenceTableName);
				args1.put("requestDate", requestDate);
				args1.put("selectedVal", selectedVal);
				args1.put("mode", mode);
				args1.put("other",other);
				args1.put("lblDesc", lblDesc);
				args1.put("HELPID", HELPID);
				args1.put("tagStyle", tagStyle);
				args1.put("script", script);
				args1.put("tabIndex", tabIndex);
				args1.put("name", name);
				args1.put("title", pxName.getLABEL()); 
				args1.put("suffixName",tagSuffixName);
				args1.put("emptySpace", emptySpace);
				args1.put("control", String.valueOf(getControl()));
				content = FWReferenceData.getDropdown(content, args1);

				content.append("</td>");
				content.append("<td Width = '52'>");
				//construct the first name
//This code added for LABEL HELP by Santosh
				String firstLabel = firstNam.getLABEL();
			     if(mandatoryMarker != null && mandatoryMarker.equals("Y"))
		 		content.append("<nobr><img src='/images/bulletRequired.gif' width='6' alt=''> ");
				if(disableLabel == null){
					if (tagHelpId == null) {
		             	tagHelpId = beanName;
		             	tagID=beanName;
		             }
		            if(disableLabel == null)
		            	 content.append("<LABEL ");

		        	if (tagID != null) {
		        		if(altId!=null && getAltId().length()>0)
		        		{
		       		   content.append("FOR=\""+firstNam.getFIELD_NAME()+tagSuffixName+"\"  ");
		        		}
		        		else
		        		{
		        			content.append("FOR=\""+firstNam.getFIELD_NAME()+"\"  ");
		        		}
		         	}
		        	content.append("title=\""+firstLabel+"\"  ");
		       	if (tagHelpId != null) {
		        		content.append("onClick=\"openHelpFromLabel('"+tagHelpId+"')\"");
		       	}

		       	content.append(">");
		       	content.append(firstLabel);
		       	if("Y".equals(mandatoryMarker)){
		       		content.append("<b class=\"hidden\"> Required</b>");
		       	}
		       	content.append("</LABEL>");


				//content.append(firstNam.getLABEL());
				//content.append(": <nobr>");
//This code added for LABEL HELP by Santosh
				content.append("</td>");
				}
				content.append("<td Width = '104'>");
				content.append("<input  type='text' id='"+firstNam.getFIELD_NAME()+tagSuffixName+"' name='"+firstNam.getFIELD_NAME()+tagSuffixName+"' value = \""+firstName+"\"  maxlength = '30' ");
				content.append(" lblDesc = '"+firstNam.getLABEL()+"' ");
				if(mandatoryMarker != null && mandatoryMarker.equals("Y")) {
				  content.append("title=\""+firstLabel+" "+requiredStr+"\"  ");
				} else
					content.append("title=\""+firstLabel+"\"  ");

				content.append(" HELPID = '"+HELPID+"' ");
			    if(tabIndex != null && !(tabIndex.equals("")))
    		    {

					content.append(" tabindex = '"+String.valueOf(tabIdx)+"' ");
    		    }

				content.append("  CLASS=\""+tagStyle2+"\" ");

    		    if((getControl()== 0) || (mode != null && mode.equals("0")) )
				{
				content.append("  onBlur=\"resetElement(this); \"");
				}
				else {
				    content.append("validate='");
					if(mandatoryMarker != null && mandatoryMarker.equals("Y")) {
 						content.append("isComplete("+tagFormName+"."+firstNam.getFIELD_NAME()+tagSuffixName+");");
					}

					if(firstNameScript != null && !(firstNameScript.equals("")) )
					{
						content.append(firstNameScript);
					}
					content.append("'");
					content.append("  onBlur=\"this.value=this.value"+textTransformFunction+"; \"");
				}

				content.append(" >");
				content.append("</td>");
				content.append("<td Width = '35'>");
				//construct the middle name
//This code added for LABEL HELP by Santosh
				String middleLabel = midNam.getLABEL();
				if(disableLabel == null){
					if (tagHelpId == null) {
		             	tagHelpId = beanName;
		             	tagID=beanName;
		             }
		            if(disableLabel == null)
		            	 content.append("<LABEL ");

		        	if (tagID != null) {
		        		if(altId!=null && getAltId().length()>0)
		        		{
		        			content.append("FOR=\""+midNam.getFIELD_NAME()+tagSuffixName+"\"  ");
		        		}
		        		else
		        		{
		        			content.append("FOR=\""+midNam.getFIELD_NAME()+"\"  ");
		        		}
		         	}
		        	content.append("title=\""+middleLabel+"\"  ");
		       	if (tagHelpId != null) {
		        		content.append("onClick=\"openHelpFromLabel('"+tagHelpId+"')\"");
		       	}

		       	content.append(">");
		       	content.append(middleLabel);
		       	content.append("</LABEL>");
				//content.append(midNam.getLABEL());
				content.append("</td>");
				}
//This code added for LABEL HELP by Santosh
				content.append("<td Width = '85'>");
				content.append("<input  type='text' id='"+midNam.getFIELD_NAME()+tagSuffixName+"' name='"+midNam.getFIELD_NAME()+tagSuffixName+"' value = \""+middleName+"\"  maxlength = '30' ");
				content.append(" lblDesc = '"+midNam.getLABEL()+"' ");
				content.append("title=\""+middleLabel+"\"  ");
				content.append(" HELPID = '"+HELPID+"' ");

				if(tabIndex != null && !(tabIndex.equals(""))) {
					content.append(" tabindex = '"+String.valueOf(tabIdx)+"' ");
    		    }

				content.append("  CLASS=\""+tagStyle3+"\" ");
			    if((getControl() == 0) || (mode != null && mode.equals("0")) )
				{
				content.append("  onBlur=\"resetElement(this); \"");
				}
				else
				{
				   content.append("validate='");

					if(middleNameScript != null && !(middleNameScript.equals("")) )
					{
						content.append(middleNameScript);
					}

					content.append("'");
					content.append("  onBlur=\"this.value=this.value"+textTransformFunction+"; \"");

				}

				content.append(" >");
				content.append("</td>");

				content.append("<td Width = '52' style=\"white-space:nowrap;\">");
//This code added for LABEL HELP by Santosh
				//construct the last name
				String lastLabel = lastNam.getLABEL();
				if(mandatoryMarker != null && mandatoryMarker.equals("Y"))
		 		content.append("<img src='/images/bulletRequired.gif' width='6' alt=''> ");
				if(disableLabel == null){
					if (tagHelpId == null) {
		             	tagHelpId = beanName;
		             	tagID=beanName;
		             }
		            if(disableLabel == null)
		            	 content.append("<LABEL ");

		        	if (tagID != null) {
		        		if(altId!=null && getAltId().length()>0)
		        		{
		       		   content.append("FOR=\""+lastNam.getFIELD_NAME()+tagSuffixName+"\"  ");
		        		}
		        		else
		        		{
		        			content.append("FOR=\""+lastNam.getFIELD_NAME()+"\"  ");
		        		}
		         	}
		        	content.append("title=\""+lastLabel+"\"  ");
		       	if (tagHelpId != null) {
		        		content.append("onClick=\"openHelpFromLabel('"+tagHelpId+"')\"");
		       	}

		       	content.append(">");
		       	content.append(lastLabel);
		       	if("Y".equals(mandatoryMarker)){
		       		content.append("<b class=\"hidden\"> Required</b>");
		       	}
		       	content.append("</LABEL>");

				//content.append(lastNam.getLABEL());
				//content.append("</nobr>");
//This code added for LABEL HELP by Santosh
				content.append("</td>");
				}
				content.append("<td Width = '107'>");

				content.append("<input  type='text' id='"+lastNam.getFIELD_NAME()+tagSuffixName+"' name='"+lastNam.getFIELD_NAME()+tagSuffixName+"' value = \""+lastName+"\"  maxlength = '30' ");
				content.append(" lblDesc = '"+lastNam.getLABEL()+"' ");
				if(mandatoryMarker != null && mandatoryMarker.equals("Y")) {
					  content.append("title=\""+lastLabel+" "+requiredStr+"\"  ");
				} else
				     content.append("title=\""+lastLabel+"\"  ");
				content.append(" HELPID = '"+HELPID+"' ");

				if(tabIndex != null && !(tabIndex.equals("")))
    		    {

					content.append(" tabindex = '"+String.valueOf(tabIdx)+"' ");
    		    }

				content.append("  CLASS=\""+tagStyle2+"\" ");


				if((getControl() == 0) || (mode != null && mode.equals("0")) )
				{
				content.append("  onBlur=\"resetElement(this); \"");
				}
				else
				{

				    content.append("validate='");
					if(mandatoryMarker != null && mandatoryMarker.equals("Y")) {
 						content.append("isComplete("+tagFormName+"."+lastNam.getFIELD_NAME()+tagSuffixName+");");
					}

					if(lastNameScript != null && !(lastNameScript.equals("")) )
					{
						content.append(lastNameScript);
					}

					content.append("'");
					content.append("  onBlur=\"this.value=this.value"+textTransformFunction+"; \"");
				}

				content.append(" >");
				content.append("</td>");
				//construct the suffix
				content.append("<td Width = '50' >");
//This code added for LABEL HELP by Santosh
				String suffixLabel = sxName.getLABEL();
				if(disableLabel == null){
					if (tagHelpId == null) {
		             	tagHelpId = beanName;
		             	tagID=beanName;
		             }
		            if(disableLabel == null)
		            	 content.append("<LABEL ");

		        	if (tagID != null) {
		        		if(altId!=null && getAltId().length()>0)
		        		{
		       		   content.append("FOR=\""+sxName.getFIELD_NAME()+tagSuffixName+"\"  ");
		        		}
		        		else
		        		{
		        			content.append("FOR=\""+sxName.getFIELD_NAME()+"\"  ");
		        		}
		         	}
		        	content.append("title=\""+suffixLabel+"\"  ");
		       	if (tagHelpId != null) {
		        		content.append("onClick=\"openHelpFromLabel('"+tagHelpId+"')\"");
		       	}

		       	content.append(">");
		       	content.append(suffixLabel);
		       	content.append("</LABEL>");
				//lblDesc = sxName.getLABEL();
				//content.append(lblDesc+": ");
				content.append("</td>");
			}
//This code added for LABEL HELP by Santosh
				content.append("<td Width = '40'>");

				referenceTableName = "NAMESUFFIX";
				name = sxName.getFIELD_NAME();
				tagStyle      = tagStyle1;
				selectedVal   = suffixName;
				emptySpace    = "YES";
				script        = sxNameScript;

				if(tabIndex != null && !(tabIndex.equals("")))
    		    {
					tabIndex = String.valueOf(tabIdx);
    		    }

				Map args2 = new HashMap();
				args2.put("refTableName", referenceTableName);
				args2.put("requestDate", requestDate);
				args2.put("selectedVal", selectedVal);
				args2.put("mode", mode);
				args2.put("other",other);
				args2.put("lblDesc", lblDesc);
				args2.put("HELPID", HELPID);
				args2.put("tagStyle", tagStyle);
				args2.put("script", script);
				args2.put("tabIndex", tabIndex);
				args2.put("name", name);
				args2.put("title", sxName.getLABEL());
				args2.put("suffixName",tagSuffixName);
				args2.put("emptySpace", emptySpace);
				args2.put("control", String.valueOf(getControl()));
				content = FWReferenceData.getDropdown(content, args2);

				content.append("</td>");
				content.append("</tr>");
				content.append("</table>");

			}

		}
		catch(Exception ioe)
		{

		}
		return content;
	}


/**
*Returns the mode of the page that indicates whether Name is read-only or not
 * Creation date: (1/18/2002 4:40:07 PM)
 * @return String*/
public String getPageMode() {
	return pageMode;
}

/**
*Returns the mode of the page that indicates whether Name is read-only or not
 * Creation date: (1/18/2002 4:42:05 PM)
 * @param newPageMode String*/
public void setPageMode(String newPageMode) {
	pageMode = newPageMode;

}




/**
 *Returns the tab index of name
 * Creation date: (1/18/2002 4:40:07 PM)
 * @return String*/
public String getTabIndex() {
	return tabIndex;
}

/**
 *Sets the tab index of name
 * Creation date: (1/18/2002 4:42:05 PM)
 * @param newTabIndex String*/
public void setTabIndex(String newTabIndex) {
	tabIndex = newTabIndex;

}





	/**
	 *Returns the prefix part of the name
	 * @return String*/
	public String getPrefixName() {
		return prefixName;
	}
	/**
	 *Sets the prefix part of the name
	 * @param prefixName The prefixName to set*/
	public void setPrefixName(String prefixName) {
		this.prefixName = prefixName;
	}


	/**
	 *Returns the suffix part of the name
	 * @return String*/
	public String getSuffixName() {
		return suffixName;
	}
	/**
	 *Sets the suffix part of the name
	 * @param suffixName The suffixName to set*/
	public void setSuffixName(String suffixName) {
		this.suffixName = suffixName;
	}


	/**
	 *Returns the first name part of the Name
	 * @return String*/
	public String getFirstName() {
		return firstName;
	}
	/**
	 *Sets the first name part of the Name
	 * @param firstName The firstName to set*/
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}


	/**
	 *Returns the last name part of the Name
	 * @return String*/
	public String getLastName() {
		return lastName;
	}
	/**
	 *Sets the last name part of the Name
	 * @param lastName The lastName to set*/
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}


	/**
	 *Returns the middle name part of the Name
	 * @return String*/
	public String getMiddleName() {
		return middleName;
	}
	/**
	 *Sets the middle name part of the Name
	 * @param middleName The middleName to set*/
	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}


	/**
	 *Returns the javascript for prefix name
	 * @return String*/
	public String getPrNameScript() {
		return prNameScript;
	}
	/**
	 *Sets the javascript for prefix name
	 * @param prNameScript The prNameScript to set*/
	public void setPrNameScript(String prNameScript) {
		this.prNameScript = prNameScript;
	}


	/**
	 *Returns the javascript for suffix name
	 * @return String*/
	public String getSxNameScript() {
		return sxNameScript;
	}
	/**
	 *Sets the javascript for suffix name
	 * @param sxNameScript The sxNameScript to set*/
	public void setSxNameScript(String sxNameScript) {
		this.sxNameScript = sxNameScript;
	}


	/**
	 *Returns the javascript for first name
	 * @return String*/
	public String getFirstNameScript() {
		return firstNameScript;
	}
	/**
	 *Sets the javascript for first name
	 * @param firstNameScript The firstNameScript to set*/
	public void setFirstNameScript(String firstNameScript) {
		this.firstNameScript = firstNameScript;
	}


	/**
	 *Returns the javascript for last name
	 * @return String*/
	public String getLastNameScript() {
		return lastNameScript;
	}
	/**
	 *Sets the javascript for last name
	 * @param lastNameScript The lastNameScript to set*/
	public void setLastNameScript(String lastNameScript) {
		this.lastNameScript = lastNameScript;
	}


	/**
	 *Returns the javascript for middle name
	 * @return String*/
	public String getMiddleNameScript() {
		return middleNameScript;
	}
	/**
	 *Sets the javascript for middle name
	 * @param middleNameScript The middleNameScript to set*/
	public void setMiddleNameScript(String middleNameScript) {
		this.middleNameScript = middleNameScript;
	}

 	/**
	 *Sets the security mode to override the framework security
	 * @param mode The mode to set*/
	public void setMode(String mode) {
		this.mode = mode;
	}

     /**
      * Method decideStyles.
      */
	 public void decideStyles() {
	  }

	 /*
	 public StringBuffer getDropdown(StringBuffer content)
	 {
		String selection=" ";
		String disable=" ";
		String other=" ";
		String style=" ";
		if (script == null) {
			script= "";
		}
		try {
				IReferenceTableManager iReference = ReferenceTableManager.getInstance();
				Map m;

				if (requestDate != null && !requestDate.equals(""))
				{
					Timestamp ts = Timestamp.valueOf(requestDate+" 00:00:00.0");
					m = iReference.getReferenceTableData(referenceTableName, ts);
				}
				else
				{
					m = iReference.getReferenceTableData(referenceTableName);
				}
				if(selectedVal != null)
				{
				selection = selectedVal.trim();
				}

				String select = "selected";
				content.append("<select name=\""+name +tagSuffixName+"\" id=\""+name +tagSuffixName+"\" tabIndex=\"" + tabIndex + "\" "+script + " "+ disable +" " + other );
				content.append(" lblDesc = '"+lblDesc+"' ");
				content.append(" HELPID = '"+HELPID+"' ");

				if((getControl() ==0) || (mode != null && mode.equals("0")) )
				{
				content.append("  CLASS=\""+tagStyle+"\"  onChange=\"resetElement(this); \"");
				}
				else
				{
				content.append("  CLASS=\""+tagStyle+"\"");
				}

				content.append(" >");

				if (emptySpace.equalsIgnoreCase("YES"))	{
					content.append("<option value=\" ");
					content.append("\" >");
					content.append("</option>");
					content.append("\r\t");
				}


				Iterator it = m.keySet().iterator();
				while(it.hasNext()) {
					String selected="";
		  			Object obj = it.next();
		   			Map res = (Map)m.get(obj);
		   			Iterator i = res.keySet().iterator();
        	   		String rtValue=null;
         	  		String rtDesc=null;

		   			while(i.hasNext()) {
			  			String k = (String)i.next();
			  			if(k.equalsIgnoreCase("CODE")) {
			    			rtValue = (String) res.get(k);
			  			} else if (k.equalsIgnoreCase("DESCRIPTION")) {
				 			rtDesc = (String) res.get(k);
			  			}
			  			if(rtValue != null && rtDesc != null) {
			  				if (rtValue.equalsIgnoreCase(selection) || rtValue.equalsIgnoreCase(selectedVal))	{
								selected = select;
							}
							content.append("<option value=\"");
							content.append(rtValue);
							content.append("\" " + selected + " >");
							content.append(rtDesc);
							content.append("</option>");
							content.append("\r\t");
							break;
			  			}
		  			}
				}
				content.append("</select>");
			}
			 catch (Exception e) {		}
		return content;
	}*/

 	/**
	 *Returns the falg that indicates to display mandatory Marker
	 * @return String*/
	public String getMandatoryMarker() {
		return mandatoryMarker;
	}
	/**
	 *Sets the falg that indicates to display mandatory Marker
	 * @param mandatoryMarker The mandatoryMarker to set*/
	public void setMandatoryMarker(String mandatoryMarker) {
		this.mandatoryMarker = mandatoryMarker;
	}
 	/**
	 *Returns the bean id of the Name group tag
	 * @return String*/
	public String getNameGroupBeanId() {
		return nameGroupBeanId;
	}
	/**
	 *Sets the bean id of the Name group tag
	 * @param nameGroupBeanId The nameGroupBeanId to set*/
	public void setNameGroupBeanId(String nameGroupBeanId) {
		this.nameGroupBeanId = nameGroupBeanId;
	}
	/**
	 *Returns the type of user
	 * @return String*/
	public String getUserType() {
		return userType;
	}
	/**
	 *Sets the user type
	 * @param userType String*/
	public void setuserType(String userType) {
		this.userType = userType;
	}
	/**
	 *Returns the age
	 * @return String*/
	public String getAge() {
		return String.valueOf(age);
	}
	/**
	 *Sets the age
	 * @param age int*/
	public void setAge(int age) {
		this.age = age;
	}


	/**
	 *Returns the gender
	 * @return String*/
	public String getGender() {
		return String.valueOf(gender);
	}
	/**
	 *Sets the gender
	 * @param gender */
	public void setGender(char gender) {
		this.gender = gender;
	}

	/**
	 *Sets the gender
	 * @param gender */
	public void setGender(String gender) {
		this.gender = (char)((gender.toCharArray())[0]);

	}

	/**
	 *Returns the date of birth
	 * @return java.sql.Timestamp*/
	public java.sql.Timestamp getDob() {
		return dob;
	}
	/**
	 *Sets the date of birth
	 * @param dob Timestamp*/
	public void setDob(Timestamp dob) {
		this.dob = dob;
	}
	
	public String getAltId() {
		return altId;
	}


	public void setAltId(String altId) {
		this.altId = altId;
	}
 }


