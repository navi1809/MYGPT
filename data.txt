import java.util.Set;
import java.util.HashSet;
import java.util.stream.Collectors;


private static String nz(String s) { return s == null ? "" : s; }
private static String normKey(String ofc, String casld, String aid) {
    // AMA46A compares uppercased fixed-width fields; normalized uppercase+trim works here
    return nz(ofc).trim().toUpperCase() + "|" +
           nz(casld).trim().toUpperCase() + "|" +
           nz(aid).trim().toUpperCase();
}


                }
            }

            // ---------- FINAL SWEEP (AMA46A EOF FLUSH) ----------
            // Build a set of **existing** PCE keys (DB) + anything we already decided to add
            Set<String> existingKeys = new HashSet<>(
                pceRecords.stream()
                          .map(r -> normKey(r.getOfficeCode(), r.getCaseLoadId(), r.getAidCode()))
                          .collect(Collectors.toSet())
            );
            existingKeys.addAll(
                newPceRecords.stream()
                             .map(r -> normKey(r.getOfficeCode(), r.getCaseLoadId(), r.getAidCode()))
                             .collect(Collectors.toSet())
            );

            // For every FamCase key that doesn't exist in PCE, create a new PCE row
            for (FamCaseStatsOfficeRecord fam : famCaseStatsOfcRecord) {
                String key = normKey(fam.getOfcCd(), fam.getCasldId(), fam.getAidCd());
                // mirror AMA46A "non-blank" guard
                if (fam.getOfcCd() != null && !fam.getOfcCd().trim().isEmpty()
                        && fam.getCasldId() != null && !fam.getCasldId().trim().isEmpty()
                        && !existingKeys.contains(key)) {
                    ReportMonthlyCaseHistorySorRecord add = mapToNewPceRecord(fam);
                    newPceRecords.add(add);
                    existingKeys.add(key); // avoid duplicates if this sweep runs again
                }
            }
            // ---------- END FINAL SWEEP ----------

            logNewProgramCaseHistories(newPceRecords);
            performDatabaseOperations(newPceRecords);
