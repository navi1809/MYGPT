function displaySelectedMemberRecord(selectedRecord) {
	$("#messageContainer").hide();
	if (null != $("#messageCaseClosedMemb").html()
			&& $('#messageCaseClosedMemb').is(':hidden')) {
		$("#messageCaseClosedMemb").show();
	}
	highlightRow("selectedRecord");
	var options = {
		url : '/caseprocessingweb/displayMemInfo',
		data : 'selectedRecord='
				+ $("#" + selectedRecord.form.id).find(
						'input[name="selectedRecord"]:checked').val(),
		success : function(htmlText, status, xhr) {
			var ct = xhr.getResponseHeader("content-type") || "";
			if (ct.indexOf('application/json') > -1) {
				updateScreenForJSONResponse(htmlText, false, xhr,
						'messageContainer', '', false);
			} else {
				if ($("#messageCaseClosedMemb").length == 0) {
					$("#deleteButton").removeAttr('disabled');
				}
				$("#prism_Button").prop('disabled', true);
				if (xhr.getResponseHeader("return-type") != "message") {
					$("#memberDetails").html(htmlText);
				}
				$('input[name="selectedStagingRecord"]').each(
						function(checked) {
							if ($(this).attr('checked') == "checked") {
								this.checked = false;
								return;
							}
						});
				highlightMandatoryFieldsOnLoad();
				listernerForUnbornSelected();
				checkIfhighlightedMandatoryFieldsAreFilled();
				$('input[name=selectedStagingRecord]:hidden').val('');
				var membereditor_form_data = $(".member").serialize();
				/*
				 * Because serialize() ignores checkboxes and radio buttons: *
				 * ***weird**
				 */
				membereditor_form_data = membereditor_form_data.concat(jQuery(
						'#memberDetails input[type=checkbox]:checked').map(
						function() {
							return {
								"name" : this.name,
								"value" : this.value
							}
						}).get());
				$(document.body).data('membereditor_form_data',
						membereditor_form_data);
				$(document.body).data('prism_form_data', '');
				var alias_form_data = $(".alias").serialize();
				$(document.body).data('alias_form_data', alias_form_data);
				$.unblockUI();
			}
		}
	};
	showWait();
	$.ajax(options);

}

function resetProgramRequestsDate(programCheck, id, effectiveDate){
	if ($(programCheck).attr('checked') != 'checked'){
		if(id != null) $(id).val('');
		if(effectiveDate != null) $(effectiveDate).val('');
	}
}

function displayRecord(selectedRecord) {
	if (null != $("#messageCaseClosedMemb").html()
			&& $('#messageCaseClosedMemb').is(':hidden')) {
		$("#messageCaseClosedMemb").show();
	}
	var existingRecordValue = document.getElementById("table_radio_"
			+ bapHome.getExistingRecordValue());
	if ((bapHome.isDifferentRecord(selectedRecord.value) || (bapHome
			.isAddAction()))
			&& checkIfMemDataChanged()) {
		var dialog = $(
				'<p>Are you sure you want to continue? Any unsaved information will be lost.</p>')
				.dialog(
						{
							draggable : false,
							resizable : false,
							position : 'center',
							dialogClass : "hideCloseIcon",
							modal : true,
							buttons : {
								"Ok" : function() {
									displaySelectedMemberRecord(selectedRecord);
									dialog.dialog('close');
								},
								"Cancel" : function() {
									dialog.dialog('close');
									if (!bapHome.isAddAction()) {
										var newRecordValue = document
												.getElementById("table_radio_"
														+ selectedRecord.value);
										existingRecordValue.checked = true;
										newRecordValue.checked = false;
										bapHome
												.setExistingRecordValue(existingRecordValue.value);
									} else {
										$('input[name="selectedRecord"]')
												.each(
														function(checked) {
															if ($(this).attr(
																	'checked') == "checked") {
																this.checked = false;
															}
														});
									}
								}
							}
						});
	} else if (checkIfMemDataChagedInPrismMode()) {
		var dialog = $(
				'<p>Are you sure you want to continue? Any unsaved information will be lost.</p>')
				.dialog(
						{
							draggable : false,
							resizable : false,
							position : 'center',
							dialogClass : "hideCloseIcon",
							modal : true,
							buttons : {
								"Ok" : function() {
									displaySelectedMemberRecord(selectedRecord);
									dialog.dialog('close');
								},
								"Cancel" : function() {
									var upi = $('#upi').val();
									var newRecord = $('#table_radio_' + upi)
											.val();
									if (newRecord == undefined
											|| newRecord == '') {
										$('input[name="selectedRecord"]')
												.each(
														function(checked) {
															if ($(this).attr(
																	'checked') == "checked") {
																this.checked = false;
															}
														});
									} else {
										$('#table_radio_' + upi).prop(
												"checked", true);
									}
									dialog.dialog('close');
								}
							}
						});
	} else {
		displaySelectedMemberRecord(selectedRecord);
	}
}

function deleteMemRecord() {
	try {
		var dialog = $(
				'<p>Are you sure you want to continue? This will permanently delete the selected record.</p>')
				.dialog(
						{
							draggable : false,
							resizable : false,
							position : 'center',
							dialogClass : "hideCloseIcon",
							modal : true,
							buttons : {
								"Delete" : function() {
									$("#messageCaseClosedMemb").hide()
									var selectedRecord = $(
											'input[name=selectedRecord]:checked',
											'#memberHOME').val();

									var url = $("#del_URL_MEMB").attr('value');
									showWait();
									$.ajax({
										type : "POST",
										url : url,
										data : {
											"selectedRecord" : selectedRecord,
										},
										success : function(data, status, xhr) {
											$(document.body).data(
													'clean_form_data', '');
											if (data.response.status) {
												$("#current").trigger("click");
												displayResults(data,
														'messageContainer', '',
														false);
											} else {
												displayResults(data,
														'messageContainer', '',
														false);
											}
											$.unblockUI();
										}
									});

									dialog.dialog('close');
								},
								"Cancel" : function() {
									dialog.dialog('close');
								}
							}
						});
	} catch (e) {
		console.log("Error : " + e);
	}
}

function addNewRecord() {
	var isSorSelected = false;
	$('input[name="selectedRecord"]').each(function(checked) {
		if ($(this).attr('checked') == "checked") {
			isSorSelected = true;
		}
	});
	if ((isSorSelected || (bapHome.isAddAction())) && checkIfMemDataChanged()) {
		var dialog = $(
				'<p>Are you sure you want to continue? Any unsaved information will be lost.</p>')
				.dialog({
					draggable : false,
					resizable : false,
					position : 'center',
					dialogClass : "hideCloseIcon",
					modal : true,
					buttons : {
						"Ok" : function() {
							addMembRecord();
							dialog.dialog('close');
						},
						"Cancel" : function() {
							dialog.dialog('close');
						}
					}
				});
	} else {
		addMembRecord();
	}

}

function addMembRecord() {
	var options = {
		url : $("#add_URL_MEMB").attr('value'),
		success : function(htmlText,status, xhr) {
			$.unblockUI();
			$("#deleteButton").prop('disabled', true);
			$("#prism_Button").prop('disabled', true);
			try {
				$('input[name="selectedRecord"]').each(function(checked) {
					if ($(this).attr('checked') == "checked") {
						this.checked = false;
						highlightRow("selectedRecord");
						return;
					}
				});
				$('input[name="selectedStagingRecord"]').each(
						function(checked) {
							if ($(this).attr('checked') == "checked") {
								this.checked = false;
								highlightRow("selectedRecord");
								return;
							}
						});
				$(document.body).data('membereditor_form_data', '');
			} catch (e) {
				console.log("Error : " + e);
			}
			handleMemberDisplayMessage();
			updateScreenForJSONResponse(htmlText, false, xhr, 'memberDetails', '', false);
			disableAllFieldsForPrim();
			addMasks();
			$('input[name=selectedStagingRecord]:hidden').val('');
			var prism_form_data = $(".bapHome").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('prism_form_data', prism_form_data);
			var membereditor_form_data = $(".member").serialize();
			/*
			 * Because serialize() ignores checkboxes and radio buttons:
			 * ***weird**
			 */
			membereditor_form_data = membereditor_form_data.concat(jQuery(
					'#memberDetails input[type=checkbox]:checked').map(
					function() {
						return {
							"name" : this.name,
							"value" : this.value
						}
					}).get());
			$(document.body).data('membereditor_form_data',
					membereditor_form_data);
			$(document.body).data('prism_form_data', '');
			var alias_form_data = $(".alias").serialize();
			$(document.body).data('alias_form_data', alias_form_data);
			bapHome.setAddAction(true);
		}
	};
	showWait();
	console.log("sending request..");

	$("#memberHOME").ajaxSubmit(options);
}

var checkIfMemDataChagedInPrismMode = function() {
	var prim_form_data = $(document.body).data('prism_form_data');
	if (prim_form_data == '') {
		return false;
	} else {
		var prism_dirty_form_data = $(".bapHome").find(
				"select,input[type!=hidden],textarea").serialize();
		var prism_form_data = $(document.body).data('prism_form_data');
		if (prism_dirty_form_data != prism_form_data) {
			return true;
		} else {
			return false;
		}
	}
};

var checkIfMemDataChanged = function() {
	var membereditor_dirty_form_data = $(".member").serialize();
	/* Because serialize() ignores checkboxes and radio buttons: */
	membereditor_dirty_form_data = membereditor_dirty_form_data.concat(jQuery(
			'#memberDetails input[type=checkbox]:checked').map(function() {
		return {
			"name" : this.name,
			"value" : this.value
		}
	}).get());
	var membereditor_form_data = $(document.body)
			.data('membereditor_form_data');
	var alias_dirty_form_data = $(".alias").serialize();
	var alias_form_data = $(document.body).data('alias_form_data');

	if ((membereditor_form_data != '' && membereditor_form_data != undefined && membereditor_dirty_form_data != membereditor_form_data)
			|| (alias_form_data != '' && alias_dirty_form_data != alias_form_data)) {
		return true;
	} else {
		return false;
	}
}

var checkIfMbr3PopUpDataChanged = function() {
	var mbr3popupeditor_dirty_form_data = $("#otherMemberInfo").find(
			"select,input[type!=hidden],textarea").serialize();
	var mbr3popupeditor_form_data = $(document.body).data(
			'mbr3popUp_clean_form_data');
	if (mbr3popupeditor_dirty_form_data != mbr3popupeditor_form_data) {
		return true;
	} else {
		return false;
	}

}

function disableAllFieldsForPrim() {
	if ($("#upi").val() == '') {
		$("#memberDetails").find('input,textarea,select')
				.prop('disabled', true);
		$('#lastName').prop('disabled', false);
		$('#firstName').prop('disabled', false);
		$('#ssn').prop('disabled', false);
		$('#middleInitial').prop('disabled', false);
		$('#gender').prop('disabled', false);
		$('#dateOfBirth').prop('disabled', false);
		$('#ethnicityCode').prop('disabled', false);
		$('#suffix').prop('disabled', false);
		$('#gender').removeClass('decoratedMissingField');
		$('#gender').removeClass('mandatoryInput');
		$('#gender').prop("onchange", null);
		$('#dateOfBirth').removeClass('decoratedMissingField');
		$('#dateOfBirth').removeClass('mandatoryInput');
		$('#ethnicityCode').removeClass('decoratedMissingField');	
		$('#ethnicityCode').removeClass('mandatoryInput');
	}

}

function disableMemberScreenExtentions() {

	$('input[name="selectedRecord"]').each(function(checked) {
		var memberChecked = $(this).attr('checked') == "checked";
		if (!memberChecked) {
			$('.button-popup-default').prop('disabled', true);
		}
	});

}

function openPrismChangeIntegration() {
	var racfId = jQuery.trim($('#racfId').val().toUpperCase());
	var ldapId = jQuery.trim($('#ldapId').val().toUpperCase());
	$('#prismUpd').val('false');
	var lNm = encodeURIComponent(jQuery.trim($('#lastName').val().toUpperCase()));
	var fNm = encodeURIComponent(jQuery.trim($('#firstName').val().toUpperCase()));

	if (lNm == '' || fNm == '') {
		validationDialog();
		return false;
	}
	var socialNumber = $('#ssn').val();
	var ssn = socialNumber.replace(/-/g, "");
	if ((ssn.length > 0) && (ssn.length < 9)) {
		validationPsudoDialog();
		return false;
	}

	var hostName = window.location.protocol + '//' + window.location.host;
	var upi = $('#upi').val();
	var url = '/casetaskweb/resolvePRISMEndPointForChange';
	$
			.ajax({
				type : "POST",
				url : url,
				data : {
					"prismFirstName" : fNm,
					"prismLastName" : lNm,
					"prismSsn" : ssn,
					"prismUpi" : upi,
					"hostName" : hostName,
					"racfId" : racfId,
					"loginName" : ldapId
				},
				success : function(data, status, xhr) {
					$('#prismDiv').show();
					$("#prismDiv").dialog("open");
					updateScreenForJSONResponse(data, false, xhr, 'prismDiv', '', false);
					$('#prismUpd').val('false');
					$("#prismDiv").focus();
				},
				error : function(data, status, xhr) {
					console.log(data);
					displayResults(data, 'messageContainer', '', false);
					$.unblockUI();
				}
			});

}

function isPrismUpdate(){
	if($('#nomadsEditMode').val() == 'true' && $('#editMode').val() == 'false'){
		$('#prismUpd').val('false');
	} else {
		var t1;
		var t2;
		var t3;
		var t4;
		var t5;
		var t6;
		t1 = $('#lName').val()
		t2 = $('#lastName').val();
		t3 = $('#fName').val();
		t4 = $('#firstName').val();
		t5 = $('#ssnNum').val();
		t6 = $('#ssn').val();
		t6 = t6.replace(/\-/g, '');
		if (t1 == t2 && t3 == t4 && t5 == t6){
			$('#prismUpd').val('false');
		}
		else {
			$('#prismUpd').val('true');
		}
	}
}

function saveMember() {
	$("#messageContainer").hide();
	if (!checkIfMemDataChanged()) {
		var dialog = $('<p>None of the screen details were modified.</p>')
				.dialog({
					draggable : false,
					resizable : false,
					position : 'center',
					dialogClass : "hideCloseIcon",
					width : 'auto',
					modal : true,
					buttons : {
						"Ok" : function() {
							dialog.dialog('close');
						}
					}
				});
		return true;
	}
	$("#messageCaseClosedMemb").hide();
	if (!checkAllRequiredFields()) {
		return true;
	}
	handleMemberDisplayMessage();
	var URL = '';
	
	if ($("#currentFooterMonth").val() == '') {
		alert("Please Select Footer Month before proceeding...");
		return true;
	}
	if ($("#editMode").val() == 'true') {
		if ($("#upi").value == '') {
			alert("Use Person Resolution to resolve or create a new person.");
			return;
		}
		console.log("Inserting Member...");
		URL = $("#insert_URL_MEMB").val();
	} else {
		console.log("Updating Member...");
		URL = $("#save_URL_MEMB").val();
		if($('#prismUpd').val() == 'true'){
			isPrismUpdate();
		}
	}
	
	if ($("#prismUpd").val() == 'true') {
		var dialog = $('<p style="font-size: 150%;">Persons First name/Last name/SSN is changed. <br />You will be redirected to Person Resolution to view selected person\'s case details before submitting the changes.</p>').dialog({
			minHeight : 150,
			maxHeight : 1000,
			width : 600,
			draggable : false,
			resizable : false,
			position : 'center',
			dialogClass : "hideCloseIcon",
			closeOnEscape : false,
			modal : true,
			buttons : {
				"OK" : function() {
					dialog.dialog('close');
					openPrismChangeIntegration();
				}
			}
		});
		return;
	} 
	showWait();
	var saveRecordPromise = $.ajax({
		type : "POST",
		url : URL,
		data : $(".bapHome").serializeArray()
	});

	saveRecordPromise
			.done(
					function(data, status, xhr) {
						console.dir(data);
						if (data.response.status) {
							$(document.body).data('clean_form_data', '');
							$(document.body).data('prism_form_data', '');
							$(document.body).data('alias_form_data', '');
							var membereditor_form_data = $(".member")
									.serialize();
							/*
							 * Because serialize() ignores checkboxes and radio
							 * buttons:
							 */
							membereditor_form_data = membereditor_form_data
									.concat(jQuery(
											'#memberDetails input[type=checkbox]:checked')
											.map(function() {
												return {
													"name" : this.name,
													"value" : this.value
												}
											}).get());
							$(document.body).data('membereditor_form_data',
									membereditor_form_data);
							var alias_form_data = $(".alias").serialize();
							$(document.body).data('alias_form_data',
									alias_form_data);
							$("#current").trigger("click");
							$('.button-popup-default').prop('disabled', false);
							if (data.response.data
									&& data.response.data.length >= 1
									&& data.response.data[0].defaultSorRecord !== '') {
								var valueToSelected = data.response.data[0].defaultSorRecord;
								var selectedValue = valueToSelected.split("##")[0];
								var selectedRadio = $('input:radio[name="selectedRecord"][value="'
										+ selectedValue + '"]');

								if (selectedRadio) {
									selectedRadio.attr('checked', true);
									displaySelectedMemberRecord(selectedRadio
											.get(0));
									$("#current").focus();
								}
							}
						}
					}).always(function(data, status, xhr) {
				displayResults(data, 'messageContainer', '', false);
				updWarningFlag(data.response.data);
			});
}

function updWarningFlag(jsonArray) {
	for (var i = 0; i < jsonArray.length; i++) {
		for ( var key in jsonArray[i]) {
			$('#' + key).val(jsonArray[i][key]);
		}
	}
}

// Global Unblock for all AJAX Requests when ajax request completes.
$(document).ajaxStop(function() {
	$.unblockUI();
	// Restore the Cursor to default after blocking.
	$(":visible").each(function(idx, item) {
		if ($(item).css("cursor")) {
			$(item).css("cursor", $(item).css("cursor"));
		}
	});
});

/* Below methods are for Prism Mock */

function openPrism() {
	var lNm = "";
	var fNm = "";
	var ssn = "";
	lNm = encodeURIComponent(jQuery.trim($('#lastName').val()));
	lNm = lNm.replace("%20", " ");
	fNm = encodeURIComponent(jQuery.trim($('#firstName').val()));
	fNm = fNm.replace("%20", " ");
	ssn = $('#ssn').val();
	if (lNm == '' || fNm == '') {
		alert('Please Enter last name and first name');
		return false;
	}
	$('#prismIndividual').val('1');
	$("#prismDiv").dialog({
		modal : true,
		height : 590,
		width : 620,
	}).dialog("open");
	showSection("searchDiv");
	$('#prismLastName').val(lNm);
	$('#prismFirstName').val(fNm);
	$('#prismSSN').val(ssn);
	$("#prismSearchResults").html("");
	$("#messageContainerPrism").html("");
}

function isStagingRecordSelected(){
	$('input[name="selectedStagingRecord"]').each(
						function(checked) {
							if ($(this).attr('checked') == "checked") {
								$("#prismSelectedFromConflict").val("Y");
								return;
							}
						});
}

function updateUpiForIndividual(upi, individualId) {
	var senddata = {};
	senddata['selectedRecord'] = upi;
	senddata['indvId'] = individualId;
	var conflictUrl = $("#PRISMCONFLICT_ENDPOINT_URL").val(); 
	var options = {
		type : "POST",
		data : senddata,
		url : conflictUrl,
		success : function(htmlText, status, xhr) {
			if (htmlText.response.status) {
				var newRadioValue = individualId + '##' + upi + '##MEMB';				
				$('input[name="selectedStagingRecord"]:checked').val(newRadioValue);
				$("#prism_Button").prop('disabled', true);
				$("#prismSelectedFromConflict").val("N");
			}
			displayResults(htmlText, 'messageContainer', '', false);
			$.unblockUI();
		}
	};
	showWait();
	$.ajax(options);
} 	

function openPrismIntegration() {
	isStagingRecordSelected();
	var racfId = jQuery.trim($('#racfId').val().toUpperCase());
	var ldapId = jQuery.trim($('#ldapId').val().toUpperCase());
	var lNm = encodeURIComponent(jQuery.trim($('#lastName').val().toUpperCase()));
	var fNm = encodeURIComponent(jQuery.trim($('#firstName').val().toUpperCase()));
	lNm = lNm.replace("%20", " ");
	fNm = fNm.replace("%20", " ");

	if (lNm == '' || fNm == '') {
		validationDialog();
		return false;
	}
	var socialNumber = $('#ssn').val();
	var ssn = socialNumber.replace(/-/g, "");
	if ((fNm == 'UNBORN') && (ssn.length == 9)) {
		validationFNameDialog();
		return false;
	}
	if ((ssn.length > 0) && (ssn.length < 9)) {
		validationPsudoDialog();
		return false;
	}
	var dateOfBirth = $('#dateOfBirth').val();
	if ((dateOfBirth != '') && (!validateDob(dateOfBirth))) {
		validationDobDialog();
		return false;
	}

	var mName = encodeURIComponent(jQuery.trim($('#middleInitial').val().toUpperCase()));
	mName = mName.replace("%20", " ");
	var gender = $('#gender').val();
	var ethnicityCode = $('#ethnicityCode').val();
	var suffix = $('#suffix').val();
	var ncpIndicator = false ;
	var hostName = window.location.protocol + '//' + window.location.host;
	var url = '/casetaskweb/resolvePRISMEndPoint';
	$
			.ajax({
				type : "POST",
				url : url,
				data : {
					"prismFirstName" : fNm,
					"prismLastName" : lNm,
					"prismSsn" : ssn,
					"prismMiddleName" : mName,
					"prismGender" : gender,
					"prismDateOfBirth" : dateOfBirth,
					"prismEthnicityCode" : ethnicityCode,
					"prismSuffix" : suffix,
					"ncpIndicator" : ncpIndicator,
					"hostName" : hostName,
					"racfId" : racfId,
					"loginName" : ldapId
				},
				success : function(data, status, xhr) {
					$('#prismDiv').show();
					$("#prismDiv").dialog("open");
					updateScreenForJSONResponse(data, false, xhr, 'prismDiv', '', false);
					$("#prismDiv").focus();
				},
				error : function(data, status, xhr) {
					console.log(data);
					displayResults(data, 'messageContainer', '', false);
					$.unblockUI();
				}
			});

}

function validationDialog() {
	var messages = [ $('#MemberPrismErrorMsg').val() ];
	var response = {};
	response['messages'] = messages;

	$("<div title='Person Resolution'>" + displayeMessage(response, 'red') + "</div>")
			.dialog({
				draggable : false,
				resizable : false,
				position : 'center',
				dialogClass : "hideCloseIcon",
				width : 'auto',
				modal : true,
				buttons : {
					"Close" : function() {
						$(this).dialog("close");
					}
				}
			});

}

function validationFNameDialog() {
	var messages = [ $('#PrismErrorFNameMsg').val() ];
	var response = {};
	response['messages'] = messages;

	$("<div title='Person Resolution'>" + displayeMessage(response, 'red') + "</div>")
			.dialog({
				draggable : false,
				resizable : false,
				position : 'center',
				dialogClass : "hideCloseIcon",
				width : 'auto',
				modal : true,
				buttons : {
					"Close" : function() {
						$(this).dialog("close");
					}
				}
			});

}

function validationPsudoDialog() {
	var messages = [ $('#PrismSSNMsg').val() ];
	var response = {};
	response['messages'] = messages;

	$("<div title='Person Resolution'>" + displayeMessage(response, 'red') + "</div>")
			.dialog({
				draggable : false,
				resizable : false,
				position : 'center',
				dialogClass : "hideCloseIcon",
				width : 'auto',
				modal : true,
				buttons : {
					"Close" : function() {
						$(this).dialog("close");
					}
				}
			});

}

function checkIfhighlightedMandatoryFieldsAreFilled() {
	$('.mandatoryInput')
			.each(
					function() {
						if ($(this).attr('disabled') != 'disabled') {
							if ($.trim($(this).val()) == ''
									|| $.trim($(this).val()) == '&lt; Select One &gt;') {
								$('.button-popup-default').prop('disabled',
										true);
							}
						}
					});
}

function isPersonUpiAlreadyPresent(upi) {
	var matchFound = false;
	$('input[name="selectedRecord"]').each(function() {
		if ((upi != null) && (($.trim($(this).val())) == upi)) {
			matchFound = true;
		}
	});
	if (matchFound) {
		return true;
	} else {
		return false;
	}
}

function prismComplete(upi) {
	$("#prismIframe").remove();
	$("#prismDiv").dialog("close");
	$(".ui-dialog-titlebar-close").click();
	showWait();
	var prismUpi = upi;
	var selectedConflictRecord = $('input[name=selectedStagingRecord]:checked').val();
	if (selectedConflictRecord == undefined) {
		if (isPersonUpiAlreadyPresent(upi)) {
			var htmlText = '';
			htmlText = htmlText
					+ "<font color='red'><b>THIS MEMBER ALREADY EXISTS ON THIS CASE. PLEASE SELECT THE MEMBER FROM THE SUMMARY SECTION TO EDIT HIS OR HER INFORMATION.</b></font>";
			$("#messageContainer").append(htmlText);
			$("#messageContainer").show();
			$.unblockUI();
			if ($("#messageContainer") && ($("#messageContainer").offset())
					&& ($("#messageContainer").offset().top)) {
				$(window).scrollTop($("#messageContainer").offset().top - 35);
			}
			return;
		} else {
			var url = $("#PRISM_ENDPOINT_URL").val();
			$.ajax({
				type : "POST",
				url : url,
				data : {
					"selectedRecord" : prismUpi
				},
				success : function(data, status, xhr) {
					updateScreenForJSONResponse(data, false, xhr,
							'memberDetails', '', false);
					$('#personCreated').val(true);
					highlightMandatoryFieldsOnLoad();
					listernerForUnbornSelected();
					disableMemberScreenExtentions();
					$.unblockUI();
				},
				error : function(data, xhr, ajaxOptions, thrownError) {
					displayResults(data, 'messageContainer', '', false);
					$.unblockUI();
				}

			});
		}
	} else {
		var conflictUrl = $("#PRISMCONFLICT_ENDPOINT_URL").val();
		var indvidualId = selectedConflictRecord.split("##")[0];
		$.ajax({
			type : "POST",
			url : conflictUrl,
			data : {
				"selectedRecord" : prismUpi,
				"indvId" : indvidualId
			},
			success : function(data, status, xhr) {
				$(document.body).data('clean_form_data', '');
				$("#current").trigger("click");
				displayResults(data, 'messageContainer', '', false);
				$("#memberDetails").html(data);
				$('#personCreated').val(true);
				highlightMandatoryFieldsOnLoad();
				listernerForUnbornSelected();
				disableMemberScreenExtentions();
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				displayResults(thrownError, 'messageContainer', '', false);
				$.unblockUI();
			}

		});
	}
}

function searchPerson(domElement) {
	showWait();
	$.ajax({
		url : $("#PRISM_SEARCH_URL").attr('value'),
		data : {
			"prismLastName" : $('#prismLastName').val(),
			"prismFirstName" : $('#prismFirstName').val(),
			"prismSSN" : $('#prismSSN').val()
		},
		success : function(data, status, xhr) {
			$("#messageContainerPrism").html("");
			updateScreenForJSONResponse(data, false, xhr, 'prismSearchResults', '', false);
			$.unblockUI();
		},
		error : function(data, xhr, ajaxOptions, thrownError) {
			$('#messageContainerPrism').html(
					"Technical Error : " + xhr.status + thrownError);
			$.unblockUI();
		}
	});
	return false;
}

function populateParentRecord(selectRecord) {
	showWait();
	var upi1 = '#upi_' + selectRecord;
	console.log(upi1);
	upi = $(upi1).val();
	console.log(upi);

	var lNm = $('#lastName_' + selectRecord).val();
	var fNm = $('#firstName_' + selectRecord).val();
	var ssn = $('#socialSecurityNumber_' + selectRecord).val();
	var sex = $('#gender_' + selectRecord).val();
	var dob = $('#dob_' + selectRecord).val();

	$('#lastName').val(lNm);
	$('#firstName').val(fNm);
	$('#socialSecurityNumber').val(ssn);
	$('#gender').val(sex);
	$('#dateOfBirth').val(dob);
	$('#ssn').val(ssn);
	$('#spanUPI').text(upi);
	$('#upi').val(upi);
	$('#prismButton').prop('disabled', true);
	$("#prismDiv").dialog("close");
	var prismUpi = upi;
	var wasCallMadeFromConflict = $("#prismConflictCall").val();
	if (wasCallMadeFromConflict) {
		var conflictUrl = $("#PRISMCONFLICT_ENDPOINT_URL").val();
		var selectedConflictRecord = $(
				'input[name=selectedStagingRecord]:checked').val();
		var indvidualId = selectedConflictRecord.split("##")[0];
		$.ajax({
			type : "POST",
			url : conflictUrl,
			data : {
				"selectedRecord" : prismUpi,
				"indvId" : indvidualId
			},
			success : function(data, status, xhr) {
				$("#current").trigger("click");
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				displayResults(thrownError, 'messageContainer', '', false);
				$.unblockUI();
			}

		});

	} else {
		var url = $("#PRISM_ENDPOINT_URL").val();
		$.ajax({
			type : "POST",
			url : url,
			data : {
				"selectedRecord" : prismUpi
			},
			success : function(data, status, xhr) {
				updateScreenForJSONResponse(data, false, xhr, 'memberDetails', '', false);
				highlightMandatoryFieldsOnLoad();
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				displayResults(data, 'messageContainer', '', false);
				$.unblockUI();
			}

		});
	}

}

function createPerson() {
	if (!checkAllRequiredFieldsForPrism()) {
		return true;
	}
	showWait();
	var data = '';
	data = $("#newPerson").serializeArray();
	console.log(data);
	$.ajax({
		url : $("#PRISM_CREATE_URL").attr('value'),
		data : data,
		success : function(data, status, xhr) {
			console.log(data);
			showSection("closeButton");
			hideSection("createButton");
			$("#messageContainerNewPerson").html("");
			updateScreenForJSONResponse(data, false, xhr, 'createPersonResults', '', false);
			$("#persondemoDetails").html("");
			$.unblockUI();
		},
		error : function(data, xhr, ajaxOptions, thrownError) {
			console.log(data);
			$('#messageContainerNewPerson').html(
					"Technical Error : " + xhr.responseText + thrownError);
			$.unblockUI();
		}
	});
}

function populateNewPersonDetails() {
	showWait();
	try {
		indvidualId = $('#prismIndividual').val();
		var upi = $('#newUpi').val();
		$('#prismButton').prop('disabled', true);
		$("#createNewPersonDiv").dialog("close");
		var prismUpi = upi;
		var wasCallMadeFromConflict = $("#prismConflictCall").val();
		if (wasCallMadeFromConflict) {
			var conflictUrl = $("#PRISMCONFLICT_ENDPOINT_URL").val();
			var selectedConflictRecord = $(
					'input[name=selectedStagingRecord]:checked').val();
			var indvidualId = selectedConflictRecord.split("##")[0];
			$.ajax({
				type : "POST",
				url : conflictUrl,
				data : {
					"selectedRecord" : prismUpi,
					"indvId" : indvidualId
				},
				success : function(data, status, xhr) {
					console.log(data);
					$("#current").trigger("click");
					$.unblockUI();
				},
				error : function(data, xhr, ajaxOptions, thrownError) {
					console.log(data);
					displayResults(thrownError, 'messageContainer', '', false);
					$.unblockUI();
				}

			});

		} else {
			var url = $("#PRISM_ENDPOINT_URL").val();
			$.ajax({
				type : "POST",
				url : url,
				data : {
					"selectedRecord" : prismUpi
				},
				success : function(data, status, xhr) {
					console.log(data);
					updateScreenForJSONResponse(data, false, xhr, 'memberDetails', '', false);
					highlightMandatoryFieldsOnLoad();
					$.unblockUI();
				},
				error : function(data, xhr, ajaxOptions, thrownError) {
					console.log(data);
					displayResults(thrownError, 'messageContainer', '', false);
					$.unblockUI();
				}

			});

		}
	} catch (e) {
		console.log("Error : " + e);
	}
}

function openCreatePerson() {
	console.log("Call made to create person!");
	$("#prismDiv").dialog("close");
	$("#createNewPersonDiv").dialog({
		modal : true,
		height : 390,
		width : 1000
	}).dialog("open");
	$("#persondemoDetails").html("");
	var lNm = "";
	var fNm = "";
	var ssn = "";
	lNm = $('#prismLastName').val();
	fNm = $('#prismFirstName').val();
	ssn = $('#prismSSN').val();
	$('#prismNewDateOfBirth').val("");
	$('#prismEthnicityCode').val("");
	$('#prismGender').val("");
	$('#prismNewLastName').val(lNm);
	$('#prismNewFirstName').val(fNm);
	$('#prismNewSSN').val(ssn);
	hideSection("closeButton");
	showSection("createButton");
	$("#createPersonResults").html("");
	$("#messageContainerNewPerson").html("");
}

// Javascript function for showing interstitial on all ajax actions
function showWait() {
	$
			.blockUI({
				message : "<img src='/AMPSStaticWeb/static/images/rotating_hourglass.gif'> Please Wait! </img>"
			});
}

function handleMemberDisplayMessage() {
	var warningVar = $("#messageContainer").find('.validation-warning-message')
			.text();
	if (warningVar != undefined && warningVar != '') {
		$("#warningflag").val(true);
	}
	if ($('#messageContainer').text().length > 0) {
		$("#messageContainer").html("");
	}
}

function addMemberOtherName(currentIndex) {
	var url = $("#addOtherName_URL_MEMB").attr('value');
	if (currentIndex == 3) {
		var dialog = $('<p>Cannot add more than 4 alias names.</p>').dialog({
			draggable : false,
			resizable : false,
			position : 'center',
			dialogClass : "hideCloseIcon",
			width : 'auto',
			modal : true,
			buttons : {
				"Ok" : function() {
					dialog.dialog('close');
				}
			}
		});
		return;
	}
	showWait();
	$.ajax({
		type : "POST",
		url : url,
		data : $(".bapHome").serializeArray(),
		success : function(htmlText, status, xhr) {
			if (currentIndex == -1) {
				$("#otherNameIndicator").attr("disabled", "disabled");
			}
			$("#memberNameAndAlias tr:last").after(htmlText);
			addMasks();
			$('#addOtherName' + currentIndex).hide();
			var alias_form_data = $(".alias").serialize();
			$(document.body).data('alias_form_data', alias_form_data);
			$(document.body).data('membereditor_form_data', '');
			var membereditor_form_data = $(".member").serialize();
			/*
			 * Because serialize() ignores checkboxes and radio buttons: *
			 * ***weird**
			 */
			membereditor_form_data = membereditor_form_data.concat(jQuery(
					'#memberDetails input[type=checkbox]:checked').map(
					function() {
						return {
							"name" : this.name,
							"value" : this.value
						}
					}).get());
			$(document.body).data('membereditor_form_data',
					membereditor_form_data);
			$.unblockUI();
		}
	});
}

function updateMemberOtherName(currentIndex) {
	var url = $("#updateOtherName_URL_MEMB").attr('value');
	var updatearr = $(".bapHome").serializeArray();
	updatearr.push({
		name : 'updateIndex',
		value : currentIndex
	});
	showWait();
	$
			.ajax({
				type : "POST",
				url : url,
				data : updatearr,
				success : function(data, status, xhr) {
					if (data.response.status) {
						$.unblockUI();
						$('#messageContainer').html(
								displayeMessage(data.response, 'blue'));
						$('#messageContainer').show();
						var alias_form_data = $(".alias").serialize();
						$(document.body).data('alias_form_data',
								alias_form_data);
					} else { // Failure path
						var trace = data.response.stackTrace;
						var htmlText = displayeMessage(data.response, 'red');
						if (trace) { // if exception trace is availbale.
							htmlText = htmlText
									+ '<a href="#" onclick="$(\'#traceDiv\').toggle();">Show more info </a><div id="traceDiv" style="display:none" >'
									+ trace + '</div>';
						}
						$('#messageContainer').html(htmlText);
						$('#messageContainer').show();
						highlightErronousFields(data.response);
					}

					if ($('#messageContainer')
							&& $('#messageContainer').offset()
							&& $('#messageContainer').offset().top) {
						$(window).scrollTop(
								$('#messageContainer').offset().top - 35);
					}

				}
			});
}

function deleteMemberOtherName(currentIndex) {
	var url = $("#deleteOtherName_URL_MEMB").attr('value');
	var arr = $(".bapHome").serializeArray();
	arr.push({
		name : 'deleteIndex',
		value : currentIndex
	});
	showWait();
	$.ajax({
		type : "POST",
		url : url,
		data : arr,
		success : function(data, status, xhr) {
			if (data.response.status) {
				$.unblockUI();
				$('#messageContainer').html(
						displayeMessage(data.response, 'blue'));
				$('#messageContainer').show();
				$('#otherNameRow' + currentIndex).hide();
				if (currentIndex == 0) {
					$('#memberAliasRow').hide();
					$('#otherNameIndicator').attr('checked', false);
					$("#otherNameIndicator").removeAttr("disabled");
				} else {
					var one = 1;
					var index = currentIndex - one;
					$('#addOtherName' + index).show();
				}
				var alias_form_data = $(".alias").serialize();
				$(document.body).data('alias_form_data', alias_form_data);
				var membereditor_form_data = $(".member").serialize();
				/*
				 * Because serialize() ignores checkboxes and radio buttons: *
				 * ***weird**
				 */
				membereditor_form_data = membereditor_form_data.concat(jQuery(
						'#memberDetails input[type=checkbox]:checked').map(
						function() {
							return {
								"name" : this.name,
								"value" : this.value
							}
						}).get());
				$(document.body).data('membereditor_form_data',
						membereditor_form_data);
			}
		}
	});
}

function checkAllRequiredFieldsForPrism() {
	try {
		var requiredFieldProvided = false;
		var controlToFocus = "";
		$('.mandatoryInputChild').each(
				function() {
					if ($(this).css('visibility') === 'visible'
							&& validateRequired($(this).get(0)) == false) {
						requiredFieldProvided = true;
						$(this).addClass('decoratedMissingField');
						if (controlToFocus == "")
							controlToFocus = $(this).attr('id');
					}
				});

		if (requiredFieldProvided) {
			$("#" + controlToFocus).focus();
			return false;
		}
	} catch (err) {
		console.log("Error :" + err.message);
	}
	return true;
}

function addMasks() {
	$(".ssnfield").mask('000-00-0000', {
		placeholder : "___-__-____",
		selectOnFocus : true
	});
	$(".datepicker").mask("00/00/0000", {
		placeholder : "__/__/____",
		selectOnFocus : true
	});
	$(".datepickerwithQmark").mask("00/00/0000", {
		translation : {
			0 : {
				pattern : /[0-9?]/
			}
		},
		placeholder : "__/__/____",
		selectOnFocus : true
	});
	$(".monthpickerwithQmark").mask("00/0000", {
		translation : {
			0 : {
				pattern : /[0-9?]/
			}
		},
		placeholder : "__/____",
		selectOnFocus : true
	});
	$(".monthpicker").mask("00/0000", {
		placeholder : "__/____",
		selectOnFocus : true
	});
	$(".phonefield").mask('(000) 000-0000', {
		placeholder : "(___) ___-____"
	});
}

// Sets the styling of the whole BAP. Should be called after each ajax call that
// changes the whole BAP
function stylize() {
	stylizeDatePickers();
	stylizeScreen();
	addMasks();
}
// Should be called whenever a date picker is
function stylizeDatePickers() {
	var systemDate = new Date($('#effectiveSystemDate').val());
	$(".datepicker").datepicker({
		showAnim : '',
		changeYear : true,
		changeMonth : true,
		yearRange : "c-100:c+5",
		defaultDate : systemDate
	});

	$(".datepickerwithQmark").datepicker({
		constrainInput : false,
		showAnim : '',
		changeYear : true,
		changeMonth : true,
		yearRange : "c-100:c+5",
		defaultDate : systemDate
	});

	$(".monthpicker").MonthPicker({
		ShowIcon : false,
		StartYear : systemDate.getFullYear()
	});

	$(".monthpickerwithQmark").MonthPicker({
		ShowIcon : false,
		StartYear : systemDate.getFullYear()
	});

	$(".monthpicker").unmask().mask("99/9999");

}

// Should be called to disable the screen and force user to complete PRISM
// Interface for HOH
function stylizeScreen() {
	stylizeScreenForPrismInterface();
	$(".fontForEthnicity").css('font-size', 13.3333330154419);
	$(".fontForEthnicity").css('width', '260px');
	// jQuery($('#logText')).textlimit('', 720, -1);
};

function stylizeScreenForPrismInterface() {

	var hohUpi = $('#hohIndividualUpi').val();
	if (hohUpi == '' || hohUpi == '0') {
		// hideSection("actionSection");
		// hideSection("OtherApplicationInformation");
	} else if ($('#taskId').val() != "-1" && $('#isPersonCreated').val() == "Y") {
		populateRegistrationFromScreening();
	} else {
		var regInProgressInd = $('#registrationInProgressInd').val();
		if (regInProgressInd != 'Y') {
			showSection("actionSection");
			// hideSection("OtherApplicationInformation");
		} else {
			// hideSection("actionSection");
			showSection("OtherApplicationInformation");
		}
	}
	showSection("saveRecordButton");
	// hideSection("caseProcessingButton");
}

function openOtherMemberInfoModal() {
	var upi = $("#upi").val();
	var dob = $("#dateOfBirth").val();
	if (upi == '') {
		var dialog = $(
				'<p>USE PERSON RESOLUTION ON MEMBER BEFORE ADDING ADDITIONAL MEMBER INFORMATION.</p>')
				.dialog({
					draggable : false,
					resizable : false,
					position : 'center',
					dialogClass : "hideCloseIcon",
					modal : true,
					buttons : {
						"Ok" : function() {
							dialog.dialog('close');
						}
					}
				});
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#ADD_MEMB_DISPLAY").attr('value'),
			data : {
				"selectedRecord" : upi,
				"dob" : dob
			},
			success : function(data, status, xhr) {
				$("#messageContainerAdditionalMember").html("");
				updateScreenForJSONResponse(data, false, xhr, 'otherMemberInfo', '', false);
				$("#otherMemberInfo").dialog("open");
				highLightMandatoryFieldForMbr3Popup();
				var mbr3popUp_clean_form_data = $("#otherMemberInfo").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mbr3popUp_clean_form_data',
						mbr3popUp_clean_form_data);
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				$('#messageContainerAdditionalMember').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#otherMemberInfo").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function highLightMandatoryFieldForMbr3Popup() {
	$('.mandatoryInputMbr3').each(
			function() {
				// don't add the highlight if the input is disabled
				if ($(this).attr('disabled') != 'disabled') {
					if ($.trim($(this).val()) == ''
							|| $.trim($(this).val()) == 'Select') {
						$(this).addClass('decoratedMissingField');
					} else {
						$(this).removeClass('decoratedMissingField');
					}
				} else {
					$(this).removeClass('decoratedMissingField');
				}
			});
}

function openTanfTimeLimitsModal() {
	var upi = $("#upi").val();
	if (upi == '') {
		showSimpleDialog("USE PERSON RESOLUTION ON MEMBER BEFORE ADDING TANF TIME LIMITS INFORMATION.");
		return false;
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#TANF_TIME_LIMITS").attr('value'),
			data : 'selectedRecord=' + upi,
			success : function(data, status, xhr) {
				console.log(data);
				$("#tanfTimeLimitsContainer").html("");
				updateScreenForJSONResponse(data, false, xhr, 'tanfTimeLimits', '', false);
				$("#tanfTimeLimits").dialog("open");
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				$('#tanfTimeLimitsContainer').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#tanfTimeLimits").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function submitMemInfo(button) {
	if (!checkAllRequiredFieldsForMbr3()) {
		return true;
	}

	if (!checkIfMbr3PopUpDataChanged()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	$("#messageCaseClosed").hide();
	showWait();
	var data = '';
	data = $(findContainerForm(button)).serializeArray();
	console.log(data);

	var savePromsie = $.ajax({
		type : "POST",
		url : $("#SAVE_ADD_MEMB_DISPLAY").attr('value'),
		data : data,
	});
	var upiAttr = "selectedRecord=" + $("#upi").val();
	var selectOptionAjax = {
		type : "POST",
		url : $("#ADD_MEMB_DISPLAY").attr('value'),
		data : upiAttr
	}
	var intitalData = null;
	savePromsie
			.done(function(data, status, xhr) {
				intitalData = data;
				console.log(data);
				if (data.response.status) {
					$(document.body).data('mbr3popUp_clean_form_data', '');
					$(document.body).data('clean_form_data', '');
					var displaypromise = $.ajax(selectOptionAjax);
					displaypromise.done(
							function(data, status, xhr) {
								updateScreenForJSONResponse(data, false, xhr, 'otherMemberInfo', '', false);
								var mbr3popUp_clean_form_data = $(
										"#otherMemberInfo").find(
										"select,input[type!=hidden],textarea")
										.serialize();
								$(document.body).data(
										'mbr3popUp_clean_form_data',
										mbr3popUp_clean_form_data);
							}).always(
							function(data, status, xhr) {
								displayResults(intitalData,
										'messageContainerAdditionalMember', '',
										false);
								$.unblockUI();
							});
				} else {
					displayResults(data, 'messageContainerAdditionalMember',
							'', false);
				}
			});
	return false;
}

function submitTanfTimeLimits(button) {

	if (!checkIfDataChangedForMemberPopup()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	$("#messageCaseClosedTANFTmLim").hide();
	showWait();
	var data = '';
	data = $(findContainerForm(button)).serializeArray();
	console.log(data);
	$.ajax({
		type : "POST",
		url : $("#SAVE_TANF_TIME_LIMITS").attr('value'),
		data : data,
		success : function(data, status, xhr) {

			console.log(data);
			if (data.response.status) {
				displayResults(data, 'messageContainerTLMT', '', false);
				updWarningFlag(data.response.data);
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
			} else {
				displayResults(data, 'messageContainerTLMT', '', false);
				updWarningFlag(data.response.data);
			}
			$.unblockUI();
		}
	});
	return false;
}

function updWarningFlag(jsonArray) {
	for (var i = 0; i < jsonArray.length; i++) {
		for ( var key in jsonArray[i]) {
			$('#' + key).val(jsonArray[i][key]);
		}
	}
}

var checkIfDataChangedForMemberPopup = function() {
	var clean_form_data = $(document.body).data('mempopup_clean_form_data');

	if (typeof clean_form_data === 'undefined') {
		return false;
	}

	var dirty_form_data = $(".bapHome").find(
			"select,input[type!=hidden],textarea").serialize();

	if (dirty_form_data != clean_form_data) {
		return true;
	} else {
		return false;
	}
}

function submitTanfDisregards(button) {

	if (!checkIfDataChangedForMemberPopup()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	$("#messageCaseClosedTANFDis").hide();
	showWait();
	var data = '';
	data = $(findContainerForm(button)).serializeArray();
	console.log(data);
	var savePromsie = $.ajax({
		type : "POST",
		url : $("#SAVE_TANF_DISREGARDS").attr('value'),
		data : data,
	});

	var upiAttr = "selectedRecord=" + $("#selectedUpi").val();

	var selectOptionAjax = {
		type : "POST",
		url : $("#TANF_DISREGARDS_DISPLAY").attr('value'),
		data : upiAttr
	}
	var intitalData = null;
	savePromsie.done(function(data, status, xhr) {
		intitalData = data;
		console.log(data);
		if (data.response.status) {
			$(document.body).data('clean_form_data', '');
			var displaypromise = $.ajax(selectOptionAjax);
			displaypromise.done(
					function(data, status, xhr) {
						updateScreenForJSONResponse(data, false, xhr, 'tanfDisregards', '', false);
						var clean_form_data = $(".bapHome").find(
								"select,input[type!=hidden],textarea")
								.serialize();
						$(document.body).data('mempopup_clean_form_data',
								clean_form_data);
					}).always(function(data, status, xhr) {
				displayResults(intitalData, 'messageContainerTDIS', '', false);
				$.unblockUI();
			});
		} else {
			displayResults(data, 'messageContainerTDIS', '', false);
		}
	});

	return false;
}

function submitMemberDisql(button) {

	if (!checkIfDataChangedForMemberPopup()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	$("#messageCaseClosed").hide();
	showWait();
	var data = '';
	data = $(findContainerForm(button)).serializeArray();
	console.log(data);
	var savePromsie = $.ajax({
		type : "POST",
		url : $("#SAVE_MEMB_DISQUALIFICATIONS").attr('value'),
		data : data,
	});

	var upiAttr = "selectedRecord=" + $("#selectedUpi").val();

	var selectOptionAjax = {
		type : "POST",
		url : $("#MEMBER_DISQ_DISPLAY").attr('value'),
		data : upiAttr
	}
	var intitalData = null;
	savePromsie.done(function(data, status, xhr) {
		intitalData = data;
		console.log(data);
		if (data.response.status) {
			$(document.body).data('mempopup_clean_form_data', '');
			$(document.body).data('clean_form_data', '');
			var displaypromise = $.ajax(selectOptionAjax);
			displaypromise.done(
					function(data, status, xhr) {
						updateScreenForJSONResponse(data, false, xhr, 'memberDisqualification', '', false);
						var clean_form_data = $(".bapHome").find(
								"select,input[type!=hidden],textarea")
								.serialize();
						$(document.body).data('mempopup_clean_form_data',
								clean_form_data);
					}).always(
					function(data, status, xhr) {
						displayResults(intitalData, 'messageContainerMBRDISQ',
								'', false);
						$.unblockUI();
					});
			updWarningFlag(data.response.data);
		} else {
			displayResults(data, 'messageContainerMBRDISQ', '', false);
			updWarningFlag(data.response.data);
		}
	});

	return false;
}

function updWarningFlag(jsonArray) {
	for (var i = 0; i < jsonArray.length; i++) {
		for ( var key in jsonArray[i]) {
			$('#' + key).val(jsonArray[i][key]);
		}
	}
}

function displayAbwdResults(json, messageContainer, containerWindow,
		closeContainerFlag) {

	if (json.response.status) { // Success path
		var successText = '';
		successText = successText
				+ "<font color='blue'>ABWD INFORMATION SAVED TO DATABASE SUCCESSFULLY</font>";
		$('#' + messageContainer).html(successText);
		$('#' + messageContainer).html(json);
		$('#' + messageContainer).show();
	} else { // Failure path
		var trace = json.response.stackTrace;
		var htmlText = displayeMessage(json.response, 'red');
		if (trace) { // if exception trace is availbale.
			htmlText = htmlText
					+ '<a href="#" onclick="$(\'#traceDiv\').toggle();"><font color="black">Show more info</font> </a><div id="traceDiv" style="display:none" >'
					+ trace + '</div>';
		}
		$('#' + messageContainer).html(htmlText);
		$('#' + messageContainer).show();
	}
}

function closeMemInfo(param) {
	if (param == '#otherMemberInfo') {
		if (checkIfMbr3PopUpDataChanged()) {
			var dialog = $(
					'<p>Are you sure you want to close this window? Any unsaved information will be lost.</p>')
					.dialog({
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Ok" : function() {
								$(param).dialog('close');
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});
		} else {
			$(param).dialog('close');
		}

	} else {
		if (checkIfDataChangedForMemberPopup()) {
			var dialog = $(
					'<p>Are you sure you want to close this window? Any unsaved information will be lost.</p>')
					.dialog({
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Ok" : function() {
								$(param).dialog('close');
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});
		} else {
			$(param).dialog('close');
			$(param).html('');
		}
	}
	$(document.body).data('clean_form_data', '');
}

function fetchAbwdSummarySection(form, sectionId) {
	var jsonVar = displayConstructMap[sectionId];
	var upi = $("#upi").val();
	var options = {
		url : $("#ADD_ABWD_DISPLAY").attr('value'),
		data : 'selectedRecord=' + upi,
		success : function(data, status, xhr) {
			console.log(data);
			$("#messageContainerABWD").html("");
			updateScreenForJSONResponse(data, false, xhr, 'abwdInfo', '', false);
			var clean_form_data = $(".bapHome").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('clean_form_data', clean_form_data);
			highlightMandatoryFieldsOnLoad();
		},
		error : function(errordata) {
			$.unblockUI();
			console.log(errordata);
			$("#summarySecionInformation_" + sectionId)
					.html(
							"<font color='red'> Please contact administrator with the error info : <Strong>"
									+ errordata.responseText
									+ "</Strong></font>");
			$("#summarySecionMessage_" + sectionId).hide();
			$("#summarySecionInformation_" + sectionId).show();
		}
	};
	console.log(options);
	showWait();
	return $.ajax(options);
}

function openAbwdInfoModal() {
	var upi = $("#upi").val();
	if (upi == '') {
		showSimpleDialog("USE PERSON RESOLUTION ON MEMBER BEFORE ADDING ABAWD INFORMATION.");
		return false;
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#ADD_ABWD_DISPLAY").attr('value'),
			data : 'selectedRecord=' + upi,
			success : function(data, status, xhr) {
				console.log(data);
				$("#messageContainerABWD").html("");
				updateScreenForJSONResponse(data, false, xhr, 'abwdInfo', '', false);
				$("#abwdInfo").dialog("open");
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
				highlightMandatoryFieldsOnLoad();
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				$('#messageContainerABWD').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#abwdInfo").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function openMemberDisqlInfoModal() {
	var upi = $("#upi").val();
	if (upi == '') {
		showSimpleDialog("USE PERSON RESOLUTION ON MEMBER BEFORE ADDING MEMBER DISQUALIFICATIONS INFORMATION.");
		return false;
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#MEMBER_DISQ_DISPLAY").attr('value'),
			data : 'selectedRecord=' + upi,
			success : function(data, status, xhr) {
				console.log(data);
				$("#messageContainerMBRDISQ").html("");
				updateScreenForJSONResponse(data, false, xhr, 'memberDisqualification', '', false);
				$("#memberDisqualification").dialog("open");
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				$('#messageContainerMBRDISQ').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#memberDisqualification").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function openMemberTanfDisregardModal() {
	var upi = $("#upi").val();
	if (upi == '') {
		showSimpleDialog("USE PERSON RESOLUTION ON MEMBER BEFORE ADDING TANF DISREGARDS INFORMATION.");
		return false;
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#TANF_DISREGARDS_DISPLAY").attr('value'),
			data : 'selectedRecord=' + upi,
			success : function(data, status, xhr) {
				console.log(data);
				$("#messageContainerTDIS").html("");
				updateScreenForJSONResponse(data, false, xhr, 'tanfDisregards', '', false);
				$("#tanfDisregards").dialog("open");
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				$('#messageContainerTDIS').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#tanfDisregards").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function refreshAbwdData() {
	console.log($("#upi").val());
	var options = {
		type : "POST",
		url : $("#ADD_ABWD_DISPLAY").attr('value'),
		data : $(".bapHome").serializeArray(),
		success : function(data, status, xhr) {
			if (data.response.status) {
				console.log(data);
				$("#messageContainerABWD").html("");
				$("#messageContainerABWD").load("#objectViewDetails");
				updateScreenForJSONResponse(data, false, xhr, 'objectViewDetails', '', false);
				$("#abwdInfo").dialog("open");
				$.unblockUI();

			} else {
				displayResults(data, 'messageContainer', '', false);
			}

			$.unblockUI();
		}
	};
	console.log($(".bapHome").serializeArray());
	showWait();
	$(".bapHome").ajaxSubmit(options);

	return false;
}

function displayPostingResults(json, messageContainer) {
	if (typeof json.status == 'undefined' || json.status) { // Success path
		$('#' + messageContainer).html(displayPostingMessage(json, 'blue'));
		$('#' + messageContainer).show();
	} else { // Failure path
		var htmlText = displayPostingMessage(json, 'red');
		$('#' + messageContainer).html(htmlText);
		$('#' + messageContainer).show();
	}
	$(window).scrollTop($('#' + messageContainer).offset().top - 35);
}

function displayHtmlMessage(trace, color) {
	var htmlText = '<ul class="validation-message-container">';
	for (var i = 0; i < trace.length; i++) {
		if (color == 'red') {
			htmlText = htmlText + "<li class='validation-error-message'>"
					+ (trace[i]) + setAddComments(trace[i]) + "</li>";
		} else {
			htmlText = htmlText + "<li class='validation-success-message'>"
					+ (trace[i]) + "</li>";
		}
	}
	htmlText = htmlText + "</ul>"
	return htmlText;
}

function displayHtmlResults(json, messageContainer, containerWindow,
		closeContainerFlag) {

	var trace = json.responseMessage;
	var htmlText = displayHtmlMessage(trace, 'red');
	$('#' + messageContainer).html(htmlText);
	$('#' + messageContainer).show();

	if ($('#' + messageContainer) && $('#' + messageContainer).offset()
			&& $('#' + messageContainer).offset().top) {
		$(window).scrollTop($('#' + messageContainer).offset().top - 35);
	}
}

function displayPostingMessage(response, color) {
	var htmlText = '<ul class="validation-message-container">';
	if (response.warningMessages) {
		var warnings = response.warningMessages;
		for (var i = 0; i < warnings.length; i++) {
			htmlText = htmlText + "<li class='validation-warning-message'>"
					+ (warnings[i]) + "</li>";

		}

	}

	var messageList = response.responseMessage;
	if (typeof messageList != 'undefined') {
		for (var i = 0; i < messageList.length; i++) {
			if (color == 'red') {
				htmlText = htmlText + "<li class='validation-error-message'>"
						+ (messageList[i]) + setAddComments(messageList[i]) + "</li>";
			} else {
				htmlText = htmlText + "<li class='validation-success-message'>"
						+ (messageList[i]) + "</li>";
			}
		}
	}

	htmlText = htmlText + "</ul>"
	return htmlText;
}

function submitABWDInfo(button) {
	if (!checkAllRequiredFieldsForMbr3()) {
		return true;
	}
	if (!checkIfDataChangedForMemberPopup()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	$("#messageCaseClosedABWD").hide();
	showWait();
	var data = '';
	var upi = $("#upi").val();
	data = $(findContainerForm(button)).serializeArray();

	console.log(data);
	$
			.ajax({
				type : "POST",
				url : $("#SAVE_ADD_ABWD_DISPLAY").attr('value'),
				data : data,
				success : function(htmlText, status, xhr) {
					console.log(htmlText);
					$.unblockUI();
					if (htmlText.length < 400) {
						var json = JSON.parse(htmlText);
						displayPostingResults(json, 'messageContainerABWD');
						if (typeof json.data != 'undefined'
								&& json.data.hasOwnProperty('haltFlag')) {
							var haltFlagValue = json.data.haltFlag;
							var haltFlagText = "<input id=\"haltFlag\" name=\"haltFlag\" type=\"hidden\" value="
									+ haltFlagValue + ">";
							$('#haltContainer').html(haltFlagText);
						}
						return;
					}

					var bodyHTML = $(htmlText).find('#abwdHome').html();
					if (bodyHTML) {
						$(".abwdHome").html(
								$(htmlText).find('#abwdHome').html());
					} else {
						$(".abwdHome").html(
								$(htmlText).filter('#abwdHome').html());
					}
					stylizeDatePickers();
					var validationMessage = $(htmlText).find(
							"#validationMessage").val();
					if (typeof validationMessage != 'undefined') {
						var jsonMessage = JSON.parse(validationMessage);
						displayPostingResults(jsonMessage,
								'messageContainerABWD');
					}
					var clean_form_data = $(".bapHome").find(
							"select,input[type!=hidden],textarea").serialize();
					$(document.body).data('mempopup_clean_form_data',
							clean_form_data);
					$.unblockUI();
				}
			});

	return false;
}

function openSanctionDetailInfoModal(validationMsg) {
	var upi = $("#upi").val();
	if (upi == '') {
		showSimpleDialog("USE PERSON RESOLUTION ON MEMBER BEFORE ADDING TANF SANCTION TRACKING INFORMATION.");
		return false;
	} else {
		showWait();
		$.ajax({
			type : "POST",
			url : $("#SANC_DISPLAY_URL").attr('value'),
			data : 'selectedRecord=' + upi,
			success : function(data, status, xhr) {
				console.log(data);
				updateScreenForJSONResponse(data, false, xhr, 'sanctionDetail', '', false);
				$("#sanctionDetail").dialog("open");
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('mempopup_clean_form_data',
						clean_form_data);
				$("#messageContainerSanctionDetail").html(validationMsg);
				$.unblockUI();
			},
			error : function(data, xhr, ajaxOptions, thrownError) {
				console.log(data);
				$('#messageContainerSanctionDetail').html(
						"Technical Error : " + xhr.responseText + thrownError);
				$("#sanctionDetail").dialog("open");
				$.unblockUI();
			}
		});
		return false;
	}
}

function checkAllRequiredFieldsForMbr3() {
	try {
		var requiredFieldProvided = false;
		var controlToFocus = "";
		$('.mandatoryInputMbr3').each(
				function() {
					if ($(this).css('visibility') === 'visible'
							&& validateRequired($(this).get(0)) == false) {
						requiredFieldProvided = true;
						if (controlToFocus == "")
							controlToFocus = $(this).attr('id');
					}
				});

		if (requiredFieldProvided) {
			$("#" + controlToFocus).focus();
			return false;
		}
	} catch (err) {
		console.log("Error :" + err.message);
	}
	return true;
}

function listernerForUnbornSelected() {
	
	if ($('#gender').val() == 'U') {
		$('#citizenShipIndicator').removeClass('decoratedMissingField');
		$('#citizenShipIndicator').removeClass('mandatoryInput');
		$('#mrtlSts').removeClass('decoratedMissingField');
		$('#mrtlSts').removeClass('mandatoryInput');
		$('#usCitizenIndicatorVerification').removeClass(
				'decoratedMissingField');
		$('#usCitizenIndicatorVerification').removeClass('mandatoryInput');
		$('#lastGradeVerification').removeClass('decoratedMissingField');
		$('#lastGradeVerification').removeClass('mandatoryInput');
	} else {
		validateMandatoryFiledsFor('citizenShipIndicator');
		validateMandatoryFiledsFor('mrtlSts');
		validateMandatoryFiledsFor('usCitizenIndicatorVerification');
		validateMandatoryFiledsFor('lastGradeVerification');
	}
}

function listernerForMbr3() {
	if ($('#childOfPublicEmployee').val() == '') {
		$('#childOfPublicEmployee').addClass('mandatoryInputMbr3');
		$('#childOfPublicEmployee').addClass('decoratedMissingField');
	} else {
		$('#childOfPublicEmployee').removeClass('mandatoryInputMbr3');
		$('#childOfPublicEmployee').removeClass('decoratedMissingField');
	}

}

function validateMandatoryFiledsFor(element) {
	if ($.trim($('#' + element).val()) == '') {
		$('#' + element).addClass('mandatoryInput');
		$('#' + element).addClass('decoratedMissingField');
	}
}

function deleteSanctionRecord(button) {
	if (null != $("#messageCaseClosedSanc").html()) {
		return;
	}
	var dialog = $(
			'<p>Are you sure you want to continue? This will permanently delete the selected record.</p>')
			.dialog(
					{
						buttons : {
							"Delete" : function() {
								var upi = button.value;
								console.log(upi);
								showWait();
								$
										.ajax({
											type : "POST",
											url : $("#SANC_DELETE_URL").attr(
													'value'),
											data : 'selectedRecord=' + upi,
											success : function(data, status,
													xhr) {
												console.log(data);
												if (data.response.status) {
													displayResults(
															data,
															'messageContainerSanctionDetail',
															'', false);
													$.unblockUI();
													openSanctionDetailInfoModal($(
															"#messageContainerSanctionDetail")
															.html());

												} else {
													displayResults(
															data,
															'messageContainerSanctionDetail',
															'', false);
												}
											},
											error : function(data, xhr,
													ajaxOptions, thrownError) {
												console.log(data);
												$(
														'#messageContainerSanctionDetail')
														.html(
																"Technical Error : "
																		+ xhr.responseText
																		+ thrownError);
												$("#sanctionDetail").dialog(
														"open");
												$.unblockUI();
											}
										});
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});

}

function openadditionalDemoInfo(){
	debugger;
	showWait();
	$.ajax({
		type : "POST",
		url : "addDemoInfoHome",
		data : 'upi='+ $('#upi').val(),
		success : function(data, status, xhr) {
			var ct = xhr.getResponseHeader("content-type") || "";
			if (ct.indexOf('json') > -1) {
				updateScreenForJSONResponse(data, status, xhr,
						'addDemoInfoHomeErrorMessages', '', false);
			}else{
				$("#addDemoInfo").dialog("open");
				$('#addDemoInfo').html(data);
				if($("#addDemoInfoSex").val() == 'O'){	
					$("#addDemoInfoSexAtBirthOther").show();
				}
				if($("#addDemoInfoGender").val() == 'O'){	
					$("#addDemoInfoGenderIdOther").show();
				}
				if($("#addDemoInfoSexualOrientation").val() == 'O'){	
					$("#addDemoInfoSexualOriOther").show();
				}
				if($("#addDemoInfoWhiteCheckbox8Other").val() != null && $("#addDemoInfoWhiteCheckbox8Other").val() != ''){
					$("#addDemoInfoWhiteCheckbox8").attr("checked", true);
					$("#addDemoInfoWhiteCheckbox8Other").show();
					
				}
				if($("#addDemoInfoHispanicCheckbox8Other").val() != null && $("#addDemoInfoHispanicCheckbox8Other").val() != ''){
					$("#addDemoInfoHispanicCheckbox8").attr("checked", true);
					$("#addDemoInfoHispanicCheckbox8Other").show();
					
				}
				if($("#addDemoInfoBlackCheckbox9Other").val() != null && $("#addDemoInfoBlackCheckbox9Other").val()!= '' ){
					$("#addDemoInfoBlackCheckbox9").attr("checked", true);
					$("#addDemoInfoBlackCheckbox9Other").show();
					
				}
				if($("#addDemoInfoAsianCheckbox8Other").val() != null && $("#addDemoInfoAsianCheckbox8Other").val() != ''){
					$("#addDemoInfoAsianCheckbox8").attr("checked", true);
					$("#addDemoInfoAsianCheckbox8Other").show();
					
				}
				if($("#addDemoInfoMiddleCheckbox8Other").val() != null && $("#addDemoInfoMiddleCheckbox8Other").val() != ''){
					$("#addDemoInfoMiddleCheckbox8").attr("checked", true);
					$("#addDemoInfoMiddleCheckbox8Other").show();
					
				}
				if($("#addDemoInfoNativeCheckbox8Other").val() != null && $("#addDemoInfoNativeCheckbox8Other").val() != ''){
					$("#addDemoInfoNativeCheckbox8").attr("checked", true);
					$("#addDemoInfoNativeCheckbox8Other").show();
					
				}
			}
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
			var msg = [ "Technical Error : " + xhr.status + '-'
					+ xhr.statusText ];
			var errors = displayeMessage(msg, 'red');
			$('#addDemoInfoHomeErrorMessages', findContainerForm(currentElement))
					.html(errors);
			$.unblockUI();
		}
	});
}

function submitAddDemoInf(){
	debugger;
	var upi = $('#upi').val();
	$("#addDemoInfoUpi").val(upi);
	$("#addDemoInfoHomeErrorMessages").empty();
	showWait();
	$.ajax({
		type : "POST",
		url : "submitAddDemoInfo",
		data : $("#addDemoInfoHomeForm").serializeArray(),
		success : function(data, status, xhr) {
			var ct = xhr.getResponseHeader("content-type") || "";
			if (ct.indexOf('json') > -1) {
				updateScreenForJSONResponse(data, status, xhr,
						'addDemoInfoHomeErrorMessages', '', false);
			}
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
			var msg = [ "Technical Error : " + xhr.status + '-'
					+ xhr.statusText ];
			var errors = displayeMessage(msg, 'red');
			$('#addDemoInfoHomeErrorMessages', findContainerForm(currentElement))
					.html(errors);
			$.unblockUI();
		}
	});
}

function enableDisableBasedOnCheckBoxSelected(thisVal) {
	debugger;
	if(thisVal.checked == true){
		$("#"+thisVal.id+"Other").show();
	} else {
		$("#"+thisVal.id+"Other").val('');
		$("#"+thisVal.id+"Other").hide();
	}
}

function showOrHideOtherTextField(thisVal) {
	debugger;
	if(thisVal.id == 'addDemoInfoSex'){
		if ($("#"+thisVal.id).val() == 'O'){
			$("#addDemoInfoSexAtBirthOther").show();
		} else {
			$("#addDemoInfoSexAtBirthOther").val('');
			$("#addDemoInfoSexAtBirthOther").hide();
		}
	}
	if(thisVal.id == 'addDemoInfoGender'){
		if($("#"+thisVal.id).val() == 'O'){
			$("#addDemoInfoGenderIdOther").show();
		} else {
			$("#addDemoInfoGenderIdOther").val('');
			$("#addDemoInfoGenderIdOther").hide();
		}
	}
	if(thisVal.id == 'addDemoInfoSexualOrientation'){
		if($("#"+thisVal.id).val() == 'O'){
			$("#addDemoInfoSexualOriOther").show();
		} else {
			$("#addDemoInfoSexualOriOther").val('');
			$("#addDemoInfoSexualOriOther").hide();
		}
	}
	
}