//Functions used in ApWomen and Children ContanctInformation JSP

function enableSentToQuestion(obj){
if(obj!=null) {
if(obj.value == '084'| obj.value == '093'| obj.value =='094'| obj.value =='095' | obj.value =='SEL'){
	if(document.all.appSentTo.style.display == "inline"){
	 	document.form1.radioGroup[0].checked = false;
		document.form1.radioGroup[1].checked = false;
		document.all.appSentTo.style.display = "none";
	}
}else{
		if(document.all.appSentTo.style.display == "none"){
			document.all.appSentTo.style.display = "inline";
		}		
	}	 
}	
}

function addhandler(f,jsVal){
for(var i = 0; i < f.elements.length; i++) {
        var e = f.elements[i];
        e.onclick = function() { showDiffMailAddressFld(2,jsVal);}
        
    }
}

//JS to show/hide the relationship field 
function showDiffMailAddressFld(refType,jsVal){
	if((jsVal == "Y" && refType == "2") || (jsVal == "Y" && refType == "1" )){
		
		// if 'No' Checked
		if(document.form1.mailAddInd != null && document.form1.mailAddInd.checked){
		
			if(document.all.diffMailAddress.style.display == "none"){
				document.all.diffMailAddress.style.display = "inline";
			}
		}else{
			if(document.all.diffMailAddress.style.display == "inline"){
				document.form1.addressLine1_mail.value = "";
				document.form1.addressLine2_mail.value = "";
				document.form1.city_mail.value = "";
				document.form1.state_mail.value = "WI";
				document.form1.zipCode_mail.value = "";
				document.all.diffMailAddress.style.display = "none";
			}		
		}	
	}else if(jsVal == "N"){
		if(document.all.diffMailAddress.style.display == "none"){
			document.all.diffMailAddress.style.display = "inline";
		}		
	}
}

//Functions used in ApWomen and Children Individual Information JSP

//Function to calculate the age 
function computeAge(mm, dd, yy){
    
	var t, mon, day, year, DD, MM, YY, diff;
		/* alert("computeage without num");*/
	  	YY   = parseInt(yy,10);	// year of birth (4 digits)
	  	MM   = parseInt(mm,10);	// month of birth (1-12)
	  	DD   = parseInt(dd,10);	// date of birth (1-31)
	  	t    = getToday();	// get current date
	  	year = t.getFullYear();	
	  	mon  = t.getMonth() + 1;
	  	day  = t.getDate();	
	  	diff = year - YY;
	
	  	if ((MM > mon) || (MM == mon && day < DD)) diff --;
		return diff;
}

function validateDate(monthVal,dayVal,yearVal,element) {
  	if (validateMnth(monthVal) && validateDy(dayVal) && validateYr(yearVal)) {
		return true;
  	}else{
		return false;
	}
}

//Validates the month.  Makes sure the month is within 1-12.  

function validateMnth(monthval) {
	var monthrep = /\D{1,2}/;
	var test = monthrep.test(monthval);
	if (test ||(monthval <=0 || monthval>12)) {
		return false;
	}
	return true;
}

//This function validates the day from 1-31.  

function validateDy(dayval) {
	var dayrep = /\D{1,2}/;
	var test = dayrep.test(dayval);
	if (test ||(dayval <=0 || dayval>31)) {
	    return false;
	  }
	return true;
}

//This function validates the year from 1001 to 5000.  
function validateYr(yearval) {
	var yearrep = /\D{1,4}/;
	var test = yearrep.test(yearval);
	if (test ||(yearval <1000 || yearval>5000)) {
	    return false;
	}
	return true;
}

function setReadOnly(obj)
{
if(obj != null && obj.value == "ssn" && obj.checked){
        if(document.form1.maidN != null){
			document.form1.maidN.disabled = true;
			document.form1.maidN.value="";
		}
		if(document.form1.ssn1socialSecurity != null && document.form1.ssn2socialSecurity != null && document.form1.ssn3socialSecurity != null) {
			document.form1.ssn1socialSecurity.disabled = false;
			document.form1.ssn2socialSecurity.disabled = false;
			document.form1.ssn3socialSecurity.disabled = false;
		}
}
if (obj != null && obj.value == "pseudo" && obj.checked)  {
       if(document.form1.ssn1socialSecurity != null && document.form1.ssn2socialSecurity != null && document.form1.ssn3socialSecurity != null) {
			document.form1.ssn1socialSecurity.disabled = true;
			document.form1.ssn2socialSecurity.disabled = true;
			document.form1.ssn3socialSecurity.disabled = true;
			
			document.form1.ssn1socialSecurity.value="";
			document.form1.ssn2socialSecurity.value="";
			document.form1.ssn3socialSecurity.value="";
		}
		if(document.form1.maidN != null){
			document.form1.maidN.disabled =false;
		}
}
}

function addhandlerForPwIndvInfoForm(f,jsVal){
for(var i = 0; i < f.elements.length; i++) {
        var e = f.elements[i];
        e.onclick = function() {inAplPregnant(jsVal); showRelationFld(2,jsVal);setReadOnly(document.form1.radioGroup_ssn);setReadOnly(document.form1.radioGroup_pseudo); }
    }
}



//JS to show/hide the relationship field 
function showRelationFld(refType,jsVal){
	if((jsVal == "Y" && refType == "2") || (jsVal == "Y" && refType == "1" )){
		// if 'No' Checked
		if(document.form1.type_applicant != null && document.form1.type_applicant[0].checked && document.form1.type_applicant[0].value == 'P'){
			if(document.all.parentPresentFld.style.display == "none"){
				document.all.parentPresentFld.style.display = "inline";
			}
		}else{
			if(document.all.parentPresentFld.style.display == "inline"){
				document.form1.type_present[0].checked = false;
				document.form1.type_present[1].checked = false;
				document.all.parentPresentFld.style.display = "none";
			}		
		}	
	}else if(jsVal == "N"){
		if(document.all.parentPresentFld.style.display == "none"){
			document.all.parentPresentFld.style.display = "inline";
		}		
	}
}



function showAppLivingFld(inDate,refType,jsVal){
    var isEighteen = false;
    if(refType == 1){
    var val = inDate;
    }else{
    var val = inDate.value;
    }
	var month = val.substring(0,2);
	var day = val.substring(3,5);
	var year = val.substring(6,10);
	
	if((refType == 1 && validateDate(month,day,year,inDate) == true)  || (refType == 2 && validateDate(month,day,year,inDate) == true)){
	var difference = computeAge(month,day,year);
	if(difference < 18) isEighteen = true; 
	
	if((jsVal == "Y" && refType == "2") || (jsVal == "Y" && refType == "1")){
		// if 'No' Checked
		if(isEighteen){
			if(document.all.isEigteenteenFld.style.display == "none"){
				document.all.isEigteenteenFld.style.display = "inline";
			}
			// The user choose 01/01/1999 and answers both the question. Then if he changes the value from
			// 01/01/1999 to 01/01/1990 we need to show the first question with no option selected
			if(document.all.isEigteenteenFld.style.display == "inline" && refType == 2) {
			   	document.form1.type_applicant[0].checked = false;
			   	document.form1.type_applicant[1].checked = false;
			}
			if(document.all.parentPresentFld.style.display == "inline"){
				document.form1.type_present[0].checked = false;
				document.form1.type_present[1].checked = false;
				document.all.parentPresentFld.style.display = "none";
			}
		}else{
			if(document.all.isEigteenteenFld.style.display == "inline"){
			    document.form1.type_applicant[0].checked = false;
			    document.form1.type_applicant[1].checked = false;
				document.all.isEigteenteenFld.style.display = "none";
			}
			if(document.all.parentPresentFld.style.display == "inline"){
			    document.form1.type_present[0].checked = false;
			    document.form1.type_present[1].checked = false;
				document.all.parentPresentFld.style.display = "none";
			}		
		}	
	}else if(jsVal == "N"){
		if(document.all.isEigteenteenFld.style.display == "none"){
			document.all.isEigteenteenFld.style.display = "inline";
		}
		if(document.all.parentPresentFld.style.display == "none"){
			document.all.parentPresentFld.style.display = "inline";
		}		
	}
	}
	else {
	 // Whenever the date is invalid we want to hide both the questions and clear the values.
	 if(document.all.isEigteenteenFld.style.display == "inline"){
		  document.form1.type_applicant[0].checked = false;
		  document.form1.type_applicant[1].checked = false;
		  document.all.isEigteenteenFld.style.display = "none";
	  }
	  if(document.all.parentPresentFld.style.display == "inline"){
		  document.form1.type_present[0].checked = false;
		  document.form1.type_present[1].checked = false;
		  document.all.parentPresentFld.style.display = "none";
	  }
	}
}
function populateChildone(appnum) {
   
   
   var appnumber=parseInt(appnum);
   
if (appnumber){
   var fistname='firstName_id'+'_'+appnum+'_'+1+'_'+1;
    var middelName='middleInitial_id'+'_'+appnum+'_'+1+'_'+1;
    var lastName='lastName_id'+'_'+appnum+'_'+1+'_'+1;
    var dateOfBirt='dateOfBirth_id_'+appnum+'_'+1+'_'+1;
    var gender='gender_'+appnum+'_'+1+'_'+1;
     var ssnNumber='ssnRadioOptions_'+appnum+'_'+1+'_'+1;
    var ssnNumber1='ssn1socialSecurity_'+appnum+'_'+1+'_'+1;
    var ssnNumber2='ssn2socialSecurity_'+appnum+'_'+1+'_'+1;
    var ssnNumber3='ssn3socialSecurity_'+appnum+'_'+1+'_'+1;
    
    var maidN='maidN_'+appnum+'_'+1+'_'+1;
    var uSCitizen='uSCitizen_'+appnum+'_'+1+'_'+1;
    var receivingMABC='receivingMABC_'+appnum+'_'+1+'_'+1;
    var relation='relation_'+appnum+'_'+1+'_'+1;
    var other='other_'+appnum+'_'+1+'_'+1;
}
    var birthDate =document.form1.dateOfBirth_crtk.value;
   
    var month = birthDate.substring(0,2);
	var day = birthDate.substring(3,5);
	var year = birthDate.substring(6,10);
	
	
	var isAchild=false; 
	if(validateDate(month,day,year,birthDate) ){
	var difference = computeAge(month,day,year);
	if(difference < 18) isAchild = true; 
	
    }
     if (document.form1.type.status==true && isAchild == true && appnumber==0){
	
	
	 document.form1.firstName_id_fwdskey1_fwdskey1_1.value= document.form1.firstName_crtk.value;
	 document.form1.middleInitial_id_fwdskey1_fwdskey1_1.value= document.form1.middleInitial_crtk.value; 
	 document.form1.lastName_id_fwdskey1_fwdskey1_1.value= document.form1.lastName_crtk.value;
	 
	 
	 document.form1.dateOfBirth_id_fwdskey1_fwdskey1_1.value=document.form1.dateOfBirth_crtk.value;
	 document.form1.gender_fwdskey1_fwdskey1_1[0].checked=document.form1.gender_crtk[0].checked;
	 document.form1.gender_fwdskey1_fwdskey1_1[1].checked=document.form1.gender_crtk[1].checked;
	
	 document.form1.ssn1socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.ssn2socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.ssn3socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.maidN_fwdskey1_fwdskey1_1.value='';
	 document.form1.relation_fwdskey1_fwdskey1_1.value='SEL';
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.uSCitizen_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.uSCitizen_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.other_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.other_fwdskey1_fwdskey1_1[1].checked=false;
	
	 }
	  /*  if (document.form1.type.status==false  && appnumber==0){
	 document.form1.firstName_id_fwdskey1_fwdskey1_1.value= '';
	 document.form1.middleInitial_id_fwdskey1_fwdskey1_1.value=''; 
	 document.form1.lastName_id_fwdskey1_fwdskey1_1.value= '';
	 
	 
	 document.form1.dateOfBirth_id_fwdskey1_fwdskey1_1.value='';
	 document.form1.ssn1socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.ssn2socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.ssn3socialSecurity_fwdskey1_fwdskey1_1.value='';
	 document.form1.maidN_fwdskey1_fwdskey1_1.value='';
	 document.form1.relation_fwdskey1_fwdskey1_1.value='SEL';
	
	 document.form1.gender_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.gender_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.uSCitizen_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.uSCitizen_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.receivingMABC_fwdskey1_fwdskey1_1[1].checked=false;
	 document.form1.other_fwdskey1_fwdskey1_1[0].checked=false;
	 document.form1.other_fwdskey1_fwdskey1_1[1].checked=false;
	 
	
	 }
	 */
	    
	    if (document.form1.type.status==true  && isAchild == true && appnumber!=0){
	

 	 document.form1[fistname].value= document.form1.firstName_crtk.value;
	 document.form1[middelName].value= document.form1.middleInitial_crtk.value; 
	 document.form1[lastName].value= document.form1.lastName_crtk.value;
	 
	 
	 document.form1[dateOfBirt].value=document.form1.dateOfBirth_crtk.value;
	 document.form1[gender][0].checked=document.form1.gender_crtk[0].checked;
	 document.form1[gender][1].checked=document.form1.gender_crtk[1].checked;
	 	 document.form1[ssnNumber].value='';
	 document.form1[maidN].value='';
	 document.form1[relation].value='SEL';
     document.form1[ssnNumber1].value='';
	 document.form1[ssnNumber2].value='';
	 document.form1[ssnNumber3].value='';
	 document.form1[uSCitizen][0].checked=false;
	 document.form1[uSCitizen][1].checked=false;
	 document.form1[receivingMABC][0].checked=false;
	 document.form1[receivingMABC][1].checked=false;
	 document.form1[other][0].checked=false;
	 document.form1[other][1].checked=false;
	
	 }
	
	
	 
	
	/* 
	if ( document.form1.type.status==false &&  appnumber!=0 && document.form1[relation].value=='ISS'){
	
 
    
	 document.form1[fistname].value='';
	 document.form1[middelName].value= ''; 
	 document.form1[lastName].value= '';
	 document.form1[dateOfBirt].value='';
	 document.form1[ssnNumber].value='';
	 document.form1[maidN].value='';
	 document.form1[relation].value='SEL';
     document.form1[ssnNumber1].value='';
	 document.form1[ssnNumber2].value='';
	 document.form1[ssnNumber3].value='';
	 document.form1[gender][0].checked=false;
	 document.form1[gender][1].checked=false;
	 document.form1[uSCitizen][0].checked=false;
	 document.form1[uSCitizen][1].checked=false;
	 document.form1[receivingMABC][0].checked=false;
	 document.form1[receivingMABC][1].checked=false;
	 document.form1[other][0].checked=false;
	 document.form1[other][1].checked=false;
	 	 
	
	 }
	 */
	
    
}
function inAplPregnant(jsValue){
    
    
  if(jsValue=='Y'){
   if(document.form1.pregnancyTest[0].checked){
     document.all.pregnancyTestid.style.display = "inline";
     document.all.pregnancyTestidNames.style.display = "inline";
     document.all.pregnancyTestidcrt.style.display = "inline";
     document.all.pregnancyTestidfetus.style.display = "inline";
     document.all.pregnancydeldate.style.display = "inline";
     if  (document.form1.howManyBabies.value==0)
     document.form1.howManyBabies.value='';
     
     
 
   }
    if(document.form1.pregnancyTest[1].checked){
      document.all.pregnancyTestid.style.display = "none";
      document.all.pregnancyTestidNames.style.display = "none";
      document.all.pregnancyTestidcrt.style.display = "none";
      document.all.pregnancyTestidfetus.style.display = "none";
      document.all.pregnancydeldate.style.display = "none";
   }
  }
   if(jsValue=='N'){
  if ( document.all.pregnancyTestid.style.display == "none")
  document.all.pregnancyTestid.style.display = "inline"
  
   if ( document.all.pregnancyTestidNames.style.display == "none")
  document.all.pregnancyTestidNames.style.display = "inline"
  
   if (  document.all.pregnancyTestidcrt.style.display == "none")
   document.all.pregnancyTestidcrt.style.display = "inline"
  
   if ( document.all.pregnancyTestidfetus.style.display == "none")
  document.all.pregnancyTestidfetus.style.display = "inline"
  
     if ( document.all.pregnancydeldate.style.display == "none")
        document.all.pregnancydeldate.style.display = "inline"
  
  }

}


function disableFields(radioButtonName,fieldtobeEnabled,fieldtobeDisabled){
	var toAttach = radioButtonName[0].name;
	pos1 = toAttach.indexOf("_");
	temp2 = toAttach.substring(pos1,toAttach.length);
	if (radioButtonName[0].checked) {
		fieldtobeDisabled.disabled = true;
		fieldtobeDisabled.value="";
		
		arr = fieldtobeEnabled;
		for(k=0; k<arr.length; k++){
		  arr[k].disabled = false;
		}
	}
	else if(radioButtonName[1].checked) {
		arr = fieldtobeDisabled;
		for(k=0;k<arr.length;k++){
		  arr[k].disabled = true;
		  arr[k].value = "";
		}
		fieldtobeEnabled.disabled =false;
	}
	return true;
}


function disableFieldSSN(radioButtonName,fieldtobeEnabled,flag,falg1){
		
	var toAttach = radioButtonName[0].name;
	pos1 = toAttach.indexOf("_");
	temp2 = toAttach.substring(pos1,toAttach.length);
	if(flag){
		if (radioButtonName[0].checked) {
			arr = fieldtobeEnabled;
			for(k=0; k<arr.length; k++){
			  arr[k].disabled = false;
			}
			 if(!falg1){
		 	  	radioButtonName[1].value = "0";
		 	  }else if(falg1){
		 	  	radioButtonName[0].value = "";
		 	  }
		}else if(radioButtonName[1].checked) {
			arr = fieldtobeEnabled;
			for(k=0;k<arr.length;k++){
			  arr[k].disabled = true;
		 	  arr[k].value = "";
		 	  if(!falg1){
		 	  	radioButtonName[1].value = "0";
		 	  }else if(falg1){
		 	  	radioButtonName[0].value = "";
		 	  }
		 	}
		}
	}
		
	return true;
}

function concatSsn(){
	var ssnValue = "";
	for (var i=1 ; i<=3 ; i++) {
		ssn = "ssn" +i+ "socialSecurity";
		ssnValue = ssnValue + document.getElementById(ssn).value;
	}
	document.getElementById("socialSecurity").value = ssnValue;
}


//JS to show/hide the relationship field 
function showCareControlForChld(obj,refType,jsVal){
	var toAttach = obj[1].name;
	pos1 = toAttach.indexOf("_");
	temp2 = toAttach.substring(pos1,toAttach.length);
	
	var careControlForChld = document.getElementById("careControlForChld"+temp2);
	if((jsVal == "Y" && refType == "2") || (jsVal == "Y" && refType == "1" )){
		// if 'No' Checked
		if(obj[1] != null && obj[1].checked == true){
			if(careControlForChld.style.display == "none"){
				careControlForChld.style.display = "inline";
			}
		}else{
			if(careControlForChld.style.display == "inline"){
			
				var arr = new Array();
			   	arr = getArrayOfFieldsStartingWith("careControlInd"+temp2);
			    for(k=0;k<arr.length;k++){
			    arr[k].checked = false;
			   }
				careControlForChld.style.display = "none";
			}		
		}	
	}else if(jsVal == "N"){
		if(careControlForChld.style.display == "none"){
			careControlForChld.style.display = "inline";
		}		
	}
}

// js to show and hide the crtktype and crtkcntrlInd
function showAppRoleToChld(obj,refType,jsVal){
   if(obj != null){
   	var toAttach = obj.name;
	pos1 = toAttach.indexOf("_");
	temp2 = toAttach.substring(pos1,toAttach.length);
	var applicantRoleToChld = document.getElementById("applicantRoleToChld"+temp2);
	var careControlForChld = document.getElementById("careControlForChld"+temp2);
	 
	if((jsVal == "Y" && refType == "2") || (jsVal == "Y" && refType == "1")){
		// if 'No' Checked
		if(obj.value == 'NOT'){
		    if(applicantRoleToChld.style.display == "none"){
		    	applicantRoleToChld.style.display = "inline";
		    }
		    if(careControlForChld.style.display == "inline"){
		        var arr = new Array();
			   	arr = getArrayOfFieldsStartingWith("careControlInd"+temp2);
			    for(k=0;k<arr.length;k++){
			    arr[k].checked = false;
			   }
				careControlForChld.style.display = "none";
			}
		}else{
		if(applicantRoleToChld.style.display == "inline"){
                var arr = new Array();
			   	arr = getArrayOfFieldsStartingWith("other"+temp2);
			    for(k=0;k<arr.length;k++){
			    arr[k].checked = false;
			   }

				applicantRoleToChld.style.display = "none";
		}
		if(careControlForChld.style.display == "inline"){
		
				var arr = new Array();
			   	arr = getArrayOfFieldsStartingWith("careControlInd"+temp2);
			    for(k=0;k<arr.length;k++){
			    arr[k].checked = false;
			   	}
				careControlForChld.style.display = "none";
		}
				
		}	
	}else if(jsVal == "N"){
		if(applicantRoleToChld.style.display == "none"){
			applicantRoleToChld.style.display = "inline";
		}
		if(careControlForChld.style.display == "none"){
			careControlForChld.style.display = "inline";
		}
		
	}
	}
}

function CurrencyFormatted(amount)
{
	var i = parseFloat(amount);
	var original=amount;
	if(!isNaN(original)) { 
	var minus = '';
	if(i < 0) { minus = '-'; }
	i = Math.abs(i);
	i = parseInt((i + .005) * 100);
	i = i / 100;
	s = new String(i);
	if(s.indexOf('.') < 0) { s += '.00'; }
	if(s.indexOf('.') == (s.length - 2)) { s += '0'; }
	s = minus + s;
	return s;
	}
	else return original;
}

function total(readonlyumode) {
    
    if (readonlyumode=='1'){
  var eivalue=document.form1.howMuch_ei.value;
  
 if (eivalue==""||eivalue==" "||eivalue=="  "||eivalue=="   "||eivalue=="    "||eivalue=="     " ||eivalue=="      "||eivalue=="       "||eivalue=="        "||eivalue=="         "||eivalue=="          "||eivalue=="           "){

 document.form1.howMuch_ei.value="";
 eivalue="";

 }else {
  document.form1.howMuch_ei.value=CurrencyFormatted(eivalue);
  }
 var eidesvalue=parseFloat(document.form1.howMuch_ei.value);
 
 
 
  var ueivaluse=document.form1.howMuch_uei.value;
  if (ueivaluse==""||ueivaluse==" "||ueivaluse=="  "||ueivaluse=="   "||ueivaluse=="    "||ueivaluse=="     "||ueivaluse=="      "||ueivaluse=="       "||ueivaluse=="        "||ueivaluse=="         "||ueivaluse=="          "||ueivaluse=="           "||ueivaluse=="            "){
  document.form1.howMuch_uei.value="";
  ueivaluse="";}
  else {
  document.form1.howMuch_uei.value=CurrencyFormatted(ueivaluse);
  }
  var uieDecValue=parseFloat(document.form1.howMuch_uei.value);

 
 
  var cs=document.form1.howMuch_cs.value;
  if (cs==""||cs==" "||cs=="  "||cs=="   "||cs=="    "||cs=="     "||cs=="      "||cs=="       "||cs=="        "||cs=="         "||cs=="          "||cs=="           "){
  document.form1.howMuch_cs.value="";
  cs="";}
  else {
 document.form1.howMuch_cs.value=CurrencyFormatted(cs);
 }
  var csDecValue=parseFloat(document.form1.howMuch_cs.value);
 
 
 
 if (isNaN(eivalue)||isNaN(ueivaluse)||eivalue=="" || ueivaluse=="")
 document.form1.howMuch_tot1.value=CurrencyFormatted('0');
 else {
 var r3= eidesvalue+uieDecValue;
  document.form1.howMuch_tot1.value=CurrencyFormatted(r3);
  }
  
 var netTotal=eidesvalue+uieDecValue-csDecValue
 
 if (netTotal<0 || isNaN(cs)|| isNaN(eivalue) || isNaN(ueivaluse)|| isNaN(netTotal)  ||eivalue=="" || ueivaluse=="" || cs==""){
 netTotal=0;
 document.form1.howMuch_tot2.value=     CurrencyFormatted(netTotal);
 }
 else document.form1.howMuch_tot2.value=CurrencyFormatted(netTotal);
 
 }
} 
 function makeAllSel(val) {
		if (document.getElementsByTagName) {
	        selects = document.getElementsByTagName("select");
	        selectCount = selects.length;
	        if (selectCount > 0) {
	        	for(i=0;i<selectCount;++i){		
	        	selects[i].value=val;	               
	        	}
			}
		}
	}
	
 function isMobileChecked(){
	  if ( document.form1.mobileNotifySwitch.checked )
		    {
		    	 document.form1.mobileNumber.disabled=false;		   		
		    } else
		    	 {
				 document.form1.mobileNumber.value = "";
		    	 document.form1.mobileNumber.disabled=true;		         	    	
		    	}
			
	}
		
function isEmailChecked(){
	  if ( document.form1.emailNotifySwitch.checked )
		    {
		    	 document.form1.emailID.disabled = false;
		    	 document.form1.reEnteredEmail.disabled = false;
		    	 		   		
		    } else
		    	 {	 
				 document.form1.emailID.value = "";				 
		    	 document.form1.emailID.disabled = true;
		    	 document.form1.reEnteredEmail.value = "";
		    	 document.form1.reEnteredEmail.disabled = true;
		    	 
		    	}
			
	}

function isMobileCheckedGroupTag(){
	  if ( document.form1.mobileNotifySwitch.checked )
		    {
		    	 document.form1.phone1mobileNumber.disabled=false;
		    	 document.form1.phone2mobileNumber.disabled=false;
		    	 document.form1.phone3mobileNumber.disabled=false;
		    } else
		    	 {
				 document.form1.phone1mobileNumber.value = "";
		    	 document.form1.phone1mobileNumber.disabled=true;
				 document.form1.phone2mobileNumber.value = "";
		    	 document.form1.phone2mobileNumber.disabled=true;
				 document.form1.phone3mobileNumber.value = "";
		    	 document.form1.phone3mobileNumber.disabled=true;
		    	}
			
	}

function getRaceSelected() {

	chosen = ""
	len = document.form1.aiInd.length

	for (i = 0; i <len; i++) {
	if (document.form1.aiInd[i].checked) {
	chosen = document.form1.aiInd[i].value
	}
	}

	if (chosen == "I") {	
	document.form1.tribeName.disabled=false;
	}
	else {	
		 document.form1.tribeName.value = "";
		document.form1.tribeName.disabled=true;	
	}
}

function getCitizenshipSelected() {
	
	chosen = ""
	len = document.form1.uSCitizen.length

	for (i = 0; i <len; i++) {
	if (document.form1.uSCitizen[i].checked) {
	chosen = document.form1.uSCitizen[i].value
	}
	}

	if (chosen == "Y") {	
		document.form1.alienEntryDate.value = "";
		document.form1.alienEntryDate.disabled=true;
	}
	else {	
	document.form1.alienEntryDate.disabled=false;
	
	}
	}

function getCDCNeedsSelection() {
	  if ( document.form1.none_1.checked )
	    {     	
	    	 document.form1.work_1.disabled=true;
	    	 document.form1.highSchool_1.disabled=true;
	    	 document.form1.education_1.disabled=true;
	    	 document.form1.healthProgram_1.disabled=true;
	    	 document.form1.work_1.checked=false;
	    	 document.form1.highSchool_1.checked=false;
	    	 document.form1.education_1.checked=false;
	    	 document.form1.healthProgram_1.checked=false;
	    	 
	    } else
	    	 {
	    	document.form1.work_1.disabled=false;
	    	 document.form1.highSchool_1.disabled=false;
	    	 document.form1.education_1.disabled=false;
	    	 document.form1.healthProgram_1.disabled=false;
	    	}
		
}

// Added for the ILIES Project
// It sets the prior month default value to the current value of the field
function defaultValuesInActualFieldToPriorMonthsFields(form, elem) {	
	var prior=elem.value;

	if (!(typeof form.grossMonthlyIncome_3 === "undefined")) {
		form.grossMonthlyIncome_3.value = prior;
	}
	if (!(typeof form.grossMonthlyIncome_2 === "undefined")) {
		form.grossMonthlyIncome_2.value = prior;
	}
	if (!(typeof form.grossMonthlyIncome_1 === "undefined")) {
		form.grossMonthlyIncome_1.value = prior;
	}
}

// Added for the ILIES project - ILIES-71606
// Disables or enables the checkbox based on radio button entry
function makeCheckBoxEnableOrDisableOnRadioButtonClick(form) {
	var inputs = document.getElementsByTagName('input');
	for ( var i = 0; i < inputs.length; i++) {
		if (inputs[i].type === 'radio' && inputs[i].value === 'Y') {
			if (inputs[i].checked) {
				form.hoursWorkConflct.disabled = true;
				form.healthTranProb.disabled = true;
				form.careForChild.disabled = true;
				form.hoursWorkConflct.checked = false;
				form.healthTranProb.checked = false;
				form.careForChild.checked = false;
			} else {
				if(form.hoursWorkConflct){
					form.hoursWorkConflct.disabled = false;
				}
				if(form.healthTranProb){
					form.healthTranProb.disabled = false;
				}
				if(form.careForChild){
					form.careForChild.disabled = false;
				}
			}
		}
	}
}
window.onload = function() {
	makeCheckBoxEnableOrDisableOnRadioButtonClick(document.form1);
};
	



