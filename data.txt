var displayConstructMap = {}; // or var map = {};
var editorConstructMap = {};
var addNewRecordConstruct = {};
var displaySubtypeConstruct = {};

var bapHome = function bapHome() {
	var selectedSorRecord = undefined;
	var selectedStgRecord = undefined;
	var addAction = undefined;
	var stgAddAction = undefined;
	var stgUpdAction = undefined;
	var stgDeleteAction = undefined;
	return {
		isDifferentRecord : function(selectedRecordValue) {
			var returnValue = selectedSorRecord
					&& selectedSorRecord !== selectedRecordValue;
			selectedSorRecord = selectedRecordValue;
			return returnValue;
		},
		isAddAction : function() {
			return addAction;
		},
		isStgAddAction : function() {
			return stgAddAction;
		},
		isStgUpdAction : function() {
			return stgUpdAction;
		},
		setAddAction : function(addActionValue) {
			addAction = addActionValue;
		},
		setStgAddAction : function(addActionValue) {
			stgAddAction = addActionValue;
		},
		setStgUpdAction : function(updActionValue) {
			stgUpdAction = updActionValue;
		},
		getExistingRecordValue : function() {
			return selectedSorRecord;
		},
		isDifferentStgRecord : function(selectedRecordValue) {
			var returnValue = selectedStgRecord
					&& selectedStgRecord !== selectedRecordValue;
			selectedStgRecord = selectedRecordValue;
			return returnValue;
		},
		setExistingRecordValue : function(selectedRecordValue) {
			selectedSorRecord = selectedRecordValue;
		},
		getExistingStgRecordValue : function() {
			return selectedStgRecord;
		},
		setExistingStgRecordValue : function(selectedRecordValue) {
			selectedStgRecord = selectedRecordValue;
		},
		isStgDeleteAction : function() {
			return stgDeleteAction;
		},
		setStgDeleteAction : function(delActionValue) {
			stgDeleteAction = delActionValue;
		},
		reInitialize : function() {
			$.removeData(document.body, "clean_form_data");
			selectedSorRecord = undefined;
			selectedStgRecord = undefined;
			addAction = undefined;
			stgAddAction = undefined;
			stgUpdAction = undefined;
			stgDeleteAction = undefined;
		}
	};
}

bapHome = new bapHome();

function displaySelectedRecord(selectedRecord, screentypecode) {
	var existingRecordValue = document.getElementById("table_radio_"
			+ bapHome.getExistingRecordValue());

	if ((bapHome.isDifferentRecord(selectedRecord.value) || (bapHome
			.isAddAction()))
			&& checkIfDataChanged()) {
		var dialog = $(
				'<p>Are you sure you want to continue? Any unsaved information will be lost.</p>')
				.dialog(
						{
							draggable : false,
							resizable : false,
							position : 'center',
							dialogClass : "hideCloseIcon",
							modal : true,
							buttons : {
								"Ok" : function() {
									displaySor(selectedRecord, screentypecode);
									dialog.dialog('close');
								},
								"Cancel" : function() {
									dialog.dialog('close');
									if (!bapHome.isAddAction()) {
										var newRecordValue = document
												.getElementById("table_radio_"
														+ selectedRecord.value);
										existingRecordValue.checked = true;
										newRecordValue.checked = false;
										bapHome
												.setExistingRecordValue(existingRecordValue.value);
									} else {
										$('input[name="selectedRecord"]')
												.each(
														function(checked) {
															if ($(this).attr(
																	'checked') == "checked") {
																this.checked = false;
															}
														});
									}
								}
							}
						});
	} else {
		displaySor(selectedRecord, screentypecode);
	}
}
function displaySor(selectedRecord, screentypecode) {
	$("#messageseciondiv").hide();
	if (null != $("#messageCaseClosed").html()
			&& $('#messageCaseClosed').is(':hidden')) {
		$("#messageCaseClosed").show();
	}
	document.getElementById("addMode").value = false;
	var params = $(findContainerForm(selectedRecord)).serialize();

	console.log("Subtype..." + screentypecode);
	var jsonVar = displayConstructMap[screentypecode];
	// DeSelecting and resetting the Conflict Summary Table style.
	resetTableStyleToDefault("conflictSummaryTable");
	var options = {
		url : jsonVar.endpoint,
		data : params,
		success : function(htmlText, status, xhr) {
			if(['IN','IX','RE','PR','TN','TX'].includes(screentypecode)){			
				var el = document.createElement( 'html' );				
				el.innerHTML = htmlText;	        
				// Extract the value of the specific field from the parsed HTML		        
				const statusField = el.querySelector("#status");	        
				var statusFieldValue;	        
				if(statusField!=null){	        	
					statusFieldValue = statusField.value;        	
					if(!(['CC','CP'].includes(statusFieldValue))){	        		
						$("#deleteButton").removeAttr('disabled');
					
					}
					else{
						$("#deleteButton").attr("disabled",true);
					}
					
				}        
				else{	        	
					$("#deleteButton").removeAttr('disabled');
					
					
				}	
			}	
			else{			
				$("#deleteButton").removeAttr('disabled');		
			}
			$(".individualInfoDetails")
					.html(
							'<div id="individualInfoDetails" class="individualInfoDetails"></div>');
			
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID, '', false);
			highlightMandatoryFieldsOnLoad();

			if (jsonVar.callback) {
				jsonVar.callback();
			}
			$('input[name=selectedStagingRecord]:hidden').val('');
			var clean_form_data = $(".bapHome").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('clean_form_data', clean_form_data);
			bapHome.setAddAction(false);
			bapHome.setStgAddAction(false);
			$.unblockUI();
		}
	};
	console.log(options);
	showWait();
	$.ajax(options);
}

function deleteRecord(button) {
	var dialog = $(
			'<p>Are you sure you want to continue? This will permanently delete the selected record.</p>')
			.dialog(
					{
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Delete" : function() {
								$("#messageCaseClosed").hide();
								var selectedRecord = $('input[name="selectedRecord"]:checked');
								if (selectedRecord.val() == '' || selectedRecord.val() == undefined) {
									dialog.dialog('close');
									showSimpleDialog("Please select a record.");
									return true;
								}

								var screenType = selectedRecord.val().split(
										"##")[1];
								var jsonVar = editorConstructMap[screenType];

								if (selectedRecord.val().split("##")[2] == "PARE") {
									var jsonVar = editorConstructMap["PARE"];
								}
								if (selectedRecord.val().split("##")[2] == "NCP1") {
									var jsonVar = editorConstructMap["NCP1"];
								}

								var params = selectedRecord.serializeArray();
								if(bapHome.isStgDeleteAction()){
									var selectedConflictRecord = $('input[name=selectedStagingRecord]:checked').val();
									params.push({
										name : 'selectedStagingRecord',
										value : selectedConflictRecord
									});
								}	
								showWait();
								$.ajax({
									url : jsonVar.deleteEndpoint,
									data : params,
									success : function(data, status, xhr) {
										console.log(data);
										$(document.body).data(
												'clean_form_data', '');
										if (data.response.status) {
											$("#current").trigger("click");
											displayResults(data,
													jsonVar.messageDivId, '',
													false);
										} else {
											displayResults(data,
													jsonVar.messageDivId, '',
													false);
										}
										$.unblockUI();
									}
								});
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});
}

function cancelAppointment(button) {
	var dialog = $(
			'<p>Are you sure you want to cancel the appointment? This will cancel the selected appointment.</p>')
			.dialog(
					{
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Cancel" : function() {
								$("#messageCaseClosed").hide();
								var selectedRecord = $('input[name="selectedRecord"]:checked');

								var screenType = selectedRecord.val().split(
										"##")[1];
								var jsonVar = editorConstructMap[screenType];

								var params = selectedRecord.serializeArray();
								
								
								
								showWait();
								$.ajax({
									url : jsonVar.cancelEndpoint,
									data : params,
									success : function(data, status, xhr) {
										console.log(data);
										$(document.body).data(
												'clean_form_data', '');
										if (data.response.status) {
											$("#current").trigger("click");
											displayResults(data,
													jsonVar.messageDivId, '',
													false);
										} else {
											displayResults(data,
													jsonVar.messageDivId, '',
													false);
										}
										$.unblockUI();
									}
								});
								dialog.dialog('close');
							},
							"Close" : function() {
								dialog.dialog('close');
							}
						}
					});
}

function populateMasterObjectView1(selectedType) {
	console.log($(selectedType).val());
	console.log("hello darling");
	$("#messageseciondiv").hide();

	if ($(selectedType).val() == "") {
		$('.details').hide();
		return;
	}

	var jsonVar = editorConstructMap[$(selectedType).val()];
	var options = {
		url : jsonVar.addEndPoint,
		type : "POST",
		data: {
		    selectedType: $(selectedType).val() // Pass the selectedType value to the controller
		},
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.displayEditorDivId, '', false);
			$('#' + jsonVar.displayEditorDivId).show();
			
			if (jsonVar.renderCallback) {
				jsonVar.renderCallback();
			}
			try {
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('clean_form_data', clean_form_data);
			} catch (e) {

			}
			highlightMandatoryFieldsOnLoad();
			
			
			
			$.unblockUI();
		}
	};
	showWait();
	$.ajax(options);
}

function populateMasterObjectView(selectedType) {
	console.log($(selectedType).val());

	$("#messageseciondiv").hide();

	if ($(selectedType).val() == "") {
		$('.details').hide();
		return;
	}

	var jsonVar = editorConstructMap[$(selectedType).val()];
	var options = {
		url : jsonVar.addEndPoint,
		type : "POST",
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.displayEditorDivId, '', false);
			$('#' + jsonVar.displayEditorDivId).show();
			
			if (jsonVar.renderCallback) {
				jsonVar.renderCallback();
			}
			try {
				var clean_form_data = $(".bapHome").find(
						"select,input[type!=hidden],textarea").serialize();
				$(document.body).data('clean_form_data', clean_form_data);
			} catch (e) {

			}
			highlightMandatoryFieldsOnLoad();
			$.unblockUI();
		}
	};
	showWait();
	$.ajax(options);
}
function disPlaySubCaseMemberSection(){
	var memberTable = document.getElementById("sCasememberDtls");
	if($('#subCaseProamCode').val()!= ""||$('#subCaseProamCode').val()!= '')
		{
		document.getElementById("sCasememberDtls").style.display = '';
		document.getElementById("pf5Buttons2").style.display = '';
		document.getElementById("headingRow").style.display = '';
		$('.tableRow').show();
		}
	else
		{
		document.getElementById("pf5Buttons2").style.display = "none";
		document.getElementById("headingRow").style.display = "none";
		document.getElementById("sCasememberDtls").style.display ="none";
		$('.tableRow').hide();
		for (var i = 1; i < memberTable.rows.length; i++) {

		//	document.getElementById(memberTable.rows[i].id).style.display = "none";

		}
		}
	
}
function showSubCase()

{
	var x = document.getElementById("createSubCase");
	  if (x.style.display === "none") {
	    x.style.display = "block";
	  } else {
	    x.style.display = "none";
	  }	
}
function populateSubCase() {
	
	var caseid=$("#selected_subCase option:selected").text();
	
	
	console.log($('#selected_subCase').val());
	$("#subcmessageseciondiv").hide();
	var sendData = {};
	sendData['selectedCaseId'] = $('#selected_subCase').val();
	var jsonVar = displayConstructMap['displaySelectedCase'];
	var options = {
		url : jsonVar.endpoint,
		data : sendData,
		type : "POST",
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			if(caseid.includes("S"))
			{
		    document.getElementById("prgmTypeSelect").style.display = "none";
		    document.getElementById("hohSelect").style.display = "none";
			document.getElementById("pf5Buttons2").disabled = true;
			document.getElementById("subcasetitle").style.display = "none";
			
			}
		else
			{
			document.getElementById("prgmTypeSelect").style.display = '';
		    document.getElementById("hohSelect").style.display = '';
			document.getElementById("pf5Buttons2").disabled = false;
			document.getElementById("subcasetitle").style.display = '';
			}
			$.unblockUI();
		}
	};
	showWait();
	$.ajax(options);
	
	
}

function addDetail(selectedType) {
	$("#messageseciondiv").hide();
	console.log(selectedType);
	var jsonVar = editorDetailConstructMap[selectedType];
	if (!checkAllChildRequiredFields()) {
		return true;
	}
	if (jsonVar.preRenderAddDetailCallback) {
		jsonVar.preRenderAddDetailCallback();
	}

	console.log($(".bapHome").serializeArray());
	showWait();
	$.ajax({
		url : jsonVar.addDetailEndPoint,
		type : "POST",
		data : $(".bapHome").serializeArray(),
		success : function(htmlText, status, xhr) {
			if (jsonVar.postRenderAddDetailCallback) {
				jsonVar.postRenderAddDetailCallback();
			}
			if (htmlText.length < 700) {
				var json = JSON.parse(htmlText);
				displayResults(json, jsonVar.messageDivId, '', false);
			} else {
				updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.linkedObjectViewDetails, '', false);
				highlightMandatoryFieldsOnLoad();
			}
			$.unblockUI();
		}
	});
}

function addSpousalDetail(selectedType, sizeGreaterThanZero) {
	console.log(selectedType);
	$("#messageContainerSPAL").hide();

	var jsonVar = editorDetailConstructMap[selectedType];

	if (!checkAllRequiredFieldsForSPAL()) {
		return true;
	}
	console.log($(".bapHome").serializeArray());
	showWait();
	var selectedResourceRecord = $('input[name="selectedResourceSequenceNumber"]:checked');
	if (selectedResourceRecord.length != 0) {
		var params = selectedResourceRecord.serialize();
	}
	if (sizeGreaterThanZero == "false"
			|| (params != undefined && params.length === 0)) {

		$.ajax({
			url : jsonVar.addDetailEndPoint,
			type : "POST",
			data : $(".bapHome").serializeArray(),
			success : function(htmlText, status, xhr) {
				if (jsonVar.postRenderAddDetailCallback) {
					jsonVar.postRenderAddDetailCallback();
				}
				if (htmlText.length < 700) {
					var json = JSON.parse(htmlText);
					displayResults(json, jsonVar.messageDivId, '', false);
				} else {
					updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.linkedObjectViewDetails, '', false);
					highlightMandatoryFieldsOnLoad();
					stylizeScreenFields();
				}
				$(document.body).data('addDetailClicked', true);
				$.unblockUI();
			}
		});
	} else {
		$.ajax({
			url : jsonVar.updateDetailEndPoint,
			type : "POST",
			data : $(".bapHome").serializeArray(),
			success : function(htmlText, status, xhr) {
				if (jsonVar.postRenderAddDetailCallback) {
					jsonVar.postRenderAddDetailCallback();
				}
				if (htmlText.length < 700) {
					var json = JSON.parse(htmlText);
					displayResults(json, jsonVar.messageDivId, '', false);
				} else {
					updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.linkedObjectViewDetails, '', false);
					highlightMandatoryFieldsOnLoad();
					stylizeScreenFields();
				}
				$.unblockUI();
			}
		});
	}
	stylizeScreenFields();
}

function submitSpousalAssessment(button, selectedType, actionUpdate) {

	var data = '';
	var jsonVar = editorConstructMap[selectedType];
	var isAddDetailClicked = $(document.body).data('addDetailClicked');
	if (!checkIfDataChanged(jsonVar) && !isAddDetailClicked) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	if (!jsonVar.skipMandatoryFieldCheck && !checkAllRequiredFields()) {
		return true;
	}
	if (jsonVar.validateEditorCallback && jsonVar.validateEditorCallback()) {
		return true;
	}
	data = $(findContainerForm(button)).serializeArray();
	var URL = '';
	if (actionUpdate == 'true') {
		console.log("Updating ..." + jsonVar.updateEndpoint);
		URL = jsonVar.updateEndpoint;
	} else {
		console.log("Inserting ..." + jsonVar.insertEndpoint);
		URL = jsonVar.insertEndpoint;
	}
	console.log(data);
	showWait();
	$.ajax({
		type : "POST",
		url : URL,
		data : data,
		success : function(data, status, xhr) {
			console.log(data);
			if (data.response.status) {
				var promise = fetchSpousalSummarySection(
						$(findContainerForm(button)),
						'spousalResourceAssessment');
				promise.done(function() {
					displayResults(data, 'messageContainerSPAL', '', false);
				});
			} else {
				displayResults(data, 'messageContainerSPAL', '', false);
			}
			$(document.body).data('addDetailClicked', false);
			$.unblockUI();
		}
	});
	return false;
}

function saveDetail(selectedType) {
	console.log(selectedType);
	var jsonVar = editorDetailConstructMap[selectedType];
	if (!checkCoveredPersonDetailsChange()) {
		showSimpleDialog("None of the screen details were modified.");
		return true;
	}
	if (!checkAllChildRequiredFields()) {
		return true;
	}
	if (jsonVar.preRenderSaveDetailCallback) {
		jsonVar.preRenderSaveDetailCallback();
	}
	$("#messageCaseClosed").hide();
	showWait();
	$
			.ajax({
				type : "POST",
				url : jsonVar.updateDetailEndpoint,
				data : $(".bapHome").serializeArray(),
				success : function(data, status, xhr) {
					if (jsonVar.postRenderSaveDetailCallback) {
						jsonVar.postRenderSaveDetailCallback();
					}
					console.log(data);
					if (data.response.status) {
						$(document.body).data('clean_form_data', '');
						$("#current").trigger("click");
						if (data.response.data
								&& data.response.data.length >= 1
								&& data.response.data[0].defaultSorRecord !== '') {
							var valueToSelected = data.response.data[0].defaultSorRecord;
							var selectedRadio = $('input:radio[name="selectedRecord"][value="'
									+ valueToSelected + '"]');

							if (selectedRadio) {
								selectedRadio.attr('checked', true);
								displaySor(selectedRadio.get(0), "MINS");
								$("#current").focus();
							}
						}
						$('input[name="selectedRecord"]:checked').trigger(
								"click");
						displayResults(data, jsonVar.messageDivId, '', false);
					} else {
						displayResults(data, jsonVar.messageDivId, '', false);
					}
					$.unblockUI();

				}
			});
}

function checkCoveredPersonDetailsChange() {
	var oldCoveredPersonId = $("#oldCoveredPersonId").val();
	var newCoveredPersonId = $("#coveredPerson").val();

	var oldRelationCode = $("#oldRelationshipToPolicyHolder").val();
	var newRelationCode = $("#relationshipToPolicyHolder").val();

	var oldBeginDate = $("#oldIndividualBeginDate").val();
	var newBeginDate = $("#individualBeginDate").val();

	var oldPlicyNum = $("#oldIndividualPolicyNumber").val();
	var newPlicyNum = $("#individualPolicyNumber").val();

	if (oldCoveredPersonId != newCoveredPersonId
			|| oldRelationCode != newRelationCode
			|| oldBeginDate != newBeginDate || oldPlicyNum != newPlicyNum) {
		return true;
	}
	return false;
}

function deleteDetail(selectedType) {
	console.log(selectedType);
	var jsonVar = editorDetailConstructMap[selectedType];
	if (jsonVar.preRenderDeleteDetailCallback) {
		jsonVar.preRenderDeleteDetailCallback();
	}
	if (typeof jsonVar != 'undefined' && jsonVar.delFunc) {
		jsonVar.delFunc();
	}
	$("#messageCaseClosed").hide();
	showWait();
	$.ajax({
		url : jsonVar.deleteDetailEndPoint,
		type : "POST",
		data : $(".bapHome").serializeArray(),
		success : function(data, status, xhr) {
			if (jsonVar.postRenderDeleteDetailCallback) {
				jsonVar.postRenderDeleteDetailCallback();
			}
			console.log(data);
			if (jsonVar.isRefresh) {
				if (data.response.status) {
					$("#current").trigger("click");
					displayResults(data, jsonVar.messageDivId, '', false);
				} else {
					displayResults(data, jsonVar.messageDivId, '', false);
				}
			} else {
				if (data.length < 700) {
					var json = JSON.parse(data);
					displayResults(json, jsonVar.messageDivId, '', false);
				} else {
					updateScreenForJSONResponse(data, false, xhr, jsonVar.linkedObjectViewDetails, '', false);
					highlightMandatoryFieldsOnLoad();
					stylizeScreenFields();
				}
			}
			$.unblockUI();

		}
	});
}

function populateSubType(bapName, targetElementId) {

	var options = {
		url : displaySubtypeConstruct[bapName].displaySubtypeEndPoint,
		data : 'selectedType=' + $('#ind_incomeType').val(),
		type : "POST",
		success : function(data, status, xhr) {
			console.log(data);
			$(targetElementId).empty();
			$("<option />", {
				val : "",
				text : "< Select One >"
			}).appendTo($(targetElementId));
			$(data).each(function() {
				$("<option />", {
					val : this.key,
					text : this.value
				}).appendTo($(targetElementId));
			});
			$.unblockUI();
			hideEditorDisplay();
			highlightMandatoryFieldsOnLoad();
		}
	};
	showWait();
	console.log(options);
	$.ajax(options);
}

function hideEditorDisplay() {
	$('#IncomeDetails').hide();
}

var checkIfDataChanged = function(jsonVar) {
	var clean_form_data = $(document.body).data('clean_form_data');

	if (typeof clean_form_data === 'undefined' || clean_form_data == '') {
		return false;
	}

	var dirty_form_data = $(".bapHome").find(
			"select,input[type!=hidden],textarea").serialize();

	if (dirty_form_data != clean_form_data) {
		return true;
	} else {
		return false;
	}
}

function saveRecord(button, selectedType, actionUpdate) {
	$("#messageCaseClosed").hide();
	$("#messageseciondiv").hide();

	var jsonVar = editorConstructMap[selectedType];

	$('input[name="selectedRecord"]').each(function(checked) {
		if ($(this).attr('checked') == "checked") {
			isSorSelected = true;
		}
	});
	$('input[name="selectedStagingRecord"]').each(function(checked) {
		if ($(this).attr('checked') == "checked") {
			isStgSelected = true;
		}
	});

	if (!(isSorSelected && isStgSelected) && !bapHome.isStgAddAction()) {
		if (!checkIfDataChanged(jsonVar)) {
			showSimpleDialog("None of the screen details were modified.");
			return true;
		}
	}

	if (jsonVar.preValidateCallback && jsonVar.preValidateCallback()) {
		return true;
	}

	if (!jsonVar.skipMandatoryFieldCheck && !checkAllRequiredFields()) {
		return true;
	}

	if (jsonVar.validateEditorCallback && jsonVar.validateEditorCallback()) {
		return true;
	}

	var isSorSelected = false;
	var isStgSelected = false;

	var URL = '';
	if (actionUpdate == 'true') {
		console.log("Updating ..." + jsonVar.updateEndpoint);
		URL = jsonVar.updateEndpoint;
	} else {
		console.log("Inserting ..." + jsonVar.insertEndpoint);
		URL = jsonVar.insertEndpoint;
	}

	showWait();

	var saveRecordPromise = $.ajax({
		type : "POST",
		url : URL,
		data : $(".bapHome").serializeArray()
	});

	saveRecordPromise
			.done(
					function(data, status, xhr) {
						console.dir(data);
						if (data.response.status) {
							$(document.body).data('clean_form_data', '');
							$("#current").trigger("click");

							if (data.response.data
									&& data.response.data.length >= 1
									&& data.response.data[0].defaultSorRecord !== '') {
								var valueToSelected = getValueForSorRecordObj(
										data.response.data, "defaultSorRecord");
								var selectedRadio = $('input:radio[name="selectedRecord"][value="'
										+ valueToSelected + '"]');

								if (selectedRadio) {
									selectedRadio.attr('checked', true);
									displaySor(selectedRadio.get(0),
											selectedType);
									$("#current").focus();
								}
							}
						}
					}).always(function(data, status, xhr) {
				displayResults(data, jsonVar.messageDivId, '', false);
				updWarningFlag(data.response.data);
			});
}

function getValueForSorRecordObj(arrayOfObjects, propertyName) {
	try {
		for ( var index in arrayOfObjects) {
			for ( var prop in arrayOfObjects[index]) {
				if (propertyName === prop) {
					return arrayOfObjects[index][prop];
				}
			}
		}
	} catch (e) {
		console.log(e);
	}
}

function ajaxSubmitAction(currentElement, targetEndPoint, asyncValue) {
	$.ajax({
		type : "POST",
		url : targetEndPoint,
		async : asyncValue,
		success : function(result, status, xhr) {
			updateScreenForJSONResponse(result, false, xhr, 'case_content_div', '', false);
			$("#current").attr("id", "");
			$(currentElement).attr("id", "current");
			$.unblockUI();
			init();
		},
		error : function(xhr, ajaxOptions, thrownError) {
			$("#case_content_div").html(xhr.status + thrownError);
			$.unblockUI();
			init();
		}
	});
}

var historySupported = false;

function isSupportedBrowserHstry(){
	return !!(window.history && history.pushState);
}

function popStatehandler(event){
	if(event.state !=null){
		$("#dd").dialog({
		        modal: true,
		        width: 400,
		        draggable : false,
				resizable : false,
				position : 'center',
				dialogClass : "hideCloseIcon",
				closeOnEscape : false,
		        buttons : {
		        	Ok: function() {
		            	$(this).dialog("close"); //closing on Ok click
		            }
		        },
       });
	}
}

function init(){
	historySupported = isSupportedBrowserHstry();
	if(historySupported){
		for(var i =0;i< 10;i++){
			history.pushState({},'',window.location);
		}
		window.onpopstate = popStatehandler;
	}
}

function changeBap(currentElement, targetEndPoint, bapName, oldValue) {
	showWait();
	currrentBap = bapName;
	currentBapSub = bapName;
	if (typeof currrentBap != 'undefined') {
		currrentBap = bapName.toLowerCase();
		currentBapSub = bapName.substring(0, 3);
	}
	oldBap = oldValue;
	oldBapSub = oldValue;
	if (typeof oldBap != 'undefined') {
		oldBap = oldValue.toLowerCase();
		oldBapSub = oldValue.substring(0, 3);
	}

	if (currrentBap == oldBap
			|| currentBapSub == oldBapSub
			|| (currrentBap == 'other_exp' && oldBap == 'dependentexpense')
			|| (currrentBap == 'case_info' && $("#updateAction").val() == 'updateAction')
			|| (currrentBap == 'parent' && $("#updateAction").val() == 'updateAction')
			|| (currrentBap == 'trel' && $("#updateAction").val() == 'updateAction')
			|| (currrentBap == 'tax' && $("#updateAction").val() == 'updateAction')) {
		ajaxSubmitAction(currentElement, targetEndPoint, false);
	} else {
		ajaxSubmitAction(currentElement, targetEndPoint, true);
	}
	$("#updateAction").val() == '';
}

function changeTab(currentElement, targetEndPoint, bapName) {
	if (checkIfDataChangedForBapNavigation(bapName, $("#bapName").val())) {
		$("#bapValue").val(bapName);
		var dialog = $(
				'<p>Are you sure you want to continue? Any unsaved information will be lost.</p>')
				.dialog(
						{
							draggable : false,
							resizable : false,
							position : 'center',
							dialogClass : "hideCloseIcon",
							width : 'auto',
							modal : true,
							buttons : {
								"Ok" : function() {
									changeBap(currentElement, targetEndPoint,
											bapName, $("#bapName").val());
									dialog.dialog('close');
								},
								"Cancel" : function() {
									dialog.dialog('close');
								}
							}
						});
		return true;
	} else {
		changeBap(currentElement, targetEndPoint, bapName, $("#bapName").val());
		return;
	}
}

function openInterface(currentElement, targetEndPoint, bapName) {
	var interfaceUrl = getInterfaceUrl(targetEndPoint);
	showWait();
	var height = 590;
	var width = 1060;
	openInterfaceWindow(interfaceUrl, height, width);
	$.unblockUI();
}

function openInterfaceWindow(url, height, width) {
	var left = 350;
	var top = 200;

	// set window properties
	props = "toolbar=no" + ",status=no" + ",resizable=yes" + ",scrollbars=yes"
			+ ",menubar=no" + ",location=no" + ",";

	dims = "width=" + width + ",height=" + height + ",left=" + left + ",top="
			+ top;

	try {

		win = window.open("", 'interfaces', props + dims);
		win.height = height;
		win.width = width;
		win.location.href = url;
	} catch (e) {
		console.log(e);
		var dialog = $('<p>Please disable popup blocker and try again!</p>')
				.dialog({
					modal : true,
					buttons : {
						"Close" : function() {
							dialog.dialog('close');
						}
					}
				});
	}
}

function getInterfaceUrl(url) {
	var pathName = window.location.pathname;
	var interfaceUrl = url;
	if (url.indexOf("caseprocessingweb") == -1) {
		interfaceUrl = url;
	}
	return interfaceUrl;

}

function navigateToTab(bapName) {
	var lowerCase = bapName.toLowerCase();
	var displayName = lowerCase.replace(/ /g, "_");
	$("a[bapname='" + displayName + "']").trigger("click");
}

var checkIfDataChangedForBapNavigation = function(bapName, oldValue) {
	if (typeof oldValue == 'undefined') {
		var showData_changed = $(document.body).data('showData_changed');
		var trel_changed = $(document.body).data('trel_changed');
		var vsum_changed = $(document.body).data('vsum_changed');
		var summ_changed = $(document.body).data('summ_changed');
		var caseinfo_changed = $(document.body).data('caseinfo_changed');
		
		// form print changes
		var formprint_changed = $(document.body).data('formprint_changed');
		if (formprint_changed == 'Y') {
			var dirty_form_data = $("#formPrintEditorHome").find(
			"select,input[type!=hidden],textarea").serialize();
			var clean_form_data = $(document.body).data('clean_form_data');
	
			if (typeof clean_form_data == 'undefined' || clean_form_data == '') {	
				$(document.body).data('formprint_changed', 'N');
				return false;
			}
			if (dirty_form_data != '' && dirty_form_data != clean_form_data) {
				return true;
			} else {
				$(document.body).data('formprint_changed', 'N');
				return false;
			}
		}
		// general form changes
		var generalForm_changed = $(document.body).data('generalForm_changed');
		if (generalForm_changed == 'Y') {
			var dirty_form_data = $("#generalFormEditorHome").find(
			"select,input[type!=hidden],textarea").serialize();
			var childTable = $("#generalFormsSummary").find(
			"select,input[type!=hidden],textarea").serialize();
			if(typeof childTable != 'undefined'){
				dirty_form_data = dirty_form_data + childTable;
			}
			var clean_form_data = $(document.body).data('general_form_data');
	
			if (typeof clean_form_data == 'undefined' || clean_form_data == '') {	
				$(document.body).data('generalForm_changed', 'N');
				return false;
			}
			if (dirty_form_data != '' && dirty_form_data != clean_form_data) {
				return true;
			} else {
				$(document.body).data('generalForm_changed', 'N');
				return false;
			}
		}
		if (trel_changed == 'Y' || vsum_changed == 'Y') {
			return checkIfDataChangedForTrel(".trelHome");
		}
		if (summ_changed == 'Y') {
			return checkIfDataChangedForSumm(".summHome");
		}
		if (caseinfo_changed == 'Y') {
			return checkIfDataChangedForCaseInfo(".details");
		}
		if (showData_changed == 'Y') {
			return checkIfDataChangedForShowData(".details");
		}
		$(document.body).data('trel_clean_form_data', '');
		$(document.body).data('vsum_clean_form_data', '');
		$(document.body).data('summ_clean_form_data', '');
		$(document.body).data('showData_clean_form_data', '');
		$(document.body).data('clean_form_data', '');
		return false;
	}
	if (oldValue == 'member') {
		return checkIfMemDataChanged();
	}
	if(oldValue == 'CORD') {
		var courtorder_changed = $(document.body).data('courtorder_changed');
		if(courtorder_changed == 'Y') {
			return checkIfDataChangedForCord();
		}
		$(document.body).data('clean_form_data_cord', '');
	}
	var dirty_form_data = $(".bapHome").find(
			"select,input[type!=hidden],textarea").serialize();
	var clean_form_data = $(document.body).data('clean_form_data');

	if (typeof clean_form_data == 'undefined' || clean_form_data == '') {

		return false;
	}
	if (dirty_form_data != '' && dirty_form_data != clean_form_data) {
		return true;
	} else {
		return false;
	}
}

function checkIfDataChangedForSumm(bap) {
	var dirty_form_data = $(".summHome").find("select,input[type!=hidden]")
			.serialize();
	var clean_form_data = $(document.body).data('summ_clean_form_data');

	if (typeof clean_form_data == 'undefined' || clean_form_data == '') {
		$(document.body).data('summ_changed', 'N');
		return false;
	}
	if ((dirty_form_data != '' && dirty_form_data != clean_form_data)) {
		return true;
	} else {
		$(document.body).data('summ_changed', 'N');
		return false;
	}
}

function checkIfDataChangedForTrel(bap) {
	var clean_form_data;
	var trel_dirty_form_data = $(".trelHome").find(
			"select,input[type!=hidden],textarea").serialize();
	var trel_clean_form_data = $(document.body).data('trel_clean_form_data');
	var vsum_dirty_form_data = $(".vsumHome").find(
			"select,input[type!=hidden],textarea").serialize();
	var vsum_clean_form_data = $(document.body).data('vsum_clean_form_data');

	var dirty_form_data = trel_dirty_form_data + vsum_dirty_form_data;
	if (typeof vsum_clean_form_data == 'undefined') {
		clean_form_data = trel_clean_form_data;
	} else {
		clean_form_data = trel_clean_form_data + vsum_clean_form_data;
	}

	if (typeof clean_form_data == 'undefined' || clean_form_data == '') {
		$(document.body).data('trel_changed', 'N');
		$(document.body).data('vsum_changed', 'N');
		return false;
	}
	if (dirty_form_data != '' && dirty_form_data != clean_form_data) {
		return true;
	} else {
		$(document.body).data('trel_changed', 'N');
		$(document.body).data('vsum_changed', 'N');
		return false;
	}
}

function checkIfDataChangedForShowData(bap) {
	var dirty_form_data = $("#selectedShowingData").val();
	var clean_form_data = $(document.body).data('showData_clean_form_data');

	if (typeof clean_form_data == 'undefined' || clean_form_data == '') {
		$(document.body).data('showData_changed', 'N');
		return false;
	}
	if (dirty_form_data != '' && dirty_form_data != clean_form_data) {
		return true;
	} else {
		$(document.body).data('showData_changed', 'N');
		return false;
	}
}

function checkIfDataChangedForCaseInfo(bap) {
	var dirty_form_data = $(".details").find(
			"select,input[type!=hidden],textarea").serialize();
	var clean_form_data = $(document.body).data('caseinfo_clean_form_data');

	if (typeof clean_form_data == 'undefined' || clean_form_data == '') {
		$(document.body).data('caseinfo_changed', 'N');
		return false;
	}
	if ((dirty_form_data != '' && dirty_form_data != clean_form_data) || $("#isExpeditedChanged").val()) {
		return true;
	} else {
		$(document.body).data('caseinfo_changed', 'N');
		return false;
	}
}

function updWarningFlag(jsonArray) {
	for (var i = 0; i < jsonArray.length; i++) {
		for ( var key in jsonArray[i]) {
			$('#' + key).val(jsonArray[i][key]);
		}
	}
}

// Javascript function for showing interstitial on all ajax actions
function showWait() {
	$
			.blockUI({
				message : "<img src='/AMPSStaticWeb/static/images/rotating_hourglass.gif'> Please Wait! </img>"
			});
}

function validateAmount(evt, textField) {
	var charCode = (evt.which) ? evt.which : event.keyCode;
	if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 45
			&& charCode != 46 && charCode != 63 && charCode != 8
			&& charCode != 127 && charCode != 9 && charCode != 13
			&& charCode != 35 && charCode != 36 && charCode != 37
			&& charCode != 39)
		return false;
	else {
		var val = textField.value;
		var index = val.indexOf('.');

		if (index > 0 && charCode == 46) {
			return false;
		}
		if (index > 0) {
			var CharAfterdot = (val.length + 1) - index;
			if (CharAfterdot > 3 && textField.selectionStart > index
					&& charCode != 8) {
				return false;
			}
		}
	}
	return true;
}

function validateNumbers(key) {
	// getting key code of pressed key
	var keycode = (key.which) ? key.which : key.keyCode;
	// comparing pressed keycodes
	if (!(keycode == 8) && (keycode < 48 || keycode > 57) && keycode != 63) {
		return false;
	}
}

function validateNumbersWithoutQuestionMark(key) {
	// getting key code of pressed key
	var keycode = (key.which) ? key.which : key.keyCode;
	// comparing pressed keycodes
	if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
		return false;
	}
}

function calculateTotal(resultContainerId, sumAttributeValue) {
	var total = 0.00;
	try {
		$('input[sum=' + sumAttributeValue + ']').each(function(index) {
			var elValue = $(this).val();
			if (elValue && $.trim(elValue) !== '') {
				total += eval(elValue);
			}
		});

		total = parseFloat(total);
		if (total === 0.00) {
			total = "";
		}
		$('#' + resultContainerId).html(total);
	} catch (e) {
		console.error(e);
	}
}

function showHideCaseStatusSections() {
	var $summButton = $("#showHideButton_summary");
	var $summInfoSection = $("#summarySecionInformation_summary");

	var $benefitMaintenanceButton = $("#showHideButton_bmnt");
	var $benefitMaintenanceInfoSection = $("#summarySecionInformation_bmnt");

	var $benefitHistoryButton = $("#showHideButton_benefithistorystatus");
	var $benefitHistoryInfoSection = $("#summarySecionInformation_benefithistorystatus");

	var $subcButton = $("#showHideButton_SUBC");
	var $subcSection = $("#summarySecionInformation_SUBC");

	var $cnfdButton = $("#showHideButton_CNFD");
	var $cnfdSection = $("#summarySecionInformation_CNFD");

	$summButton.on("click", function() {
		if ($summButton.val() === 'Hide') {
			$benefitMaintenanceButton.val("Show");
			$benefitMaintenanceButton.html("Show");

			$benefitHistoryButton.val("Show");
			$benefitHistoryButton.html("Show");

			$subcButton.val("Show");
			$subcButton.html("Show");

			$cnfdButton.val("Show");
			$cnfdButton.html("Show");

			$benefitMaintenanceInfoSection.hide();
			$benefitHistoryInfoSection.hide();
			$subcSection.hide();
			$cnfdSection.hide();
		}
	});

	$benefitMaintenanceButton.on("click", function() {
		if ($benefitMaintenanceButton.val() === 'Hide') {
			$summButton.val("Show");
			$summButton.html("Show");

			$benefitHistoryButton.val("Show");
			$benefitHistoryButton.html("Show");

			$subcButton.val("Show");
			$subcButton.html("Show");

			$cnfdButton.val("Show");
			$cnfdButton.html("Show");

			$summInfoSection.hide();
			$benefitHistoryInfoSection.hide();
			$subcSection.hide();
			$cnfdSection.hide();
		}
	});

	$benefitHistoryButton.on("click", function() {
		if ($benefitHistoryButton.val() === 'Hide') {
			$summButton.val("Show");
			$summButton.html("Show");

			$benefitMaintenanceButton.val("Show");
			$benefitMaintenanceButton.html("Show");

			$subcButton.val("Show");
			$subcButton.html("Show");

			$cnfdButton.val("Show");
			$cnfdButton.html("Show");

			$summInfoSection.hide();
			$benefitMaintenanceInfoSection.hide();
			$subcSection.hide();
			$cnfdSection.hide();
		}
	});

	$subcButton.on("click", function() {
		if ($subcButton.val() === 'Hide') {
			$summButton.val("Show");
			$summButton.html("Show");

			$benefitMaintenanceButton.val("Show");
			$benefitMaintenanceButton.html("Show");

			$benefitHistoryButton.val("Show");
			$benefitHistoryButton.html("Show");

			$cnfdButton.val("Show");
			$cnfdButton.html("Show");

			$summInfoSection.hide();
			$benefitMaintenanceInfoSection.hide();
			$benefitHistoryInfoSection.hide();
			$cnfdSection.hide();
		}
	});

	$cnfdButton.on("click", function() {
		if ($cnfdButton.val() === 'Hide') {
			$summButton.val("Show");
			$summButton.html("Show");

			$benefitMaintenanceButton.val("Show");
			$benefitMaintenanceButton.html("Show");

			$benefitHistoryButton.val("Show");
			$benefitHistoryButton.html("Show");

			$subcButton.val("Show");
			$subcButton.html("Show");

			$summInfoSection.hide();
			$benefitMaintenanceInfoSection.hide();
			$benefitHistoryInfoSection.hide();
			$subcSection.hide();
		}
	});
}
function deleteCase(caseId) {
	var dialog = $(
			'<p>Are you sure you want to continue? This will permanently delete the Case.</p>')
			.dialog(
					{
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Delete" : function() {
								$("#messageCaseClosed").hide();
								var jsonVar = editorConstructMap['deleteCase'];
								var sendData = {};
								sendData['caseId'] = $(caseId).val();
								showWait();
								$
										.ajax({
											url : jsonVar.endpoint,
											data : sendData,
											type : "POST",
											success : function(data, status,
													xhr) {
												console.log(data);
												updateScreenForJSONResponse(
														data, status, xhr,
														jsonVar.divID, '',
														false);
												$.unblockUI();
												var json = JSON
														.parse(xhr.responseText);
												var status = json.response['status'];
												if (status) {
													caseClosed(caseId);
												}
											}
										});
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});
}

function caseClosed(caseId) {
	var caseIdDeleted = $(caseId).val();
	var selectedCase = $('#selected_subCase').val();
	var selectedTxt = $('#selected_subCase option:selected').html();

	if (selectedTxt.indexOf('U') != -1) {
		$("#caseDelete").dialog({
			modal : true,
			title : "Umbrella Case Deleted Successfully",
			width : 300,
			height : 150,
			open : function(event, ui) {
				setTimeout(function() {
					unlockCase('/casesearchweb/casesearchhome');
					$("#caseDelete").dialog("close");
				}, 5000);
			}
		});
	} else {
		$("#selected_subCase option[value=" + caseIdDeleted + "]").remove();
		$("#subCaseDelete").dialog({
			modal : true,
			title : "Sub Case Deleted Successfully",
			width : 300,
			height : 150,
			open : function(event, ui) {
				setTimeout(function() {
					$("#subCaseDelete").dialog("close");
				}, 2000);
			}
		});
		populateSubCase();
	}
}

function deleteProgram(selectedProgramCode) {
	var dialog = $(
			'<p>Are you sure you want to continue? This will permanently delete the selected program type.</p>')
			.dialog(
					{
						draggable : false,
						resizable : false,
						position : 'center',
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"Delete" : function() {
								$("#messageCaseClosed").hide();
								var jsonVar = editorConstructMap['ProgramType'];
								var sendData = {};
								sendData['selectedProgram'] = selectedProgramCode;
								sendData['caseId'] = $('#caseId').val();
								showWait();
								$
										.ajax({
											url : jsonVar.endpoint,
											data : sendData,
											type : "POST",
											success : function(data, status,
													xhr) {
												console.log(data);
												updateScreenForJSONResponse(
														data, status, xhr,
														jsonVar.divID, '',
														false);
												$.unblockUI();
												var json = JSON
														.parse(xhr.responseText);
												var status = json.response['status'];
												if (status) {
													$(
															"#selectedProgramCode option[value="
																	+ selectedProgramCode
																	+ "]")
															.remove();
												}
											}
										});
								dialog.dialog('close');
							},
							"Cancel" : function() {
								dialog.dialog('close');
							}
						}
					});
}

function getbenefitHistory(programSelected) {
	if (!checkAllRequiredHistoryFields()) {
		return true;
	}
	$("#messageseciondivbend").hide();
	showWaitMessage();
	var sendData = {};
	sendData = $(".bendHome").serializeArray();
	var jsonVar = displayConstructMap['BNDD'];
	$.ajax({
		type : "GET",
		url : jsonVar.endpoint,
		data : sendData,
		success : function(result, status, xhr) {
			if (typeof result.response != 'undefined'
					&& !result.response.status) {
				updateScreenForJSONResponse(result, false, xhr,
						jsonVar.messageDivId, '', false);
			} else {
				updateScreenForJSONResponse(result, false, xhr, jsonVar.divID,
						'', false);

			}
			var clean_form_data = $(".bendHome").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('clean_form_data', clean_form_data);
			highlightMandatoryFieldsOnLoad();
			$.unblockUI();
		},
		error : function(result, xhr, thrownError) {
			console.log(xhr.status + thrownError);
			updateScreenForJSONResponse(result, false, xhr,
					jsonVar.messageDivId, '', false);
			$.unblockUI();
		}

	});
}

function paginationTotal() {
	if (typeof $("#resultSize").val() != "undefined"
			&& $("#resultSize").val() != 0) {
		$("#benefithistorytable")
				.DataTable(
						{
							"pagingType" : "full_numbers",
							"footerCallback" : function(row, data, start, end,
									display) {
								var api = this.api(), data;
								var intVal = function(i) {
									return typeof i === 'string' ? i.replace(
											/[\$,]/g, '') * 1
											: typeof i === 'number' ? i : 0;
								};
								total_amount_page = api.column(3, {
									page : 'current'
								}).data().reduce(function(a, b) {
									return intVal(a) + intVal(b);
								}, 0);
								total_amount_page = parseFloat(total_amount_page);
								$('#totalAmountId').html('<span style="position: relative;"><span style="position: absolute;left: -40px;">Total</span>'+
										total_amount_page.toFixed(2)+'</span>');
							}
						})
	}
}

function getAnsrsData(selectedType) {
	if (!checkAllRequiredFields()) {
		return true;
	}
	var jsonVar = displayConstructMap[selectedType];
	$('#' + jsonVar.messageDivId).hide();
	if(selectedType == "EmpQuarter"){
		$("#ansrsEmpMessageDiv").hide();
	}
	showWaitMessage();
	var params = $(".ansrsHome").serializeArray();
	$.ajax({
		type : "POST",
		url : jsonVar.endpoint,
		data : params,
		success : function(result, status, xhr) {
			if (typeof result.response != 'undefined'
					&& !result.response.status) {
				updateScreenForJSONResponse(result, false, xhr,
						jsonVar.messageDivId, '', false);
			} else {
				updateScreenForJSONResponse(result, false, xhr, jsonVar.divID,
						'', false);
				if (jsonVar.callback) {
					jsonVar.callback();
				}
			}
			var clean_form_data = $(".ansrsHome").find(
					"select,input[type!=hidden]").serialize();
			$(document.body).data('clean_form_data', clean_form_data);

			$.unblockUI();
		},
		error : function(result, xhr, thrownError) {
			console.log(xhr.status + thrownError);
			updateScreenForJSONResponse(result, false, xhr,
					jsonVar.messageDivId, '', false);
			$.unblockUI();
		}

	});
}

function getVitalStatsData(selectedType) {
	if (!checkAllVstatRequiredFields()) {
		return true;
	}
	var jsonVar = displayConstructMap[selectedType];
	$('#' + jsonVar.messageDivId).hide();
	showWaitMessage();
	var params = $(".ansrsHome").serializeArray();
	$.ajax({
		type : "POST",
		url : jsonVar.endpoint,
		data : params,
		success : function(result, status, xhr) {
			if (typeof result.response != 'undefined'
					&& !result.response.status) {
				updateScreenForJSONResponse(result, false, xhr,
						jsonVar.messageDivId, '', false);
			} else {
				var resultLength = $($.parseHTML(result)).filter("#resultSize").val();
				if (resultLength > 25) {
					ShowResultsExceedsWarning(result, status, xhr, resultLength);
				} else {
					updateScreenForJSONResponse(result, false, xhr, jsonVar.divID,
							'', false);
				}
			}
			var clean_form_data = $(".ansrsHome").find(
					"select,input[type!=hidden]").serialize();
			$(document.body).data('clean_form_data', clean_form_data);

			$.unblockUI();
		},
		error : function(result, xhr, thrownError) {
			console.log(xhr.status + thrownError);
			updateScreenForJSONResponse(result, false, xhr,
					jsonVar.messageDivId, '', false);
			$.unblockUI();
		}

	});
}

function ShowResultsExceedsWarning(htmlText, status, xhr, resultLength) {
	var dialog = $(
			'<p>More than 25 matches found. To view the first 25 matches click the [OK] button. Click the [Cancel] button to return to the Birth Certificate Query Page and enter additional criteria to narrow your search.</p>')
			
			.dialog(
					{
						draggable : false,
						resizable : false,
						dialogClass : "hideCloseIcon",
						modal : true,
						buttons : {
							"OK" : {
								text : "OK",
								click : function() {
									$(this).dialog('close');
										updateScreenForJSONResponse(htmlText, false, xhr, 'vitalStatsDetails', '', false);
								}
							},
							"Cancel" : function() {
								$(".vitalStatsDetails").html("");
								dialog.dialog('close');
								return false;
							}
						}
					});
}

function checkAllVstatRequiredFields() {

	try {
		var requiredFieldProvided = false;
		var requiredValueProvided = false;
		var controlToFocus = "";

		$('.mandatoryInput').each(
				function() {
					var value = $.trim($(this).val());
					if ($(this).css('visibility') === 'visible' && value != ""
							&& value != "VSTAT") {
						requiredValueProvided = true;
					}
				});

		$('.mandatoryInput').each(
				function() {

					if (requiredValueProvided) {
						$(this).removeClass('decoratedMissingField');
						var spanId = "span_" + $(this).attr('id');
						$("#" + spanId).remove();
					} else {
						if ($(this).css('visibility') === 'visible'
								&& validateRequiredVstat($(this).get(0)) == false) {
							requiredFieldProvided = true;
							$(this).addClass('decoratedMissingField');
							if (controlToFocus == "")
								controlToFocus = $(this).attr('id');
						}
					}
				});

		if (requiredFieldProvided) {
			$("#" + controlToFocus).focus();
			return false;
		}
	} catch (err) {
		console.log("Error :" + err.message);
	}
	return true;
}



function displaymemberDtls()

{

	var sendData = document.getElementById("selectHoh").value;
	var memberTable = document.getElementById("sCasememberDtls");

	for (var i = 1; i < memberTable.rows.length; i++) {

		if (memberTable.rows[i].id == sendData) {
			document.getElementById(memberTable.rows[i].id).style.display = "none";
			var rowId=memberTable.rows[i].id;
			if($('#' + "table_check_"+rowId).is(":checked"))
				{
				$('#' + "table_check_"+rowId).prop('checked', false); 
				}

		} else {
			document.getElementById(memberTable.rows[i].id).style.display = '';
		}

	}

}

function createSubCase(){
	if (!checkAllRequiredSubCaseFields()) {
		return true;
	}
	showWait();
	var jsonVar = editorConstructMap['UVRP'];
	$.ajax({
		type : "POST",
		data : $("#subCase").serializeArray(),
		url : "/caseprocessingweb/createSubCase",
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			$.unblockUI();
			loadPageData();
			
		}
	});
}

function loadPageData()
{
	var sectionId='SUBC';
	var jsonVar = displayConstructMap[sectionId];
	var options = {
			url : jsonVar.endpoint,
			data : 'selectedShowingData=' + $('#selectedShowingData').val(),
			success : function(htmlText, status, xhr) {
				updateScreenForJSONResponse(htmlText, false, xhr, 'summarySecionInformation_' + sectionId, '', false);
				$("#summarySecionMessage_" + sectionId).hide();
				$("#summarySecionInformation_" + sectionId).show();
				if (jsonVar.callback) {
					jsonVar.callback();
				}
				var clean_form_data = $(".bapHome").find("select,input[type!=hidden],textarea")
				.serialize();
				$(document.body).data('clean_form_data', clean_form_data);
				$.unblockUI();
			},
			error : function(errordata) {
				$.unblockUI();
				console.log(errordata);
				$("#summarySecionInformation_" + sectionId)
						.html(
								"<font color='red'> Please contact administrator with the error info : <Strong>"
										+ errordata.responseText
										+ "</Strong></font>");
				$("#summarySecionMessage_" + sectionId).hide();
				$("#summarySecionInformation_" + sectionId).show();
			}
		};
		console.log(options);
		showWait();
		$.ajax(options);
}

function validateRequiredVstat(control) {
	var spanId = "span_" + control.id;
	var value = $.trim($("#" + control.id).val());
	if (value == null || value == '') {
		$("#" + spanId).remove();
		var $messageSpan = "<span class='fieldErrors' id=" + spanId
				+ "> <br>Required field! </span>";
		$("#" + control.id).after($messageSpan);
		return false;
	} else if ($("#" + spanId).length > 0) {
		$("#" + spanId).remove();
	}
	return true;
}

function checkAllRequiredHistoryFields() {
	try {
		var requiredFieldProvided = false;
		var controlToFocus = "";
		$('.mandatoryInput').each(
				function() {
					if ($(this).css('visibility') === 'visible'
							&& validateRequired($(this).get(0)) == false) {
						requiredFieldProvided = true;
						if (controlToFocus == "")
							controlToFocus = $(this).attr('id');
					}
				});

		if (requiredFieldProvided) {
			$("#" + controlToFocus).focus();
			return false;
		}
	} catch (err) {
		console.log("Error :" + err.message);
	}
	return true;
}


function checkAllRequiredSubCaseFields() {
	try {
		
		var memberTable = document.getElementById("sCasememberDtls");
		var returnvalue=true;
		
			if($('#' + "selectHoh").find(":selected").val()=="")
				{
				
				$('#' + "errorHohDiv").show();
				returnvalue= false;
				}
				
				
		
		for (var i = 1; i < memberTable.rows.length; i++) {
			var rowId=memberTable.rows[i].id;
		if($('#' + "table_check_"+rowId).is(":checked")){
			if($('#' + "realtionToHOH_"+rowId).find(":selected").val()=="")
				{
				
				$('#' + "errorRelationDiv_"+rowId).show();
				returnvalue= false;
				}
				
				
		}
		}
		
	} catch (err) {
		console.log("Error :" + err.message);
	}
	return returnvalue;
}

function enableDeleteProgram() {
	if ($('#selectedProgramCode').val() == ''
			|| $('#selectedProgramCode').val() == 'undefined') {
		$('#del_Prog').prop('disabled', true);
	} else {
		$('#del_Prog').prop('disabled', false);
	}
}

function getInterfaceType(selectedType) {
	if (!checkAllRequiredHistoryFields()) {
		return true;
	}
	showWaitMessage();
	var sendData = {};
	sendData = $(".interfaceHome").serializeArray();
	var jsonVar = displayConstructMap[$(ind_type).val()];
	$.ajax({
		type : "GET",
		url : jsonVar.endpoint,
		data : sendData,
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			var clean_form_data = $(".interfaceHome").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('clean_form_data', clean_form_data);
			highlightMandatoryFieldsOnLoad();
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
			console.log(xhr.status + thrownError);
			$.unblockUI();
		}

	});

}

function getQtrsWithinCase(selectedValue) {
	showWaitMessage();
	var sendData = {};
	sendData['selectedUpi'] = selectedValue;
	var jsonVar = displayConstructMap['QTRSSELECTED'];
	$.ajax({
		type : "GET",
		url : jsonVar.endpoint,
		data : sendData,
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			var clean_form_data = $(".fortyquarters").find(
					"select,input[type!=hidden],textarea").serialize();
			$(document.body).data('clean_form_data', clean_form_data);
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
			console.log(xhr.status + thrownError);
			$.unblockUI();
		}

	});
}

function initializeCaseSelectionDialog() {
	$("#caseSelectionDiv").dialog({
		autoOpen : false,
		draggable : false,
		resizable : false,
		closeOnEscape : false,
		modal : true,
		position : 'center',
		minHeight : 150,
		maxHeight : 1000,
		width : 600,
		title : "Case Selection",
		modal : true,
		draggable : false,
		open : function(event, ui) {
			$(".ui-dialog-titlebar-close").hide();
		}
	});
}

function openCaseSelection() {
	showWait();
	var jsonVar = displayConstructMap['CSEL'];
	$.ajax({
		type : "POST",
		url : jsonVar.endpoint,
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			$("#caseSelectionDiv").dialog("open");
			$.unblockUI();
		}
	});
}

function initializeIvdCaseDialog() {
	$("#ivdCaseDiv").dialog({
		autoOpen : false,
		draggable : false,
		resizable : false,
		closeOnEscape : false,
		modal : true,
		position : 'center',
		minHeight : 150,
		maxHeight : 1000,
		width : 600,
		title : "IVD Case IDs",
		modal : true,
		draggable : false,
		open : function(event, ui) {
			$(".ui-dialog-titlebar-close").hide();
		}
	});
}

function openIvdCases() {
	showWait();
	var jsonVar = displayConstructMap['IVDC'];
	$.ajax({
		type : "POST",
		url : jsonVar.endpoint,
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			$("#ivdCaseDiv").dialog("open");
			$.unblockUI();
		}
	});
}

function closeCaseSelection() {
	$("#caseSelectionDiv").dialog("close");
	$("#caseSelectionDiv").empty();
}

function closeIvdCaseIds() {
	$("#ivdCaseDiv").dialog("close");
	$("#ivdCaseDiv").empty();
}

function switchCase() {
	var dialog = $(
			'<p>Are you sure you want to continue? This will Redirect you to the case that is selected.</p>')
			.dialog({
				draggable : false,
				resizable : false,
				position : 'center',
				dialogClass : "hideCloseIcon",
				modal : true,
				buttons : {
					"Close" : function() {
						dialog.dialog('close');
					},
					"Submit" : function() {
						submitCaseSelection();
					}
				}
			});
}

function submitCaseSelection() {
	console.log($('#caseSelected').val());
	goToCaseSelected('/casesearchweb/caseswitch', $('#caseSelected').val());
	$("#caseSelectionDiv").dialog("close");
}

function goToCaseSelected(redirecturl, selectedCaseId) {
	showWait();
	$.ajax({
		type : "POST",
		url : '/casetaskweb/unlockCase',
		success : function(result, status, xhr) {
			if (result.response != 'undefined' && result.response.status) {
				switchFromCaseProcessing(redirecturl, selectedCaseId);
			}
		},
		error : function(xhr, ajaxOptions, thrownError) {
			console.log(xhr.responseText + thrownError);
			$.unblockUI();
		}
	});
	closeCaseLogDialog();
}

function switchFromCaseProcessing(redirecturl, selectedCaseId) {
	showWait();
	$(
			'<form id="REDIRECT" name="REDIRECT" method="POST" action="/casetaskweb/switchfromcaseprocessing" width=""></form>')
			.appendTo('body');
	$('<input>').attr({
		type : 'hidden',
		id : 'redirecturl',
		name : 'redirecturl',
		value : redirecturl
	}).appendTo('#REDIRECT');
	$('<input>').attr({
		type : 'hidden',
		id : 'selectedCaseId',
		name : 'selectedCaseId',
		value : selectedCaseId
	}).appendTo('#REDIRECT');
	$('#REDIRECT').submit();
	$('#REDIRECT').remove();
	$.unblockUI();
}

function submitVruPinChange(){
	showWait();
		var jsonVar = editorConstructMap['UVRP'];
		$.ajax({
			type : "POST",
			data : $("#caseStatusSummary").serializeArray(),
			url : jsonVar.endpoint,
			success : function(htmlText, status, xhr) {
				updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
						'', false);
				$.unblockUI();
			}
		});
}

function submitConfidentialIndicatorChange(maxIndex){
	
	showWait();
		var jsonVar = editorConstructMap['CNFD'];
		$.ajax({
			type : "POST",
			data : $("#caseStatusConfidentialInformation").serializeArray(),
			url : jsonVar.endpoint,
			success : function(htmlText, status, xhr) {
				updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
						'', false);
				
				for (i = 0; i < maxIndex; i++) {
					var current = $("#cnfdIndicator_"+i).val();
					$("#cnfdIndicatorHidden_"+i).val(current);
					$('#cnfdButton').hide();		
				}
				
				$.unblockUI();
			},
			error : function(xhr, status, thrownError) {
				console.log(xhr.status + " : " +  thrownError);
				$("#messageseciondiv").html(xhr.responseText + " " +  thrownError);
				$.unblockUI();	
			}
		});
}

function showSelectedQuickRef(){
	var refSel = false;
	$('input[type=checkbox]').each(function () {
        if (this.checked) {
        	refSel = true; 
        }
	});
	if(refSel){
		showWait();
		var jsonVar = displayConstructMap['QREF'];
		var options = {
				type : "POST",
				data : $("#caseStatusSummary").serializeArray(),
				url : jsonVar.endpoint,
				success : function(htmlText, status, xhr) {
					updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
							'', false);
					$("#quickRef").dialog("open");
					$.unblockUI();
				}
			}
		$.ajax(options);
	} else {
		var dialog = $(
		'<p>None of the option is selected. Please select atleast one and click on the button.</p>')
		.dialog({
			draggable : false,
			resizable : false,
			position : 'center',
			dialogClass : "hideCloseIcon",
			modal : true,
			buttons : {
				"Close" : function() {
					dialog.dialog('close');
				}
			}
		});
	}
}

function initializeQuickReferenceDialog() {
	$("#quickRef").dialog({
		autoOpen : false,
		draggable : false,
		resizable : false,
		closeOnEscape : false,
		modal : true,
		minHheight : 590,
		width : 1060,
		title : "Quick References",
		modal : true,
		draggable : false,
		position : ({
  			my: "center center-10%",
   			at: "center top+10%",
   			of: $('#caseStatusSummary')
   			}),
		open : function(event, ui) {
			$(".ui-dialog-titlebar-close").hide();
		},
		buttons : {
			"Close" : function() {
				$("#quickRef").dialog('close');
			}
		}
	});
}

function displayProgramDetails(reference){
	var jsonVar = displayConstructMap['PRDT'];
	var systemUrl = jsonVar.endpoint;
	showWait();
	$.ajax({
		type : "GET",
		url : systemUrl,
		success : function(result, status, xhr) {
			updateScreenForJSONResponse(result, false, xhr, jsonVar.divID, '',
					false);
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
		}
	});
}

function displayRedetHstry(reference){
	var jsonVar = displayConstructMap['REDHST'];
	var systemUrl = jsonVar.endpoint;
	var params = "programType=" + "";
	showWait();
	$.ajax({
		type : "GET",
		url : systemUrl,
		data : params,
		success : function(result, status, xhr) {
			updateScreenForJSONResponse(result, false, xhr, jsonVar.divID, '',
					false);
			$.unblockUI();
		},
		error : function(xhr, ajaxOptions, thrownError) {
		}
	});
}

function displaySelectedRedetHistoryDetails(programType) {
	var jsonVar = displayConstructMap['REDHST'];
	var params = "programType=" + programType;
	var options = {
		type : 'POST',
		url : jsonVar.endpoint,
		data : params,
		success : function(htmlText, status, xhr) {
			updateScreenForJSONResponse(htmlText, false, xhr, jsonVar.divID,
					'', false);
			$.unblockUI();
		},
		error : function(errordata) {
			$.unblockUI();
			console.log(errordata);
		}
	};
	console.log(options);
	showWait();
	$.ajax(options);
}