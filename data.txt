

// PROCESS ELIGIBILITY
Function AIN49P9-PROC-ELIG()
  /* --------------------PTR 4654 BEGIN--------------------------------*/
  /*  */
  /* Process Eligibility*/
  /*  */
  set H2-ELIG-VERSION empty;

  H2-ELIG-VERSION.ICI = AIN49W.WS-IVA-ICI;
  H2-ELIG-VERSION.BNFT-MTH = AIN49W.WS-ELIG-VER-MTH;
  H2-ELIG-VERSION.BNFT-YR = AIN49W.WS-ELIG-VER-YEAR;

  WDB00PI();
  AIN49P9-READ-S17();
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "N";
  /*  */
  WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
  if (VDBCONTROL.URC >= 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
  /* --------------------------PTR 8170 - 55 BEGIN--------------------*/
  if (sysVar.sqlData.sqlcode == 0)
    if (H2-ELIG-VERSION.POSTD-DT == null)
      AIN49P9-DER-ISS();
      if (AIN49W.WS-MEDICAID-CARD-ISSUED == "N")
        H2-ELIG-VERSION.BNFT-TYPE = "RG";
      else
        H2-ELIG-VERSION.BNFT-TYPE = "SU";
      end

      H2-ELIG-VERSION.POST-TYPE = "A";
      H2-ELIG-VERSION.POSTD-DT = AIN49W.WS-PROCESS-DT;
      H2-ELIG-VERSION.POSTD-BY = "SYSTEM";
      H2-ELIG-VERSION.LST-POSTD-VER-IND = "Y";

      AIN49P9-DER-SPD();

      H2-ELIG-VERSION.SCHD-PAY-DT = AIN49W.WS-SCHD-PAY-DATE;

  /* ------------CHANGES DUE TO WI# 13992-------------------*/
      if ((AIN49W9.WS-MONTH-IND == "RM") || 
      (AIN49W9.WS-MONTH-IND == "CM" ||
    
/* Begin WI 2445 mt - allow updates to future month only */      
       AIN49W9.WS-MONTH-IND == "FM" && 
/* End WI 2445 mt - allow updates to future month only */       
       
      SR-Q-DCF-REC.D-MED-CARD-CUT == "Y"))

        H2-ELIG-VERSION.ISSUE-IND = "Y";

      else

        H2-ELIG-VERSION.ISSUE-IND = "N";

      end
  /* ------------CHANGES DUE TO WI# 13992-------------------*/

      AIN49P9-DER-CRC();

      H2-ELIG-VERSION.CASE-RSLT-CD = AIN49W.WS-CASE-RSLT-CD;
  /*  */
  /* The record read from SQL s17 is updated*/
      WDB00PI();
      AIN49P9-UPD-U17();
      VDBCOMMON.UNRF = "Y";
      VDBCOMMON.UDUP = "N";
  /*  */
      WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
      if (VDBCONTROL.URC >= 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
  /* The schd pay indicator in all previous posted versions is made to 'X'*/
  /*  */
      H2-ELIG-VERSION.ICI = AIN49W.WS-IVA-ICI;

      WDB00PI();
      AIN49P9-UPD-U21();
      VDBCOMMON.UNRF = "Y";
      VDBCOMMON.UDUP = "N";
  /*  */
      WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
      if (VDBCONTROL.URC >= 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
  /* The key values as used for SQL U21 is also used to update U18*/

      H2-ELG-VER-MBR.ICI = H2-ELIG-VERSION.ICI;
      H2-ELG-VER-MBR.BNFT-MTH = H2-ELIG-VERSION.BNFT-MTH;
      H2-ELG-VER-MBR.BNFT-YR = H2-ELIG-VERSION.BNFT-YR;
      H2-ELG-VER-MBR.VER-NMB = H2-ELIG-VERSION.VER-NMB;
      H2-ELG-VER-MBR.AID-CD = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
      if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
        H2-ELG-VER-MBR.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
      else
        H2-ELG-VER-MBR.ELIG-CD = AIN49W3.RPT-ELIG-CD;
      end
      WDB00PI();
      AIN49P9-UPD-U18();
      VDBCOMMON.UNRF = "Y";
      VDBCOMMON.UDUP = "N";
  /*  */
      WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
      if (VDBCONTROL.URC >= 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
    else
  /*  */
  /* If the elig version is posted, another version of elig is created*/
  /*  */
  /* If an existing version is posted, then a new record is added.*/
  /* The last posted version indicator is set to spaces.*/
  /*  */
      H2-ELIG-VERSION.ISSUE-IND = "X";
      AIN49W.WS-ELIG-NUM = H2-ELIG-VERSION.VER-NMB;
      WDB00PI();
      AIN49P9-UPD-U14();
      VDBCOMMON.UNRF = "Y";
      VDBCOMMON.UDUP = "N";
  /*  */
      WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
      if (VDBCONTROL.URC >= 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
      AIN49W.WS-ELIG-NUM = AIN49W.WS-ELIG-NUM + 1;
  /* ---------------------PTR 8170 - 40 BEGIN-----------------------*/
      H2-ELIG-VERSION.ICI = AIN49W.WS-IVA-ICI;
  /* TEMPORARY;*/
      AIN49W.WS-CRY-FWD-PRC-IND = H2-ELIG-VERSION.CRY-FWD-PRC-IND;
  /* TEMPORARY;*/
      WDB00PI();
      AIN49P9-UPD-U21();
      VDBCOMMON.UNRF = "N";
      VDBCOMMON.UDUP = "Y";
  /*  */
      WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
      if (VDBCONTROL.URC >= 104)
        WCM00P2-TO-CEP01A();
      end
  /* ---------------------PTR 8170 - 40 END ------------------------*/

      AIN49P9-DER-CRC();
      AIN49P9-DER-ISS();

      if (AIN49W.WS-MEDICAID-CARD-ISSUED == "N")
        AIN49W.WS-BNFT-TYPE = "RG";
      else
        AIN49W.WS-BNFT-TYPE = "SU";
      end

      AIN49P9-DER-SPD();
  /* ------------CHANGES DUE TO WI# 13992-------------------*/
      if ((AIN49W9.WS-MONTH-IND == "RM" || 
       /* TEMPORARY;*/
      AIN49W9.WS-MONTH-IND == " " || 
       /* TEMPORARY;*/
      AIN49W9.WS-MONTH-IND == "CM" ||
      
/* Begin WI 2445 mt - allow updates to future month only */      
      AIN49W9.WS-MONTH-IND == "FM" ) && 
/* End WI 2445 mt - allow updates to future month only */      
      
      
      SR-Q-DCF-REC.D-MED-CARD-CUT == "Y")

        AIN49W.WS-ISSUE-IND = "Y";

      else

        AIN49W.WS-ISSUE-IND = "N";

      end
  /* ------------CHANGES DUE TO WI# 13992-------------------*/

      AIN49P9-INS-EVER();
      AIN49P9-INS-EVERM();
      AIN49P9-INS-ELIGDC();

    end
  else
    AIN49W.WS-ELIG-NUM = 1;
    AIN49P9-DER-CRC();
    AIN49P9-DER-SPD();

    AIN49W.WS-BNFT-TYPE = "RG";

  /* ------------CHANGES DUE TO WI# 13992-------------------*/
    if ((AIN49W9.WS-MONTH-IND == "RM" || 
     /* TEMPORARY;*/
    AIN49W9.WS-MONTH-IND == " " || 
     /* TEMPORARY;*/
    AIN49W9.WS-MONTH-IND == "CM" ||
    
/* Begin WI 2445 mt - allow updates to future month only */    
    AIN49W9.WS-MONTH-IND == "FM" ) && 
/* End WI 2445 mt - allow updates to future month only */    
    
    SR-Q-DCF-REC.D-MED-CARD-CUT == "Y")

      AIN49W.WS-ISSUE-IND = "Y";

    else

      AIN49W.WS-ISSUE-IND = "N";

    end
    AIN49W.WS-CRY-FWD-PRC-IND = "Y";
  /* ------------CHANGES DUE TO WI# 13992-------------------*/

    AIN49P9-INS-EVER();
    AIN49P9-INS-EVERM();
    AIN49P9-INS-ELIGDC();
  end
  /* ---------------------------PTR 8170 - 55 END----------------------*/
  /* ----------------------PTR 4654 END-------------------------------*/
end // end AIN49P9-PROC-ELIG


Function AIN49P9-PROC-FCH()
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";

  if (AIN49W.WS-DATE < AIN49W.WS-TEMP-DATE)
    AIN49P9-PROC-RFCH();
  end


  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";

/* Begin WI 2445 mt - check for only future date from DCFS */
  if (AIN49W.WS-DATE > AIN49W.WS-TEMP-DATE)
    AIN49W.WS-FAM-CASE-HSTRY-DATE = AIN49W.WS-DATE;
    AIN49P9-PROC-FFCH();
  end
/* End WI 2445 mt - check for only future date from DCFS */


  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";
  
  if (AIN49W.WS-DATE == AIN49W.WS-TEMP-DATE) /* wi 2445 mt removed > */
    AIN49W.WS-FAM-CASE-HSTRY-DATE = AIN49W.WS-PROCESS-DT;
    AIN49P9-PROC-CFCH();
  end
end // end AIN49P9-PROC-FCH


// PROCESS DCFS DATA
Function AIN49P9-PROC-PARA()
  /* *** beg comment*/
  /* ******** changes due to pcf # 351 ---------- begin ***********/
  /*  */
  /*  */
  /* ----------------------PTR 7826 BEGIN--------------------------------*/
  AIN49W.WS-BASE-DATA-EXISTS = "N";
  /* ----------------------PTR 7826 END ---------------------------------*/
  /*  */
  /* ******* ------- Changes due to ptr 3049 begin --------- ********/
  /*  */
  /* ******* Numeric check on ssn should be done only if the*/
  /* ssn > low-values in the input file*/
  /*  */
  if (SR-Q-DCF-REC.D-MEMB-SSN not blanks)
  /*  */
  /* ******* ------- Changes due to ptr 3049 end ----------- ********/
  /*  */
    AIN49W.WS-PSEUDO-SSN = SR-Q-DCF-REC.D-MEMB-SSN;
    AIN49W.WS-PSEUDO-SSN-R = AIN49W.WS-PSEUDO-SSN;
    if (AIN49W.WS-PSEUDO-SSN-2-R not numeric)
  /* -----------------PTR 7826 - 7 BEGIN--------------------------*/
      AIN49W.WS-REJECT-RSN = "IS"; /* invalid ssn referred*/
      move SR-Q-DCF-REC to SR-Q-04F-REC withV60Compat;
      AIN49P9-WRITE-04();
      AIN49W.WS-BASE-DATA-EXISTS = "Y";
      AIN49W.WS-REJECT-RECORD = "Y";
      AIN49P9-BLD-CHWELF();
  /* -----------------PTR 7826 - 7 END----------------------------*/

      SR-Q-CNT-REC.AININT-CNT-REC-SKIP = SR-Q-CNT-REC.AININT-CNT-REC-SKIP + 1;
      return;
    end
  end
  /*  */
  /* ********** changes due to pcf # 351 -------- end ************/
  /* ** end comment ****/
  /* DEPENDING ON THE RECORD TYPE CONTROL IS TRANSFERRED TO CORRESPONDING*/
  /* PARAS*/

  if (SR-Q-DCF-REC.D-RECORD-TYPE == "N")
  /* ==> DCFS HAS REFERRED A NEW CASE*/
  /*  */
  /* ************ Changes due to pcf 2819 begin ******************/
  /*  */
    AIN49W.WS-REJECT-RECORD = " ";
    AIN49W.WS-REJECT-RSN = " ";
    AIN49W4.WS-CASE-NUMBER = SR-Q-DCF-REC.D-KEY-CASE-NUMBER;
    H2-3-CMH-FCE-PER.IVE-CASE-ID = AIN49W4.WS-CASE-NUMBER1;
  /*  */
  /* Perform process for standard database app initialisation*/
  /*  */
    WDB00PI();
  /*  */
  /* Set the values for access type and application name*/
  /*  */
    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "AIN49A";
  /*  */
    AIN49P9-SETINQ-S02();
  /*  */
    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "N";
  /*  */
    WDB00PE-SQLERR();
  /*  */
  /* Check for fatal errors*/
  /*  */
    if (VDBCONTROL.URC >= 104)
      WCM00P2-TO-CEP01A();
    end
    AIN49P9-SCAN-S02();
    VDBCOMMON.UNRF = "Y";
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC >= 104)
      WCM00P2-TO-CEP01A();
    end
  /*  */
    if (sysVar.sqlData.sqlcode == 0)
  /*  */
  /* changes for wi# 15289 - begin;*/
  /*  */
  /* ****************** WI 26361:WNMLS:2004-04-22 START *******************/
  /* THE LEGACY FILE IS NO LONGER POPULATED. DO NOT READ.*/
  /* **********************************************************************/
  /* MOVE 'N' TO AIN49W.WS-LEGACY-EXISTS;*/
  /* PERFORM AIN49P9-CHK-LEGACY;*/
  /* IF AIN49W.WS-LEGACY-EXISTS = 'Y';*/
  /* MOVE 'Y' TO AIN49W.WS-REJECT-RECORD;*/
  /* MOVE 'CC' TO AIN49W.WS-REJECT-RSN;*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP =*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP + 1;*/
  /* MOVE SR-Q-DCF-REC TO SR-Q-04F-REC;*/
  /* PERFORM AIN49P9-WRITE-04;*/
  /* MOVE 'Y' TO AIN49W.WS-BASE-DATA-EXISTS;*/
  /* PERFORM AIN49P9-BLD-CHWELF;*/
  /* EZERTN;*/
  /* END;*/
  /* ****************** WI 26361:WNMLS:2004-04-22 END *********************/

  /*  */
  /* changes for wi# 15289 - end;*/
  /*  */
  /* If record found set the flag for rejecting the record and add the*/
  /* record into the reject file*/
  /*  */
  /* CHANGES TO ACCEPT THE RECORD IN  UPDATE MODE - WI#22804 - START*/
  /*  */

      if (SR-Q-DCF-REC.D-MEMB-SSN not blanks)
        AIN49W.WS-PSEUDO-SSN = SR-Q-DCF-REC.D-MEMB-SSN;
        if (AIN49W.WS-PSEUDO-SSN-1-R not numeric)
          SR-Q-DCF-REC.D-MEMB-SSN = " ";
        end
      end
      SR-Q-DCF-REC.D-RECORD-TYPE = "U";
      AIN49P9-IVE-UPCASE();
  /*  */
  /* MOVE 'Y' TO AIN49W.WS-REJECT-RECORD;*/
  /* MOVE 'DP' TO AIN49W.WS-REJECT-RSN;*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP =*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP + 1;*/
  /* SET SR-Q-04F-REC EMPTY;*/
  /* MOVE SR-Q-DCF-REC TO SR-Q-04F-REC;*/
  /* PERFORM AIN49P9-WRITE-04;*/
  /* MOVE 'Y' TO AIN49W.WS-BASE-DATA-EXISTS;*/
  /* PERFORM AIN49P9-BLD-CHWELF;*/
  /* CHANGES TO ACCEPT THE RECORD IN  UPDATE MODE - WI#22804 - END*/

    else

  /*  */
  /* changes for wi# 15289 - begin;*/
  /*  */
  /* ****************** WI 26361:WNMLS:2004-04-22 START *******************/
  /* THE LEGACY FILE IS NO LONGER POPULATED. DO NOT READ.*/
  /* **********************************************************************/
  /* MOVE 'N' TO AIN49W.WS-LEGACY-EXISTS;*/
  /* PERFORM AIN49P9-CHK-LEGACY;*/
  /* IF AIN49W.WS-LEGACY-EXISTS = 'Y';*/
  /* MOVE 'Y' TO AIN49W.WS-REJECT-RECORD;*/
  /* MOVE 'CC' TO AIN49W.WS-REJECT-RSN;*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP =*/
  /* SR-Q-CNT-REC.AININT-CNT-REC-SKIP + 1;*/
  /* MOVE SR-Q-DCF-REC TO SR-Q-04F-REC;*/
  /* PERFORM AIN49P9-WRITE-04;*/
  /* MOVE 'N' TO AIN49W.WS-BASE-DATA-EXISTS;*/
  /* PERFORM AIN49P9-BLD-CHWELF;*/
  /* EZERTN;*/
  /* END;*/
  /* ****************** WI 26361:WNMLS:2004-04-22 END *********************/

  /*  */
  /* changes for wi# 15289 - end;*/
  /*  */
  /* ------------- changes due to PTR 5492 Begin ----------------*/
  /* A check is made to determine valid Aid codes, Eligibility codes,*/
  /* office code and country code. If an invalid code is determined  the*/
  /* record is written into the reject file and the child welfare report is*/
  /* built.*/
  /*  */
      AIN49P9-VAL-CD();
      if (AIN49W.WS-VALID-CODES == "T")
        AIN49P9-IVE-ADCASE();
      else
  /* ----------------------PTR 7826 BEGIN--------------------------------*/
        AIN49W.WS-BASE-DATA-EXISTS = "N";
  /* ----------------------PTR 7826 END ---------------------------------*/
  /* -------------------------PTR 6311 BEGIN--------------------------*/
        AIN49P9-BLD-CHWELF();
  /* -------------------------PTR 6311 END ---------------------------*/
      end
  /* -------------- changes due to PTR 5492 End -------------------*/
  /*  */
  /* ************ Changes due to pcf 2819 end ********************/
    end
  else
    if (SR-Q-DCF-REC.D-RECORD-TYPE == "U")
      AIN49P9-IVE-UPCASE();
  /*  */
    else
      if (SR-Q-DCF-REC.D-RECORD-TYPE == "G")
  /* GRANT INFORMATION IS AVAILABLE*/
  /* --------- PTR 8170 - 64 LINE OF CODE DELETED-----------------*/
        AIN49P9-IVE-GRCASE();
      end
    end
  end
end // end AIN49P9-PROC-PARA


// PROCESS PROGRAM CASE HISTORY
Function AIN49P9-PROC-PCH()
  /* ---------------------PTR 4613 BEGIN-----------------------------*/
  /*  */
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  /* MOVE AIN49W5.WS-YY2 TO AIN49W.WS-YY-CC2;*/
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  /* IF AIN49W.WS-YY-CC2 > '90';*/
  /* MOVE '19' TO AIN49W.WS-YY-CC1;*/
  /* ELSE;*/
  /* MOVE '20' TO AIN49W.WS-YY-CC1;*/
  /* END;*/
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";


  if (AIN49W.WS-DATE < AIN49W.WS-TEMP-DATE)
    AIN49P9-PROC-RPCH();
  /*  */
  /* MOVE AIN49W.WS-PROCESS-DT TO AIN49W.WS-PROGRAM-CASE-DATE;*/
  /* PERFORM AIN49P9-PROC-CPCH;*/
  /*  */
  end

/* Begin WI 2445 mt - check for only future date from DCFS */
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  /* MOVE AIN49W5.WS-YY2 TO AIN49W.WS-YY-CC2;*/
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  /* IF AIN49W.WS-YY-CC2 > '90';*/
  /* MOVE '19' TO AIN49W.WS-YY-CC1;*/
  /* ELSE;*/
  /* MOVE '20' TO AIN49W.WS-YY-CC1;*/
  /* END;*/
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";

  if (AIN49W.WS-DATE > AIN49W.WS-TEMP-DATE)
    AIN49W.WS-PROGRAM-CASE-DATE = AIN49W.WS-DATE;
    AIN49P9-PROC-FPCH();
  end


  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  /* MOVE AIN49W5.WS-YY2 TO AIN49W.WS-YY-CC2;*/
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  /* IF AIN49W.WS-YY-CC2 > '90';*/
  /* MOVE '19' TO AIN49W.WS-YY-CC1;*/
  /* ELSE;*/
  /* MOVE '20' TO AIN49W.WS-YY-CC1;*/
  /* END;*/
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";

  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  AIN49W.WS-TEMP-DD = "01";
/* End WI 2445 mt - check for only future date from DCFS */

  if (AIN49W.WS-DATE == AIN49W.WS-TEMP-DATE) /* wi 2445 mt ?removed > */
  /* ----------------PTR 8170 - 39 BEGIN-------------------------------*/
    AIN49W.WS-PROGRAM-CASE-DATE = AIN49W.WS-PROCESS-DT;
  /* ----------------PTR 8170 - 39 END---------------------------------*/
    AIN49P9-PROC-CPCH();
  end

  /* -----------------------PTR 4613 END--------------------------------*/
end // end AIN49P9-PROC-PCH


/* Begin WI 2445 mt  Only future month received from DCFS */
// PROCESS FUTURE PROG CASE HST
Function AIN49P9-PROC-FPCH()

  /*  */
  /* The data retrieved from the SQL is stored in working storage variables*/
  /*   1. Read tables for record sent (future month)*/
  /*   2. If future month exists and period begin date is equal to future month*/
  /*   	  a. Update aid cd, elig cd, prgm case sts for future month.	*/
  /*   3. If future momth exists but does not have prd beg dt of future month*/
  /*      a. Update current month end date*/
  /*      b. Insert future month record with same prd end dt as previous*/
  /*   4. If future month does not exist then read tables for current month*/
  /*   	  a. If current month exists update period end date */
  /*   	  b. Insert tables for dcfs record.*/
  /*  */



	   
	   
	   
    AIN49W.WS-DATE_FUT = SR-Q-DCF-REC.D-BENEFIT-START-MONTH; 
    AIN49W.WS-MM_FUT = AIN49W.WS-MM2_FT;
    AIN49W.WS-YY_FUT = AIN49W.WS-YY2_FT;
    AIN49W.WS-DD_FUT  = "01";
    AIN49W.WS-FIL1_FUT  = "-";
    AIN49W.WS-FIL2_FUT  = "-";
  
    AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;	
    AIN49W.WS-TEMP-DD = "01";
    
    
  
  if (AIN49W.WS-DATE_FUTURE  > AIN49W.WS-TEMP-DATE)


	   
        H2-PRGM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
        H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;  //dcfs dt
	    H2-PRGM-CASE-HSTRY.PRGM-CASE-TYPE = "CW";

        WDB00PI();
        AIN49P9-READ-S03(); //reads prgm case hist into H2 record for dcfs dt
        VDBCOMMON.UNRF = "Y";
        /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
        /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
		
	if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND dcfs dt*/
	
		if (H2-PRGM-CASE-HSTRY.PRD-BEG-DT ==  AIN49W.WS-DATE_FUTURE)

          	    AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
          	    H2-PRGM-CASE-HSTRY.AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
          	    if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
            	        H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
                    else
                        H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
                    end

                   if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == "Y")
                       if (AIN49W3.RPT-ELIG-CD == "9")
                           H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
                           H2-PRGM-CASE-HSTRY.STS-EFF-DT = H2-PRGM-CASE-HSTRY.PRD-BEG-DT;
                       else
                           H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
                       end
                   else
                       if (SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE == "9")
                           H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
                           H2-PRGM-CASE-HSTRY.STS-EFF-DT = H2-PRGM-CASE-HSTRY.PRD-BEG-DT;
                       else
                           H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
                       end
                  end

          	WDB00PI();
          	AIN49P9-UPD-U07();  //updates aid elig case_sts for dcfs dt
          	VDBCOMMON.UDUP = "N";
	        WDB00PE-SQLERR();
	          if (VDBCONTROL.URC > 104)
            		WCM00P2-TO-CEP01A();
          	  end
    
	  	else /*record found does not have begin date of DCFS date*/
	  		AIN49W.WS-PRD-END-DT = H2-PRGM-CASE-HSTRY.PRD-END-DT;
	  		AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;  //sets temp to curr dt
			AIN49P9-LST-DATE();   //finds last day of curr dt
			H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
			
			WDB00PI();
			AIN49P9-UPD-U23();   //updts prd end dt for prev mnth of dcfs dt (curr mth)
			VDBCOMMON.UDUP = "N";
			WDB00PE-SQLERR();
			if (VDBCONTROL.URC > 104)
			  WCM00P2-TO-CEP01A();
			end

			H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;  //dcfs dt
			H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-PRD-END-DT;
		        AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
      			H2-PRGM-CASE-HSTRY.AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
      			if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
        			H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
      			else
        			H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
      			end
      			if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == "Y")
        			if (AIN49W3.RPT-ELIG-CD == "9")
          				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
        			else
          				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
        			end
      			else
        			if (SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE == "9")
          				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
        			else
          				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
        			end
      			end
      
      			WDB00PI();
      			AIN49P9-INS-I12();
	
      			VDBCOMMON.UDUP = "N";
      			WDB00PE-SQLERR();
 		        if (VDBCONTROL.URC > 104)
        			WCM00P2-TO-CEP01A();
      			end
  
  
  	    end
  
    else

	  H2-PRGM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
	  H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-PROCESS-DT;  
	  H2-PRGM-CASE-HSTRY.PRGM-CASE-TYPE = "CW";

	  WDB00PI();
	  AIN49P9-READ-S03();        /*moves all pgrm case hist to H2 record for current */
	  /*  */
	  VDBCOMMON.UDUP = "N";
	  WDB00PE-SQLERR();
	  if (VDBCONTROL.URC > 104)
		WCM00P2-TO-CEP01A();
	  end

	   if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND curr dt*/


			AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;  //sets temp to curr dt
			AIN49P9-LST-DATE();   //finds last day of curr dt
			H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
	 
			WDB00PI();
			AIN49P9-UPD-U23();   //updts prd end dt for prev mnth of dcfs dt (curr mth)
	  
			VDBCOMMON.UDUP = "N";
			WDB00PE-SQLERR();
			 if (VDBCONTROL.URC > 104)
			  WCM00P2-TO-CEP01A();
			 end
	   end



  	
			H2-PRGM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
			H2-PRGM-CASE-HSTRY.PRGM-CASE-TYPE = "CW";
			H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;

			H2-PRGM-CASE-HSTRY.PRGM-EFF-DT = AIN49W.WS-DATE_FUTURE;
			H2-PRGM-CASE-HSTRY.STS-EFF-DT = AIN49W.WS-DATE_FUTURE;

			H2-PRGM-CASE-HSTRY.INIT-APRVL-DT = AIN49W.WS-DATE_FUTURE;
			AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE_FUTURE;

			H2-PRGM-CASE-HSTRY.PRD-END-DT = "9999-12-31";

			H2-PRGM-CASE-HSTRY.INIT-APPRVD-BY = "DCFS";
			H2-PRGM-CASE-HSTRY.ACTUL-APLD-DT = "9999-12-31";
			if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == "Y")
			  if (AIN49W3.RPT-ELIG-CD == "9")
				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
				H2-PRGM-CASE-HSTRY.STS-EFF-DT = H2-PRGM-CASE-HSTRY.PRD-BEG-DT;        
			  else
				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
			  end
			else
			  if (SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE == "9")
				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
				H2-PRGM-CASE-HSTRY.STS-EFF-DT = H2-PRGM-CASE-HSTRY.PRD-BEG-DT;        
			  else
				H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
			  end
			end

			H2-PRGM-CASE-HSTRY.AID-CD = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
			if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
			  H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
			else
			  H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
			end
			if (SR-Q-DCF-REC.D-APPL-MA-APPLICATION-DATE != " ")
			  AIN49W5.WS-DATE3 = SR-Q-DCF-REC.D-APPL-MA-APPLICATION-DATE;
			  AIN49W.WS-MM = AIN49W5.WS-MM3;
			  AIN49W.WS-YY-CC2 = AIN49W5.WS-YY3;
			  AIN49W.WS-DD = AIN49W5.WS-DD3;
			  if (AIN49W.WS-YY-CC2 > "90")
				AIN49W.WS-YY-CC1 = "19";
			  else
				AIN49W.WS-YY-CC1 = "20";
			  end
			  AIN49W.WS-FIL1 = "-";
			  AIN49W.WS-FIL2 = "-";
			  H2-PRGM-CASE-HSTRY.APPL-DT = AIN49W.WS-DATE;
			else
			  H2-PRGM-CASE-HSTRY.APPL-DT = "0001-01-01";
			end
			H2-PRGM-CASE-HSTRY.INIT-APRVL-TM = "00.00.00";
			H2-PRGM-CASE-HSTRY.INIT-APRVL-DT = "0001-01-01";
			H2-PRGM-CASE-HSTRY.ADVR-ACTN-WVD-DT = "9999-12-31";
			H2-PRGM-CASE-HSTRY.EXFS-DSCVR-DT = "9999-12-31";
			H2-PRGM-CASE-HSTRY.RCRT-APL-DT = "9999-12-31";
			H2-PRGM-CASE-HSTRY.AID-CD-CHNG-DT = "9999-12-31";
			H2-PRGM-CASE-HSTRY.TR-STRT-DT = "9999-12-31";
			H2-PRGM-CASE-HSTRY.TR-EXPRN-DT = "9999-12-31";
			WDB00PI();
			AIN49P9-PCH-I12();
			VDBCOMMON.UDUP = "Y";
			WDB00PE-SQLERR();
			if (VDBCONTROL.URC > 104)
			  WCM00P2-TO-CEP01A();
			end
	end
  end
  	  
end // end AIN49P9-PROC-FPCH
/* End WI 2445 mt  Only future month received from DCFS */




/* Begin WI 2445 mt - Only future month received from DCFS*/
// PROC FUTURE CASE MEMBER HIST
Function AIN49P9-PROC-FCMH()
  /* ----------------------PTR 4613 BEGIN-----------------------------*/
  /*  */
  /* The referral process needs to be triggered when the aid code changes*/
  /* accross categories. the check is made for the current month and next*/
  /* month*/
  /*  */
  if (SR-Q-DCF-REC.D-MEMB-MA-AID-CODE != " " || 
  SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE != " " || 
  AIN49W3.RPT-ELIG-CD != " ")
    AIN49P9-CHK-REF();
  end
  
  /*  */
  /*   1. Read tables for record sent (future month)*/
  /*   2. If future month exists and period begin date is equal to future month*/
  /*   	  a. Update aid cd, elig cd, hh left dt for future month.	*/
  /*   3. If future momth exists but does not have prd beg dt of future month*/
  /*      a. Update current month end date*/
  /*      b. Insert future month record with same prd end dt as previous*/
  /*   4. If future month does not exist then read tables for current month*/
  /*   	  a. If current month exists update period end date */
  /*   	  b. Insert tables for dcfs record.*/
  /*  */
  
 
		   
   set H2-CASE-MEMBER-HST empty;
  /*  */
  
    AIN49W.WS-DATE_FUT = SR-Q-DCF-REC.D-BENEFIT-START-MONTH; 
    AIN49W.WS-MM_FUT = AIN49W.WS-MM2_FT;
    AIN49W.WS-YY_FUT = AIN49W.WS-YY2_FT;
    AIN49W.WS-DD_FUT  = "01";
    AIN49W.WS-FIL1_FUT  = "-";
    AIN49W.WS-FIL2_FUT  = "-";
  
    AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;	
    AIN49W.WS-TEMP-DD = "01";
    
    
  
  if (AIN49W.WS-DATE_FUTURE  > AIN49W.WS-TEMP-DATE)
  
   H2-CASE-MEMBER-HST.ICI = H2-3-CMH-FCE-PER.ICI;
   H2-CASE-MEMBER-HST.UPI = H2-3-CMH-FCE-PER.UPI;
   H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;  //dcfs dt
 
   WDB00PI();
   AIN49P9-READ-S07();   //reads case memb hist into H2 record for dcfs dt
   /*  */
   VDBCOMMON.UDUP = "N";
   /* Perform the process for sql error processing*/
   WDB00PE-SQLERR();
   /* Check for fatal errors*/
   if (VDBCONTROL.URC > 104)
     WCM00P2-TO-CEP01A();
   end
  /*  */
  	if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND dcfs dt*/		   
		   
		if (H2-CASE-MEMBER-HST.PRD-BEG-DT ==  AIN49W.WS-DATE_FUTURE) 		   
		   
	    /*updates future month to new aid and elig */
	  		if (SR-Q-DCF-REC.D-MEMB-MA-AID-CODE != " "
	       		|| SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE != " "
	       		|| AIN49W3.RPT-ELIG-CD != " ")
				AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
				AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
				H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
		
				if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
					H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
				else
					H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
				end
	  		end

	      H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;
	      WDB00PI();
	      AIN49P9-UPD-U32();
	      WDB00PE-SQLERR();
	      if (VDBCONTROL.URC > 104)
			WCM00P2-TO-CEP01A();
	      end

		else    /*record found does not have begin date of DCFS date*/
	
			/* ** the period end date of the existing record is made closed*/
			/* ** AND A NEW RECORD WITH ALL DETAILS READ FROM THE INTERFACE*/
  			/* ** FILE IS INSERTED.*/
  	
      		AIN49W.WS-PRD-END-DT = H2-CASE-MEMBER-HST.PRD-END-DT;
      		AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
      		AIN49P9-LST-DATE();
      		H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;
      		WDB00PI();
      		AIN49P9-UPD-U05();
      		VDBCOMMON.UDUP = "N";
      		WDB00PE-SQLERR();
        	if (VDBCONTROL.URC > 104)
           		WCM00P2-TO-CEP01A();
        	end
  			/*  */    

        	H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;
        	H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-PRD-END-DT;
	
        	if (SR-Q-DCF-REC.D-MEMB-MA-AID-CODE != " "
	    		|| SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE != " "
	    		|| AIN49W3.RPT-ELIG-CD != " ")
	    		AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
	    		AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
	    		H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
	      		if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
	          		H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
	      		else
	          		H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
	      		end
        	end
  
  			WDB00PI();
			AIN49P9-INS-I04();
			VDBCOMMON.UDUP = "N";
			WDB00PE-SQLERR();
			if (VDBCONTROL.URC > 104)
	    		WCM00P2-TO-CEP01A();
        	end
   
 		end 
   
  	else    //No record found for dcfs dt. Check if need to end curr mnth and insert record for dcfs dt
  
  	  H2-CASE-MEMBER-HST.ICI = H2-3-CMH-FCE-PER.ICI;
  	  H2-CASE-MEMBER-HST.UPI = H2-3-CMH-FCE-PER.UPI;
  	  H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-PROCESS-DT;  //curr dt
  
  	  WDB00PI();
  	  AIN49P9-READ-S07();  //reads case memb hist into H2 record for curr dt
  	  VDBCOMMON.UDUP = "N";
   	  WDB00PE-SQLERR();
          if (VDBCONTROL.URC > 104)
  	    	  WCM00P2-TO-CEP01A();
  	      end
  	  /*  */
  
  		  if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND curr dt*/
  
  		      AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
  		      AIN49P9-LST-DATE();
  		      H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;
  
  		      WDB00PI();
    		  AIN49P9-UPD-U05();     /*WI 2445 mt updates per end dt for curr mnth */
   		      VDBCOMMON.UDUP = "N";
  		      WDB00PE-SQLERR();
   		      if (VDBCONTROL.URC > 104)
  				  WCM00P2-TO-CEP01A();
  		      end
		   end


    H2-CASE-MEMBER-HST.UPI = H2-3-CMH-FCE-PER.UPI;
    H2-CASE-MEMBER-HST.ICI = H2-3-CMH-FCE-PER.ICI;

    H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;
    H2-CASE-MEMBER-HST.PRD-END-DT = "9999-12-31";
    
    H2-CASE-MEMBER-HST.FS-ASST-IND = "N";

    H2-CASE-MEMBER-HST.TC-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TL-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TN-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TP-ASST-IND = "N"; /* WI 28413*/

    H2-CASE-MEMBER-HST.AFDC-ASST-IND = "N";
    H2-CASE-MEMBER-HST.MA-ASST-IND = "N";
    AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
    AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
    H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
    if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
      H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
    else
      H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
    end
    H2-CASE-MEMBER-HST.MA-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.FS-QUIT-SANC-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.HH-LEFT-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.JOIN-RPRTD-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.JOIN-HH-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D2-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D3-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D4-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D2-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D3-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D4-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.FS-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDCAID-CD-CHNG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MAAID-CD-CHNG-DT = "9999-12-31";

    H2-CASE-MEMBER-HST.TC-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TL-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TN-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TP-BEG-DT = "9999-12-31"; /* WI 28413*/

    AIN49P9-CMH-I04();     //inserts cmh for dcfs dt
    VDBCOMMON.UNRF = "N";
    VDBCOMMON.UDUP = "Y";
    WDB00PE-SQLERR();

    	if (VDBCONTROL.URC > 104)
      		WCM00P2-TO-CEP01A();
    	end

  	end
  end
  	
  /*  */
  /* The referral process is triggered for the next month and current*/
  /* month based on the value of flags*/
  /*  */
  if (AIN49W.WS-TRIGGER-NEXT-MTH-REF == "Y")
    AIN49W.WS-TEMP-DATE = AIN49W.WS-FIRST-DATE;
    AIN49P9-NXT-MNTH();
    AIN49W.WS-TEMP-DD = "01";
    AIN49W.WS-REFERAL-DATE = AIN49W.WS-TEMP-DATE;
    AIN49P9-REF-PRCS();
  end

  if (AIN49W.WS-TRIGGER-CURRENT-MTH-REF == "Y")
    AIN49W.WS-REFERAL-DATE = AIN49W.WS-FIRST-DATE;
    AIN49P9-REF-PRCS();
  end


  /* ----------------------PTR 4613 END------------------------------*/
end // end AIN49P9-PROC-FCMH
/* End WI 2445 mt - Only future month received from DCFS*/



/* Begin WI 2445 mt - Only future month received from DCFS*/
// PROCESS FUTURE FAM CASE HST
Function AIN49P9-PROC-FFCH()
	
   /*  */
  /* The data retrieved from the SQL is stored in working storage variables*/
  /*   1. Read tables for record sent (future month)*/
  /*   2. If future month exists and period begin date is equal to future month*/
  /*   	  a. Update case status for future month.	*/
  /*   3. If future momth exists but does not have prd beg dt of future month*/
  /*      a. Update current month end date*/
  /*      b. Insert future month record with same prd end dt as previous*/
  /*   4. If future month does not exist then read tables for current month*/
  /*   	  a. If current month exists update period end date */
  /*   	  b. Insert tables for dcfs record.*/
  /*  */
  
  
    AIN49W.WS-DATE_FUT = SR-Q-DCF-REC.D-BENEFIT-START-MONTH; 
    AIN49W.WS-MM_FUT = AIN49W.WS-MM2_FT;
    AIN49W.WS-YY_FUT = AIN49W.WS-YY2_FT;
    AIN49W.WS-DD_FUT  = "01";
    AIN49W.WS-FIL1_FUT  = "-";
    AIN49W.WS-FIL2_FUT  = "-";
  
    AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;	
    AIN49W.WS-TEMP-DD = "01";
    
  
  if (AIN49W.WS-DATE_FUTURE  > AIN49W.WS-TEMP-DATE)  
    	
 
      H2-FAM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
      H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;  //dcfs dt

      WDB00PI();
      AIN49P9-READ-S24();  //reads fam case hist into H2 record for dcfs dt
      /*   */
      VDBCOMMON.UDUP = "N";
      WDB00PE-SQLERR();
      if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
      end
    
    if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND dcfs dt*/
       	
       	if (H2-FAM-CASE-HSTRY.PRD-BEG-DT ==  AIN49W.WS-DATE_FUTURE)
  	
        	H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-DATE_FUTURE;
        	AIN49P9-GET-CASSTS();
        	H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CAL-CASE-STS;
        	WDB00PI();
        	AIN49P9-UPD-U34();
        	VDBCOMMON.UDUP = "N";
        	WDB00PE-SQLERR();
        	if (VDBCONTROL.URC > 104)
          		WCM00P2-TO-CEP01A();
        	end
  
  
  	else    /*record found does not have begin date of DCFS date*/
  
  		  AIN49W.WS-PRD-END-DT = H2-FAM-CASE-HSTRY.PRD-END-DT;	
		  AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
		  AIN49P9-LST-DATE();
		  H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

		  WDB00PI();
		  AIN49P9-UPD-U19();  //updates per end dt for curr mnth

		  VDBCOMMON.UDUP = "N";
		  WDB00PE-SQLERR();
		  if (VDBCONTROL.URC > 104)
			WCM00P2-TO-CEP01A();
		  end
		  
		H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;
     		H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-PRD-END-DT;
	      	AIN49P9-GET-CASSTS();
      		H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CAL-CASE-STS;

      		WDB00PI();
      		AIN49P9-INS-I19();
	
      		VDBCOMMON.UDUP = "N";
      		WDB00PE-SQLERR();
		if (VDBCONTROL.URC > 104)
        	    WCM00P2-TO-CEP01A();
      		end	  
		  
	 end
	 
    else   //record not found for dcfs dt	 
	 
    	H2-FAM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
    	H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-PROCESS-DT; //current dt

    	WDB00PI();
    	AIN49P9-READ-S24();     //reads fam case hist into H2 record for dcfs dt
   
    	VDBCOMMON.UDUP = "N";
    	WDB00PE-SQLERR();
    	if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
    	end
 
 		if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND current dt*/

  		    AIN49W.WS-PRD-END-DT = H2-FAM-CASE-HSTRY.PRD-END-DT;	
	  	    AIN49W.WS-TEMP-DATE = AIN49W.WS-PROCESS-DT;
		    AIN49P9-LST-DATE();
		    H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

		    WDB00PI();
		    AIN49P9-UPD-U19();  //updates per end dt for curr mnth

		    VDBCOMMON.UDUP = "N";
		    WDB00PE-SQLERR();
		    if (VDBCONTROL.URC > 104)
		        WCM00P2-TO-CEP01A();
		    end
	        end

        set H2-FAM-CASE-HSTRY empty;
            H2-FAM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
            H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE_FUTURE;
            H2-FAM-CASE-HSTRY.PRD-END-DT =  "9999-12-31";
            H2-FAM-CASE-HSTRY.HOH-UPI-CHNG-DT = "9999-12-31";
            H2-FAM-CASE-HSTRY.VERF-DUE-DT = "9999-12-31";
            H2-FAM-CASE-HSTRY.MTHLY-RPTR-IND = "N";
            H2-FAM-CASE-HSTRY.AUTO-POST-IND = "Y";
			
            H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-DATE_FUTURE;
            AIN49P9-GET-CASSTS();
            H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CAL-CASE-STS;
			
            H2-FAM-CASE-HSTRY.APPL-UPI = H2-3-CMH-FCE-PER.UPI;
            H2-FAM-CASE-HSTRY.HOH-UPI = H2-3-CMH-FCE-PER.UPI;
            H2-FAM-CASE-HSTRY.DCFS-OFC-CNTY-CD = SR-Q-DCF-REC.D-ADDR-RESIDENT-COUNTY;

        WDB00PI();
        AIN49P9-INS-I08();
        VDBCOMMON.UDUP = "Y";
        WDB00PE-SQLERR();
        if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
        end

    end

  end


end // end AIN49P9-PROC-FFCH
/* End WI 2445 mt - Only future month received from DCFS*/




// PROCESS RETRO CASE MEMBER
Function AIN49P9-PROC-RCM()
  /* -----------------------------------------------------------------------*/
  /* Process Retro Case Member*/
  /* -----------------------------------------------------------------------*/

  set H2-CASE-MEMBER-HST empty;
  H2-CASE-MEMBER-HST.ICI = H2-3-CMH-FCE-PER.ICI;
  H2-CASE-MEMBER-HST.UPI = H2-3-CMH-FCE-PER.UPI;
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;

  AIN49W.WS-YY = AIN49W5.WS-YY2;

  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";
  H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE;

  WDB00PI();
  AIN49P9-READ-S07();

  VDBCOMMON.UDUP = "N";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end

  if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND*/
    AIN49W.WS-HH-LEFT-DT = H2-CASE-MEMBER-HST.HH-LEFT-DT;
    AIN49W.WS-IVE-AID-CD = H2-CASE-MEMBER-HST.IVE-AID-CD;
    AIN49W.WS-IVE-ELIG-CD = H2-CASE-MEMBER-HST.IVE-ELIG-CD;

    if (H2-CASE-MEMBER-HST.PRD-BEG-DT < AIN49W.WS-DATE)
  /*  */
  /* Since PRD-BEG-DATE is less than the benefit month begin date, the*/
  /* following updates are performed*/
  /* 1. All data read for the existing record is stored in working storage.*/
  /* The period end date is updated to the last day of the previous mnth*/
  /* using D-BENEFIT-START-MONTH as base*/
  /* 2. One record is inserted for the benefit month and year (retro) as*/
  /* received from the interface.*/
  /* 3. Another record is added with the Period Begin Date as the*/
  /* D-BENEFIT-MONTH + 1 Month and PRD-END-DT as the date read from*/
  /* SQL S04*/
  /*  */
      AIN49W.WS-TEMP-END-DATE = H2-CASE-MEMBER-HST.PRD-END-DT;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LAST-DATE();
      H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;

      WDB00PI();
      AIN49P9-UPD-U06();

      VDBCOMMON.UDUP = "N";

      WDB00PE-SQLERR();

      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end

      H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LST-DATE();
      H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;

      if (SR-Q-DCF-REC.D-MEMB-MA-AID-CODE != " "
       || SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE != " "
       || AIN49W3.RPT-ELIG-CD != " ")
        AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
        AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
        H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
        if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
          H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
        else
          H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
        end
      end

      WDB00PI();
      AIN49P9-INS-I04();

      VDBCOMMON.UDUP = "N";

      WDB00PE-SQLERR();

      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end

      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-NXT-MNTH();
      if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
        H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
        H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;

        H2-CASE-MEMBER-HST.HH-LEFT-DT = AIN49W.WS-HH-LEFT-DT;
        H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W.WS-IVE-AID-CD;
        H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W.WS-IVE-ELIG-CD;

        WDB00PI();
        AIN49P9-INS-I04();

        VDBCOMMON.UDUP = "N";

        WDB00PE-SQLERR();

        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
      end
    else
      if (H2-CASE-MEMBER-HST.PRD-BEG-DT == AIN49W.WS-DATE)
        AIN49W.WS-TEMP-END-DATE = H2-CASE-MEMBER-HST.PRD-END-DT;
        if (SR-Q-DCF-REC.D-MEMB-MA-AID-CODE != " "
         || SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE != " "
         || AIN49W3.RPT-ELIG-CD != " ")
          AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
          AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
          H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
          if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
            H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
          else
            H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
          end
        end

        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-LST-DATE();
        H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;
        WDB00PI();
        AIN49P9-UPD-U06();

        VDBCOMMON.UDUP = "N";

        WDB00PE-SQLERR();

        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-NXT-MNTH();
        if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
          H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
          H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;

          H2-CASE-MEMBER-HST.HH-LEFT-DT = AIN49W.WS-HH-LEFT-DT;
          H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W.WS-IVE-AID-CD;
          H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W.WS-IVE-ELIG-CD;
          WDB00PI();
          AIN49P9-INS-I04();

          VDBCOMMON.UDUP = "N";

          WDB00PE-SQLERR();

          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end
        end
      end
    end
  else

    H2-CASE-MEMBER-HST.UPI = H2-3-CMH-FCE-PER.UPI;
    H2-CASE-MEMBER-HST.ICI = H2-3-CMH-FCE-PER.ICI;

    AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
    AIN49W.WS-MM = AIN49W5.WS-MM2;
    AIN49W.WS-YY = AIN49W5.WS-YY2;
    AIN49W.WS-DD = "01";
    AIN49W.WS-FIL1 = "-";
    AIN49W.WS-FIL2 = "-";
    H2-CASE-MEMBER-HST.PRD-BEG-DT = AIN49W.WS-DATE;

    AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
    AIN49P9-LST-DATE();
    H2-CASE-MEMBER-HST.PRD-END-DT = AIN49W.WS-LAST-DATE;

    H2-CASE-MEMBER-HST.FS-ASST-IND = "N";

    H2-CASE-MEMBER-HST.TC-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TL-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TN-ASST-IND = "N"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TP-ASST-IND = "N"; /* WI 28413*/

    H2-CASE-MEMBER-HST.AFDC-ASST-IND = "N";
    H2-CASE-MEMBER-HST.MA-ASST-IND = "N";
    AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
    AIN49W5.WS-MEMB-MA-AID-CODE-2 = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
    H2-CASE-MEMBER-HST.IVE-AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2;
    if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
      H2-CASE-MEMBER-HST.IVE-ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
    else
      H2-CASE-MEMBER-HST.IVE-ELIG-CD = AIN49W3.RPT-ELIG-CD;
    end
    H2-CASE-MEMBER-HST.MA-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.FS-QUIT-SANC-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.HH-LEFT-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.JOIN-RPRTD-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.JOIN-HH-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D2-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D3-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-30-1-3-D4-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D1-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D2-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D3-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MA-30-1-3-D4-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDC-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.FS-BEG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.AFDCAID-CD-CHNG-DT = "9999-12-31";
    H2-CASE-MEMBER-HST.MAAID-CD-CHNG-DT = "9999-12-31";

    H2-CASE-MEMBER-HST.TC-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TL-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TN-BEG-DT = "9999-12-31"; /* WI 28413*/
    H2-CASE-MEMBER-HST.TP-BEG-DT = "9999-12-31"; /* WI 28413*/


    AIN49P9-CMH-I04();

    VDBCOMMON.UNRF = "N";
    VDBCOMMON.UDUP = "Y";

    WDB00PE-SQLERR();

    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end

  end
end // end AIN49P9-PROC-RCM


// PROCESS RETRO PROGRAM CASE HST
Function AIN49P9-PROC-RFCH()
  /*  */
  H2-FAM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";
  H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;

  WDB00PI();
  AIN49P9-READ-S24();
  /*  */
  VDBCOMMON.UDUP = "N";
  WDB00PE-SQLERR();
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND*/
    AIN49W.WS-CASE-STS = H2-FAM-CASE-HSTRY.CASE-STS;
    if (H2-FAM-CASE-HSTRY.PRD-BEG-DT < AIN49W.WS-DATE)
  /*  */
  /* Since PRD-BEG-DATE is less than the benefit month begin date, the*/
  /* following updates are performed*/
  /* 1. All data read for the existing record is stored in working storage.*/
  /* The period end date is updated to the last day of the previous mnth*/
  /* using D-BENEFIT-START-MONTH as base*/
  /* 2. One record is inserted for the benefit month and year (retro) as*/
  /* received from the interface.*/
  /* 3. Another record is added with the Period Begin Date as the*/
  /* D-BENEFIT-MONTH + 1 Month and PRD-END-DT as the date read from*/
  /* SQL S24*/
  /*  */
      AIN49W.WS-TEMP-END-DATE = H2-FAM-CASE-HSTRY.PRD-END-DT;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LAST-DATE();
      H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
      WDB00PI();
      AIN49P9-UPD-U19();
      VDBCOMMON.UDUP = "N";
      WDB00PE-SQLERR();
      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
      H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LST-DATE();
      H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

      AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
      AIN49W.WS-MM = AIN49W5.WS-MM2;
      AIN49W.WS-YY = AIN49W5.WS-YY2;
      AIN49W.WS-DD = "01";
      AIN49W.WS-FIL1 = "-";
      AIN49W.WS-FIL2 = "-";
      H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-DATE;
      AIN49P9-GET-CASSTS();
      H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CAL-CASE-STS;

      WDB00PI();
      AIN49P9-INS-I19();
  /*  */
      VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
      WDB00PE-SQLERR();
  /* Check for fatal errors*/
      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-NXT-MNTH();
      if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
        H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CASE-STS;
        H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
        H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;
        WDB00PI();
        AIN49P9-INS-I19();
  /*  */
        VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
  /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
      end
    else
      if (H2-FAM-CASE-HSTRY.PRD-BEG-DT == AIN49W.WS-DATE)
        AIN49W.WS-TEMP-END-DATE = H2-FAM-CASE-HSTRY.PRD-END-DT;

        AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
        AIN49W.WS-MM = AIN49W5.WS-MM2;
        AIN49W.WS-YY = AIN49W5.WS-YY2;
        AIN49W.WS-DD = "01";
        AIN49W.WS-FIL1 = "-";
        AIN49W.WS-FIL2 = "-";
        H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-DATE;
        AIN49P9-GET-CASSTS();
        H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CAL-CASE-STS;

        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-LST-DATE();
        H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
  /* ---------------------------PTR 8170 -12 BEGIN------------*/
        WDB00PI();
        AIN49P9-UPD-U19();
  /* ---------------------------PTR 8170 - 12 END----------------*/
        VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
  /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        WDB00PI();
        AIN49P9-UPD-U34();
        VDBCOMMON.UDUP = "N";
        /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
        /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-NXT-MNTH();

        if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
          H2-FAM-CASE-HSTRY.CASE-STS = AIN49W.WS-CASE-STS;
          H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
          H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;
          WDB00PI();
          AIN49P9-INS-I19();
  /*  */
          VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
          WDB00PE-SQLERR();
  /* Check for fatal errors*/
          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end
        end
  /*  */
      end
    end
  else
    set H2-FAM-CASE-HSTRY empty;
    H2-FAM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
    AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
    AIN49W.WS-MM = AIN49W5.WS-MM2;
    AIN49W.WS-YY = AIN49W5.WS-YY2;
    AIN49W.WS-DD = "01";
    AIN49W.WS-FIL1 = "-";
    AIN49W.WS-FIL2 = "-";
    H2-FAM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;
    AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
    AIN49P9-LST-DATE();
    H2-FAM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

    H2-FAM-CASE-HSTRY.HOH-UPI-CHNG-DT = "9999-12-31";
    H2-FAM-CASE-HSTRY.VERF-DUE-DT = "9999-12-31";
    H2-FAM-CASE-HSTRY.MTHLY-RPTR-IND = "N";
    H2-FAM-CASE-HSTRY.AUTO-POST-IND = "Y";
    H2-FAM-CASE-HSTRY.CASE-STS = "O";
    H2-FAM-CASE-HSTRY.APPL-UPI = H2-3-CMH-FCE-PER.UPI;
    H2-FAM-CASE-HSTRY.HOH-UPI = H2-3-CMH-FCE-PER.UPI;
    H2-FAM-CASE-HSTRY.DCFS-OFC-CNTY-CD = SR-Q-DCF-REC.D-ADDR-RESIDENT-COUNTY;

    WDB00PI();
    AIN49P9-INS-I08();
    VDBCOMMON.UDUP = "Y";
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end

  end
end // end AIN49P9-PROC-RFCH


// PROCESS RETRO PROGRAM CASE HST
Function AIN49P9-PROC-RPCH()
  /* -----------------------PTR 4613 BEGIN-----------------------------*/
  /*  */
  /* Process Retro Program Case Hst*/
  /*  */
  /*  */
  H2-PRGM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
  AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
  AIN49W.WS-MM = AIN49W5.WS-MM2;
  /* MOVE AIN49W5.WS-YY2 TO AIN49W.WS-YY-CC2;*/
  AIN49W.WS-YY = AIN49W5.WS-YY2;
  /* IF AIN49W.WS-YY-CC2 > '90';*/
  /* MOVE '19' TO AIN49W.WS-YY-CC1;*/
  /* ELSE;*/
  /* MOVE '20' TO AIN49W.WS-YY-CC1;*/
  /* END;*/
  AIN49W.WS-DD = "01";
  AIN49W.WS-FIL1 = "-";
  AIN49W.WS-FIL2 = "-";
  H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;
  H2-PRGM-CASE-HSTRY.PRGM-CASE-TYPE = "CW";

  WDB00PI();
  AIN49P9-READ-S03();
  /*  */
  VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
  WDB00PE-SQLERR();
  /* Check for fatal errors*/
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0) /* RECORD FOUND*/
    AIN49W.WS-PCH-AID-CODE = H2-PRGM-CASE-HSTRY.AID-CD;
    AIN49W.WS-PCH-ELIG-CODE = H2-PRGM-CASE-HSTRY.ELIG-CD;
    AIN49W.WS-PRGM-CASE-STS = H2-PRGM-CASE-HSTRY.PRGM-CASE-STS;
    if (H2-PRGM-CASE-HSTRY.PRD-BEG-DT < AIN49W.WS-DATE)
  /*  */
  /* Since PRD-BEG-DATE is less than the benefit month begin date, the*/
  /* following updates are performed*/
  /* 1. All data read for the existing record is stored in working storage.*/
  /* The period end date is updated to the last day of the previous mnth*/
  /* using D-BENEFIT-START-MONTH as base*/
  /* 2. One record is inserted for the benefit month and year (retro) as*/
  /* received from the interface.*/
  /* 3. Another record is added with the Period Begin Date as the*/
  /* D-BENEFIT-MONTH + 1 Month and PRD-END-DT as the date read from*/
  /* SQL S04*/
  /*  */
      AIN49W.WS-TEMP-END-DATE = H2-PRGM-CASE-HSTRY.PRD-END-DT;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LAST-DATE();
      H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
  /* -------------------------PTR 8170 - 12 BEGIN-------------------*/
      WDB00PI();
      AIN49P9-UPD-U23();
  /* -------------------------PTR 8170 - 12 END---------------------*/
      VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
      WDB00PE-SQLERR();
  /* Check for fatal errors*/
      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
      H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-LST-DATE();
      H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

      AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
      H2-PRGM-CASE-HSTRY.AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
      if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
        H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
      else
        H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
      end

      if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == "Y")
        if (AIN49W3.RPT-ELIG-CD == "9")
          H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
        else
          H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
        end
      else
        if (SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE == "9")
          H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
        else
          H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
        end
      end

      WDB00PI();
      AIN49P9-INS-I12();
  /*  */
      VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
      WDB00PE-SQLERR();
  /* Check for fatal errors*/
      if (VDBCONTROL.URC > 104)
        WCM00P2-TO-CEP01A();
      end
  /*  */
      AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
      AIN49P9-NXT-MNTH();
      if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
        H2-PRGM-CASE-HSTRY.AID-CD = AIN49W.WS-PCH-AID-CODE;
        H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W.WS-PCH-ELIG-CODE;
        H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = AIN49W.WS-PRGM-CASE-STS;
        H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
        H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;
        WDB00PI();
        AIN49P9-INS-I12();
  /*  */
        VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
  /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end
      end
    else
      if (H2-PRGM-CASE-HSTRY.PRD-BEG-DT == AIN49W.WS-DATE)
        AIN49W.WS-TEMP-END-DATE = H2-PRGM-CASE-HSTRY.PRD-END-DT;
        AIN49W5.WS-MEMB-MA-AID-CODE = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
        H2-PRGM-CASE-HSTRY.AID-CD = AIN49W5.WS-MEMB-MA-AID-CODE-2DIGITS;
        if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
          H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
        else
          H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
        end

        if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == "Y")
          if (AIN49W3.RPT-ELIG-CD == "9")
            H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
          else
            H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
          end
        else
          if (SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE == "9")
            H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "T";
          else
            H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
          end
        end
        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-LST-DATE();
        H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;
  /* ---------------------------PTR 8170 -12 BEGIN------------*/
        WDB00PI();
        AIN49P9-UPD-U23();
  /* ---------------------------PTR 8170 - 12 END----------------*/
        VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
  /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        WDB00PI();
        AIN49P9-UPD-U07();
        VDBCOMMON.UDUP = "N";
        /* Perform the process for sql error processing*/
        WDB00PE-SQLERR();
        /* Check for fatal errors*/
        if (VDBCONTROL.URC > 104)
          WCM00P2-TO-CEP01A();
        end

        AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
        AIN49P9-NXT-MNTH();

        if (AIN49W.WS-TEMP-DATE <= AIN49W.WS-TEMP-END-DATE)
          H2-PRGM-CASE-HSTRY.AID-CD = AIN49W.WS-PCH-AID-CODE;
          H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W.WS-PCH-ELIG-CODE;
          H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = AIN49W.WS-PRGM-CASE-STS;
          H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-TEMP-DATE;
          H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-TEMP-END-DATE;
          WDB00PI();
          AIN49P9-INS-I12();
  /*  */
          VDBCOMMON.UDUP = "N";
  /* Perform the process for sql error processing*/
          WDB00PE-SQLERR();
  /* Check for fatal errors*/
          if (VDBCONTROL.URC > 104)
            WCM00P2-TO-CEP01A();
          end
        end
  /*  */
      end
    end
  else
    set H2-PRGM-CASE-HSTRY empty;
    H2-PRGM-CASE-HSTRY.ICI = H2-3-CMH-FCE-PER.ICI;
    H2-PRGM-CASE-HSTRY.PRGM-CASE-TYPE = "CW";
    AIN49W5.WS-DATE1 = SR-Q-DCF-REC.D-BENEFIT-START-MONTH;
    AIN49W.WS-MM = AIN49W5.WS-MM2;
    AIN49W.WS-YY = AIN49W5.WS-YY2;
    AIN49W.WS-DD = "01";
    AIN49W.WS-FIL1 = "-";
    AIN49W.WS-FIL2 = "-";
    H2-PRGM-CASE-HSTRY.PRD-BEG-DT = AIN49W.WS-DATE;

    H2-PRGM-CASE-HSTRY.PRGM-EFF-DT = AIN49W.WS-DATE;
    H2-PRGM-CASE-HSTRY.STS-EFF-DT = AIN49W.WS-DATE;
    H2-PRGM-CASE-HSTRY.PRGM-EFF-DT = AIN49W.WS-DATE;
    H2-PRGM-CASE-HSTRY.INIT-APRVL-DT = AIN49W.WS-DATE;
    AIN49W.WS-TEMP-DATE = AIN49W.WS-DATE;
    AIN49P9-LST-DATE();
    H2-PRGM-CASE-HSTRY.PRD-END-DT = AIN49W.WS-LAST-DATE;

    H2-PRGM-CASE-HSTRY.INIT-APPRVD-BY = "DCFS";
    H2-PRGM-CASE-HSTRY.ACTUL-APLD-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.PRGM-CASE-STS = "O";
    H2-PRGM-CASE-HSTRY.AID-CD = SR-Q-DCF-REC.D-MEMB-MA-AID-CODE;
    if (SR-Q-DCF-REC.D-NEW-LAYOUT-FLAG == " ")
      H2-PRGM-CASE-HSTRY.ELIG-CD = SR-Q-DCF-REC.D-MEMB-MA-ELIG-CODE;
    else
      H2-PRGM-CASE-HSTRY.ELIG-CD = AIN49W3.RPT-ELIG-CD;
    end
    if (SR-Q-DCF-REC.D-APPL-MA-APPLICATION-DATE != " ")
      AIN49W5.WS-DATE3 = SR-Q-DCF-REC.D-APPL-MA-APPLICATION-DATE;
      AIN49W.WS-MM = AIN49W5.WS-MM3;
      AIN49W.WS-YY-CC2 = AIN49W5.WS-YY3;
      AIN49W.WS-DD = AIN49W5.WS-DD3;
      if (AIN49W.WS-YY-CC2 > "90")
        AIN49W.WS-YY-CC1 = "19";
      else
        AIN49W.WS-YY-CC1 = "20";
      end
      AIN49W.WS-FIL1 = "-";
      AIN49W.WS-FIL2 = "-";
      H2-PRGM-CASE-HSTRY.APPL-DT = AIN49W.WS-DATE;
    else
      H2-PRGM-CASE-HSTRY.APPL-DT = "0001-01-01";
    end
    H2-PRGM-CASE-HSTRY.INIT-APRVL-TM = "00.00.00";
    H2-PRGM-CASE-HSTRY.INIT-APRVL-DT = "0001-01-01";
    H2-PRGM-CASE-HSTRY.ADVR-ACTN-WVD-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.EXFS-DSCVR-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.RCRT-APL-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.AID-CD-CHNG-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.TR-STRT-DT = "9999-12-31";
    H2-PRGM-CASE-HSTRY.TR-EXPRN-DT = "9999-12-31";
    WDB00PI();
    AIN49P9-PCH-I12();
    VDBCOMMON.UDUP = "Y";
    WDB00PE-SQLERR();
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end

  end
end // end AIN49P9-PROC-RPCH


// READ CODE FROM TWNCODE-TBL
Function AIN49P9-RD-CODE()
  /* PTR 5492 END*/
  /* created due to ptr 5492*/
  VDBCONTROL.UPROC-NM = "AIN49P9-RD-CODE";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CODE-TBL";
  VDBCOMMON.USQLREC = "H2-CODE-TBL";
  try
    get H2-CODE-TBL
      with #sql{
        select CODE_TBL_CD, CODE_TBL_TYP, CODE_DESC
        from twncode_tbl T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
         --** INSERT ORDER BY CLAUSE HERE **
        WHERE T1.CODE_TBL_TYP = :CODE-TBL-TYP
        AND T1.CODE_TBL_CD = :CODE-TBL-CD
      }
      into CODE-TBL-CD, CODE-TBL-TYP, CODE-DESC ;
  end

  /* PTR 5492 END*/
end // end AIN49P9-RD-CODE


// INQUIRE CMH / FCE / PER
Function AIN49P9-RD-S08()
  VDBCONTROL.UPROC-NM = "AIN49P9-RD-S08";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-3-CMH-FCE-PER";
  VDBCOMMON.USQLREC = "H2-3-CMH-FCE-PER";
  try
    get H2-3-CMH-FCE-PER
      with #sql{
        select T2.ssn,T1.ICI
        from twncase_member_hst T1,
             twnperson T2,
             twnfam_case T3
        WHERE
              T1.UPI = :UPI
        AND   T1.PRD_BEG_DT <= :PRD-BEG-DT
        AND   T1.PRD_END_DT >= :PRD-BEG-DT
        AND   T1.ICI = T3.ICI
        AND   T2.UPI = T3.HOH_UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into SSN,ICI ;
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
  end
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN49A";
end // end AIN49P9-RD-S08


// READ INPUT DCFS MASTER FILE
Function AIN49P9-READ-DCFSM()
  VGVar.handleHardIOErrors = 1;
  try
    get next SR-Q-DCF-REC ;
  end
  if (SR-Q-DCF-REC is ioError && SR-Q-DCF-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIN49P9-READ-DCFSM";
    VDBCONTROL.UPROC-OBJ = "SR-Q-DCF-REC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIN49A";
    AIN49W1.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN49W1.WS-ERR-LAST-FOUR;
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-Q-DCF-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-Q-DCF-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-Q-DCF-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
end // end AIN49P9-READ-DCFSM


// READ TWNPERSON
Function AIN49P9-READ-S01()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S01";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON";
  VDBCOMMON.USQLREC = "H2-PERSON";
  /*  */
  try
    get H2-PERSON singleRow
      with #sql{
        select UPI,FRST_NM, LST_NM,
            NCP_FG, CST_FG, CHD_FG, IVA_CASE_MBR_FG,IVE_MMBR_IND,
            MEDIC_BLNG_SQ_NMB, DOB
        from TWNPERSON T1
        WHERE SSN = :SSN
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI,FRST-NM,LST-NM,
           NCP-FG, CST-FG, CHD-FG,IVA-CASE-MBR-FG,IVE-MMBR-IND,
           MEDIC-BLNG-SQ-NMB,DOB ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S01


// READ PROGRAM CASE HSTRY
Function AIN49P9-READ-S03()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S03";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PRGM-CASE-HSTRY";
  VDBCOMMON.USQLREC = "H2-PRGM-CASE-HSTRY";
  try
    get H2-PRGM-CASE-HSTRY singleRow
      with #sql{
        select ICI, PRGM_CASE_TYPE, PRD_BEG_DT, STS_EFF_DT,
          PRGM_CASE_STS, INIT_APPRVD_BY, EXPD_FS_RSN_CD,
          INIT_APRVL_TM, INIT_APRVL_DT, APPL_DT,
          REDET_FRQ, PRGM_EFF_DT, PRD_END_DT,
          ADVR_ACTN_WVD_IND, DUPL_ASST_IND,
          ADVR_ACTN_WVD_DT, CLSRE_RSN_CD, RFRD_BY,
          EXFS_DSCVR_DT, TR_STRT_DT, TR_ADD_COVER_IND,
          TR_EXPRN_DT, AID_CD, PRIR_MDCAL_IND,
          ACTUL_APLD_DT, ELIG_CD, MULT_CLSRE_RSN_IND,
          FRST_TM_APRVL_IND, SYS_CLSRE_DNL_RSN,
          RCRT_APL_DT, AID_CD_CHNG_DT, PREV_AID_CD,
          MA_CLOSE_STS_IND, OLD_APPL_DT,
          REAP_HIGH_AID_FG, ACTUL_STS_EFF_DT, HRDSHP_CD,
          HRDSHP_DNL_CD, HRDSHP_24_60_CNT,
          TR_LOSS_INC_EARN, TR_LOSS_DISREG, CATGL_ELIG,
          SSG_CLSRE_RSN_CD, PREMIUM_PAID_FG, SIMPLE_REPORT_IND,
          TANF_APPL_TYPE, APPL_ACT_TYPE, APPL_ACT_TYPE_DT,
          INCM_TST_IND, OUTREACH_IND
        from TWNPRGM_CASE_HSTRY T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE ICI = :ICI AND
        PRD_BEG_DT <= :PRD-BEG-DT AND
        PRD_END_DT >= :PRD-BEG-DT AND
        PRGM_CASE_TYPE = :PRGM-CASE-TYPE
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI, PRGM-CASE-TYPE, PRD-BEG-DT, STS-EFF-DT,
           PRGM-CASE-STS, INIT-APPRVD-BY, EXPD-FS-RSN-CD,
           INIT-APRVL-TM, INIT-APRVL-DT, APPL-DT,
           REDET-FRQ, PRGM-EFF-DT, PRD-END-DT,
           ADVR-ACTN-WVD-IND, DUPL-ASST-IND,
           ADVR-ACTN-WVD-DT, CLSRE-RSN-CD, RFRD-BY,
           EXFS-DSCVR-DT, TR-STRT-DT, TR-ADD-COVER-IND,
           TR-EXPRN-DT, AID-CD, PRIR-MDCAL-IND,
           ACTUL-APLD-DT, ELIG-CD, MULT-CLSRE-RSN-IND,
           FRST-TM-APRVL-IND, SYS-CLSRE-DNL-RSN,
           RCRT-APL-DT, AID-CD-CHNG-DT, PREV-AID-CD,
           MA-CLOSE-STS-IND, OLD-APPL-DT,
           REAP-HIGH-AID-FG, ACTUL-STS-EFF-DT, HRDSHP-CD,
           HRDSHP-DNL-CD, HRDSHP-24-60-CNT,
           TR-LOSS-INC-EARN, TR-LOSS-DISREG, CATGL-ELIG,
           SSG-CLSRE-RSN-CD, PREMIUM-PAID-FG, SIMPLE-REPORT-IND,
           TANF-APPL-TYPE, APPL-ACT-TYPE, APPL-ACT-TYPE-DT,
           INCM-TST-IND, OUTREACH-IND ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S03


// READ CASE MEMBER HISTORY
Function AIN49P9-READ-S07()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S07";
  VDBCONTROL.UPROC-OPT = "SETUPD";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  try
    get H2-CASE-MEMBER-HST singleRow
      with #sql{
        select UPI, ICI, PRD_BEG_DT, FS_ASST_IND, FS_ELIG_CD,
          MA_30_1_3_D1_DT, AFDC_ASST_IND, MA_30_BEG_DT,
          AFDC_30_BEG_DT, AFDC_AID_CD, MA_ASST_IND,
          PRNTL_REIMB_AMT, MA_AID_CD, FS_QUIT_SANC_DT,
          MA_ELIG_CD, SFU_IND, AFDC_DSRGD_CD,
          MA_DSRGD_CD, VOL_QUIT_EX_IND, HH_LEFT_DT,
          RESP_PERSON2_UPI, HOUSE_ARST_IND, JOIN_HH_DT,
          RESP_PERSON1_UPI, HH_LEFT_RSN_CD,
          RESP_PERSON3_UPI, JOIN_RPRTD_DT, TAX_DPNDT_CD,
          EXC_CHD_QTR1_AMT, EXC_CHD_QTR2_AMT,
          PRI_WGE_ERNR_IND, EXC_CHD_QTR3_AMT,
          EXC_CHD_QTR4_AMT, PCN_CD, EXC_AL_NTV_AMT,
          PCN_RMVD_CD, SUB_UNIT_NMB, AFDC_30_1_3_D1_DT,
          AFDC_30_1_3_D2_DT, AFDC_30_1_3_D3_DT,
          AFDC_30_1_3_D4_DT, MA_30_1_3_D2_DT,
          MA_30_1_3_D3_DT, MA_30_1_3_D4_DT,
          AFDC_DUPL_ASST_IND, FS_DUPL_ASST_IND,
          MA_DUPL_ASST_IND, AFDC_BEG_DT, FS_BEG_DT,
          ET_PRTCP_CD, ET_EXMPT_RSN_CD, ET_VOL_STAT_IND,
          ECO_RSTRC_IND, FS_AID_CD, MEDIC_BLNG_SQ_NMB,
          PRD_END_DT, AFDC_ELIG_CD, ET_NON_COOP_CD,
          PTNT_LBLTY_AMT, RSRC_EXCL_FACTR, IVE_ELIG_CD,
          IVE_AID_CD, MAINT_CD, AFDCAID_CD_CHNG_DT,
          PREV_AFDC_AID_CD, MAAID_CD_CHNG_DT,
          PREV_MA_AID_CD, QMB_SLMB_IND, APLD_AFDC_AID_CD,
          WRKD_IN_LST_YR_IND, MNRLVNG_ARRGT_FG, ABAWD_FG,
          EXCL_FR_TANF_IND, HRDSHP_CD, HRDSHP_DNL_CD,
          MNR_SCHL_ATNDC_FG, NEON_CD, AJS_PRTCP_CD,
          TANF_CRTKR_IND, CHLD_ENTRD_HOME_DT,
          LGL_GRDNSHP_EFF_DT, CRIMINAL_BKGRND_FG,
          FP_ASST_IND, FP_CLSRE_RSN_CD, SSG_HRDSHP_CD,
          SSG_HRDSHP_DNL_CD, MCB_ASST_IND, CDC_TYPE,
          GRS250_MBR_IND, MBR_PMED_IND, MBR_CH_APPL_DT,
          MBR_CLOSURE_RSNCD, INTL_CH_INCM_TST,
          TANF_SSP_FG, TANF_SSP_RSN_CD,
          SG_AID_CD, SG_APLD_AID_CD, SG_ASST_IND, SG_BEG_DT,
          SG_ELIG_CD, TC_AID_CD, TC_APLD_AID_CD, TC_ASST_IND,
          TC_BEG_DT, TC_ELIG_CD, TL_AID_CD, TL_APLD_AID_CD,
          TL_ASST_IND, TL_BEG_DT, TL_ELIG_CD, TN_AID_CD,
          TN_APLD_AID_CD, TN_ASST_IND, TN_BEG_DT, TN_ELIG_CD,
          TP_AID_CD, TP_APLD_AID_CD, TP_ASST_IND, TP_BEG_DT,
          TP_ELIG_CD
        from TWNCASE_MEMBER_HST T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
            ICI = :ICI AND
            UPI = :UPI AND
          PRD_BEG_DT <= :PRD-BEG-DT AND
          PRD_END_DT >= :PRD-BEG-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI, ICI, PRD-BEG-DT, FS-ASST-IND, FS-ELIG-CD,
           MA-30-1-3-D1-DT, AFDC-ASST-IND, MA-30-BEG-DT,
           AFDC-30-BEG-DT, AFDC-AID-CD, MA-ASST-IND,
           PRNTL-REIMB-AMT, MA-AID-CD, FS-QUIT-SANC-DT,
           MA-ELIG-CD, SFU-IND, AFDC-DSRGD-CD,
           MA-DSRGD-CD, VOL-QUIT-EX-IND, HH-LEFT-DT,
           RESP-PERSON2-UPI, HOUSE-ARST-IND, JOIN-HH-DT,
           RESP-PERSON1-UPI, HH-LEFT-RSN-CD,
           RESP-PERSON3-UPI, JOIN-RPRTD-DT, TAX-DPNDT-CD,
           EXC-CHD-QTR1-AMT, EXC-CHD-QTR2-AMT,
           PRI-WGE-ERNR-IND, EXC-CHD-QTR3-AMT,
           EXC-CHD-QTR4-AMT, PCN-CD, EXC-AL-NTV-AMT,
           PCN-RMVD-CD, SUB-UNIT-NMB, AFDC-30-1-3-D1-DT,
           AFDC-30-1-3-D2-DT, AFDC-30-1-3-D3-DT,
           AFDC-30-1-3-D4-DT, MA-30-1-3-D2-DT,
           MA-30-1-3-D3-DT, MA-30-1-3-D4-DT,
           AFDC-DUPL-ASST-IND, FS-DUPL-ASST-IND,
           MA-DUPL-ASST-IND, AFDC-BEG-DT, FS-BEG-DT,
           ET-PRTCP-CD, ET-EXMPT-RSN-CD, ET-VOL-STAT-IND,
           ECO-RSTRC-IND, FS-AID-CD, MEDIC-BLNG-SQ-NMB,
           PRD-END-DT, AFDC-ELIG-CD, ET-NON-COOP-CD,
           PTNT-LBLTY-AMT, RSRC-EXCL-FACTR, IVE-ELIG-CD,
           IVE-AID-CD, MAINT-CD, AFDCAID-CD-CHNG-DT,
           PREV-AFDC-AID-CD, MAAID-CD-CHNG-DT,
           PREV-MA-AID-CD, QMB-SLMB-IND, APLD-AFDC-AID-CD,
           WRKD-IN-LST-YR-IND, MNRLVNG-ARRGT-FG, ABAWD-FG,
           EXCL-FR-TANF-IND, HRDSHP-CD, HRDSHP-DNL-CD,
           MNR-SCHL-ATNDC-FG, NEON-CD, AJS-PRTCP-CD,
           TANF-CRTKR-IND, CHLD-ENTRD-HOME-DT,
           LGL-GRDNSHP-EFF-DT, CRIMINAL-BKGRND-FG,
           FP-ASST-IND, FP-CLSRE-RSN-CD, SSG-HRDSHP-CD,
           SSG-HRDSHP-DNL-CD, MCB-ASST-IND, CDC-TYPE,
           GRS250-MBR-IND, MBR-PMED-IND, MBR-CH-APPL-DT,
           MBR-CLOSURE-RSNCD, INTL-CH-INCM-TST,
           TANF-SSP-FG, TANF-SSP-RSN-CD,
           SG-AID-CD, SG-APLD-AID-CD, SG-ASST-IND, SG-BEG-DT,
           SG-ELIG-CD, TC-AID-CD, TC-APLD-AID-CD, TC-ASST-IND,
           TC-BEG-DT, TC-ELIG-CD, TL-AID-CD, TL-APLD-AID-CD,
           TL-ASST-IND, TL-BEG-DT, TL-ELIG-CD, TN-AID-CD,
           TN-APLD-AID-CD, TN-ASST-IND, TN-BEG-DT, TN-ELIG-CD,
           TP-AID-CD, TP-APLD-AID-CD, TP-ASST-IND, TP-BEG-DT,
           TP-ELIG-CD ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S07


// READ UNEARNED INCM DETAIL
Function AIN49P9-READ-S09()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S09";
  VDBCONTROL.UPROC-OPT = "SETUPD";
  VDBCONTROL.UPROC-OBJ = "H2-UERND-INCM-DTL";
  VDBCOMMON.USQLREC = "H2-UERND-INCM-DTL";
  /*  */
  try
    open AIN49P9-READ-S09_RSI01 forUpdate
      with #sql{
        select UERND_INC_AMT,PRD_END_DT, RSDI_CLM_NUM,PRD_BEG_DT, CHNG_ENTRY_DT
        from TWNUERND_INCM_DTL T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI = :UPI AND
        UERND_INC_TYPE_CD = :UERND-INC-TYPE-CD AND
        :PRD-BEG-DT BETWEEN PRD_BEG_DT AND PRD_END_DT AND
        UERND_INCM_CD = :UERND-INCM-CD AND
        IVE_NONIVE_IND = :IVE-NONIVE-IND
        for update of UPI, PRD_BEG_DT, UERND_INC_TYPE_CD, INCM_SQ_NMB, SSI_RSDI_RCVD_MTH, RSDI_CLM_NUM, PB_LAW_RSDI_CI_AMT, UERND_INC_RCVD_DT, UERND_INC_FREQ, UERND_INC_AMT, MA_EXCLD_AMT, SSI_RSDI_RCVD_YR, PREV_AMT, BNFTS_APLD_IND, AFDC_CNTBL_IND, FS_CNTBL_IND, MA_CNTBL_CD, PRD_END_DT, CHNG_ENTRY_DT,
           UNE_INC_VERF_CD, UNE_INC_VERF_BY, UNE_INC_VERF_DT, MAINT_CD, RCVD_DT, RPRTD_DT, RCPT_DT, INVO_MND_DEDN_AMT, RECUR_IND, PBLIC_RSDI_CLM_NUM, PBLIC_RSDI_STRT_DT, FS_CNTBL_AMT, UERND_INCM_CD, IVE_NONIVE_IND, CHAP_CNTBL_IND
      }
      into UERND-INC-AMT,PRD-END-DT,RSDI-CLM-NUM,PRD-BEG-DT,CHNG-ENTRY-DT
      for H2-UERND-INCM-DTL ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S09


// READ IVD CASE ON NCP
Function AIN49P9-READ-S10()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S10";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-IVD-CASE";
  VDBCOMMON.USQLREC = "H2-IVD-CASE";
  try
    open AIN49P9-READ-S10_RSI01
      with #sql{
        select NCP_UPI, CASE_SUFX
        from TWNIVD_CASE T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
         --** INSERT ORDER BY CLAUSE HERE **
        WHERE NCP_UPI = :NCP-UPI
      }      
      into NCP-UPI, CASE-SUFX
      for H2-IVD-CASE ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S10


// READ IVD CASE ON CST
Function AIN49P9-READ-S11()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S11";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-IVD-CASE";
  VDBCOMMON.USQLREC = "H2-IVD-CASE";
  try
    open AIN49P9-READ-S11_RSI01
      with #sql{
        select NCP_UPI, CASE_SUFX
        from TWNIVD_CASE T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
         --** INSERT ORDER BY CLAUSE HERE **
        WHERE CST_UPI = :CST-UPI
      }      
      into NCP-UPI, CASE-SUFX
      for H2-IVD-CASE ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S11


// READ IVD CASE CHILD
Function AIN49P9-READ-S12()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S12";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-IVD-CASE-CHILD";
  VDBCOMMON.USQLREC = "H2-IVD-CASE-CHILD";
  try
    open AIN49P9-READ-S12_RSI01
      with #sql{
        select NCP_UPI, CASE_SUFX
        from TWNIVD_CASE_CHILD T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE CHD_UPI = :CHD-UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into NCP-UPI, CASE-SUFX
      for H2-IVD-CASE-CHILD ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S12


// READ FAM ALTERNATE
Function AIN49P9-READ-S13()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S13";
  VDBCONTROL.UPROC-OPT = "SETUPD";
  VDBCONTROL.UPROC-OBJ = "H2-FAM-ALT-PAYEE";
  VDBCOMMON.USQLREC = "H2-FAM-ALT-PAYEE";
  try
    get H2-FAM-ALT-PAYEE
      with #sql{
        select ICI, EFF_FR_DT, ALT_PYE_LST_NM, ALT_PYE_FRST_NM, ALT_PYE_MID_NM,
            ALT_PYE_MODFR, PHN_NMB, PHN_EXT, HOUSE_NMB, STR_NM, STR_DIR,
            STR_TYPE, APT_NMB, OTH_ADDR, CITY, ST_CD, ZIP_CD, EFF_TO_DT,
            PYEE_RSN_CD, SSN, ISS_NTCE_IND, DOB, ALT_PYE_TYP,
            EBT_AP_MAIL_IND, SEND_DEMO_NOW, WRK_PHN_NMB, WRK_PHN_EXT,
            MSG_PHN_NMB, MSG_PHN_EXT, CELL_PHN_NMB, CELL_PHN_EXT,
            FAX_NMB, FAX_EXT, EMAIL_ID
        from twnfam_alt_payee T1
        WHERE ICI = :ICI AND EFF_FR_DT <= :EFF-FR-DT AND
        EFF_TO_DT >= :EFF-FR-DT AND
        ALT_PYE_TYP = :ALT-PYE-TYP
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI, EFF-FR-DT, ALT-PYE-LST-NM, ALT-PYE-FRST-NM,
           ALT-PYE-MID-NM, ALT-PYE-MODFR, PHN-NMB, PHN-EXT, HOUSE-NMB,
           STR-NM, STR-DIR, STR-TYPE, APT-NMB, OTH-ADDR, CITY, ST-CD,
           ZIP-CD, EFF-TO-DT, PYEE-RSN-CD, SSN, ISS-NTCE-IND, DOB,
           ALT-PYE-TYP,
           EBT-AP-MAIL-IND, SEND-DEMO-NOW, WRK-PHN-NMB, WRK-PHN-EXT,
           MSG-PHN-NMB, MSG-PHN-EXT, CELL-PHN-NMB, CELL-PHN-EXT,
           FAX-NMB, FAX-EXT, EMAIL-ID ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S13


// READ TWNPERSON HISTORY
Function AIN49P9-READ-S15()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S15";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON-HSTRY";
  VDBCOMMON.USQLREC = "H2-PERSON-HSTRY";
  try
    get H2-PERSON-HSTRY singleRow
      with #sql{
        select UPI, PRD_BEG_DT,MRTL_STS_CD,US_CTZN_IND, US_CTZN_VRFN_IND,
            LST_GRADE_CMPL_CD, PRD_END_DT, US_CTZN_VRFD_BY, US_CTZN_VRFD_DT,
            OLD_FRST_NM, OLD_LST_NM, OLD_MID_NM, OLD_MODFR, OLD_SSN,
            LST_GR_VRFD_IND, LST_GRADE_CMPLT_DT, DRG_CNVCT_TANF_IND, 
            DRG_CNVCT_FS_IND, FELON_TANF_IND, FELON_FS_IND, PUB_EMP_CHD,
            PAST_HLTH_CVRG, CVRG_END_DT, CVRG_END_RSN, NCU_ENRL_DT,
            TAX_FILE_STS,INCARCERATED_IND,VETERANS_IND, DIAGNOSED_WTH
        from TWNPERSON_HSTRY T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI  = :UPI
        AND   PRD_BEG_DT <= :PRD-BEG-DT
        AND   PRD_END_DT >= :PRD-BEG-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI, PRD-BEG-DT, MRTL-STS-CD, US-CTZN-IND, US-CTZN-VRFN-IND,
           LST-GRADE-CMPL-CD, PRD-END-DT, US-CTZN-VRFD-BY, US-CTZN-VRFD-DT,
           OLD-FRST-NM, OLD-LST-NM, OLD-MID-NM, OLD-MODFR, OLD-SSN,
           LST-GR-VRFD-IND, LST-GRADE-CMPLT-DT, DRG-CNVCT-TANF-IND, DRG-CNVCT-FS-IND,
           FELON-TANF-IND, FELON-FS-IND, PUB-EMP-CHD, PAST-HLTH-CVRG, CVRG-END-DT,
           CVRG-END-RSN, NCU-ENRL-DT, TAX-FILE-STS,TAX-FILE-STS,INCARCERATED-IND,VETERANS-IND, DIAGNOSED-WTH ;
  end
  AIN49W5.WS-SQCOD = sysVar.sqlData.sqlcode;
end // end AIN49P9-READ-S15


// READ CASE MEMBER HISTORY
Function AIN49P9-READ-S16()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S16";
  VDBCONTROL.UPROC-OPT = "SETINQ";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  try
    open AIN49P9-READ-S16_RSI01
      with #sql{
        select MA_ELIG_CD,AFDC_ELIG_CD,PRD_BEG_DT,ICI, FS_ELIG_CD,
            SG_ELIG_CD, TC_ELIG_CD, TL_ELIG_CD, TN_ELIG_CD, TP_ELIG_CD
         --
         --****** ------- Changes due to ptr 3049 begin -------- **********/
         --
         -- ICI is added in the sql
         --
         --***** -------- Changes due to ptr 3049 end ----------**********/
         --
        from TWNCASE_MEMBER_HST T1
        WHERE UPI = :UPI
        AND ICI <> :ICI
        AND PRD_BEG_DT <= :PRD-BEG-DT
        AND PRD_END_DT >= :PRD-END-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }      
      into MA-ELIG-CD, AFDC-ELIG-CD,PRD-BEG-DT,ICI, FS-ELIG-CD,
           SG-ELIG-CD, TC-ELIG-CD, TL-ELIG-CD, TN-ELIG-CD, TP-ELIG-CD
      for H2-CASE-MEMBER-HST ;
  end
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN49A";
end // end AIN49P9-READ-S16


// READ ELIG VERSION
Function AIN49P9-READ-S17()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S17";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-ELIG-VERSION";
  VDBCOMMON.USQLREC = "H2-ELIG-VERSION";
  /*  */
  try
    get H2-ELIG-VERSION singleRow
      with #sql{
        select POSTD_DT,
          VER_NMB,
          CRY_FWD_PRC_IND
        from TWNELIG_VERSION T1
        WHERE ICI = :ICI
        AND  BNFT_YR = :BNFT-YR
        AND BNFT_MTH = :BNFT-MTH
        AND PRGM_CASE_TYPE = 'CW'
        AND VER_NMB = (SELECT MAX(VER_NMB) FROM TWNELIG_VERSION
         WHERE ICI = :ICI
         AND  BNFT_YR = :BNFT-YR
         AND BNFT_MTH = :BNFT-MTH
         AND PRGM_CASE_TYPE = 'CW')
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into POSTD-DT,
           VER-NMB,
           CRY-FWD-PRC-IND ;
  end
  /*  */
  VDBCOMMON.UAPPLNAM = "AIN49A";
  VDBCONTROL.UACCTYP = "R";
end // end AIN49P9-READ-S17


// READ CASELOAD DEBTLOAD
Function AIN49P9-READ-S20()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S20";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CASELD-DEBTLD";
  VDBCOMMON.USQLREC = "H2-CASELD-DEBTLD";
  /*  */
  try
    get H2-CASELD-DEBTLD
      with #sql{
        select CASLD_EFF_DT
        from TWNCASELD_DEBTLD T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE OFC_CD = :OFC-CD
              AND PRGM_OFC_TYPE = :PRGM-OFC-TYPE
              AND SPRVS_UNIT = :SPRVS-UNIT
              AND FUNC_AREA_CD = :FUNC-AREA-CD
              AND WRKR_TYPE  = :WRKR-TYPE
              AND PSN_NMB = :PSN-NMB
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into CASLD-EFF-DT ;
  end
  /*  */
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
  end
  /*  */
end // end AIN49P9-READ-S20


// READ FAM CASE HISTORY
Function AIN49P9-READ-S21()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S21";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-FAM-CASE";
  VDBCOMMON.USQLREC = "H2-FAM-CASE";
  try
    get H2-FAM-CASE singleRow
      with #sql{
        select ICI
        from TWNFAM_CASE T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE HOH_UPI = :HOH-UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI ;
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
  end
end // end AIN49P9-READ-S21


// READ OF FAM CLD CA / SUP UNT
Function AIN49P9-READ-S22()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S22";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-2-FAC-SPT";
  VDBCOMMON.USQLREC = "H2-2-FAC-SPT";
  try
    get H2-2-FAC-SPT
      with #sql{
        select T2.NOMADS_USRID
        from TWNFAM_CASELD_CASE T1,
             TWNSUP_UNT_POS_HST T2
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE T1.ICI           = :ICI AND
              T1.OFC_CD        = T2.OFC_CD AND
              T1.PRGM_OFC_TYPE = T2.PRGM_OFC_TYPE AND
              T1.SPRVS_UNIT    = T2.SPRVS_UNIT AND
              T1.PSN_NMB       = T2.PSN_NMB AND
         --**---------------PTR 4685 BEGIN -----------------*/
              T2.ASMNT_BEG_DT <= :ASMNT-BEG-DT AND
              T2.ASMNT_END_DT >= :ASMNT-END-DT
         -------------------PTR 4685 END --------------------*/
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into NOMADS-USRID ;
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
  end
  /*  */
end // end AIN49P9-READ-S22


// READ TWNPERSON
Function AIN49P9-READ-S23()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S23";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON";
  VDBCOMMON.USQLREC = "H2-PERSON";
  /*  */
  try
    get H2-PERSON singleRow
      with #sql{
        select ETHNC_CD, SEX_CD,DOB,
           MID_NM, FRST_NM,
          LST_NM,
           SSN,
          HM_PHN_NMB, SSN_VRFN_STS_CD, MEDIC_BLNG_SQ_NMB
        from TWNPERSON T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI = :UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ETHNC-CD, SEX-CD,DOB,
           MID-NM, FRST-NM,
           LST-NM,
           SSN,
           HM-PHN-NMB, SSN-VRFN-STS-CD,MEDIC-BLNG-SQ-NMB ;
  end
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWW = VDBCONTROL.UROWW + 1;
  end
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "AIN49A";
end // end AIN49P9-READ-S23


// READ FAM CASE HISTORY
Function AIN49P9-READ-S24()
  /*  */
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S24";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-FAM-CASE-HSTRY";
  VDBCOMMON.USQLREC = "H2-FAM-CASE-HSTRY";
  try
    get H2-FAM-CASE-HSTRY
      with #sql{
        select ICI, PRD_BEG_DT, CASE_STS, MTHLY_RPTR_IND,
          AUTO_POST_IND, RESET_VRFN_IND, PRD_END_DT,
          NMB_OF_DPNDS, HOH_UPI, APPL_UPI, PREV_HOH_UPI,
          HOH_UPI_CHNG_DT, AUTO_CLSRE_IND, VERF_DUE_DT,
          DCFS_OFC_CNTY_CD, SBSDZ_IND, HSG_TYP_CD,
          NMB_OF_PA_PRSNS, FS_SUFX, VRFN_EXTN_IND,
          HMLS_IND, SPLZD_CD, OLD_MTHLY_RPTR_IND,
          VERF_ELIG_FM_DT, VERF_ELIG_TO_DT,
          PRP_SGND_DT, NXT_PRP_RVW_DT, PRP_EXPRS_DT, TANF_ABSNTPRNT_CNT,
          TANF_APPL_REAP_CD, SPSL_MNT_RQRD_IND, TANF_INCM_TST_IND,
          CHAP_INCM_TST_IND, TF_RLTD_MEDICAID
        from TWNFAM_CASE_HSTRY T1
        WHERE
              ICI = :ICI
        AND   PRD_BEG_DT <= :PRD-BEG-DT
        AND   PRD_END_DT >= :PRD-BEG-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI, PRD-BEG-DT, CASE-STS, MTHLY-RPTR-IND,
           AUTO-POST-IND, RESET-VRFN-IND, PRD-END-DT,
           NMB-OF-DPNDS, HOH-UPI, APPL-UPI, PREV-HOH-UPI,
           HOH-UPI-CHNG-DT, AUTO-CLSRE-IND, VERF-DUE-DT,
           DCFS-OFC-CNTY-CD, SBSDZ-IND, HSG-TYP-CD,
           NMB-OF-PA-PRSNS, FS-SUFX, VRFN-EXTN-IND,
           HMLS-IND, SPLZD-CD, OLD-MTHLY-RPTR-IND,
           VERF-ELIG-FM-DT, VERF-ELIG-TO-DT,
           PRP-SGND-DT, NXT-PRP-RVW-DT, PRP-EXPRS-DT, TANF-ABSNTPRNT-CNT,
           TANF-APPL-REAP-CD, SPSL-MNT-RQRD-IND, TANF-INCM-TST-IND,
           CHAP-INCM-TST-IND, TF-RLTD-MEDICAID ;
  end
end // end AIN49P9-READ-S24


// READ CASELOAD CASE HISTORY
Function AIN49P9-READ-S25()

  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S25";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CASLD-CASE-HST";
  VDBCOMMON.USQLREC = "H2-CASLD-CASE-HST";
  /*  */
  try
    get H2-CASLD-CASE-HST
      with #sql{
        select ICI, OFC_CD, PRGM_OFC_TYPE, SPRVS_UNIT,
          PSN_NMB, FUNC_AREA_CD, WRKR_TYPE, CASLD_EFF_DT,
          PRD_BEG_DT, PRD_END_DT
        from TWNCASLD_CASE_HST T1
        WHERE
               ICI = :ICI
        AND    PRD_BEG_DT <= :PRD-BEG-DT
        AND    PRD_END_DT >= :PRD-BEG-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI, OFC-CD, PRGM-OFC-TYPE, SPRVS-UNIT,
           PSN-NMB, FUNC-AREA-CD, WRKR-TYPE, CASLD-EFF-DT,
           PRD-BEG-DT, PRD-END-DT ;
  end
end // end AIN49P9-READ-S25


// READ MEDIC CARD DTLS
Function AIN49P9-READ-S30()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S30";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-2-MCD-MRM";
  VDBCOMMON.USQLREC = "H2-2-MCD-MRM";
  try
    get H2-2-MCD-MRM singleRow
      with #sql{
        select COUNT(*)
        from TWNMEDIC_CARD_DTLS T1,
             TWNMED_CRD_MBR_PRT T2
        WHERE
              T2.UPI = :UPI AND
              T1.CARD_VALID_YR = :CARD-VALID-YR AND
              T1.CARD_VALID_MTH = :CARD-VALID-MTH AND
              T1.MED_CARD_SEQ_NMB = T2.MED_CARD_SEQ_NMB AND
              T1.PRGM_CASE_TYPE = 'CW'
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into WS-CNT ;
  end
end // end AIN49P9-READ-S30


// READ OFFICE
Function AIN49P9-READ-S31()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S31";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-OFFICE";
  VDBCOMMON.USQLREC = "H2-OFFICE";
  try
    get H2-OFFICE
      with #sql{
        select OFC_CD
        from TWNOFFICE T1
        WHERE
            OFC_CD = :OFC-CD
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into OFC-CD ;
  end
end // end AIN49P9-READ-S31


// Reads Case_Member_Hst
Function AIN49P9-READ-S32()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S32";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  try
    get H2-CASE-MEMBER-HST
      with #sql{
        select PRD_BEG_DT
        from TWNCASE_MEMBER_HST T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE ICI = :ICI
         --** INSERT ORDER BY CLAUSE HERE **
        ORDER BY PRD_BEG_DT ASC
      }
      into PRD-BEG-DT ;
  end
end // end AIN49P9-READ-S32


// READS TWNPERSON
Function AIN49P9-READ-S33()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S33";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-PERSON";
  VDBCOMMON.USQLREC = "H2-PERSON";
  try
    get H2-PERSON
      with #sql{
        select SSN,FRST_NM,LST_NM
        from TWNPERSON T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI = :UPI
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into SSN,FRST-NM,LST-NM ;
  end
end // end AIN49P9-READ-S33


// READS TWNFAM_CASE_HSTRY
Function AIN49P9-READ-S34()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S34";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-FAM-CASE-HSTRY";
  VDBCOMMON.USQLREC = "H2-FAM-CASE-HSTRY";
  try
    get H2-FAM-CASE-HSTRY
      with #sql{
        select DCFS_OFC_CNTY_CD
        from TWNFAM_CASE_HSTRY T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
             ICI  = :ICI AND
             PRD_BEG_DT <= :PRD-BEG-DT AND
             PRD_END_DT >= :PRD-BEG-DT
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into DCFS-OFC-CNTY-CD ;
  end
end // end AIN49P9-READ-S34


// READS TWNFAM_CASE_HSTRY
Function AIN49P9-READ-S35()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S35";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-MA-BILL-SQ-NMB";
  VDBCOMMON.USQLREC = "H2-MA-BILL-SQ-NMB";
  try
    get H2-MA-BILL-SQ-NMB singleRow ;
  end
end // end AIN49P9-READ-S35


Function AIN49P9-READ-S36()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S36";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-REUNIF-DATA";
  VDBCOMMON.USQLREC = "H2-REUNIF-DATA";
  try
    get H2-REUNIF-DATA singleRow
      with #sql{
        select UPI, ICI, PRD_BEG_DATE, PRD_END_DATE,
          REUNIF_START_DATE, REUNIF_STOP_DATE,
          REUNIF_IND
        from TWNREUNIF_DATA T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        where upi = :UPI
         and ici = :ICI
         and prd_beg_date <= :PRD-BEG-DATE
         and prd_end_date >= :PRD-END-DATE
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into UPI, ICI, PRD-BEG-DATE, PRD-END-DATE,
           REUNIF-START-DATE, REUNIF-STOP-DATE,
           REUNIF-IND ;
  end
end // end AIN49P9-READ-S36


Function AIN49P9-READ-S37()
  VDBCONTROL.UPROC-NM = "AIN49P9-READ-S37";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-OBJ = "H2-CASE-MEMBER-HST";
  VDBCOMMON.USQLREC = "H2-CASE-MEMBER-HST";
  try
    get H2-CASE-MEMBER-HST singleRow
      with #sql{
        select ICI
        from TWNCASE_MEMBER_HST T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI = :UPI
         AND PRD_BEG_DT <= :PRD-BEG-DT
         AND PRD_END_DT >= :PRD-END-DT
         AND (AFDC_ELIG_CD  NOT IN ('9','3',' ')
             OR TC_ELIG_CD  NOT IN ('9','3',' ')
             OR TL_ELIG_CD  NOT IN ('9','3',' ')
             OR TN_ELIG_CD  NOT IN ('9','3',' ')
             OR TP_ELIG_CD  NOT IN ('9','3',' '))
        FETCH FIRST 1 ROW ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into ICI ;
  end
end // end AIN49P9-READ-S37