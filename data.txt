package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN55A ****
// COMPONENT NAME: AIN55A - Control Report
// ===============
// 
// DESCRIPTION:
// ============
// The control report is printed at the end of every
// report.The
// report description of the corresponding report is printed.
// CONTROL:
// This application is invoked as follows:
// CALL AIN55A SR-AININT-CTRL-FIL(NOMAPS;
// 
// 
// ***********************
Program AIN55A type basicProgram //VAGen Info - called batch program
  (
   VDBCONTROL VDBCONTROL, // record
   VMESSAGE VMESSAGE, // record
   AIN55W AIN55W // record
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIN55W-DET AIN55W-DET; // record
  AIN55W-HEAD AIN55W-HEAD; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-80REP-RECCALL SR-80REP-RECCALL; // record
  SR-AININT-CTRL-FIL SR-AININT-CTRL-FIL; // record
  VDBCOMMON VDBCOMMON; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN55P9-MAIN: AIN55P9-MAIN();
  end // end main
end // end AIN55A


// INTIALISE ALL VARIABLES
Function AIN55P9-INIT-PARA()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process initialises all tha report records and varaiables*/
  /* empties all the records*/
  /* ************************************************************************/
  /* SET ALL REPORT VARIABLES TO INITIAL VALUES*/
  set SR-80REP-RECCALL empty;
  set REP-COMMON empty;
  set AIN55W-DET empty;
  set AIN55W-HEAD empty;
  set CEP01W empty;
  set FORMATW empty;
  set REP-EOFNOF empty;
  set VDBCOMMON empty;

  /* set all serial records empty*/
  /* note - use sr-132rep-recout or sr-80rep-recout if your*/
  /* serial file format is 132 or 80 respectively*/

  /* SET SR-80AIN55-RECOUT EMPTY;*/
  /* for this called program instead of sr-80rep-recout*/
  /* we will use sr-80ain55-recout to associate a  different*/
  /* logical filename with respect to the main application*/


  /* cbsi end*/
  REP-COMMON.WS-PAGE-NO = 1;
  REP-COMMON.WS-LINE-NO = 1;
  REP-COMMON.WS-NEW-PAGE = "Y";
  /* PERFORM PROCESS TO INITIALISE CONSTANTS*/
  AIN55P9-INITCON();

  REP-COMMON.WS-MAX-NO-LINES = 56;

  /* PERFORM PROCESS TO READ INPUT PARAMETER FILE*/

  AIN55P9-SCAN();

  /* ERROR PROCESSING FOR SERIAL RECORD*/

  if ((SR-AININT-CTRL-FIL is endOfFile))
    AIN55P9-PRN-HEAD();
      /* print end of report condition*/
    SR-80REP-RECCALL.PRNT-CC = "-";
   /* return error code to indicate abnormal ending*/
    sysVar.returnCode = 8;
      /* print no data condition*/
    REP-EOFNOF.WS-80-FILLER1 = "******************************";
    REP-EOFNOF.WS-80-FILLER2 = "******************************";
    REP-EOFNOF.WS-80-VAR = " NO DATA TO REPORT *";
    SR-80REP-RECCALL.UFIELD = REP-EOFNOF.WS-80-END;

  /* perform write sequential record*/
    WR-80REP-OUT-CALL();
    return;
  end
  /* cbsi end*/
end // end AIN55P9-INIT-PARA


// INITIALISE CONSTANTS
Function AIN55P9-INITCON()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process is to initialise all the report constants*/
  /* ************************************************************************/
  /* this process intialises all the reports constants*/
  AIN55W-HEAD.CONSTANT1 = "PAGE-NBR";
  AIN55W-HEAD.FILLER1 = " ";
  AIN55W-HEAD.FILLER2 = " ";
  AIN55W-HEAD.CONSTANT2 = "STATE";
  AIN55W-HEAD.FILLER3 = " ";
  AIN55W-HEAD.CONSTANT3 = "OF";
  AIN55W-HEAD.FILLER4 = " ";
  AIN55W-HEAD.CONSTANT4 = "NEVADA";
  AIN55W-HEAD.FILLER5 = " ";
  AIN55W-HEAD.CONSTANT5 = "DATE";
  AIN55W-HEAD.FILLER6 = " ";
  AIN55W-HEAD.FILLER7 = " ";
  AIN55W-HEAD.FILLER8 = " ";
  AIN55W-HEAD.CONSTANT6 = "TIME";
  AIN55W-HEAD.FILLER9 = " ";
  AIN55W-DET.FILLER1 = " ";
  AIN55W-DET.FILLER2 = " ";
  AIN55W-DET.FILLER3 = " ";
  AIN55W-DET.FILLER4 = " ";
  AIN55W-DET.FILLER5 = " ";
  AIN55W-DET.FILLER6 = " ";
  AIN55W-DET.FILLER7 = " ";
  AIN55W-DET.FILLER8 = " ";
  AIN55W-DET.FILLER9 = " ";
  AIN55W-DET.FILLER10 = " ";
  AIN55W-DET.FILLER11 = " ";
  AIN55W-DET.FILLER12 = " ";
  AIN55W-DET.CONSTANT1 = "NO OF RECORDS           :";
  AIN55W-DET.CONSTANT2 = "NO OF RECORDS PROCESSED :";
  AIN55W-DET.CONSTANT3 = "NO OF RECORDS SKIPPED   : ";
  AIN55W-HEAD.S-APPL-ID = "AIN55A";
  /* cbsi end*/
end // end AIN55P9-INITCON


// REPORTS MAIN PARA
Function AIN55P9-MAIN()
  /* cbsi start*/
  /* ************************************************************************/
  /* This program has main control over this application*/
  /* initailises all the report variables*/
  /* prints ths report*/
  /* closes the application*/
  /* ************************************************************************/
  /* PERFORM PROCESS TO INITIALISE VARIABLES*/

  AIN55P9-INIT-PARA();

  /* PERFORM PROCESS TO PRINT REPORT*/

  AIN55P9-PRINT-PARA();

  /* closes the application*/
  exit program;
  /* cbsi end*/
end // end AIN55P9-MAIN


// POPULATING REPORTS DETAILS
Function AIN55P9-POP-DET()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This process is to format and move the retrieved values to the report*/
  /* variables*/
  /* concatinates some variables using wst50a*/
  /* uses a common reports process format-proc*/
  /* sets all the flags to format the report variable*/
  /* ***********************************************************************/
  /* **/
  if (SR-AININT-CTRL-FIL.AININT-CNT-NO-RECS != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = SR-AININT-CTRL-FIL.AININT-CNT-NO-RECS;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN55W-DET.S-NO-OF-RECORDS = FORMATW.OUTPUT-CHAR;
  else
    AIN55W-DET.S-NO-OF-RECORDS = "      0";
  end

  if (SR-AININT-CTRL-FIL.AININT-CNT-REC-PRO != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = SR-AININT-CTRL-FIL.AININT-CNT-REC-PRO;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN55W-DET.S-NO-OF-REC-PROCESSED = FORMATW.OUTPUT-CHAR;
  else
    AIN55W-DET.S-NO-OF-REC-PROCESSED = "      0";
  end
  if (SR-AININT-CTRL-FIL.AININT-CNT-REC-SKIP != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = SR-AININT-CTRL-FIL.AININT-CNT-REC-SKIP;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN55W-DET.S-NO-OF-REC-SKIPPED = FORMATW.OUTPUT-CHAR;
  else
    AIN55W-DET.S-NO-OF-REC-SKIPPED = "      0";
  end
  /* CBSI END*/
end // end AIN55P9-POP-DET


// PROCESS TO PRINT THE REPORT
Function AIN55P9-PRINT-PARA()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the report*/
  /* 1.prints the no data to report if there is no data*/
  /* 2.performs the additional processing process*/
  /* ***********************************************************************/
  /*  */
  /* WI 15471     11/20/98        D.KOON    BEGIN*/
  /* Change the IF to WHILE so that all control records are read and*/
  /* written to a report and add a read for the next record.*/
  /*  */
  while (SR-AININT-CTRL-FIL not endOfFile)
  /* IF SR-AININT-CTRL-FIL NOT EOF;*/
   /* PRINT HEADER  AT THE START OF A NEW PAGE*/

      /* PRINT THE HEADER DETAILS*/

    AIN55P9-PRN-HEAD();

       /* RESET NEW PAGE INDICATOR*/

    /* PERFORM PROCESS TO POPULATE THE DETAILS*/

    AIN55P9-POP-DET();
    /* PERFORM PROCESS TO PRINT THE DETAILS*/

    AIN55P9-PRN-DETAIL();
      /* print end of report condition*/
    SR-80REP-RECCALL.PRNT-CC = "0";
    REP-EOFNOF.WS-80-FILLER1 = "******************************";
    REP-EOFNOF.WS-80-FILLER2 = "******************************";
    REP-EOFNOF.WS-80-VAR = "  END OF REPORT    *";
    SR-80REP-RECCALL.UFIELD = REP-EOFNOF.WS-80-END;

  /* perform write sequential record*/
    WR-80REP-OUT-CALL();

  /* perform read the next control record*/
    AIN55P9-SCAN();
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
  /*  */
  /* WI 15471        END*/
  end
  /* cbsi end*/
end // end AIN55P9-PRINT-PARA


// to print the detail line
Function AIN55P9-PRN-DETAIL()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the detail record*/
  /* uses the common process to print the record*/
  /* ***********************************************************************/
  SR-80REP-RECCALL.PRNT-CC = "-";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE1;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE2;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE3;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE4;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE5;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-DET.LINE6;
  WR-80REP-OUT-CALL();
  /* CBSI END*/
end // end AIN55P9-PRN-DETAIL


// process is to print the header
Function AIN55P9-PRN-HEAD()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the header record*/
  /* sets the page number*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  /* SET DATE AND TIME STANDARD HEADER FIELDS*/
  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL;
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AIN55W-HEAD.U-DATE = REP-COMMON.WS-DATE;
  AIN55W-HEAD.U-TIME = VGVar.currentFormattedTime;
  AIN55W-HEAD.U-PAGE-NBR = REP-COMMON.WS-PAGE-NO;
  AIN55W-HEAD.S-APPL-ID = "AIN55A";
  /* MOVE EACH LINE OF HEADER TO MAP AND PRINT IT*/
  SR-80REP-RECCALL.PRNT-CC = " ";
  SR-80REP-RECCALL.UFIELD = AIN55W-HEAD.LINE1;
  WR-80REP-OUT-CALL();
  SR-80REP-RECCALL.PRNT-CC = " ";
  AIN55P9-TITLE-PARA();
  SR-80REP-RECCALL.UFIELD = AIN55W-HEAD.LINE2;
  WR-80REP-OUT-CALL();
  /* cbsi end*/
end // end AIN55P9-PRN-HEAD


// PROCESS TO READ INPUT FILE
Function AIN55P9-SCAN()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This porcess is to read the input file*/
  /* ***********************************************************************/
  /* **/
  VGVar.handleHardIOErrors = 1;
  VDBCONTROL.UPROC-NM = "AIN55P9-READIP";
  VDBCONTROL.UPROC-OBJ = "SR-AININT-CTRL-FIL";
  VDBCONTROL.UPROC-OPT = "SCAN";
  try
    get next SR-AININT-CTRL-FIL ;
  end
  /* cbsi start*/
  if (((SR-AININT-CTRL-FIL is ioError) && 
  (SR-AININT-CTRL-FIL not endOfFile)))
    /* ** Changes due to PTR # 11840 - start ****/
    VMESSAGE.UMSGINS[2] = "AIN55A";
    AIN55W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN55W.WS-ERR-LAST-FOUR;
    VDBCONTROL.UEZESQRRM = "INPUT PARAMETER FILE - I/O ERROR";
    /* PERFORM WCM00P2-TO-CEP01A;*/
    /* ** Changes due to PTR # 11840 - end   ****/
    WEZERT8-TO-URC();
    /* MOVE VDBCONTROL.URC TO VMESSAGE.UMSGCODE;*/
    exit program;
  end
  /* cbsi end*/
end // end AIN55P9-SCAN


// MV REP  TITLE OF CALLING APPL
Function AIN55P9-TITLE-PARA()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This process is to move the appropriate headings to the report*/
  /* It depends on the application which is calling this appl*/
  /* Because it is a control report*/
  /* ***********************************************************************/
  /* **/

  /*  */
  /* WI 15471    11/20/98   D.KOON   BEGIN COMMENT*/
  /* Change ESD title to show which type of control record is being*/
  /* written to the report.*/
  /* WI 15471      END COMMENT*/
  /*  */
  /* control file processing*/
  if (AIN55W.WS-PRG-NAME == "AIN23A")
  /* report title for ain23a*/
    AIN55W-HEAD.S-REPORT-TITLE = " SSI(SDX) BENEFITS LISTING ";
  else
    if (AIN55W.WS-PRG-NAME == "AIN25A")
  /* report title for ain25a*/
      AIN55W-HEAD.S-REPORT-TITLE = "  BENDEX BENEFIT LISTING  ";
    else
      if (AIN55W.WS-PRG-NAME == "AIN28A")
  /* report title for ain28a*/
        AIN55W-HEAD.S-REPORT-TITLE = " SSA WAGE EARNINGS LISTING  ";
      else
        if (AIN55W.WS-PRG-NAME == "AIN32A")
  /* report title for ain32a*/
          AIN55W-HEAD.S-REPORT-TITLE = "NUMIDENT DISCREPENCY REPORT ";
        else
          if (AIN55W.WS-PRG-NAME == "AIN35A")
  /* report title for ain35a*/
            AIN55W-HEAD.S-REPORT-TITLE = "     IRS 1099 EXCHANGE     ";
          else
            if (AIN55W.WS-PRG-NAME == "AIN39A")
  /* report title for ain39a*/
  /* MOVE '       ESD INTERFACE       ' TO*/
  /* AIN55W-HEAD.S-REPORT-TITLE;*/
              AIN55W-HEAD.S-RPT-FIRST = "  ESD INTERFACE";
              if (AIN55W-HEAD.U-PAGE-NBR == "0001")
                AIN55W-HEAD.S-RPT-SECOND = " - RESPONSE ";
              else
                AIN55W-HEAD.S-RPT-SECOND = " - CHANGE   ";
              end
            else
              if (AIN55W.WS-PRG-NAME == "AIN50A")
   /* report title for ain50a*/
                AIN55W-HEAD.S-REPORT-TITLE = "    CHILD WELFARE REPORT   ";
              else
                if (AIN55W.WS-PRG-NAME == "AIN53A")
    /* report title for ain39a*/
                  AIN55W-HEAD.S-REPORT-TITLE = "  VITAL STATISTICS REPORT  ";
                else
                  if (AIN55W.WS-PRG-NAME == "AIN54A")
   /* report title for ain39a*/
                    AIN55W-HEAD.S-REPORT-TITLE = "      SIIS INTERFACE       ";
                  end /* ain54a*/
                end /* ain53a*/
              end /* ain50a*/
            end /* ain39a*/
          end /* ain35a*/
        end /* ain32a*/
      end /* ain28a*/
    end /* ain25a*/
  end /* ain23a*/
  /* cbsi end*/
end // end AIN55P9-TITLE-PARA


Record AIN55W-DET type basicRecord
  10 LINE1 char(80) ; 
    15 FILLER1 char(24) ; 
    15 CONSTANT1 char(25) ; 
    15 FILLER2 char(1) ; 
    15 S-NO-OF-RECORDS char(7) ; 
    15 FILLER3 char(23) ; 
  10 LINE2 char(80) ; 
  10 FILLER4 char(80) ; 
  10 LINE3 char(80) ; 
    15 FILLER5 char(24) ; 
    15 CONSTANT2 char(25) ; 
    15 FILLER6 char(1) ; 
    15 S-NO-OF-REC-PROCESSED char(7) ; 
    15 FILLER7 char(23) ; 
  10 LINE4 char(80) ; 
  10 FILLER8 char(80) ; 
  10 LINE5 char(80) ; 
    15 FILLER9 char(24) ; 
    15 CONSTANT3 char(25) ; 
    15 FILLER10 char(1) ; 
    15 S-NO-OF-REC-SKIPPED char(7) ; 
    15 FILLER11 char(23) ; 
  10 LINE6 char(80) ; 
  10 FILLER12 char(80) ; 
  10 LINE7 char(80) ; 
  10 CONSTANT4 char(18) ; 
  10 FILLER13 char(62) ; 
end // end AIN55W-DET


Record AIN55W-HEAD type basicRecord
  10 LINE1 char(80) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(5) ; 
    15 U-PAGE-NBR char(4) ; 
    15 FILLER2 char(16) ; 
    15 CONSTANT2 char(5) ; 
    15 FILLER3 char(1) ; 
    15 CONSTANT3 char(2) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT4 char(6) ; 
    15 FILLER5 char(15) ; 
    15 CONSTANT5 char(4) ; 
    15 FILLER6 char(5) ; 
    15 U-DATE char(8) ; 
  10 LINE2 char(80) ; 
    15 S-APPL-ID char(8) ; 
    15 FILLER7 char(19) ; 
    15 S-REPORT-TITLE char(27) ; 
      20 S-RPT-FIRST char(15) ; 
      20 S-RPT-SECOND char(12) ; 
    15 FILLER8 char(9) ; 
    15 CONSTANT6 char(4) ; 
    15 FILLER9 char(5) ; 
    15 U-TIME char(8) ; 
end // end AIN55W-HEAD


