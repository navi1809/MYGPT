package gov.nv.dwss.infc.partitioner;

import gov.nv.dwss.infc.model.DeathRegistryBatchParam;
import gov.nv.dwss.infc.util.DeathRegistryUtil;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.batch.core.partition.support.Partitioner;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class DeathRegistryPartitioner implements Partitioner{

    private final static Logger LOG = LogManager.getLogger(DeathRegistryPartitioner.class);
    Map<String,Object> parameters;
    @Autowired
    Environment environment;

    public DeathRegistryPartitioner(Map<String,Object> jobParams){
        super();
        this.parameters=jobParams;
    }

    @Override
    public Map<String, ExecutionContext> partition(int gridSize) {
        // TODO Auto-generated method stub
        LOG.info("+++++ In Partitioner Class");
        Map<String,ExecutionContext> result=new HashMap<>();
        String jobCode = DeathRegistryBatchParam.getJob().getJobCode();
        String inputDateString = parameters.get("if.VTLS.date").toString();
        String arr[]=inputDateString.split("-");
        int sampleMonth = Integer.parseInt(arr[1]);
        int sampleYear = Integer.parseInt(arr[0]);
        int sampleDate = Integer.parseInt(arr[2]);
        Date periodBeginDate = DeathRegistryUtil.getPeriodBeginDate(sampleMonth,sampleYear);
        Date periodEndDate = DeathRegistryUtil.getPeriodEndDate(sampleMonth,sampleYear);
        Date inputDate = DeathRegistryUtil.getInputDate(sampleDate,sampleMonth,sampleYear);

        DeathRegistryBatchParam.setPeriodBeginDate(periodBeginDate);
        DeathRegistryBatchParam.setPeriodEndDate(periodEndDate);
        DeathRegistryBatchParam.setInputDate(inputDate);

        ExecutionContext value = new ExecutionContext();
        result.put("partition" + 0, value);

        value.putLong("partition", 0);
        value.putLong("minValue", 0);
        value.putLong("maxValue", 0);

        return result;

    }
}