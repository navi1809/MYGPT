[
    {
        "question": "What will be the result of the following query?\n\nSELECT COUNT(*) FROM employees WHERE salary > 50000;",
        "answer": `
            This query counts the number of rows in the 'employees' table where the 'salary' column has a value greater than 50,000.
            <pre><code>
            Example:
            employees table:
            +----+--------+--------+
            | id | name   | salary |
            +----+--------+--------+
            | 1  | Alice  | 60000  |
            | 2  | Bob    | 40000  |
            | 3  | Charlie| 70000  |
            +----+--------+--------+

            Query result: 2 (Alice and Charlie have salaries greater than 50,000).
            </code></pre>
        `
    },
    {
        "question": "What does the following SQL query do?\n\nSELECT department_id, AVG(salary) AS avg_salary FROM employees GROUP BY department_id;",
        "answer": `
            This query calculates the average salary for each department by grouping the rows in the 'employees' table by 'department_id'.
            <pre><code>
            Example:
            employees table:
            +----+--------+--------+--------------+
            | id | name   | salary | department_id|
            +----+--------+--------+--------------+
            | 1  | Alice  | 60000  | 1            |
            | 2  | Bob    | 40000  | 1            |
            | 3  | Charlie| 70000  | 2            |
            +----+--------+--------+--------------+

            Query result:
            +--------------+------------+
            | department_id| avg_salary |
            +--------------+------------+
            | 1            | 50000      |
            | 2            | 70000      |
            +--------------+------------+
            </code></pre>
        `
    },
    {
        "question": "What will this query return?\n\nSELECT * FROM orders WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31';",
        "answer": `
            This query retrieves all rows from the 'orders' table where the 'order_date' column falls within the year 2024.
            <pre><code>
            Example:
            orders table:
            +----+-----------+------------+
            | id | customer  | order_date|
            +----+-----------+------------+
            | 1  | John      | 2024-03-15|
            | 2  | Alice     | 2023-11-20|
            | 3  | Bob       | 2024-07-10|
            +----+-----------+------------+

            Query result:
            +----+-----------+------------+
            | id | customer  | order_date|
            +----+-----------+------------+
            | 1  | John      | 2024-03-15|
            | 3  | Bob       | 2024-07-10|
            +----+-----------+------------+
            </code></pre>
        `
    },
    {
        "question": "What does this query do?\n\nUPDATE employees SET salary = salary * 1.10 WHERE department_id = 3;",
        "answer": `
            This query increases the salary of all employees in department 3 by 10%.
            <pre><code>
            Example:
            Before update:
            +----+--------+--------+--------------+
            | id | name   | salary | department_id|
            +----+--------+--------+--------------+
            | 1  | Alice  | 60000  | 3            |
            | 2  | Bob    | 40000  | 2            |
            +----+--------+--------+--------------+

            After update:
            +----+--------+--------+--------------+
            | id | name   | salary | department_id|
            +----+--------+--------+--------------+
            | 1  | Alice  | 66000  | 3            |
            | 2  | Bob    | 40000  | 2            |
            +----+--------+--------+--------------+
            </code></pre>
        `
    },
    {
        "question": "What is the output of this query?\n\nSELECT name FROM students WHERE name LIKE 'A%';",
        "answer": `
            This query retrieves all rows from the 'students' table where the 'name' column starts with the letter 'A'.
            <pre><code>
            Example:
            students table:
            +----+--------+
            | id | name   |
            +----+--------+
            | 1  | Alice  |
            | 2  | Bob    |
            | 3  | Anna   |
            +----+--------+

            Query result:
            +--------+
            | name   |
            +--------+
            | Alice  |
            | Anna   |
            +--------+
            </code></pre>
        `
    }
]
