// Sort to match AMA46A merge order: OFC_CD, CASLD, AID
famCaseStatsOfcRecord.sort(
        Comparator.comparing(FamCaseStatsOfficeRecord::getOfcCd)
                  .thenComparing(FamCaseStatsOfficeRecord::getCasldId)
                  .thenComparing(FamCaseStatsOfficeRecord::getAidCd)
);


scanned = scanNextFamCase(++i, famCaseStatsOfcRecord, workingStorage, true);
scanned = scanNextFamCase(++i, famCaseStatsOfcRecord, workingStorage, true);
scanned = scanNextFamCase(++i, famCaseStatsOfcRecord, workingStorage, true);


if (famCaseRec.getOfcCd() != null && !famCaseRec.getOfcCd().trim().isEmpty()
        && famCaseRec.getCasldId() != null && !famCaseRec.getCasldId().trim().isEmpty()) {


if (famCaseRec.getOfcCd() != null && !famCaseRec.getOfcCd().trim().isEmpty()
        && famCaseRec.getCasldId() != null && !famCaseRec.getCasldId().trim().isEmpty()) {


if (famCaseRec.getOfcCd() != null && !famCaseRec.getOfcCd().trim().isEmpty()
        && famCaseRec.getCasldId() != null && !famCaseRec.getCasldId().trim().isEmpty()) {




private static String paddedKey(String ofc, String casld, String aid) {
    String a = (ofc == null ? "" : ofc).toUpperCase();
    String b = (casld == null ? "" : casld).toUpperCase();
    String c = (aid == null ? "" : aid).toUpperCase();
    return String.format("%-2s%-5s%-3s", a, b, c);
}


famCaseStatsOfcRecord.sort(Comparator.comparing(
        r -> paddedKey(r.getOfcCd(), r.getCasldId(), r.getAidCd())
));
pceRecords.sort(Comparator.comparing(
        r -> paddedKey(r.getOfficeCode(), r.getCaseLoadId(), r.getAidCode())
));
