package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN25A ****
// COMPONENT NAME: AIN25A BENDEX Benefits Listing
// ===============
// 
// DESCRIPTION:
// ============
// 
// Reports shows the RSDI amount  in NOMADS and
// RSDI amount in SSA for a case
// 
// 
// ***********************
Program AIN25A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIN25W AIN25W; // record
  AIN25W-DET AIN25W-DET; // record
  AIN25W-FOOTER AIN25W-FOOTER; // record
  AIN25W-HEAD AIN25W-HEAD; // record
  AIN25W-SUBFOT AIN25W-SUBFOT; // record
  AIN25W-SUBH AIN25W-SUBH; // record
  AIN55W AIN55W; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AIN25-RECIN SR-AIN25-RECIN; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC4 VSTRREC4; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN25P9-MAIN: AIN25P9-MAIN();
  end // end main
end // end AIN25A


// INTIALISE ALL VARIABLES
Function AIN25P9-INIT-PARA()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process initialises all tha report records and varaiables*/
  /* empties all the records*/
  /* ************************************************************************/
  /* SET ALL REPORT VARIABLES TO INITIAL VALUES*/
  set AIN25W empty;
  set SR-AIN25-RECIN empty;
  set AIN25W-DET empty;
  set AIN25W-HEAD empty;
  set AIN25W-FOOTER empty;
  set AIN25W-SUBH empty;
  set AIN25W-SUBFOT empty;
  set SR-132REP-RECOUT empty;
  set VSTRREC4 empty;
  set AIN25W empty;
  set AIN55W empty;
  set REP-COMMON empty;
  set CEP01W empty;
  set FORMATW empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;
  set VMESSAGE empty;
  set REP-EOFNOF empty;

  REP-COMMON.WS-PAGE-NO = 1;
  REP-COMMON.WS-LINE-NO = 1;
  REP-COMMON.WS-NEW-PAGE = "Y";

  /* PERFORM PROCESS TO INITIALISE CONSTANTS*/
  AIN25P9-INITCON();

  REP-COMMON.WS-MAX-NO-LINES = 56;


  /* PERFORM PROCESS TO READ INPUT PARAMETER FILE*/
  VGVar.handleHardIOErrors = 1;
  AIN25P9-SCAN();

  /* SET STANDARD HEADER FIELDS*/

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL;
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AIN25W-HEAD.S-DATE = REP-COMMON.WS-DATE;
  AIN25W-HEAD.S-TIME = VGVar.currentFormattedTime;

  AIN25W.WS-DATE = SR-AIN25-RECIN.AIN24A-01-PROCESS-DATE;
  /* PTR 5508 REFORMAT HEADER (NEXT LINE ONLY) --- 11/08/96 ----*/
  /* PTR 8875 set date to default if no report records - 12/12/96 - beg*/
  if (sysVar.errorCode == "00000000")
    AIN25W-HEAD.S-PRCS-DATE = SR-AIN25-RECIN.AIN24A-01-PROCESS-DATE;
  else
    AIN25W.WS-DATE = GDW.DTCD;
    AIN25W-HEAD.S-PRCS-DATE = REP-COMMON.WS-DATE;
  end
  /* PTR 8875 set date to default if no report records - 12/12/96 - END*/
  if (AIN25W.WS-MONTH == 1)
    AIN25W-HEAD.S-RPT-MNTH = "JAN,";
  end
  if (AIN25W.WS-MONTH == 2)
    AIN25W-HEAD.S-RPT-MNTH = "FEB,";
  end
  if (AIN25W.WS-MONTH == 3)
    AIN25W-HEAD.S-RPT-MNTH = "MAR,";
  end
  if (AIN25W.WS-MONTH == 4)
    AIN25W-HEAD.S-RPT-MNTH = "APR,";
  end
  if (AIN25W.WS-MONTH == 5)
    AIN25W-HEAD.S-RPT-MNTH = "MAY,";
  end
  if (AIN25W.WS-MONTH == 6)
    AIN25W-HEAD.S-RPT-MNTH = "JUN,";
  end
  if (AIN25W.WS-MONTH == 7)
    AIN25W-HEAD.S-RPT-MNTH = "JUL,";
  end
  if (AIN25W.WS-MONTH == 8)
    AIN25W-HEAD.S-RPT-MNTH = "AUG,";
  end
  if (AIN25W.WS-MONTH == 9)
    AIN25W-HEAD.S-RPT-MNTH = "SEP,";
  end
  if (AIN25W.WS-MONTH == 10)
    AIN25W-HEAD.S-RPT-MNTH = "OCT,";
  end
  if (AIN25W.WS-MONTH == 11)
    AIN25W-HEAD.S-RPT-MNTH = "NOV,";
  end
  if (AIN25W.WS-MONTH == 12)
    AIN25W-HEAD.S-RPT-MNTH = "DEC,";
  end

  AIN25W-HEAD.S-RPT-YEAR = AIN25W.WS-YEAR1;
  /* cbsi end*/
end // end AIN25P9-INIT-PARA


// INITIALISE CONSTANTS
Function AIN25P9-INITCON()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process is to initialise all the report constants*/
  /* ************************************************************************/
  /* this process intialises all the reports constants*/
  AIN25W-HEAD.CONSTANT1 = "PAGE-NBR";
  AIN25W-HEAD.FILLER1 = " ";
  AIN25W-HEAD.FILLER2 = " ";
  AIN25W-HEAD.CONSTANT2 = "STATE";
  AIN25W-HEAD.FILLER3 = " ";
  AIN25W-HEAD.CONSTANT3 = "OF";
  AIN25W-HEAD.FILLER4 = " ";
  AIN25W-HEAD.CONSTANT4 = "NEVADA";
  AIN25W-HEAD.FILLER5 = " ";
  AIN25W-HEAD.CONSTANT5 = "DATE";
  AIN25W-HEAD.FILLER6 = " ";
  AIN25W-HEAD.FILLER7 = " ";
  AIN25W-HEAD.FILLER8 = " ";
  AIN25W-HEAD.CONSTANT6 = "BENDEX";
  AIN25W-HEAD.FILLER9 = " ";
  AIN25W-HEAD.CONSTANT7 = "BENEFIT";
  AIN25W-HEAD.FILLER10 = " ";
  AIN25W-HEAD.CONSTANT8 = "LISTING";
  AIN25W-HEAD.FILLER11 = " ";
  AIN25W-HEAD.CONSTANT9 = "TIME";
  AIN25W-HEAD.FILLER12 = " ";
  AIN25W-HEAD.FILLER13 = " ";
  AIN25W-HEAD.FILLER14 = " ";
  AIN25W-HEAD.CONSTANT10 = "REPORT";
  AIN25W-HEAD.FILLER15 = " ";
  AIN25W-HEAD.CONSTANT11 = "MONTH";
  AIN25W-HEAD.FILLER16 = " ";
  AIN25W-HEAD.FILLER17 = " ";
  AIN25W-HEAD.FILLER18 = " ";
  AIN25W-HEAD.FILLER19 = " ";
  AIN25W-HEAD.CONSTANT12 = "PROCESS";
  AIN25W-HEAD.CONSTANT13 = "DATE:";
  AIN25W-SUBH.FILLER6 = " ";
  AIN25W-SUBH.CONSTANT1 = "DISTRICT";
  AIN25W-SUBH.FILLER1 = " ";
  AIN25W-SUBH.CONSTANT2 = "CASE";
  AIN25W-SUBH.FILLER2 = " ";
  AIN25W-SUBH.CONSTANT3 = "WORKER";
  AIN25W-SUBH.FILLER3 = " ";
  AIN25W-SUBH.CONSTANT4 = "NAME";
  AIN25W-SUBH.FILLER4P = " ";
  AIN25W-SUBH.CONSTANT5P = "PERSON";
  AIN25W-SUBH.FILLER4 = " ";
  AIN25W-SUBH.CONSTANT5 = "CASE";
  AIN25W-SUBH.FILLER5 = " ";
  AIN25W-SUBH.CONSTANT6 = "NEW";
  AIN25W-SUBH.CONSTANTN = "SSN";
  AIN25W-SUBH.FILLER6 = " ";
  AIN25W-SUBH.FILLERN = " ";
  AIN25W-SUBH.CONSTANT7 = "RSDI";
  AIN25W-SUBH.FILLER7 = " ";
  AIN25W-SUBH.CONSTANT8 = "IN";
  AIN25W-SUBH.FILLER8 = " ";
  AIN25W-SUBH.CONSTANT9 = "RSDI";
  AIN25W-SUBH.FILLER9 = " ";
  AIN25W-SUBH.CONSTANT10 = "DIFFERENCE";
  AIN25W-SUBH.FILLER10 = " ";
  AIN25W-SUBH.CONSTANT11 = "ACTION";
  AIN25W-SUBH.FILLER11 = " ";
  AIN25W-SUBH.FILLER12 = " ";
  AIN25W-SUBH.CONSTANT12 = "LOAD";
  AIN25W-SUBH.FILLER13P = " ";
  AIN25W-SUBH.CONSTANT13P = "NUMBER";
  AIN25W-SUBH.FILLER13 = " ";
  AIN25W-SUBH.CONSTANT13 = "NUMBER";
  AIN25W-SUBH.FILLER14 = " ";
  AIN25W-SUBH.CONSTANT14 = "NUMBER";
  AIN25W-SUBH.FILLER15 = " ";
  AIN25W-SUBH.CONSTANT15 = "FROM";
  AIN25W-SUBH.CONSTANTN1 = "SSA";
  AIN25W-SUBH.FILLER16 = " ";
  AIN25W-SUBH.FILLERN1 = " ";
  AIN25W-SUBH.CONSTANT16 = "NOMADS";
  AIN25W-SUBH.FILLER17 = " ";
  AIN25W-SUBH.CONSTANT17 = "AMOUNT";
  AIN25W-SUBH.FILLER18 = " ";
  AIN25W-SUBH.CONSTANT18 = "AMOUNT";
  AIN25W-SUBH.FILLER19 = " ";
  AIN25W-SUBH.CONSTANT19 = "PCT.";
  AIN25W-SUBH.FILLER20 = " ";
  AIN25W-SUBH.FILLER21 = " ";
  AIN25W-DET.FILLER1 = " ";
  AIN25W-DET.FILLER2 = " ";
  AIN25W-DET.FILLER3 = " ";
  AIN25W-DET.FILLER4 = " ";
  AIN25W-DET.FILLER5 = " ";
  AIN25W-DET.FILLER6 = " ";
  AIN25W-DET.FILLER7 = " ";
  AIN25W-DET.FILLER8 = " ";
  AIN25W-DET.FILLER9 = " ";
  AIN25W-DET.FILLER10 = " ";
  AIN25W-DET.FILLER11 = " ";
  AIN25W-DET.FILLER12 = " ";
  AIN25W-SUBFOT.FILLER1 = " ";
  AIN25W-SUBFOT.CONSTANT1 = "DISTRICT";
  AIN25W-SUBFOT.FILLER2 = " ";
  AIN25W-SUBFOT.CONSTANT2 = "SUBTOTALS";
  AIN25W-SUBFOT.FILLER3 = " ";
  AIN25W-SUBFOT.FILLER4 = " ";
  AIN25W-SUBFOT.CONSTANT3 = "TOTAL";
  AIN25W-SUBFOT.FILLER5 = " ";
  AIN25W-SUBFOT.CONSTANT4 = "CHANGED";
  AIN25W-SUBFOT.FILLER6 = " ";
  AIN25W-SUBFOT.CONSTANT5 = "PROBLEM";
  AIN25W-SUBFOT.FILLER7 = " ";
  AIN25W-SUBFOT.CONSTANT6 = "CASES";
  AIN25W-SUBFOT.FILLER8 = " ";
  AIN25W-SUBFOT.CONSTANT7 = "CASES";
  AIN25W-SUBFOT.FILLER9 = " ";
  AIN25W-SUBFOT.CONSTANT8 = "CASES";
  AIN25W-SUBFOT.FILLER10 = " ";
  AIN25W-SUBFOT.FILLER11 = " ";
  AIN25W-SUBFOT.FILLER12 = " ";
  AIN25W-SUBFOT.FILLER13 = " ";
  AIN25W-SUBFOT.FILLER14 = " ";
  AIN25W-SUBFOT.FILLER15 = " ";
  AIN25W-FOOTER.CONSTANT1 = "REPORT";
  AIN25W-FOOTER.FILLER1 = " ";
  AIN25W-FOOTER.CONSTANT2 = "SUMMARY";
  AIN25W-FOOTER.FILLER2 = " ";
  AIN25W-FOOTER.FILLER3 = " ";
  AIN25W-FOOTER.CONSTANT3 = "TOTAL";
  AIN25W-FOOTER.FILLER4 = " ";
  AIN25W-FOOTER.CONSTANT4 = "CHANGED";
  AIN25W-FOOTER.FILLER5 = " ";
  AIN25W-FOOTER.CONSTANT5 = "PROBLEM";
  AIN25W-FOOTER.FILLER6 = " ";
  AIN25W-FOOTER.CONSTANT6 = "CASES";
  AIN25W-FOOTER.FILLER7 = " ";
  AIN25W-FOOTER.CONSTANT7 = "CASES";
  AIN25W-FOOTER.FILLER8 = " ";
  AIN25W-FOOTER.CONSTANT8 = "CASES";
  AIN25W-FOOTER.FILLER9 = " ";
  AIN25W-FOOTER.FILLER10 = " ";
  AIN25W-FOOTER.FILLER11 = " ";
  AIN25W-FOOTER.FILLER12 = " ";
  AIN25W-FOOTER.FILLER13 = " ";

  AIN25W-HEAD.S-REPORT-ID = "AIN25A";
  /* cbsi end*/
end // end AIN25P9-INITCON


// REPORTS MAIN PARA
Function AIN25P9-MAIN()
  /* cbsi start*/
  /* ************************************************************************/
  /* This program has main control over this application*/
  /* initailises all the report variables*/
  /* prints ths report*/
  /* closes the application*/
  /* ************************************************************************/
  /* PERFORM PROCESS TO INITIALISE VARIABLES*/

  AIN25P9-INIT-PARA();

  /* PERFORM PROCESS TO PRINT REPORT*/

  AIN25P9-PRINT-PARA();

  /* closes the applicatiom*/

  /* move the application name*/
  AIN55W.WS-PRG-NAME = "AIN25A";

  /* call ain55a with vdbcontrol,vmessage,ain55W*/
  call "AIN55A" (VDBCONTROL, VMESSAGE, AIN55W) {isNoRefresh = yes};

  /* check for error processing*/
  if (VDBCONTROL.URC >= 104)
    WCM00P2-TO-CEP01A();
    exit program;
  end
  /* close the application*/

  exit program;


  /* cbsi end*/
end // end AIN25P9-MAIN


// POPULATING REPORTS DETAILS
Function AIN25P9-POP-DET()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This process is to format and move the retrieved values to the report*/
  /* variables*/
  /* concatinates some variables using wst50a*/
  /* uses a common reports process format-proc*/
  /* sets all the flags to format the report variable*/
  /* ***********************************************************************/
  /* **/
  /* wi18586 - add all cases into total case accumulator.*/
  /*  */
  /* write the detail screen layout*/
  AIN25W-DET.S-DIST-CD = SR-AIN25-RECIN.AIN24A-01-OFC-CD;
  AIN25W-DET.S-CASE-LD = SR-AIN25-RECIN.AIN24A-01-CASLD-ID;
  AIN25W-DET.S-WRKR-NMB = SR-AIN25-RECIN.AIN24A-01-NOMADS-USRID;

  /* concatenate the name in ws*/
  set VSTRREC4 empty;
  VSTRREC4.USTRLEN = 39;
  VSTRREC4.UCONLEN = 10;
  VSTRREC4.UCONLEN2 = 1;

  VSTRREC4.USTRING = SR-AIN25-RECIN.AIN24A-01-LAST-NAME;
  VSTRREC4.UCONCAT = SR-AIN25-RECIN.AIN24A-01-FIRST-NAME;
  VSTRREC4.UCONCAT2 = SR-AIN25-RECIN.AIN24A-01-MIDDLE-INIT;

  call "WST50A" (VSTRREC4) {isNoRefresh = yes};

  AIN25W.WS-NAME = VSTRREC4.USTRING;
  AIN25W-DET.S-NAME = AIN25W.WS-NAME-1;

  set VSTRREC4 empty;
  /* wi 20000 add case ssn to report    06/13/00*/
  AIN25W-DET.S-CASE-NUMBER = SR-AIN25-RECIN.AIN24A-01-CASE-NUMBER;

  AIN25W-DET.S-PRSN-NUMBER = SR-AIN25-RECIN.AIN24A-01-PRSN-NUMBER;

  /* 5508 ADD NEW SSN TO OUTPUT LINE*/
  AIN25W-DET.S-NEW-SSN = SR-AIN25-RECIN.AIN24A-01-NEW-SSN;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = SR-AIN25-RECIN.AIN24A-01-NOMADS-AMT;
  FORMATW.LENGTH = 8;
  FORMATW.DEC-COUNT = 2;

  FORMATW.FORMAT-FLAG = "N";
  FORMATW.DOLLAR-FLAG = "N";
  REPP9-FORMAT-PROC();
  AIN25W-DET.S-SSI-NOMADS = FORMATW.OUTPUT-CHAR;


  set FORMATW empty;
  FORMATW.INPUT-NUMBER = SR-AIN25-RECIN.AIN24A-01-INTERFACE-AMT;
  FORMATW.LENGTH = 8;
  FORMATW.DEC-COUNT = 2;

  FORMATW.FORMAT-FLAG = "N";
  FORMATW.DOLLAR-FLAG = "N";
  REPP9-FORMAT-PROC();
  AIN25W-DET.S-SSI-AMOUNT = FORMATW.OUTPUT-CHAR;

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = SR-AIN25-RECIN.AIN24A-01-REPORT-DIFF;
  FORMATW.DEC-COUNT = 2;
  FORMATW.LENGTH = 8;
  FORMATW.FORMAT-FLAG = "N";
  FORMATW.DOLLAR-FLAG = "N";
  REPP9-FORMAT-PROC();
  AIN25W-DET.S-DIFF-AMT = FORMATW.OUTPUT-CHAR;


  AIN25W-DET.S-DIFF-PCT = SR-AIN25-RECIN.AIN24A-01-DIFF-PCT;
  AIN25W-DET.S-ACTION = SR-AIN25-RECIN.AIN24A-01-ACTION;
  /*  */

  if (SR-AIN25-RECIN.AIN24A-01-CASE-TYPE == "P")
    AIN25W.WS-02-DIS-PRO = AIN25W.WS-02-DIS-PRO + 1;
    AIN25W.WS-03-PRO-CASE = AIN25W.WS-03-PRO-CASE + 1;
  else
    if (SR-AIN25-RECIN.AIN24A-01-CASE-TYPE == "C")
      AIN25W.WS-02-DIS-CHA = AIN25W.WS-02-DIS-CHA + 1;
      AIN25W.WS-03-CHA-CASE = AIN25W.WS-03-CHA-CASE + 1;
    else
  /* wi18586 - add all cases into total case accumulator.*/
      AIN25W.WS-02-DIS-OTHER = AIN25W.WS-02-DIS-OTHER + 1;
      AIN25W.WS-03-OTHER-CASE = AIN25W.WS-03-OTHER-CASE + 1;
    end

  end

  /* CBSI END*/
end // end AIN25P9-POP-DET


// POPULATING THE REPORTS FOOTER
Function AIN25P9-POP-FOOTER()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to populate the footer variables*/
  /* format and move the retrieved values to the report*/
  /* variables*/
  /* uses a common reports process format-proc*/
  /* sets all the flags to format the report variable*/
  /* ***********************************************************************/
  /* wi18586 include all cases in total cases accumulator*/
  if (AIN25W.WS-03-CHA-CASE != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-03-CHA-CASE;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-FOOTER.S-REP-SUM-CHA-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-FOOTER.S-REP-SUM-CHA-CASE = "      0";
  end

  if (AIN25W.WS-03-PRO-CASE != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-03-PRO-CASE;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-FOOTER.S-REP-SUM-PRO-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-FOOTER.S-REP-SUM-PRO-CASE = "      0";
  end

  /* 18386*/
  AIN25W.WS-REP-TOTAL = AIN25W.WS-03-CHA-CASE +   AIN25W.WS-03-PRO-CASE + AIN25W.WS-03-OTHER-CASE;

  if (AIN25W.WS-REP-TOTAL != 0)

    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-REP-TOTAL;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-FOOTER.S-REP-SUM-TOT-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-FOOTER.S-REP-SUM-TOT-CASE = "      0";
  end
  /* cbsi end*/
end // end AIN25P9-POP-FOOTER


// PROCESS TO PRINT THE REPORT
Function AIN25P9-PRINT-PARA()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the report*/
  /* 1.prints the no data to report if there is no data*/
  /* 2.performs the additional processing process*/
  /* ***********************************************************************/

  /* wi 18586 - include all cases in taot case accumulator*/

  /* ERROR PROCESSING FOR SERIAL RECORD*/

  if ((SR-AIN25-RECIN is endOfFile))
    AIN25P9-PRN-HEAD();
    REP132P9-NRF-PROC();
    return;
  end

  /* PERFORM PROCESS TO SET VDBCONTROL.URC*/
  /* PRINT ALL THE DETAILS RETRIVED FROM SEQUENTIAL FILE*/
  AIN25W.WS-OFC-CD-OLD = SR-AIN25-RECIN.AIN24A-01-OFC-CD;
  while ((SR-AIN25-RECIN not endOfFile))

    /* PERFORM APPLICATION SPECIFIC PROCESSING*/

    /* PRINT HEADER AND SUB HEADER AT THE START OF A NEW PAGE*/

    if ((REP-COMMON.WS-NEW-PAGE == "Y"))

       /* PRINT THE HEADER DETAILS*/

      AIN25P9-PRN-HEAD();

       /* PRINT THE SUBHEADER*/

      AIN25P9-PRN-SUBH();

       /* RESET NEW PAGE INDICATOR*/

      REP-COMMON.WS-NEW-PAGE = "N";
    end

    /* PERFORM PROCESS TO POPULATE THE DETAILS*/

    AIN25P9-POP-DET();

       /* PERFORM PROCESS TO PRINT THE DETAILS*/

    AIN25P9-PRN-DETAIL();

    if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))

             /* PAGE BREAK*/

      SR-132REP-RECOUT.PRNT-CC = "1";
      REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
      REP-COMMON.WS-NEW-PAGE = "Y";
    end


    /* PERFORM PROCESS TO SCAN THE CURSOR*/
    AIN25P9-SCAN();
    AIN25W.WS-OFC-CD-NEW = SR-AIN25-RECIN.AIN24A-01-OFC-CD;

    if (AIN25W.WS-OFC-CD-OLD != AIN25W.WS-OFC-CD-NEW)
      AIN25W.WS-OFC-CD-OLD = AIN25W.WS-OFC-CD-NEW;
          /* PRINT THE HEADING AND THE SUB HEADING IF END OF PAGE*/
          /* IS ENCOUNTERED*/

      if (AIN25W.WS-02-DIS-CHA != 0)
        set FORMATW empty;
        FORMATW.INPUT-NUMBER = AIN25W.WS-02-DIS-CHA;
        FORMATW.LENGTH = 7;
        FORMATW.FORMAT-FLAG = "N";
        FORMATW.DOLLAR-FLAG = "N";
        REPP9-FORMAT-PROC();
        AIN25W-SUBFOT.S-DIS-TOT-CHA-CASE = FORMATW.OUTPUT-CHAR;
      else
        AIN25W-SUBFOT.S-DIS-TOT-CHA-CASE = "      0";
      end

      if (AIN25W.WS-02-DIS-PRO != 0)
        set FORMATW empty;
        FORMATW.INPUT-NUMBER = AIN25W.WS-02-DIS-PRO;
        FORMATW.LENGTH = 7;
        FORMATW.FORMAT-FLAG = "N";
        FORMATW.DOLLAR-FLAG = "N";
        REPP9-FORMAT-PROC();
        AIN25W-SUBFOT.S-DIS-TOT-PRO-CASE = FORMATW.OUTPUT-CHAR;
      else
        AIN25W-SUBFOT.S-DIS-TOT-PRO-CASE = "      0";
      end

  /* 18586*/
      AIN25W.WS-DIS-TOTAL = AIN25W.WS-02-DIS-CHA +       AIN25W.WS-02-DIS-PRO + AIN25W.WS-02-DIS-OTHER;
      if (AIN25W.WS-DIS-TOTAL != 0)
        set FORMATW empty;
        FORMATW.INPUT-NUMBER = AIN25W.WS-DIS-TOTAL;
        FORMATW.LENGTH = 7;
        FORMATW.FORMAT-FLAG = "N";
        FORMATW.DOLLAR-FLAG = "N";
        REPP9-FORMAT-PROC();
        AIN25W-SUBFOT.S-DIS-TOT-CASE = FORMATW.OUTPUT-CHAR;
      else
        AIN25W-SUBFOT.S-DIS-TOT-CASE = "      0";
      end

      AIN25P9-SUBFOOTER();

      AIN25W.WS-02-DIS-PRO = 0;
      AIN25W.WS-02-DIS-CHA = 0;
  /* 18586*/
      AIN25W.WS-02-DIS-OTHER = 0;

    end
  end

  /* PERFORM PROCESS TO POPULATE SUBFOOTER*/


  if (AIN25W.WS-02-DIS-CHA != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-02-DIS-CHA;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-SUBFOT.S-DIS-TOT-CHA-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-SUBFOT.S-DIS-TOT-CHA-CASE = "      0";
  end

  if (AIN25W.WS-02-DIS-PRO != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-02-DIS-PRO;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-SUBFOT.S-DIS-TOT-PRO-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-SUBFOT.S-DIS-TOT-PRO-CASE = "      0";
  end

  /* 18586*/
  AIN25W.WS-DIS-TOTAL = AIN25W.WS-02-DIS-CHA +   AIN25W.WS-02-DIS-PRO + AIN25W.WS-02-DIS-OTHER;
  if (AIN25W.WS-DIS-TOTAL != 0)
    set FORMATW empty;
    FORMATW.INPUT-NUMBER = AIN25W.WS-DIS-TOTAL;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    REPP9-FORMAT-PROC();
    AIN25W-SUBFOT.S-DIS-TOT-CASE = FORMATW.OUTPUT-CHAR;
  else
    AIN25W-SUBFOT.S-DIS-TOT-CASE = "      0";
  end

  AIN25P9-SUBFOOTER();

  AIN25P9-POP-FOOTER();

  /* PERFROM PROCESS TO PRINT THE FOOTER*/
  AIN25P9-PRN-FOOTER();
  REP132P9-EOR-PROC();

  /* cbsi end*/
end // end AIN25P9-PRINT-PARA


// to print the detail line
Function AIN25P9-PRN-DETAIL()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the detail record*/
  /* uses the common process to print the record*/
  /* ***********************************************************************/
  SR-132REP-RECOUT.UFIELD = AIN25W-DET.LINE1;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN25P9-PRN-DETAIL


// to print footer
Function AIN25P9-PRN-FOOTER()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the footer record*/
  /* uses the common process to print the record*/
  /* ***********************************************************************/
  AIN25W.WS-LINE-DIFF = REP-COMMON.WS-MAX-NO-LINES -                        REP-COMMON.WS-LINE-NO;
  if (AIN25W.WS-LINE-DIFF < 10)
    SR-132REP-RECOUT.PRNT-CC = "1";
    REP-COMMON.WS-NEW-PAGE = "Y";
    AIN25P9-PRN-HEAD();
    AIN25P9-PRN-SUBH();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE1;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE2;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE3;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE4;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE5;
    WR-132REP-OUT-FILE();

    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE6;
    WR-132REP-OUT-FILE();
  else
    SR-132REP-RECOUT.PRNT-CC = " ";
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE1;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE2;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE3;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE4;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE5;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-FOOTER.LINE6;
    WR-132REP-OUT-FILE();
  end
  /* cbsi end*/
end // end AIN25P9-PRN-FOOTER


// process is to print the header
Function AIN25P9-PRN-HEAD()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the header record*/
  /* sets the page number*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  AIN25W-HEAD.S-PAGE-NO = REP-COMMON.WS-PAGE-NO;

  /* MOVE EACH LINE OF HEADER TO MAP AND PRINT IT*/
  SR-132REP-RECOUT.UFIELD = AIN25W-HEAD.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.PRNT-CC = " ";
  SR-132REP-RECOUT.UFIELD = AIN25W-HEAD.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN25W-HEAD.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN25W-HEAD.LINE4;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN25W-HEAD.LINE5;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN25P9-PRN-HEAD


// PRINTING THE REPORT'S SUB-HEAD
Function AIN25P9-PRN-SUBH()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the sub header record*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  /* MOVE EACD LINE OF SUBHEADER TO MAP*/
  SR-132REP-RECOUT.UFIELD = AIN25W-SUBH.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN25W-SUBH.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN25W-SUBH.LINE3;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN25P9-PRN-SUBH


// to read the input file
Function AIN25P9-SCAN()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This porcess is to read the input file*/
  /* ***********************************************************************/
  /* **/
  try
    get next SR-AIN25-RECIN ;
  end
  if (((SR-AIN25-RECIN is ioError) && 
  (SR-AIN25-RECIN not endOfFile)))
    VDBCONTROL.UPROC-NM = "AIN25P9-SCAN";
    VDBCONTROL.UPROC-OBJ = "SR-AIN25-RECIN";
    VDBCONTROL.UPROC-OPT = "SCAN";
    sysVar.returnCode = 1;
    VMESSAGE.UMSGCODE = sysVar.errorCode;
    WCM00P2-TO-CEP01A();

  end
  /* cbsi end*/
end // end AIN25P9-SCAN


// to print the subfooter
Function AIN25P9-SUBFOOTER()
  /* cbsi start*/
  /* ***********************************************************************/
  /* **/
  /* This process is to print the subfooter*/
  /* takes care of control breaks*/
  /* ***********************************************************************/
  /* **/

  SR-132REP-RECOUT.PRNT-CC = " ";
  AIN25W.WS-LINE-DIFF = REP-COMMON.WS-MAX-NO-LINES -   REP-COMMON.WS-LINE-NO;

  if (AIN25W.WS-LINE-DIFF < 7)
    SR-132REP-RECOUT.PRNT-CC = "1";
    REP-COMMON.WS-NEW-PAGE = "Y";
    AIN25P9-PRN-HEAD();
    AIN25P9-PRN-SUBH();
    SR-132REP-RECOUT.PRNT-CC = " ";
  /* POPULATE THE SUB-FOOTER DETAILS*/
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE1;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE2;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE3;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE4;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE5;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE6;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE7;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE8;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.PRNT-CC = "1";
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    REP-COMMON.WS-NEW-PAGE = "Y";
  else
  /* POPULATE THE SUB-FOOTER DETAILS*/
    SR-132REP-RECOUT.PRNT-CC = " ";
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE1;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.PRNT-CC = " ";
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE2;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.PRNT-CC = " ";
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE3;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE4;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE5;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE6;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE7;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.UFIELD = AIN25W-SUBFOT.LINE8;
    WR-132REP-OUT-FILE();
    SR-132REP-RECOUT.PRNT-CC = "1";
    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
    REP-COMMON.WS-NEW-PAGE = "Y";
  end
  /* cbsi end*/
end // end AIN25P9-SUBFOOTER


Record AIN25W type basicRecord
  10 WS-NAME char(100) ; 
    15 WS-NAME-1 char(39) ; 
    15 WS-NAME-2 char(61) ; 
  10 WS-CNT num(2) ; 
  10 WS-TOT-CNT num(2) ; 
  10 WS-OFC-CD-OLD char(2) ; 
  10 WS-OFC-CD-NEW char(2) ; 
  10 WS-02-DIS-PRO num(7) ; 
  10 WS-02-DIS-CHA num(7) ; 
  10 WS-02-DIS-OTHER num(7) ; 
  10 WS-03-PRO-CASE num(7) ; 
  10 WS-03-CHA-CASE num(7) ; 
  10 WS-03-OTHER-CASE num(7) ; 
  10 WS-FIRST-TIME char(1) ; 
  10 WS-DIS-TOTAL num(7) ; 
  10 WS-REP-TOTAL num(7) ; 
  10 WS-LINE-DIFF num(2) ; 
  10 WS-DATE char(10) ; 
    15 WS-YEAR num(4) ; 
      20 WS-YEAR1 char(4) ; 
    15 WS-FIL char(1) ; 
    15 WS-MONTH num(2) ; 
    15 WS-FIL1 char(1) ; 
    15 WS-DAY num(2) ; 
end // end AIN25W


Record AIN25W-DET type basicRecord
  10 LINE1 char(132) ; 
    15 FILLER1 char(2) ; 
    15 S-DIST-CD char(2) ; 
    15 FILLER2 char(5) ; 
    15 S-CASE-LD char(5) ; 
    15 FILLER3 char(2) ; 
    15 S-WRKR-NMB char(8) ; 
    15 FILLER4 char(2) ; 
    15 S-NAME char(29) ; 
    15 FILLER5 char(1) ; 
    15 S-CASE-NUMBER char(9) ; 
    15 FILLER5A char(1) ; 
    15 S-PRSN-NUMBER char(9) ; 
    15 FILLER6 char(1) ; 
    15 S-NEW-SSN char(9) ; 
    15 FILLER7 char(1) ; 
    15 S-SSI-NOMADS char(8) ; 
    15 FILLER8 char(1) ; 
    15 S-SSI-AMOUNT char(8) ; 
    15 FILLER9 char(1) ; 
    15 S-DIFF-AMT char(8) ; 
    15 FILLER10 char(1) ; 
    15 S-DIFF-PCT char(3) ; 
    15 FILLER11 char(1) ; 
    15 S-ACTION char(10) ; 
    15 FILLER12 char(5) ; 
end // end AIN25W-DET


Record AIN25W-FOOTER type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(6) ; 
    15 FILLER1 char(1) ; 
    15 CONSTANT2 char(7) ; 
    15 FILLER2 char(118) ; 
  10 LINE2 char(132) ; 
    15 FILLER3 char(132) ; 
  10 LINE3 char(132) ; 
    15 CONSTANT3 char(5) ; 
    15 FILLER4 char(5) ; 
    15 CONSTANT4 char(7) ; 
    15 FILLER5 char(3) ; 
    15 CONSTANT5 char(7) ; 
    15 FILLER6 char(105) ; 
  10 LINE4 char(132) ; 
    15 CONSTANT6 char(5) ; 
    15 FILLER7 char(5) ; 
    15 CONSTANT7 char(5) ; 
    15 FILLER8 char(7) ; 
    15 CONSTANT8 char(5) ; 
    15 FILLER9 char(105) ; 
  10 LINE5 char(132) ; 
    15 FILLER10 char(132) ; 
  10 LINE6 char(132) ; 
    15 S-REP-SUM-TOT-CASE char(7) ; 
    15 FILLER11 char(3) ; 
    15 S-REP-SUM-CHA-CASE char(7) ; 
    15 FILLER12 char(3) ; 
    15 S-REP-SUM-PRO-CASE char(7) ; 
    15 FILLER13 char(105) ; 
end // end AIN25W-FOOTER


Record AIN25W-HEAD type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(1) ; 
    15 S-PAGE-NO char(4) ; 
    15 FILLER2 char(36) ; 
    15 CONSTANT2 char(5) ; 
    15 FILLER3 char(1) ; 
    15 CONSTANT3 char(2) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT4 char(6) ; 
    15 FILLER5 char(47) ; 
    15 CONSTANT5 char(4) ; 
    15 FILLER6 char(3) ; 
    15 S-DATE char(8) ; 
    15 FILLER7 char(6) ; 
  10 LINE2 char(132) ; 
    15 S-REPORT-ID char(8) ; 
    15 FILLER8 char(37) ; 
    15 CONSTANT6 char(7) ; 
    15 FILLER9 char(1) ; 
    15 CONSTANT7 char(7) ; 
    15 FILLER10 char(1) ; 
    15 CONSTANT8 char(7) ; 
    15 FILLER11 char(43) ; 
    15 CONSTANT9 char(4) ; 
    15 FILLER12 char(3) ; 
    15 S-TIME char(8) ; 
    15 FILLER13 char(6) ; 
  10 LINE3 char(132) ; 
    15 FILLER14 char(132) ; 
  10 LINE4 char(132) ; 
    15 CONSTANT10 char(6) ; 
    15 FILLER15 char(1) ; 
    15 CONSTANT11 char(5) ; 
    15 FILLER16 char(1) ; 
    15 S-RPT-MNTH char(4) ; 
    15 FILLER17 char(1) ; 
    15 S-RPT-YEAR char(4) ; 
    15 FILLER18 char(19) ; 
    15 CONSTANT12 char(7) ; 
    15 FILLER20 char(1) ; 
    15 CONSTANT13 char(5) ; 
    15 FILLER21 char(1) ; 
    15 S-PRCS-DATE char(10) ; 
    15 FILLER22 char(67) ; 
  10 LINE5 char(132) ; 
    15 FILLER19 char(132) ; 
end // end AIN25W-HEAD


Record AIN25W-SUBFOT type basicRecord
  10 LINE1 char(132) ; 
    15 FILLER1 char(132) ; 
  10 LINE2 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER2 char(1) ; 
    15 CONSTANT2 char(9) ; 
    15 FILLER3 char(114) ; 
  10 LINE3 char(132) ; 
    15 FILLER4 char(132) ; 
  10 LINE4 char(132) ; 
    15 CONSTANT3 char(5) ; 
    15 FILLER5 char(5) ; 
    15 CONSTANT4 char(7) ; 
    15 FILLER6 char(3) ; 
    15 CONSTANT5 char(7) ; 
    15 FILLER7 char(105) ; 
  10 LINE5 char(132) ; 
    15 CONSTANT6 char(5) ; 
    15 FILLER8 char(5) ; 
    15 CONSTANT7 char(5) ; 
    15 FILLER9 char(5) ; 
    15 CONSTANT8 char(5) ; 
    15 FILLER10 char(107) ; 
  10 LINE6 char(132) ; 
    15 FILLER11 char(132) ; 
  10 LINE7 char(132) ; 
    15 S-DIS-TOT-CASE char(7) ; 
    15 FILLER12 char(3) ; 
    15 S-DIS-TOT-CHA-CASE char(7) ; 
    15 FILLER13 char(3) ; 
    15 S-DIS-TOT-PRO-CASE char(7) ; 
    15 FILLER14 char(105) ; 
  10 LINE8 char(132) ; 
    15 FILLER15 char(132) ; 
end // end AIN25W-SUBFOT


Record AIN25W-SUBH type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(1) ; 
    15 CONSTANT2 char(4) ; 
    15 FILLER2 char(3) ; 
    15 CONSTANT3 char(6) ; 
    15 FILLER3 char(4) ; 
    15 CONSTANT4 char(4) ; 
    15 FILLER4P char(26) ; 
    15 CONSTANT5P char(6) ; 
    15 FILLER4 char(4) ; 
    15 CONSTANT5 char(4) ; 
    15 FILLER5 char(7) ; 
    15 CONSTANT6 char(3) ; 
    15 FILLERN char(1) ; 
    15 CONSTANTN char(3) ; 
    15 FILLER6 char(3) ; 
    15 CONSTANT7 char(4) ; 
    15 FILLER7 char(1) ; 
    15 CONSTANT8 char(2) ; 
    15 FILLER8 char(2) ; 
    15 CONSTANT9 char(4) ; 
    15 FILLER9 char(5) ; 
    15 CONSTANT10 char(10) ; 
    15 FILLER10 char(3) ; 
    15 CONSTANT11 char(6) ; 
    15 FILLER11 char(8) ; 
  10 LINE2 char(132) ; 
    15 FILLER12 char(9) ; 
    15 CONSTANT12 char(4) ; 
    15 FILLER13 char(3) ; 
    15 CONSTANT13 char(6) ; 
    15 FILLER13P char(34) ; 
    15 CONSTANT13P char(6) ; 
    15 FILLER14 char(4) ; 
    15 CONSTANT14 char(6) ; 
    15 FILLER15 char(4) ; 
    15 CONSTANT15 char(4) ; 
    15 FILLERN1 char(1) ; 
    15 CONSTANTN1 char(3) ; 
    15 FILLER16 char(4) ; 
    15 CONSTANT16 char(6) ; 
    15 FILLER17 char(3) ; 
    15 CONSTANT17 char(6) ; 
    15 FILLER18 char(3) ; 
    15 CONSTANT18 char(6) ; 
    15 FILLER19 char(3) ; 
    15 CONSTANT19 char(4) ; 
    15 FILLER20 char(13) ; 
  10 LINE3 char(132) ; 
    15 FILLER21 char(132) ; 
end // end AIN25W-SUBH


