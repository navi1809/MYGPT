<%@ include file="../../libraryinclude.jsp"%>
<script>
	bapHome.reInitialize();
</script>
<script>
	displayConflictConstructMap = {};
	conflictConstructMap = {};
	conflictUpdateConstructMap = {};

	var displayMEMBConflictConstruct = {
		endPoint : "<c:url value='memberconflictdisplay'/>",
		addEndPoint : "<c:url value='addconflictmemberinfo'/>",
		renderCallback : function() {
			console.log("MEMB Conflict Add was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
		},
		callback : function(selectedStagingRecord) {
			console.log("MEMB Conflict Display was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			disableButtonsInConflictSummary(selectedStagingRecord);
		},
		divID : "memberDetails"
	};

	displayConflictConstructMap['MEMB'] = displayMEMBConflictConstruct;

	var displayMEMBPROGConflictConstruct = {
		endPoint : "<c:url value='memberprogramsconflictdisplay'/>",
		callback : function(selectedStagingRecord) {
			console.log("MEMBPROG Conflict Display was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			disableConflictSummaryButton(selectedStagingRecord, [
					"compare_Button", "add_Button", "delete_Button" ]);
		},
		divID : "memberDetails"
	};

	displayConflictConstructMap['PROG'] = displayMEMBPROGConflictConstruct;

	var displayMEMBOTHRConflictConstruct = {
		endPoint : "<c:url value='memberothersectionconflictdisplay'/>",
		callback : function(selectedStagingRecord) {
			console.log("MEMB OTHR Conflict Display was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			disableConflictSummaryButton(selectedStagingRecord, [
					"compare_Button", "add_Button", "delete_Button" ]);
		},
		divID : "memberDetails"
	};

	displayConflictConstructMap['OTHR'] = displayMEMBOTHRConflictConstruct;

	var conflictConstructMapForOTHRMEMB = {
		discardEndPoint : "<c:url value='discardmemberothrconflict'/>",
		callback : function(selectedStagingRecord) {
			console.log("OTHRMEMB Conflict Discard was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			disableConflictSummaryButton(selectedStagingRecord, [
					"compare_Button", "add_Button", "delete_Button" ]);
		},
		messageDivId : "messageContainer",
		divID : "memberDetails"
	};

	conflictConstructMap['OTHR'] = conflictConstructMapForOTHRMEMB;

	var conflictConstructMapForMEMBPROG = {
		discardEndPoint : "<c:url value='discardmemberprogconflict'/>",
		callback : function(selectedStagingRecord) {
			console.log("MEMBPROG Conflict Discard was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			disableConflictSummaryButton(selectedStagingRecord, [
					"compare_Button", "add_Button", "delete_Button" ]);
		},
		messageDivId : "messageContainer",
		divID : "memberDetails"
	};

	conflictConstructMap['PROG'] = conflictConstructMapForMEMBPROG;

	var conflictConstructMapForMEMB = {
		discardEndPoint : "<c:url value='discardmemberconflict'/>",
		compareEndPoint : "<c:url value='compareconflictmemberinformation'/>",
		displaySorConflictEndPoint : "<c:url value='displaysorconflictmemberinfo'/>",
		deleteFromConflictEndPoint : "<c:url value='deletefromconflictmember'/>",
		sectionIdArray : [ "InnerMemberSection" ],
		callback : function() {
			console.log("Memb Conflict was Called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			$('#compare_Button').show();
			$('#add_Button').show();
		},
		messageDivId : "messageContainer",
		divID : "memberDetails"
	};

	conflictConstructMap['MEMB'] = conflictConstructMapForMEMB;
	
	var conflictUpdateConstructMapForMEMB = {
		updateCheckedFieldsEndPoint : "<c:url value='updateconflictmemberinfo'/>",
		renderCallback : function() {
			console.log("MEMB Conflict Update was called");
			$(".td_recurring").each(function() {
				$(this).remove();
			});
			$('#compare_Button').show();
			$('#add_Button').show();
		},
		messageDivId : "messageContainer",
		divID : "memberDetails"
	};

	conflictUpdateConstructMap['MEMB'] = conflictUpdateConstructMapForMEMB;
	
</script>