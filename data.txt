function DOR39P9-S-UPDT-EMP()
/*  */
    set H2-EMPLR-WWH-DTLS empty;
    H2-EMPLR-WWH-DTLS.EMPLR-ID = H2-JOB-HISTORY.EMPLR-ID;
    H2-EMPLR-WWH-DTLS.DCKT-NMB = DOR39W.WS-DCKT-NMB;
    DOR39P9-EWD-S09Q1();
    /*  */
    /* SET Original or Amended Indicator*/
    /*  */
    if(sysVar.sqlData.sqlcode == 0)
        if(H2-EMPLR-WWH-DTLS.EMPLR-WWH-ESTD-AMT == DOR39W.WS-TOTAMT &&
                H2-EMPLR-WWH-DTLS.INC-WH-TRMND-DT == "9999-12-31" &&
                FDOR-IWIT-DTLS.F-APPL-NAME != "DFM04A")
            return; /* IWIT did not change and not from*/
        end /* forms menu. Do not generate form.*/
        if(H2-EMPLR-WWH-DTLS.INC-WH-TRMND-DT == "9999-12-31" &&
                H2-EMPLR-WWH-DTLS.INC-WH-STRT-DT != "9999-12-31")
            DOR39W.WS-OA-IND = "A";
        else
            DOR39W.WS-OA-IND = "O";
        end
    else
        DOR39W.WS-OA-IND = "O";
    end
    if(FDOR-IWIT-DTLS.F-FORM-ID == "NV014O")
        DOR39W.WS-OA-IND = "O";
    end
    if(FDOR-IWIT-DTLS.F-FORM-ID == "NV014A")
        DOR39W.WS-OA-IND = "A";
    end
    /*  */
    H2-EMPLR-WWH-DTLS.EMPLR-WWH-ESTD-AMT = DOR39W.WS-TOTAMT;
    if(sysVar.sqlData.sqlcode != 0 || H2-EMPLR-WWH-DTLS.INC-WH-TRMND-DT !=
                    "9999-12-31")
        H2-EMPLR-WWH-DTLS.EMPLR-DELIN-DT = "9999-12-31";
    end
    H2-EMPLR-WWH-DTLS.INC-WH-TRMND-DT = "9999-12-31";
    H2-EMPLR-WWH-DTLS.INC-WH-STRT-DT = DOR39W1.WS-CRNT-DATE;
    /*  */
    if(sysVar.sqlData.sqlcode == 0)
        DOR39P9-EWD-U03Q1();
    else
        DOR39P9-EWD-I04Q1();
    end
    /*  */
    /* GET TOTAL IWIT FOR NCP/EMPLOYER COMBO*/
    /*  */
    set H2-2-DOC-EWD empty;
    H2-2-DOC-EWD.UPI = DOR39W.WS-NCP-UPI;
    H2-2-DOC-EWD.EMPLR-ID = DOR39W.WS-EMPLR-ID;
    DOR39P9-DOC-EWD-S();
    /*  */
    set H3-JOB-HISTORY empty;
    move H2-JOB-HISTORY to H3-JOB-HISTORY withV60Compat;
    H3-JOB-HISTORY.NCP-WWH-ESTD-AMT = H2-2-DOC-EWD.EMPLR-WWH-ESTD-AMT;
    if(DOR39W.WS-NCP-WWH-STS == "  ")
        H3-JOB-HISTORY.NCP-WWH-STS = "CO";
    else
        H3-JOB-HISTORY.NCP-WWH-STS = DOR39W.WS-NCP-WWH-STS;
    end
    if(H3-JOB-HISTORY.NCP-WWH-EFF-DT == "9999-12-31")
        H3-JOB-HISTORY.NCP-WWH-EFF-DT = DOR39W.WS-INCWH-DATE;
    end

    DOR39P9-JHS-U02Q1();
    /*  */
    /* ************************************************************************/
    /* Generate Form NV0014                                                 **/
    /* ************************************************************************/
    if(FDOR-IWIT-DTLS.F-FORM-ID == "NV0014")
        if(DOR39W.WS-OA-IND == "O")
            FDOR-IWIT-DTLS.F-FORM-ID = "NV014O";
        else
            FDOR-IWIT-DTLS.F-FORM-ID = "NV014A";
        end
    end

    if(FDOR-IWIT-DTLS.F-FORM-ID == "NV014O")
        DOR39U6-DOC();
    end

    /* Find Total Arrears*/
    set H2-NCP-ACCT-RCBL empty;
    H2-NCP-ACCT-RCBL.DCKT-NMB = DOR39W.WS-DCKT-NMB;
    H2-NCP-ACCT-RCBL.SQNC-NMB = DOR39W.WS-SQNC-NMB;
    DOR39P9-NAC-S07Q2();
    DOR39W.WS-ARREARS = H2-NCP-ACCT-RCBL.ADJ-ARERS-BAL-AMT +
            H2-NCP-ACCT-RCBL.UNADJ-ARS-BAL-AMT;
    DOR39W.WS-CS-T-3 = mathLib.round(DOR39W.WS-CSPRAMT * 3,
            -mathLib.decimals(DOR39W.WS-CS-T-3));
    /*  */
    /* WI 1753 BEG - CHECK IF EMPLOYER PARTICPATES IN E-IWO */
    set DOR39W3 empty;
    DOR39W3.WS-BUILD1-FEIN = H2-JOB-HISTORY.EMPLR-ID;
    if(DOR39W3.WS-BUILD1-FEIN-FILL1 == "-")
        DOR39W3.WS-FORMATTED1-FEIN-1 = DOR39W3.WS-BUILD1-FEIN-1;
        DOR39W3.WS-FORMATTED1-FEIN-2 = DOR39W3.WS-BUILD1-FEIN-2;
        DOR39W3.WS-EIN-TXT = DOR39W3.WS-FORMATTED1-FEIN;
    else
        DOR39W3.WS-BUILD2-FEIN = H2-JOB-HISTORY.EMPLR-ID;
        DOR39W3.WS-FORMATTED2-FEIN-1 = DOR39W3.WS-BUILD2-FEIN-1;
        DOR39W3.WS-FORMATTED2-FEIN-2 = DOR39W3.WS-BUILD2-FEIN-2;
        DOR39W3.WS-EIN-TXT = DOR39W3.WS-FORMATTED2-FEIN;
    end
    set H2-OCSE-EMPLYR empty;
    H2-OCSE-EMPLYR.EMPLYR-ACTIVE-IND = "I";
    H2-OCSE-EMPLYR.EMPLYR-FEIN = DOR39W3.WS-EIN-TXT;
    DOR39P9-EIWO-EMPLYR();
    if(H2-OCSE-EMPLYR.EMPLYR-ACTIVE-IND == "A")
        DOR39P9-EIWO-PROC();
    else
        /* WI 1753 END */
        if(DOR39W.WS-APPL-TYPE == "O")
            set DFMPOP-TRANSFER empty;
            DFMPOP-TRANSFER.PO1-LENGTH = 9801;
            DFMPOP-TRANSFER.PO1-TRANID = "WM01";
            DFMPOP-TRANSFER.PO1-TRID-FILLER = "    ";
            DFMPOP-TRANSFER.PIO-FORM-ID = FDOR-IWIT-DTLS.F-FORM-ID;
            DFMPOP-TRANSFER.PIO-CASE-SUFX = DOR39W.WS-CASE-SUFX;
            DFMPOP-TRANSFER.PIO-UPI = DOR39W.WS-NCP-UPI;
            DFMPOP-TRANSFER.PIO-DCKT-NMB = DOR39W.WS-DCKT-NMB;
            DFMPOP-TRANSFER.PIO-LST-SQ-NMB = DOR39W.WS-SQNC-NMB;
            DFMPOP-TRANSFER.PIO-OFC-CNTY-CD = G-IV-D.G-OFC-CNTY-CD;
            DFMPOP-TRANSFER.PIO-NMB-OF-COPIES = 1;
            if(DOR39W.WS-APPL-NAME == "DFM04A") /* FORMS MENU*/
                DFMPOP-TRANSFER.PIO-MODE-IND = "F";
            else
                DFMPOP-TRANSFER.PIO-MODE-IND = "D";
            end
            DFMPOP-TRANSFER.PIO-USRID = GNOMADS.G-USER-ID;
            DFMPOP-TRANSFER.PIO-TERMID = GNOMADS.G-TERM-ID;

            /* concatenate NCP's name*/
            VSTRREC4.USTRING = GNOMADS.G-LST-NAME;
            VSTRREC4.UCONCAT = ",";
            VSTRREC4.UCONCAT2 = GNOMADS.G-FRST-NAME;
            VSTRREC4.UCONCAT3 = GNOMADS.G-MID-NAME;
            VSTRREC4.USTRLEN = 56;
            VSTRREC4.UCONLEN = 1;
            VSTRREC4.UCONLEN2 = 21;
            VSTRREC4.UCONLEN3 = 1;
            call "WST50A"(VSTRREC4){isNoRefresh = yes};
            DFMPOP-TRANSFER.PIO-NCP-NAME = VSTRREC4.USTRING;

            DFMPOP-TRANSFER.PIO-FIRST-THREE-SSN = GNOMADS.G-CASE-SSN-FIRST-THREE;
            DFMPOP-TRANSFER.PIO-NEXT-TWO-SSN = GNOMADS.G-CASE-SSN-NEXT-TWO;
            DFMPOP-TRANSFER.PIO-LAST-FOUR-SSN = GNOMADS.G-CASE-SSN-LAST-FOUR;
            /* paste*/
            if(FDOR-IWIT-DTLS.F-CASE-SUFX == DOR39W.WS-CASE-SUFX)
                VSTRREC4.USTRING = G-IV-D.G-CST-LST-NAME;
                VSTRREC4.UCONCAT = ",";
                VSTRREC4.UCONCAT2 = G-IV-D.G-CST-FRST-NAME;
                VSTRREC4.UCONCAT3 = G-IV-D.G-CST-MID-NAME;
                VSTRREC4.USTRLEN = 56;
                VSTRREC4.UCONLEN = 1;
                VSTRREC4.UCONLEN2 = 21;
                VSTRREC4.UCONLEN3 = 1;
                call "WST50A"(VSTRREC4){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-CST-NAME = VSTRREC4.USTRING;
                DFMPOP-TRANSFER.PIO-CST-SSN = G-IV-D.G-CST-SSN;
            else
                DOR39P9-GET-CST();
            end
            /* paste*/
            DFMPOP-TRANSFER.PIO-PARM-NMB = 86;
            DFMPOP-TRANSFER.PIO-POP-PARM[1] = H2-JOB-HISTORY.EMPLR-ID;
            DFMPOP-TRANSFER.PIO-POP-PARM[2] = DOR39W.WS-OA-IND;
            DFMPOP-TRANSFER.PIO-POP-PARM[3] = FDOR-IWIT-DTLS.F-WS-DEF27-IND;
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-CSPRAMT == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[45] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[46] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-CSPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[45] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[46] = "MONTH";
            end
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-ZAPRAMT == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[47] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[48] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-ZAPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[47] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[48] = "MONTH";
            end
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-MCPRAMT == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[49] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[50] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-MCPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[49] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[50] = "MONTH";
            end
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-OPRAMT1 == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[51] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[52] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT1;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[51] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[52] = "MONTH";
            end
            /* spousal support*/
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-OPRAMT2 == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[53] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[54] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT2;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[53] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[54] = "MONTH";
            end
            /* spousal support arrears*/
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-OPRAMT4 == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[55] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[56] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT4;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[55] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[56] = "MONTH";
            end
            /* fees/other*/
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-OPRAMT3 == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[57] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[58] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[59] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT3;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[57] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[58] = "MONTH";
                DFMPOP-TRANSFER.PIO-POP-PARM[59] = "FEES";
            end
            /* this is the total  # 29 on the server form*/
            /* reformat number to decimal with no leading zeros*/
            if(DOR39W.WS-TOTAMT == 0)
                DFMPOP-TRANSFER.PIO-POP-PARM[60] = " ";
                DFMPOP-TRANSFER.PIO-POP-PARM[61] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-TOTAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMPOP-TRANSFER.PIO-POP-PARM[60] = VSTRREC3.UOUT-STRING;
                DFMPOP-TRANSFER.PIO-POP-PARM[61] = "MONTH";
            end
            /* reformat number to decimal with no leading zeros*/
            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-WAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMPOP-TRANSFER.PIO-POP-PARM[62] = VSTRREC3.UOUT-STRING;
            /* reformat number to decimal with no leading zeros*/
            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-BAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMPOP-TRANSFER.PIO-POP-PARM[63] = VSTRREC3.UOUT-STRING;
            /* reformat number to decimal with no leading zeros*/
            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-SAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMPOP-TRANSFER.PIO-POP-PARM[64] = VSTRREC3.UOUT-STRING;
            /* reformat number to decimal with no leading zeros*/
            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-MAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMPOP-TRANSFER.PIO-POP-PARM[65] = VSTRREC3.UOUT-STRING;

            DFMPOP-TRANSFER.WS-APPL-ID = FDOR-IWIT-DTLS.F-APPL-NAME;
            DFMPOP-TRANSFER.FILLER = "S";
            call "DFM07A"(VDBCONTROL, VMESSAGE,
                    DFMPOP-TRANSFER){isNoRefresh = yes};
            if(VDBCONTROL.URC > 104)
                exit program;
            end
            FDOR-IWIT-DTLS.F-NV0014-GENERATED-IND = "Y";
        end
        /*  */
        if(DOR39W.WS-APPL-TYPE == "B") /* BATCH*/
            set DFMBTCH-XFER empty;
            DFMBTCH-XFER.PIO-FORM-ID = FDOR-IWIT-DTLS.F-FORM-ID;
            DFMBTCH-XFER.PIO-DCKT-NMB = DOR39W.WS-DCKT-NMB;
            DFMBTCH-XFER.PIO-DCKT-SQ-NMB = DOR39W.WS-SQNC-NMB;
            DFMBTCH-XFER.PIO-UPI = DOR39W.WS-NCP-UPI;
            DFMBTCH-XFER.PIO-CASE-SUFX = DOR39W.WS-CASE-SUFX;
            DFMBTCH-XFER.PIO-NMB-OF-COPIES = 1;
            DFMBTCH-XFER.PIO-PARM-NMB = 86;
            DFMBTCH-XFER.PIO-POP-PARM[1] = H2-JOB-HISTORY.EMPLR-ID;

            if(DOR39W.WS-CSPRAMT == 0)
                DFMBTCH-XFER.PIO-POP-PARM[45] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[46] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-CSPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[45] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[46] = "MONTH";
            end
            if(DOR39W.WS-ZAPRAMT == 0)
                DFMBTCH-XFER.PIO-POP-PARM[47] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[48] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-ZAPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[47] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[48] = "MONTH";
            end

            if(DOR39W.WS-MCPRAMT == 0)
                DFMBTCH-XFER.PIO-POP-PARM[49] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[50] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-MCPRAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[49] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[50] = "MONTH";
            end

            if(DOR39W.WS-OPRAMT1 == 0)
                DFMBTCH-XFER.PIO-POP-PARM[51] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[52] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT1;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[51] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[52] = "MONTH";
            end

            /* spousal support*/
            if(DOR39W.WS-OPRAMT2 == 0)
                DFMBTCH-XFER.PIO-POP-PARM[53] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[54] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT2;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[53] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[54] = "MONTH";
            end
            /* spousal support arrears*/
            if(DOR39W.WS-OPRAMT4 == 0)
                DFMBTCH-XFER.PIO-POP-PARM[55] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[56] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT4;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[55] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[56] = "MONTH";
            end
            /* fees/other*/
            if(DOR39W.WS-OPRAMT3 == 0)
                DFMBTCH-XFER.PIO-POP-PARM[57] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[58] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[59] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-OPRAMT3;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[57] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[58] = "MONTH";
                DFMBTCH-XFER.PIO-POP-PARM[59] = "FEES";
            end

            if(DOR39W.WS-TOTAMT == 0)
                DFMBTCH-XFER.PIO-POP-PARM[60] = " ";
                DFMBTCH-XFER.PIO-POP-PARM[61] = " ";
            else
                set VSTRREC3 empty;
                VFRMREC.WS-AMT-FMT = " ";
                VSTRREC3.ULENGTH = 10;
                VSTRREC3.UDECS = 2;
                VSTRREC3.UFILL-CHR = " ";
                VSTRREC3.UCUR-SIGN = "N";
                VSTRREC3.UCUR-COMMAS = "Y";
                VSTRREC3.UNEG-POS = "T";
                VSTRREC3.UINNUM-D02 = DOR39W.WS-TOTAMT;
                call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
                DFMBTCH-XFER.PIO-POP-PARM[60] = VSTRREC3.UOUT-STRING;
                DFMBTCH-XFER.PIO-POP-PARM[61] = "MONTH";
            end
            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-WAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMBTCH-XFER.PIO-POP-PARM[63] = VSTRREC3.UOUT-STRING;

            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-BAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMBTCH-XFER.PIO-POP-PARM[65] = VSTRREC3.UOUT-STRING;

            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-SAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMBTCH-XFER.PIO-POP-PARM[62] = VSTRREC3.UOUT-STRING;

            set VSTRREC3 empty;
            VFRMREC.WS-AMT-FMT = " ";
            VSTRREC3.ULENGTH = 10;
            VSTRREC3.UDECS = 2;
            VSTRREC3.UFILL-CHR = " ";
            VSTRREC3.UCUR-SIGN = "N";
            VSTRREC3.UCUR-COMMAS = "Y";
            VSTRREC3.UNEG-POS = "T";
            VSTRREC3.UINNUM-D02 = DOR39W.WS-MAMT;
            call "WST45A"(VCONTROL, VMESSAGE, VSTRREC3){isNoRefresh = yes};
            DFMBTCH-XFER.PIO-POP-PARM[64] = VSTRREC3.UOUT-STRING;

            DFMBTCH-XFER.WS-APPL-ID = FDOR-IWIT-DTLS.F-APPL-NAME;
            call "DFM08A"(VDBCONTROL, VMESSAGE,
                    DFMBTCH-XFER){isNoRefresh = yes};
            if(VDBCONTROL.URC > 104)
                exit program;
            end
            FDOR-IWIT-DTLS.F-NV0014-GENERATED-IND = "Y";
            /* WI 1932 begin*/
            /* WI 1180 begin*/
            set H2-IVD-CASELD-CASE empty;
            H2-IVD-CASELD-CASE.UPI = DOR39W.WS-NCP-UPI;
            H2-IVD-CASELD-CASE.CASE-SUFX = DOR39W.WS-CASE-SUFX;
            DOR39P9-S03();
            // if(H2-IVD-CASELD-CASE.OFC-CD == "02")        
            DOR39P9-EWS-IWO();
        // end 
        /* WI 1180 end*/
        /* WI 1932 end */
        end
    end

    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
    /*  */
end // end DOR39P9-S-UPDT-EMP

// Check for Variations

function DOR39P9-S-VARIATN()
    call "TOSSS3A"(VDBCONTROL, VMESSAGE, H-TOSSS3){isNoRefresh = yes};
    if(VDBCONTROL.URC > 104)
        exit program;
    end

    /* If no record not found => return*/
    if(VDBCONTROL.URC != 0)
        return;
    end

    if(H-TOSSS3.OBLGN-SUSPN-TYPE == "C")
        DOR39W.WS-CUR-VAR-IND = "Y";
    else
        DOR39W.WS-ARR-VAR-IND = "Y";
    end
    if(H-TOSSS3.PRVSN-TYPE == "CS")
        if(H-TOSSS3.OBLGN-SUSPN-TYPE == "C")
            DOR39W.WS-CSPRAMT = DOR39W.WS-CSPRAMT + H-TOSSS3.VARTN-AMT;
        else
            DOR39W.WS-ZAPRAMT = DOR39W.WS-ZAPRAMT + H-TOSSS3.VARTN-AMT;
        end
    end

    if(H-TOSSS3.PRVSN-TYPE == "MC" || H-TOSSS3.PRVSN-TYPE == "MX")
        DOR39W.WS-MCPRAMT = DOR39W.WS-MCPRAMT + H-TOSSS3.VARTN-AMT;
    end

    /* IF H-TOSSS3.PRVSN-TYPE = 'SS';*/
    /* IF H-TOSSS3.OBLGN-SUSPN-TYPE = 'C';*/
    /* DOR39W.WS-OPRAMT2 = DOR39W.WS-OPRAMT2 + H-TOSSS3.VARTN-AMT;*/
    /* ELSE;*/
    /* DOR39W.WS-OPRAMT4 = DOR39W.WS-OPRAMT4 + H-TOSSS3.VARTN-AMT;*/
    /* END;*/
    /* END;*/
    /* IF H-TOSSS3.PRVSN-TYPE = 'SS';*/
    /* DOR39W.WS-OPRAMT2 = DOR39W.WS-OPRAMT2 + H-TOSSS3.VARTN-AMT;*/
    /* END;*/

    if(H-TOSSS3.PRVSN-TYPE == "FE")
        DOR39W.WS-OPRAMT3 = DOR39W.WS-OPRAMT3 + H-TOSSS3.VARTN-AMT;
    end
end // end DOR39P9-S-VARIATN

// Get employer data

function DOR39P9-S01()
    WDB00PI();
    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "DOR39A";

    VDBCOMMON.USQLREC = "H2-EMPLOYER";
    VDBCONTROL.UPROC-NM = "DOR39P9-S01";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCONTROL.UPROC-OBJ = "H2-EMPLOYER";
    try
        get H2-EMPLOYER singleRow
                with #sql{
        select EMPLR_NM,
          ZIP_CD, ST_CD, CITY,
          ADR_LN1, ADR_LN2,
          CNTRY,
          EMPLR_ID, FEIN
        from TWNEMPLOYER T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE EMPLR_ID = :EMPLR-ID
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into EMPLR-NM, ZIP-CD, ST-CD, CITY, ADR-LN1, ADR-LN2, CNTRY, EMPLR-ID, FEIN;
    end

    if(sysVar.sqlData.sqlcode == 0)
        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
    end
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
end // end DOR39P9-S01

// Selection process

function DOR39P9-S03()
/* -------------------------------------------------------------*/
/* This process inquires IVD_CASELD_CASE table and gets case county   */
/* -------------------------------------------------------------*/
    WDB00PI();

    VDBCOMMON.USQLREC = "H2-IVD-CASELD-CASE";
    VDBCONTROL.UPROC-OBJ = "H2-IVD-CASELD-CASE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S03";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    try
        get H2-IVD-CASELD-CASE
                with #sql{
        select OFC_CD
        from twnivd_caseld_case T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE UPI = :UPI
        AND CASE_SUFX = :CASE-SUFX
        AND CASELD_IND = 'N'
         --** INSERT ORDER BY CLAUSE HERE **
        FOR FETCH ONLY
      }
                into OFC-CD;
    end
    VDBCOMMON.UNRF = "N";
    VDBCOMMON.UDUP = "N";

    WDB00PE-SQLERR();

    if(VDBCONTROL.URC > 104)
        exit program;
    end
end // end DOR39P9-S03

// INQUIRY TWNIVD_CASE

function DOR39P9-S04()
    WDB00PI();
    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "DOR39A";

    VDBCOMMON.USQLREC = "H2-IVD-CASE";
    VDBCONTROL.UPROC-OBJ = "H2-IVD-CASE";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCONTROL.UPROC-NM = "DOR39P9-S04";
    /*  */
    try
        get H2-IVD-CASE singleRow
                with #sql{
        select FUNC_AREA_CD, CASE_TYPE, CST_UPI, (SUBSTR(DIGITS(NCP_UPI),2,9) || CASE_SUFX)
        from TWNIVD_CASE T1
        WHERE NCP_UPI = :NCP-UPI
        AND CASE_SUFX = :CASE-SUFX
        AND CASE_STS <> 'C'
        AND CASE_TYPE <> 'D'
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into FUNC-AREA-CD, CASE-TYPE, CST-UPI, DOR39W2.WS-TEMP-CASE-ID;
    end
    /*  */
    if(sysVar.sqlData.sqlcode == 0)
        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
    end
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
end // end DOR39P9-S04

// get wrkr name,title

function DOR39P9-S05()
/* Get the worker name and title*/
    VDBCOMMON.USQLREC = "H2-4-DCCNMU-SPTURE";
    VDBCONTROL.UPROC-OBJ = "H2-4-DCCNMU-SPTURE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S05";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    try
        get H2-4-DCCNMU-SPTURE singleRow
                with #sql{
        select T2.FRST_NM,T2.LST_NM,T2.MID_NM,T2.MODFR,T4.ROLE_DESC,T1.OFC_CD, 
          T2.NOMADS_USRID, T1.RSP_CNTY
        from TWNIVD_CASELD_CASE T1,
             TWNNOmADS_USER T2,
             TWNSUP_UNT_POS_HST T3,
             TWNUSR_ROLE T4
        WHERE
                     T1.UPI=:UPI AND
                     T1.CASE_SUFX=:CASE-SUFX AND
                     T1.CASELD_IND = 'N' AND
                     T1.OFC_CD = T3.OFC_CD AND
                     T1.PRGM_OFC_TYPE = T3.PRGM_OFC_TYPE AND
                     T1.SPRVS_UNIT = T3.SPRVS_UNIT AND
                     T1.PSN_NMB = T3.PSN_NMB AND
                     (T3.ASMNT_BEG_DT BETWEEN '0001-01-01' AND :GDW.DTCD) AND
                     (T3.ASMNT_END_DT BETWEEN :GDW.DTCD AND '9999-12-31') AND
                      T2.NOMADS_USRID = T3.NOMADS_USRID AND
                      T2.ROLE_ID = T4.ROLE_ID
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into FRST-NM, LST-NM, MID-NM, MODFR, ROLE-DESC, OFC-CD, NOMADS-USRID, RSP-CNTY;
    end

    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
end // end DOR39P9-S05

// Inquire Docket

function DOR39P9-S06()
    WDB00PI();
    VDBCONTROL.UACCTYP = "R";
    VDBCOMMON.UAPPLNAM = "DOR39A";

    VDBCOMMON.USQLREC = "H2-DOCKET";
    VDBCONTROL.UPROC-OBJ = "H2-DOCKET";
    VDBCONTROL.UPROC-NM = "DOR39P9-S06";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    try
        get H2-DOCKET singleRow
                with #sql{
        select JRSDT_TYPE,
          RESP_LCTN_CD, RSPDG_DCKT_NMB, RESP_CNTRL_IND,
          OTHER_LCTN_CD, OTHER_DCKT_NMB, OTHER_CNTRL_IND,
          INIT_LCTN_CD, INIT_DCKT_NMB, INIT_CNTRL_IND
        from twndocket T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE
          DCKT_NMB = :DCKT-NMB
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into JRSDT-TYPE, RESP-LCTN-CD, RSPDG-DCKT-NMB, RESP-CNTRL-IND, OTHER-LCTN-CD, OTHER-DCKT-NMB, OTHER-CNTRL-IND, INIT-LCTN-CD, INIT-DCKT-NMB, INIT-CNTRL-IND;
    end
    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";

    if(H2-DOCKET is ioError && H2-DOCKET not noRecordFound)
        WDB00PE-SQLERR();
    end

    if(VDBCONTROL.URC > 104)
        exit program;
    end

    if(sysVar.sqlData.sqlcode == 0)
        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
        if(H2-DOCKET.RESP-CNTRL-IND == "P" || H2-DOCKET.RESP-CNTRL-IND == "D")
            DOR39W2.WS-INIDKT = H2-DOCKET.RSPDG-DCKT-NMB;
            DOR39W2.WS-INI-LCTN = H2-DOCKET.RESP-LCTN-CD;
        end
        if(H2-DOCKET.OTHER-CNTRL-IND == "P" || H2-DOCKET.OTHER-CNTRL-IND ==
                        "D")
            DOR39W2.WS-INIDKT = H2-DOCKET.OTHER-DCKT-NMB;
            DOR39W2.WS-INI-LCTN = H2-DOCKET.OTHER-LCTN-CD;
        end
        if(H2-DOCKET.INIT-CNTRL-IND == "P" || H2-DOCKET.INIT-CNTRL-IND == "D")
            DOR39W2.WS-INIDKT = H2-DOCKET.INIT-DCKT-NMB;
            DOR39W2.WS-INI-LCTN = H2-DOCKET.INIT-LCTN-CD;
        end
        if(H2-DOCKET.INIT-LCTN-CD > "00" && H2-DOCKET.INIT-LCTN-CD <= "99")
            DOR39W2.WS-INIDKT = H2-DOCKET.INIT-DCKT-NMB;
            DOR39W2.WS-INI-LCTN = H2-DOCKET.INIT-LCTN-CD;
        else
            if(H2-DOCKET.RESP-LCTN-CD > "00" && H2-DOCKET.RESP-LCTN-CD <= "99")
                DOR39W2.WS-INIDKT = H2-DOCKET.RSPDG-DCKT-NMB;
                DOR39W2.WS-INI-LCTN = H2-DOCKET.RESP-LCTN-CD;
            end
        end
        if(DOR39W2.WS-INIDKT == " ")
            /* -----------------------------------------*/
            /* This process moves docket information   */
            /* corresponding to the Jurisdiction Type  */
            /* -----------------------------------------*/
            if(H2-DOCKET.JRSDT-TYPE == "T")
                if(H2-IVD-CASELD-CASE.OFC-CD == H2-DOCKET.RESP-LCTN-CD &&
                        H2-DOCKET.RSPDG-DCKT-NMB != " ")
                    DOR39W2.WS-INIDKT = H2-DOCKET.RSPDG-DCKT-NMB;
                    DOR39W2.WS-INI-LCTN = H2-IVD-CASELD-CASE.OFC-CD;
                else
                    if(H2-IVD-CASELD-CASE.OFC-CD == H2-DOCKET.INIT-LCTN-CD &&
                            H2-DOCKET.INIT-DCKT-NMB != " ")
                        DOR39W2.WS-INIDKT = H2-DOCKET.INIT-DCKT-NMB;
                        DOR39W2.WS-INI-LCTN = H2-IVD-CASELD-CASE.OFC-CD;
                    else
                        if(H2-IVD-CASELD-CASE.OFC-CD ==
                                H2-DOCKET.OTHER-LCTN-CD &&
                                H2-DOCKET.OTHER-DCKT-NMB != " ")
                            DOR39W2.WS-INIDKT = H2-DOCKET.OTHER-DCKT-NMB;
                            DOR39W2.WS-INI-LCTN = H2-IVD-CASELD-CASE.OFC-CD;
                        end
                    end
                end
            end
            if((H2-DOCKET.JRSDT-TYPE == "I" || H2-DOCKET.JRSDT-TYPE == "L"))
                if(H2-DOCKET.INIT-DCKT-NMB != " " && H2-DOCKET.INIT-LCTN-CD !=
                                "PS")
                    DOR39W2.WS-INIDKT = H2-DOCKET.INIT-DCKT-NMB;
                    DOR39W2.WS-INI-LCTN = H2-DOCKET.INIT-LCTN-CD;
                else
                    if(H2-DOCKET.RSPDG-DCKT-NMB != " " &&
                            H2-DOCKET.RESP-LCTN-CD != "PS")
                        DOR39W2.WS-INIDKT = H2-DOCKET.RSPDG-DCKT-NMB;
                        DOR39W2.WS-INI-LCTN = H2-DOCKET.RESP-LCTN-CD;
                    else
                        if(H2-DOCKET.OTHER-DCKT-NMB != " " &&
                                H2-DOCKET.OTHER-LCTN-CD != "PS")
                            DOR39W2.WS-INIDKT = H2-DOCKET.OTHER-DCKT-NMB;
                            DOR39W2.WS-INI-LCTN = H2-DOCKET.OTHER-LCTN-CD;
                        end
                    end
                end
            end
            if(H2-DOCKET.JRSDT-TYPE == "R")
                if(H2-DOCKET.RSPDG-DCKT-NMB != " " && H2-DOCKET.RESP-LCTN-CD !=
                                "PS")
                    DOR39W2.WS-INIDKT = H2-DOCKET.RSPDG-DCKT-NMB;
                    DOR39W2.WS-INI-LCTN = H2-DOCKET.RESP-LCTN-CD;
                else
                    if(H2-DOCKET.INIT-DCKT-NMB != " " &&
                            H2-DOCKET.INIT-LCTN-CD != "PS")
                        DOR39W2.WS-INIDKT = H2-DOCKET.INIT-DCKT-NMB;
                        DOR39W2.WS-INI-LCTN = H2-DOCKET.INIT-LCTN-CD;
                    else
                        if(H2-DOCKET.OTHER-DCKT-NMB != " " &&
                                H2-DOCKET.OTHER-LCTN-CD != "PS")
                            DOR39W2.WS-INIDKT = H2-DOCKET.OTHER-DCKT-NMB;
                            DOR39W2.WS-INI-LCTN = H2-DOCKET.OTHER-LCTN-CD;
                        end
                    end
                end
            end
        end
    end
end // end DOR39P9-S06

// Opens cursor

function DOR39P9-S08()
/* -----------------------------------------------------------*/
/* This process opens the cursor on the join of TWNIVD_CHILD */
/* FIN and TWNPERSON table for given docket#, upi and case_  */
/* sufix to get the children's Name  DOB and SSN.            */
/* -----------------------------------------------------------*/

    VDBCOMMON.USQLREC = "H2-2-DCN-PER";
    VDBCONTROL.UPROC-OBJ = "H2-2-DCN-PER";
    VDBCONTROL.UPROC-OPT = "SETINQ";
    VDBCONTROL.UPROC-NM = "DOR39P9-S08";
    try
        open DOR39P9-S08_RSI01
                with #sql{
        select (STRIP(T2.FRST_NM) || ' ' || SUBSTR(T2.MID_NM,1,1) ||
          ' ' || STRIP(T2.LST_NM)), T2.SSN, T2.DOB
        from twnivd_child_fin T1,
             twnperson T2
        WHERE  T1.DCKT_NMB = :DCKT-NMB
        AND    T1.NCP_UPI  = :NCP-UPI
        AND    T1.CASE_SUFX =:CASE-SUFX
        AND    T1.CHD_UPI = T2.UPI
        AND    T1.CHD_ACTIVE_IND IN (' ', 'Y')
        ORDER BY T2.SSN
        FOR FETCH ONLY
      }
                into DOR39W2.WS-NM, SSN, DOR39W2.WS-SQL-DT for H2-2-DCN-PER;
    end

    VDBCOMMON.UNRF = "Y"; /* No record found flag*/
    VDBCOMMON.UDUP = "N"; /* Duplicate key flag*/
    WDB00PE-SQLERR(); /* Perform the DB error process*/

    /* Increment count of rows read*/
    if(sysVar.sqlData.sqlcode == 0) /* If return code is zero*/
        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1; /* increment*/
    end /* End if*/
end // end DOR39P9-S08

// Read the record

function DOR39P9-S08-SCAN()
/* --------------------------------------------------------*/
/* This process reads the cursor to get the Children      */
/* --------------------------------------------------------*/

    VDBCOMMON.USQLREC = "H2-2-DCN-PER"; /* Record name*/
    VDBCONTROL.UPROC-OBJ = "H2-2-DCN-PER";
    VDBCONTROL.UPROC-OPT = "SCAN"; /* Option name*/
    VDBCONTROL.UPROC-NM = "DOR39P9-S08-SCAN"; /* Process name*/
    try
        get next H2-2-DCN-PER;
    end

    VDBCOMMON.UNRF = "Y"; /* No record found flag*/
    VDBCOMMON.UDUP = "N"; /* Duplicate key flag*/
    WDB00PE-SQLERR(); /* Perform the DB error process*/

    /* Increment count of rows read*/
    if(sysVar.sqlData.sqlcode == 0) /* If return code is zero*/
        VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1; /* Increment*/
    end /* End if*/
end // end DOR39P9-S08-SCAN

// OFFICE

function DOR39P9-S09()
    VDBCOMMON.USQLREC = "H2-OFFICE";
    VDBCONTROL.UPROC-OBJ = "H2-OFFICE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S09";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";
    /*  */
    try
        get H2-OFFICE singleRow
                with #sql{
        select FIPS_CD, FIPS_CD_SUFX
        from TWNOFFICE T1
        WHERE
          OFC_CD = :OFC-CD
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into FIPS-CD, FIPS-CD-SUFX;
    end
    /*  */
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
    /*  */
end // end DOR39P9-S09

// Select IRG based on ADR_TYPE2

function DOR39P9-S10()
    VDBCOMMON.USQLREC = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-OBJ = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S10";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";
    /*  */
    try
        get H2-INTERST-RFGUIDE
                with #sql{
        select AGENCY_NM, ST_CD_CNTRY_NM, ADLN1, ADLN2, CITY,
          ZIP_CD, PHN_NMB, PHN_EXT, FAX_NMB
        from TWNINTERST_RFGUIDE T1
        WHERE ADR_TYPE2    =  :ADR-TYPE2
          AND FIPS_CD      =  :FIPS-CD
          AND FIPS_CD_SUFX =  :FIPS-CD-SUFX
          AND STS_CD       <> 'D'
        ORDER BY LST_UPD_DT DESC
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into AGENCY-NM, ST-CD-CNTRY-NM, ADLN1, ADLN2, CITY, ZIP-CD, PHN-NMB, PHN-EXT, FAX-NMB;
    end
    /*  */
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
    /*  */
end // end DOR39P9-S10

// Select IRG for corresponding

function DOR39P9-S11()
    VDBCOMMON.USQLREC = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-OBJ = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S11";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";
    /*  */
    try
        get H2-INTERST-RFGUIDE
                with #sql{
        select AGENCY_NM, ST_CD_CNTRY_NM, ADLN1, ADLN2, CITY,
          ZIP_CD, PHN_NMB, PHN_EXT, FAX_NMB
        from TWNINTERST_RFGUIDE T1
        WHERE ADR_TYPE2    NOT IN ('SDU', 'COL')
          AND ADR_TYPE1    <> 'INT'
          AND FIPS_CD      =  :FIPS-CD
          AND FIPS_CD_SUFX =  :FIPS-CD-SUFX
          AND STS_CD       <> 'D'
        ORDER BY LST_UPD_DT DESC
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into AGENCY-NM, ST-CD-CNTRY-NM, ADLN1, ADLN2, CITY, ZIP-CD, PHN-NMB, PHN-EXT, FAX-NMB;
    end
    /*  */
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
    /*  */
end // end DOR39P9-S11

// Select IRG international data

function DOR39P9-S12()
    VDBCOMMON.USQLREC = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-OBJ = "H2-INTERST-RFGUIDE";
    VDBCONTROL.UPROC-NM = "DOR39P9-S12";
    VDBCONTROL.UPROC-OPT = "INQUIRY";
    VDBCOMMON.UNRF = "1";
    VDBCOMMON.UDUP = "N";
    /*  */
    try
        get H2-INTERST-RFGUIDE
                with #sql{
        select AGENCY_NM, ST_CD_CNTRY_NM, ADLN1, ADLN2, CITY,
          ZIP_CD, PHN_NMB, PHN_EXT, FAX_NMB
        from TWNINTERST_RFGUIDE T1
        WHERE ADR_TYPE1    =  'INT'
          AND FIPS_CD      =  :FIPS-CD
          AND FIPS_CD_SUFX =  :FIPS-CD-SUFX
          AND STS_CD       <> 'D'
        ORDER BY LST_UPD_DT DESC
        FOR FETCH ONLY
         --** INSERT ORDER BY CLAUSE HERE **
      }
                into AGENCY-NM, ST-CD-CNTRY-NM, ADLN1, ADLN2, CITY, ZIP-CD, PHN-NMB, PHN-EXT, FAX-NMB;
    end
    /*  */
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
    /*  */
end // end DOR39P9-S12

// Add the record

function DOR39P9-WRITE()
/* Description :*/
/* This process writes a record to SR-DOR39-RECOUT.*/
/*  */
/* Change History :*/
/* Date       Usrid  WI     Description*/
/* ---------  -----  -----  -----------*/
/* 07Jun2011  WNMAV  1180   New application which is a file extract*/
/* for EWS IWO form.*/
/*  */
    SR-DOR39-RECOUT.FILE-DATA = DOR39W2.WS-OUT-DATA;
    try
        add SR-DOR39-RECOUT;
    end

    if(SR-DOR39-RECOUT is ioError)
        VDBCONTROL.UMSQLCODE = 0;
        VDBCONTROL.UPROC-OBJ = "DOR39T1";
        VDBCONTROL.UPROC-NM = "DOR39P9-WRITE";
        VDBCONTROL.UPROC-OPT = "ADD";
        DOR39W2.WS-ERR-CD = sysVar.errorCode;
        VMESSAGE.UMSGINS[1] = DOR39W2.WS-ERR-LAST-FOUR;
        VMESSAGE.UMSGINS[2] = "DOR39A";
        VMESSAGE.UMSGCODE = " ";
        exit program;
    end

    /*  */
end // end DOR39P9-WRITE

// Update Wage Withhold true date

function DOR39U6-DOC()
    WDB00PI();
    VDBCONTROL.UACCTYP = "W";
    VDBCOMMON.UAPPLNAM = "DOR39A";
    VDBCOMMON.USQLREC = "H2-DOCKET";
    VDBCONTROL.UPROC-OBJ = "H2-DOCKET";
    VDBCONTROL.UPROC-OPT = "UPDATE";
    VDBCONTROL.UPROC-NM = "DOR39U6-DOC";

    H2-DOCKET.DCKT-NMB = DOR39W.WS-DCKT-NMB;
    H2-DOCKET.WAGE-WH-THRU-DT = DOR39W1.WS-CRNT-DATE;
    try
        execute update 
                #sql{
        UPDATE
          TWNDOCKET
        SET
          WAGE_WH_THRU_DT = :WAGE-WH-THRU-DT
        WHERE
          DCKT_NMB = :DCKT-NMB AND
          WAGE_WH_THRU_DT = '9999-12-31'
      }
                for H2-DOCKET; // model = update
    end

    VDBCOMMON.UNRF = "Y";
    VDBCOMMON.UDUP = "Y";
    WDB00PE-SQLERR();
    if(VDBCONTROL.URC > 104)
        exit program;
    end
end // end DOR39U6-DOC

record DOR39W type basicRecord
    10 WS-NCP-UPI num(9);
    10 WS-CST-UPI num(9);
    10 WS-EMPLR-ID char(10);
    10 WS-DCKT-NMB num(9);
    10 WS-SQNC-NMB num(3);
    10 WS-JRSDT-TYPE char(1);
    10 WS-CASE-SUFX char(1);
    10 WS-CASE-TYPE char(1);
    10 WS-ORDER-TYPE char(1);
    10 WS-APPL-TYPE char(1);
    10 WS-APPL-NAME char(7);
    10 WS-DELIN-DATE char(10);
    10 WS-INCWH-DATE char(10);
    10 WS-DELIN-STS-EFF-DT char(10);
    10 WS-INTID-INCWH-EST-DT char(10);
    10 WS-PYMNT-DATE char(10);
        15 WS-PYMNT-YEAR num(4);
        15 WS-PFIL1 char(1);
        15 WS-PYMNT-MONTH num(2);
        15 WS-PFIL2 char(1);
        15 WS-PYMNT-DAY num(2);
    10 WS-SQL-CODE int;
    10 WS-OFC-CNTY-CD char(2);
    10 WS-DELIN-STS char(1);
    10 WS-IW-NOTICE-SENT char(1);
    10 WS-SEND-LETTER char(1);
    10 WS-INCLD-DOCKET char(1);
    10 WS-NCP-WWH-STS char(2);
    10 WS-NCP-AMOUNT num(10, 2);
    10 WS-DCKT-AMOUNT num(10, 2);
    10 WS-ARRS-CMOA num(10, 2);
    10 WS-TOTAMT-A char(9);
        15 WS-TOTAMT num(9, 2);
    10 WS-CSPRAMT-A char(9);
        15 WS-CSPRAMT num(9, 2);
    10 WS-ZAPRAMT-A char(9);
        15 WS-ZAPRAMT num(9, 2);
    10 WS-MCPRAMT-A char(9);
        15 WS-MCPRAMT num(9, 2);
    10 WS-OPRAMT1-A char(9);
        15 WS-OPRAMT1 num(9, 2);
    10 WS-OPRAMT2-A char(9);
        15 WS-OPRAMT2 num(9, 2);
    10 WS-OPRAMT3-A char(9);
        15 WS-OPRAMT3 num(9, 2);
    10 WS-OPRAMT4-A char(9);
        15 WS-OPRAMT4 num(9, 2);
    10 WS-WAMT-A char(9);
        15 WS-WAMT num(9, 2);
    10 WS-BAMT-A char(9);
        15 WS-BAMT num(9, 2);
    10 WS-SAMT-A char(9);
        15 WS-SAMT num(9, 2);
    10 WS-MAMT-A char(9);
        15 WS-MAMT num(9, 2);
    10 WS-ARREARS num(9);
    10 WS-CS-T-3 num(9);
    10 WS-INACT-IND char(1)[8];
    10 WS-CUR-VAR-IND char(1);
    10 WS-ARR-VAR-IND char(1);
    10 WS-ORDER-EFF-DT char(10);
        15 WS-ORDER-EFF-CCYY num(4);
        15 * char(1);
        15 WS-ORDER-EFF-MM num(2);
        15 * char(1);
        15 WS-ORDER-EFF-DD num(2);
    10 WS-OA-IND char(1);
    10 HOLD-EMPL char(10);
    10 WS-AMT-NOT-X char(10);
        15 WS-AMT-NOT-R char(7);
        15 WS-AMT-NOT-P char(1);
        15 WS-AMT-NOT-D char(2);
    10 WS-AMT-NOT-N num(9, 2);
        15 WS-AMT-NOT-N-R num(7);
        15 WS-AMT-NOT-N-D num(2);
    10 WS-FORM-DEST char(1);
    10 WS-GRP char(80);
    10 WS-CASE-NMB char(12);
        15 WS-CASE-UPI char(11);
        15 WS-CASE-SUFFIX char(1);
    10 WS-CASE-UPI-NUM num(9);
    10 WS-TEMP-SSN char(9);
        15 WS-TEMP-SSN-THREE char(3);
        15 WS-TEMP-SSN-TWO char(2);
        15 WS-TEMP-SSN-FOUR char(4);
    10 WS-CHD-INDEX smallInt;
    10 WS-CHD-INDEX2 smallInt;
end // end DOR39W

record DOR39W1 type basicRecord
    10 WS-CRNT-DATE char(10);
        15 WS-CRNT-YEAR num(4);
        15 WS-FIL1 char(1);
        15 WS-CRNT-MONTH num(2);
        15 WS-FIL2 char(1);
        15 WS-CRNT-DAY num(2);
    10 WS-SYS-DATE char(10);
        15 WS-SYS-MNTH num(2);
        15 * char(1);
        15 WS-SYS-DAY num(2);
        15 * char(1);
        15 WS-SYS-YEAR num(4);
    10 WS-FOR-DATE char(10);
        15 WS-FOR-YEAR num(4);
        15 WS-FOR-D1 char(1);
        15 WS-FOR-MNTH num(2);
        15 WS-FOR-D2 char(1);
        15 WS-FOR-DAY num(2);
    10 TOSSS3-YM char(6);
        15 TOSSS3-CCYY num(4);
        15 TOSSS3-MM num(2);
end // end DOR39W1

record DOR39W2 type basicRecord
    10 WS-OUT-DATA char(2270); // TAPE RECORD
        15 WS-REC-TYPE char(4);
        15 WS-EMPLR-ID char(10);
        15 WS-DUNS char(10);
        15 WS-FEIN char(10);
        15 WS-EMPLR-NM char(30);
        15 WS-EMPLR-ADR-LN1 char(30);
        15 WS-EMPLR-ADR-LN2 char(30);
        15 WS-EMPLR-CITY char(20);
        15 WS-EMPLR-ST char(3);
        15 WS-EMPLR-ZIP char(11);
        15 WS-EMPLR-CNTRY char(3);
        15 WS-NCP-FRST-NM char(16);
        15 WS-NCP-MID-NM char(16);
        15 WS-NCP-LST-NM char(21);
        15 WS-NCP-SSN char(9);
        15 WS-NCP-UPI char(9); // FILLER
        15 WS-CASE-ID char(10); // FILLER
        15 WS-CNTY-CD char(2); // FILLER
        15 WS-FUNC-AREA-CD char(1); // FILLER
        15 WS-NOMADS-USRID char(8); // FILLER
        15 WS-WRKR-NM char(60); // FILLER
        15 WS-WRKR-TITLE char(40); // FILLER
        15 WS-WRKR-PHONE char(15); // FILLER
        15 WS-WRKR-FAX char(10); // FILLER
        15 WS-WRKR-EMAIL char(46); // FILLER
        15 WS-IWO-TYPE char(3); // FILLER
        15 WS-DCKT-NMB char(17); // FILLER
        15 WS-ST-TRIBE-TERR char(15); // FILLER
        15 WS-CNTY char(15); // FILLER
        15 WS-CST-FRST-NM char(16);
        15 WS-CST-MID-NM char(16);
        15 WS-CST-LST-NM char(21);
        15 WS-CS-MTLY-AMT num(9, 2);
        15 WS-CS-ARRS-MTLY-AMT num(9, 2);
        15 WS-12-WKS-DELN-FG char(1);
        15 WS-MED-MTLY-AMT num(9, 2);
        15 WS-MED-ARRS-MTLY-AMT num(9, 2);
        15 WS-SS-MTLY-AMT num(9, 2);
        15 WS-SS-ARRS-MTLY-AMT num(9, 2);
        15 WS-OTH-MTLY-AMT num(9, 2);
        15 WS-OTH-LABEL char(35);
        15 WS-MTLY-TOT num(9, 2);
        15 WS-WKLY-TOT num(9, 2);
        15 WS-BIWKLY-TOT num(9, 2);
        15 WS-SEMI-MTLY-TOT num(9, 2);
        15 WS-LUMP-SUM-AMT num(9, 2);
        15 WS-AUTH-REP-NM char(40);
        15 WS-COPY-TO-NCP-FG char(1);
        15 WS-ADDL-INFO char(255);
        15 WS-DEPN-DATA char(77)[15]; // FILLER
            20 WS-CHD-NM char(60); // FILLER
            20 WS-CHD-SSN char(9); // FILLER
            20 WS-CHD-DOB char(8); // FILLER
        15 WS-OFC-NM char(35);
        15 WS-OFC-ADR-LN1 char(35);
        15 WS-OFC-ADR-LN2 char(35);
        15 WS-OFC-CITY char(30);
        15 WS-OFC-ST char(02);
        15 WS-OFC-ZIP-CD char(11);
    10 WS-CRTD-TS char(26);
        15 WS-CRTD-DT char(10);
        15 WS-TIME-STAMP char(16);
    10 WS-PROC-DATE char(10);
        15 WS-PROC-CCYY num(4);
        15 WS-PROC-FILL1 char(1);
        15 WS-PROC-MM num(2);
        15 WS-PROC-FILL2 char(1);
        15 WS-PROC-DD num(2);
    10 WS-SQL-DT char(10);
        15 WS-SQL-CCYY char(4);
        15 * char(1);
        15 WS-SQL-MM char(2);
        15 * char(1);
        15 WS-SQL-DD char(2);
    10 WS-DT8 char(8);
        15 WS-DT8-CCYY char(4);
        15 WS-DT8-MM char(2);
        15 WS-DT8-DD char(2);
    10 WS-FORMATTED-FEIN char(10);
        15 WS-FORMATTED-FEIN-1 char(2);
        15 WS-FORMATTED-FEIN-FILL1 char(1);
        15 WS-FORMATTED-FEIN-2 char(7);
    10 WS-ERR-CD char(8);
        15 WS-ERR-FIRST-FOUR char(4);
        15 WS-ERR-LAST-FOUR char(4);
    10 WS-NM char(60);
    10 WS-PHONE-AND-EXT char(15);
    10 WS-TEMP-CASE-ID char(10);
    10 WS-INIDKT char(17);
    10 WS-INI-LCTN char(2);
    10 WS-NDX num(3);
end // end DOR39W2

// E-IWO DETAIL RECORD

record DOR39W3 type basicRecord
    10 WS-DTL-REC char(2406); // DETAIL RECORD
        15 WS-DOC-CD char(3);
        15 WS-FILLER char(3);
        15 WS-DOC-ACT-CD char(3);
        15 WS-DOC-DT char(8);
            20 WS-DOC-DT-CCYY char(4);
            20 WS-DOC-DT-MM char(2);
            20 WS-DOC-DT-DD char(2);
        15 WS-ISS-JURS-ENT char(35);
        15 WS-ISS-JURS-NM char(35);
        15 WS-CASE-ID char(15);
            20 WS-NCP-UPI num(9);
            20 WS-NCP-CASE-SUFX char(1);
            20 WS-CASE-FILLER char(5);
        15 WS-EMPLR-NM char(57);
        15 WS-EMPLR-ADR-LN1 char(25);
        15 WS-EMPLR-ADR-LN2 char(25);
        15 WS-EMPLR-CITY char(22);
        15 WS-EMPLR-ST char(2);
        15 WS-EMPLR-ZIP5 char(5);
        15 WS-EMPLR-ZIP4 char(4);
        15 WS-EIN-TXT char(9);
        15 WS-EMPLEE-LST-NM char(20);
        15 WS-EMPLEE-FIRST-NM char(15);
        15 WS-EMPLEE-MID-NM char(15);
        15 WS-EMPLEE-NM-SUFX char(4);
        15 WS-EMPLEE-SSN char(9);
        15 WS-EMPLEE-DOB char(8);
        15 WS-OBLGEE-LST-NM char(57);
        15 WS-OBLGEE-FIRST-NM char(15);
        15 WS-OBLGEE-MID-NM char(15);
        15 WS-OBLGEE-NM-SUFX char(4);
        15 WS-ISS-TRIBE-NM char(35);
        15 WS-SUPP-CURR-CHD-AMT num(11, 2);
        15 WS-SUPP-CURR-CHD-FRQ-CD char(1);
        15 WS-SUPP-PAST-DUE-CHD-AMT num(11, 2);
        15 WS-SUPP-PAST-DUE-FRQ-CD char(1);
        15 WS-SUPP-CURR-MED-AMT num(11, 2);
        15 WS-SUPP-CURR-MED-FRQ-CD char(1);
        15 WS-SUPP-PAST-DUE-MED-AMT num(11, 2);
        15 WS-SUPP-PAST-DUE-MED-FRQ-CD char(1);
        15 WS-SUPP-CURR-SPOUSE-AMT num(11, 2);
        15 WS-SUPP-CURR-SPOUSE-FRQ-CD char(1);
        15 WS-SUPP-PAST-DUE-SPOUSE-AMT num(11, 2);
        15 WS-SUPP-PAST-DUE-SPOUSE-FRQ-CD char(1);
        15 WS-OBLGN-OTH-AMT num(11, 2);
        15 WS-OBLGN-OTH-FRQ-CD char(1);
        15 WS-OBLGN-OTH-DESC-TXT char(35);
        15 WS-OBLGN-TOT-AMT num(11, 2);
        15 WS-OBLGN-TOT-FRQ-CD char(1);
        15 WS-ARRS-12WK-OVDUE-CD char(1);
        15 WS-INC-WTHLD-DED-WKLY-AMT num(11, 2);
        15 WS-INC-WTHLD-DED-BIWKLY-AMT num(11, 2);
        15 WS-INC-WTHLD-SEMIMNTHLY-AMT num(11, 2);
        15 WS-INC-MNTHLY-AMT num(11, 2);
        15 WS-ST-TRIBE-TERR-NM char(35);
        15 WS-BEG-WTHLD-WTHN-DAYS-NMB num(2);
        15 WS-INC-WTHLD-STRT-DT char(8);
        15 WS-SNDPYMT-WTHN-DAYS-NMB num(2);
        15 WS-INC-WTHLD-CCPA-PER-RT num(2);
        15 WS-PAYEE-NM char(57);
        15 WS-PAYEE-ADR-LN1 char(25);
        15 WS-PAYEE-ADR-LN2 char(25);
        15 WS-PAYEE-CITY char(22);
        15 WS-PAYEE-ST char(2);
        15 WS-PAYEE-ZIP char(9);
            20 WS-PAYEE-ZIP5 char(5);
            20 WS-PAYEE-ZIP4 char(4);
        15 WS-PAYEE-RMIT-FIPS-CD char(7);
            20 WS-PAYEE-RMIT-FIPS char(5);
            20 WS-PAYEE-RMIT-FIPS-SUFX char(2);
        15 WS-GOVT-OFCL-NM char(70);
        15 WS-ISS-OFCL-TITLE-NM char(50);
        15 WS-FILLER1 char(1);
        15 WS-SENDEMPLEE-COPY-IND char(1);
        15 WS-PNLTY-LIAB-INFO char(160);
        15 WS-ANTI-DSCRM-PROV char(160);
        15 WS-SPCFC-PAYEE-WTHLD-LMTS char(160);
        15 WS-EMPLEE-ST-CNTCT-NM char(57);
        15 WS-EMPLEE-ST-CNTCT-PH-NMB char(10);
        15 WS-EMPLEE-ST-CNTCT-FAX-NMB char(10);
        15 WS-EMPLEE-ST-CNTCT-EMAIL-ADR char(48);
        15 WS-DOC-TRKG-NMBL char(30);
        15 WS-OTHER-ID char(30);
        15 WS-EMPLR-ST-CNTCT-NM char(57);
        15 WS-EMPLR-ST-CNTCT-ADR-LN1 char(25);
        15 WS-EMPLR-ST-CNTCT-ADR-LN2 char(25);
        15 WS-EMPLR-ST-CNTCT-CITY char(22);
        15 WS-EMPLR-ST-CNTCT-ST char(2);
        15 WS-EMPLR-ST-CNTCT-ZIP5 char(5);
        15 WS-EMPLR-ST-CNTCT-ZIP4 char(4);
        15 WS-EMPLR-ST-CNTCT-PH-NMB char(10);
        15 WS-EMPLR-ST-CNTCT-FAX-NMB char(10);
        15 WS-EMPLR-ST-CNTCT-EMAIL-ADR char(48);
        15 WS-CHILD-DATA char(62)[6];
            20 WS-CHILD-LST-NM char(20);
            20 WS-CHILD-FRST-NM char(15);
            20 WS-CHILD-MID-NM char(15);
            20 WS-CHILD-SUFX-NM char(4);
            20 WS-CHILD-DOB char(8);
        15 WS-LUMP-SUM-PYMT-AMT num(11, 2);
        15 WS-FILLER2 char(9);
        15 WS-REMIT-ID char(20);
        15 WS-DOC-IMAGE-TXT char(25);
        15 WS-FRST-ERR-FLD-NM char(32);
        15 WS-SEC-ERR-FLD-NM char(32);
        15 WS-MULT-ERR-IND char(1);
        15 WS-FILLER3 char(87);
        15 WS-FIPS-CD char(2);
    10 WS-BUILD1-FEIN char(10);
        15 WS-BUILD1-FEIN-1 char(2);
        15 WS-BUILD1-FEIN-FILL1 char(1);
        15 WS-BUILD1-FEIN-2 char(7);
    10 WS-BUILD2-FEIN char(10);
        15 WS-BUILD2-FEIN-1 char(7);
        15 WS-BUILD2-FEIN-FILL1 char(1);
        15 WS-BUILD2-FEIN-2 char(2);
    10 WS-FORMATTED1-FEIN char(9);
        15 WS-FORMATTED1-FEIN-1 char(2);
        15 WS-FORMATTED1-FEIN-2 char(7);
    10 WS-FORMATTED2-FEIN char(9);
        15 WS-FORMATTED2-FEIN-1 char(7);
        15 WS-FORMATTED2-FEIN-2 char(2);
    10 WS-DOB-BUILD char(10);
        15 WS-DOB-BUILD-CCYY char(4);
        15 WS-DOB-BUILD-FILL1 char(1);
        15 WS-DOB-BUILD-MM char(2);
        15 WS-DOB-BUILD-FILL2 char(1);
        15 WS-DOB-BUILD-DD char(2);
    10 WS-DOB-FORMATTED char(8);
        15 WS-DOB-CCYY char(4);
        15 WS-DOB-MM char(2);
        15 WS-DOB-DD char(2);
    10 WS-INDX num(3);
end // end DOR39W3
