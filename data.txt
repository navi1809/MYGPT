package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIN32A ****
// COMPONENT NAME: AIN32A Numident Discrepancy Report
// ===============
// 
// DESCRIPTION:
// ============
// Report shows the SSN status and the
// action taken by the interface.
// 
// 
// ***********************
Program AIN32A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIN32W AIN32W; // record
  AIN32W-DET AIN32W-DET; // record
  AIN32W-FOOTER AIN32W-FOOTER; // record
  AIN32W-HEAD AIN32W-HEAD; // record
  AIN32W-SUBFOT AIN32W-SUBFOT; // record
  AIN32W-SUBH AIN32W-SUBH; // record
  AIN55W AIN55W; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  REP-COMMON REP-COMMON; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AIN32-RECIN SR-AIN32-RECIN; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record
  VSTRREC4 VSTRREC4; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIN32P9-MAIN: AIN32P9-MAIN();
  end // end main
end // end AIN32A


// process to close tha appl
Function AIN32P9-END-PARA()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process closes the application*/
  /* ************************************************************************/

  /* move the application name*/
  AIN55W.WS-PRG-NAME = "AIN32A";

  /* call ain55a with vdbcontrol,vmessage,ain55W*/
  call "AIN55A" (VDBCONTROL, VMESSAGE, AIN55W) {isNoRefresh = yes};

  /* check for error processing*/
  if (VDBCONTROL.URC > 104)
    WCM00P2-TO-CEP01A();
    exit program;
  end
  /* close the application*/

  exit program;

  /* cbsi end*/
end // end AIN32P9-END-PARA


// INTIALISE ALL VARIABLES
Function AIN32P9-INIT-PARA()
  /* cbsi start*/
  /* ************************************************************************/
  /* This process initialises all tha report records and varaiables*/
  /* empties all the records*/
  /* scans the serial file*/
  /* ************************************************************************/
  set REP-COMMON empty;
  set AIN32W-DET empty;
  set AIN32W-FOOTER empty;
  set AIN32W-HEAD empty;
  set AIN32W-SUBH empty;
  set VMESSAGE empty;
  set CEP01W empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;

  set FORMATW empty;
  set AIN32W-SUBFOT empty;
  set AIN32W empty;
  set REP-EOFNOF empty;
  set VSTRREC4 empty;
  set AIN55W empty;

  /* SET ALL REPORT VARIABLES TO INITIAL VALUES*/

  REP-COMMON.WS-PAGE-NO = 1;
  REP-COMMON.WS-LINE-NO = 1;
  REP-COMMON.WS-NEW-PAGE = "Y";

  /* PERFORM PROCESS TO INITIALISE CONSTANTS*/
  AIN32P9-INITCON();

  REP-COMMON.WS-MAX-NO-LINES = 56;

  /* PERFORM PROCESS TO READ INPUT PARAMETER FILE*/

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL;
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AIN32W-HEAD.UDATE = REP-COMMON.WS-DATE;
  AIN32W-HEAD.UTIME = VGVar.currentFormattedTime;

  AIN32W-HEAD.UREPORT-ID = "AIN32A";

  /* process to scan the serial record*/
  AIN32Q1-S01-SCAN();

  AIN32W.WS-DATE = SR-AIN32-RECIN.AIN30A-01-PROCESS-DATE;

  if (REP-COMMON.WS-MONTH == "01")
    AIN32W-HEAD.S-REPORT-MONTH = "JAN";
  end
  if (REP-COMMON.WS-MONTH == "02")
    AIN32W-HEAD.S-REPORT-MONTH = "FEB";
  end
  if (REP-COMMON.WS-MONTH == "03")
    AIN32W-HEAD.S-REPORT-MONTH = "MAR";
  end
  if (REP-COMMON.WS-MONTH == "04")
    AIN32W-HEAD.S-REPORT-MONTH = "APR";
  end
  if (REP-COMMON.WS-MONTH == "05")
    AIN32W-HEAD.S-REPORT-MONTH = "MAY";
  end
  if (REP-COMMON.WS-MONTH == "06")
    AIN32W-HEAD.S-REPORT-MONTH = "JUN";
  end
  if (REP-COMMON.WS-MONTH == "07")
    AIN32W-HEAD.S-REPORT-MONTH = "JUL";
  end
  if (REP-COMMON.WS-MONTH == "08")
    AIN32W-HEAD.S-REPORT-MONTH = "AUG";
  end
  if (REP-COMMON.WS-MONTH == "09")
    AIN32W-HEAD.S-REPORT-MONTH = "SEP";
  end
  if (REP-COMMON.WS-MONTH == "10")
    AIN32W-HEAD.S-REPORT-MONTH = "OCT";
  end
  if (REP-COMMON.WS-MONTH == "11")
    AIN32W-HEAD.S-REPORT-MONTH = "NOV";
  end
  if (REP-COMMON.WS-MONTH == "12")
    AIN32W-HEAD.S-REPORT-MONTH = "DEC";
  end

  AIN32W-HEAD.S-REPORT-YEAR = REP-COMMON.WS-CCYY;

  /* cbsi end*/
end // end AIN32P9-INIT-PARA


// INITIALISE CONSTANTS
Function AIN32P9-INITCON()
  /* ************************************************************************/
  /* THIS PROCESS IS TO INITIALIZE ALL THE REPORT CONSTANTS*/
  /* ************************************************************************/
  /*  */
  AIN32W-HEAD.CONSTANT1 = "PAGE-NBR";
  AIN32W-HEAD.FILLER1 = " ";
  AIN32W-HEAD.FILLER2 = " ";
  AIN32W-HEAD.CONSTANT2 = "STATE";
  AIN32W-HEAD.FILLER3 = " ";
  AIN32W-HEAD.CONSTANT3 = "OF";
  AIN32W-HEAD.FILLER4 = " ";
  AIN32W-HEAD.CONSTANT4 = "NEVADA";
  AIN32W-HEAD.FILLER5 = " ";
  AIN32W-HEAD.CONSTANT5 = "DATE";
  AIN32W-HEAD.FILLER6 = " ";
  AIN32W-HEAD.FILLER7 = " ";
  AIN32W-HEAD.FILLER8 = " ";
  AIN32W-HEAD.CONSTANT6 = "NUMIDENT";
  AIN32W-HEAD.FILLER9 = " ";
  AIN32W-HEAD.CONSTANT7 = "INTERFACE";
  AIN32W-HEAD.FILLER10 = " ";
  AIN32W-HEAD.CONSTANT8 = "REPORT";
  AIN32W-HEAD.FILLER11 = " ";
  AIN32W-HEAD.CONSTANT9 = "TIME";
  AIN32W-HEAD.FILLER12 = " ";
  AIN32W-HEAD.FILLER13 = " ";
  AIN32W-HEAD.CONSTANT10 = "REPORT";
  AIN32W-HEAD.FILLER14 = " ";
  AIN32W-HEAD.CONSTANT11 = "MONTH";
  AIN32W-HEAD.FILLER15 = " ";
  AIN32W-HEAD.FILLER-COMMA = ",";
  AIN32W-HEAD.FILLER16 = " ";
  AIN32W-HEAD.FILLER17 = " ";
  AIN32W-HEAD.CONSTANT12 = "UNVERIFIED";
  AIN32W-HEAD.FILLER18 = " ";
  AIN32W-HEAD.CONSTANT13 = "SSN'S";
  AIN32W-HEAD.FILLER19 = " ";
  AIN32W-HEAD.FILLER20 = " ";
  /*  */
  AIN32W-SUBH.CONSTANT1 = "DISTRICT";
  AIN32W-SUBH.FILLER1 = " ";
  AIN32W-SUBH.CONSTANT2 = "OFFICE";
  AIN32W-SUBH.FILLER2 = " ";
  AIN32W-SUBH.CONSTANT3 = "WORKER";
  AIN32W-SUBH.FILLER3 = " ";
  AIN32W-SUBH.CONSTANT4 = "PROCESS";
  AIN32W-SUBH.FILLER4 = " ";
  AIN32W-SUBH.CONSTANT5 = "PERSON";
  AIN32W-SUBH.FILLER5 = " ";
  AIN32W-SUBH.CONSTANT6 = "DATE";
  AIN32W-SUBH.FILLER6 = " ";
  AIN32W-SUBH.CONSTANT7 = "OF";
  AIN32W-SUBH.FILLER7 = " ";
  AIN32W-SUBH.CONSTANT8 = "LOC";
  AIN32W-SUBH.FILLER8 = " ";
  AIN32W-SUBH.CONSTANT9 = "C/L";
  AIN32W-SUBH.FILLER9 = " ";
  AIN32W-SUBH.CONSTANT10 = "NUMBER";
  AIN32W-SUBH.FILLER10 = " ";
  AIN32W-SUBH.CONSTANT11 = "NAME";
  AIN32W-SUBH.FILLER11 = " ";
  AIN32W-SUBH.CONSTANT12 = "DATE";
  AIN32W-SUBH.FILLER12 = " ";
  AIN32W-SUBH.CONSTANT13 = "SSN";
  AIN32W-SUBH.FILLER13 = " ";
  AIN32W-SUBH.CONSTANT14 = "BIRTH";
  AIN32W-SUBH.FILLER14 = " ";
  AIN32W-SUBH.CONSTANT15 = "CODE";
  AIN32W-SUBH.FILLER15 = " ";
  AIN32W-SUBH.CONSTANT16 = "DESCRIPTION";
  AIN32W-SUBH.FILLER16 = " ";
  AIN32W-SUBH.FILLER17 = " ";
  /*  */
  AIN32W-DET.FILLER1 = " ";
  AIN32W-DET.FILLER2 = " ";
  AIN32W-DET.FILLER3 = " ";
  AIN32W-DET.FILLER4 = " ";
  AIN32W-DET.FILLER5 = " ";
  AIN32W-DET.FILLER6 = " ";
  AIN32W-DET.FILLER7 = " ";
  AIN32W-DET.FILLER8 = " ";
  AIN32W-DET.FILLER9 = " ";
  AIN32W-DET.FILLER10 = " ";
  AIN32W-DET.FILLER11 = " ";
  AIN32W-DET.FILLER12 = " ";
  AIN32W-DET.FILLER13 = " ";
  /*  */
  AIN32W-SUBFOT.FILLER1 = " ";
  AIN32W-SUBFOT.FILLER2 = " ";
  AIN32W-SUBFOT.CONSTANT1 = "DISTRICT";
  AIN32W-SUBFOT.FILLER3 = " ";
  AIN32W-SUBFOT.CONSTANT2 = "/";
  AIN32W-SUBFOT.FILLER4 = " ";
  AIN32W-SUBFOT.CONSTANT3 = "OFFICE";
  AIN32W-SUBFOT.FILLER5 = " ";
  AIN32W-SUBFOT.CONSTANT4 = "LOCATION";
  AIN32W-SUBFOT.FILLER6 = " ";
  AIN32W-SUBFOT.CONSTANT5 = "SUBTOTALS";
  AIN32W-SUBFOT.FILLER7 = " ";
  AIN32W-SUBFOT.FILLER8 = " ";
  AIN32W-SUBFOT.CONSTANT6 = "TOTAL";
  AIN32W-SUBFOT.FILLER9 = " ";
  AIN32W-SUBFOT.CONSTANT7 = "RECORDS";
  AIN32W-SUBFOT.FILLER10 = " ";
  AIN32W-SUBFOT.FILLER11 = " ";
  AIN32W-SUBFOT.FILLER12 = " ";
  /*  */
  AIN32W-FOOTER.FILLER1 = " ";
  AIN32W-FOOTER.CONSTANT1 = "REPORT";
  AIN32W-FOOTER.FILLER2 = " ";
  AIN32W-FOOTER.CONSTANT2 = "SUMMARY";
  AIN32W-FOOTER.FILLER3 = " ";
  AIN32W-FOOTER.FILLER4 = " ";
  AIN32W-FOOTER.CONSTANT3 = "TOTAL";
  AIN32W-FOOTER.FILLER5 = " ";
  AIN32W-FOOTER.CONSTANT4 = "RECORDS";
  AIN32W-FOOTER.FILLER6 = " ";
  AIN32W-FOOTER.FILLER7 = " ";
  AIN32W-FOOTER.FILLER8 = " ";
  /*  */
end // end AIN32P9-INITCON


// REPORTS MAIN PARA
Function AIN32P9-MAIN()
  /* cbsi start*/
  /* ************************************************************************/
  /* This program has main control over this application*/
  /* initailises all the report variables*/
  /* prints ths report*/
  /* closes the application*/
  /* ************************************************************************/
  /* PERFORM PROCESS TO INITIALISE VARIABLES*/

  AIN32P9-INIT-PARA();

  /* PERFORM PROCESS TO PRINT REPORT*/

  AIN32P9-PRINT-PARA();

  /* PERFORM PROCESS TO END;*/
  AIN32P9-END-PARA();
  /* cbsi end*/
end // end AIN32P9-MAIN


// POPULATING REPORTS DETAILS
Function AIN32P9-POP-DET()
  /* ************************************************************************/
  /* THIS PROCESS IS TO FORMAT AND MOVE THE RETRIEVED VALUES TO THE REPORT*/
  /* VARIABLES.*/
  /* CONCATENATES SOME VARIABLES USING WST50A.*/
  /* USES A COMMON REPORTS PROCESS FORMAT-PROC*/
  /* SETS ALL THE FLAGS TO FORMAT THE REPORT VARIABLE*/
  /* ************************************************************************/

  AIN32W-DET.S-DISTRICT = SR-AIN32-RECIN.AIN30A-01-OFC-CD;
  AIN32W-DET.S-CASELOAD = SR-AIN32-RECIN.AIN30A-01-CASLD-ID;
  AIN32W-DET.S-WRKR-NMB = SR-AIN32-RECIN.AIN30A-01-NOMADS-USRID;

  set VSTRREC4 empty;

  VSTRREC4.USTRING = SR-AIN32-RECIN.AIN30A-01-LST-NM;
  VSTRREC4.USTRLEN = 30;
  VSTRREC4.UCONCAT = SR-AIN32-RECIN.AIN30A-01-MD-INIT;
  VSTRREC4.UCONLEN = 1;
  VSTRREC4.UCONCAT2 = SR-AIN32-RECIN.AIN30A-01-FST-NM;
  VSTRREC4.UCONLEN2 = 16;

  call "WST50A" (VSTRREC4) {isNoRefresh = yes};

  AIN32W.WS-P-NAME1 = VSTRREC4.USTRING;
  AIN32W-DET.S-NAME = AIN32W.WS-P-NAME;

  if (SR-AIN32-RECIN.AIN30A-01-PROCESS-DATE == 01010001
   || SR-AIN32-RECIN.AIN30A-01-PROCESS-DATE == 12319999)

    AIN32W.WS-PR-DATE = " ";
    AIN32W-DET.S-PROCESS-DATE1 = AIN32W.WS-PR-MONTH;
    AIN32W-DET.S-PROCESS-DATE2 = AIN32W.WS-PR-DAY;
    AIN32W-DET.S-PROCESS-DATE3 = AIN32W.WS-PR-YEAR;

  else

    AIN32W.WS-PR-DATE = SR-AIN32-RECIN.AIN30A-01-PROCESS-DATE;
    AIN32W-DET.S-PROCESS-DATE1 = AIN32W.WS-PR-MONTH;
    AIN32W-DET.S-PROCESS-DATE2 = AIN32W.WS-PR-DAY;
    AIN32W-DET.S-PROCESS-DATE3 = AIN32W.WS-PR-YEAR;

  end

  AIN32W.WS-PR-SSN = SR-AIN32-RECIN.AIN30A-01-SSN;
  AIN32W-DET.S-PERSON-SSN1 = AIN32W.WS-PR-SSN1;
  AIN32W-DET.S-PERSON-SSN2 = AIN32W.WS-PR-SSN2;
  AIN32W-DET.S-PERSON-SSN3 = AIN32W.WS-PR-SSN3;

  AIN32W.WS-PR-DOB = SR-AIN32-RECIN.AIN30A-01-DOB;
  AIN32W-DET.S-DATE-OF-BIRTH1 = AIN32W.WS-PR-DOB1;
  AIN32W-DET.S-DATE-OF-BIRTH2 = AIN32W.WS-PR-DOB2;
  AIN32W-DET.S-DATE-OF-BIRTH3 = AIN32W.WS-PR-DOB3;

  AIN32W-DET.S-DISCREP-FND = SR-AIN32-RECIN.AIN30A-01-CODE-DESC;

  /*  */
end // end AIN32P9-POP-DET


// POPULATING THE REPORTS FOOTER
Function AIN32P9-POP-FOOTER()
  /* ***********************************************************************/
  /* POPULATE FOOTER DETAILS*/
  /* ***********************************************************************/

  if (AIN32W.WS-SUM-TOT != 0)

    set FORMATW empty;

    FORMATW.INPUT-NUMBER = AIN32W.WS-SUM-TOT;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    FORMATW.DEC-COUNT = 0;

    REPP9-FORMAT-PROC();

    AIN32W-FOOTER.S-TOT-RECS-REPORT = FORMATW.OUTPUT-CHAR;

  else

    AIN32W-FOOTER.S-TOT-RECS-REPORT = "      0";

  end
  /*  */
end // end AIN32P9-POP-FOOTER


// POPULATING THE REPORTS FOOTER
Function AIN32P9-POP-SU-FO()
  /* ***********************************************************************/
  /* POPULATE THE SUB FOOTER DETAILS*/
  /* ***********************************************************************/

  if (AIN32W.WS-DIS-TOT != 0)

    set FORMATW empty;

    FORMATW.INPUT-NUMBER = AIN32W.WS-DIS-TOT;
    FORMATW.LENGTH = 7;
    FORMATW.FORMAT-FLAG = "N";
    FORMATW.DOLLAR-FLAG = "N";
    FORMATW.DEC-COUNT = 0;

    REPP9-FORMAT-PROC();

    AIN32W-SUBFOT.S-TOTAL-RECS-DIST = FORMATW.OUTPUT-CHAR;

  else

    AIN32W-SUBFOT.S-TOTAL-RECS-DIST = "      0";

  end

  /*  */
end // end AIN32P9-POP-SU-FO


// PROCESS TO PRINT THE REPORT
Function AIN32P9-PRINT-PARA()
  /* ***********************************************************************/
  /* THIS PROCESS IS TO PRINT THE REPORT*/
  /* 1. PRINTS THE 'NO DATA TO REPORT' IF THERE IS NO DATA*/
  /* 2. PERFORMS THE ADDITIONAL PROCESSING PROCESS*/
  /* ***********************************************************************/

  /* ***********************************************************************/
  /* ERROR PROCESSING FOR SERIAL RECORD*/
  /* ***********************************************************************/

  if (SR-AIN32-RECIN is endOfFile)

    AIN32P9-PRN-HEAD();
    REP132P9-NRF-PROC();

    return;

  end

  while (SR-AIN32-RECIN.AIN30A-01-VERIFIED-CODE == "V")

    AIN32Q1-S01-SCAN();

  end

  AIN32W.WS-OFC-CD = SR-AIN32-RECIN.AIN30A-01-OFC-CD;

  while (SR-AIN32-RECIN not endOfFile
   && SR-AIN32-RECIN.AIN30A-01-VERIFIED-CODE != "V")

    if (SR-AIN32-RECIN.AIN30A-01-OFC-CD != AIN32W.WS-OFC-CD)

      AIN32P9-POP-SU-FO();

      if (REP-COMMON.WS-LINE-NO < REP-COMMON.WS-MAX-NO-LINES)

        AIN32P9-PRN-SU-FO();

      else

        SR-132REP-RECOUT.PRNT-CC = "1";

        AIN32P9-PRN-HEAD();
        AIN32P9-PRN-SU-FO();

      end

      REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

      SR-132REP-RECOUT.PRNT-CC = "1";
      REP-COMMON.WS-NEW-PAGE = "Y";
      AIN32W.WS-DIS-TOT = 0;
      AIN32W.WS-DIS-VER = 0;
      AIN32W.WS-DIS-PRO = 0;

    end

  /* **********************************************************************/
  /* PRINT HEADER AND SUB HEADER AT THE START OF A NEW PAGE*/
  /* AND RESET NEW PAGE INDICATOR*/
  /* **********************************************************************/

    if ((REP-COMMON.WS-NEW-PAGE == "Y"))

      AIN32P9-PRN-HEAD();

      AIN32P9-PRN-SUBH();

      REP-COMMON.WS-NEW-PAGE = "N";

    end

  /* **********************************************************************/
  /* PERFORM PROCESS TO POPULATE THE DETAILS*/
  /* **********************************************************************/

    AIN32P9-POP-DET();

  /* **********************************************************************/
  /* PERFORM PROCESS TO PRINT THE DETAILS*/
  /* **********************************************************************/

    AIN32P9-PRN-DETAIL();

  /* **********************************************************************/
  /* WI#27602 - ELIMINATED CHECK FOR VERIFICATION OF 'V' SINCE NOW AIN32A*/
  /* WILL ONLY REPORT UNVERIFIED SSN'S.*/
  /* **********************************************************************/

  /* IF SR-AIN32-RECIN.AIN30A-01-VERIFIED-CODE = 'V';*/
  /* AIN32W.WS-DIS-VER = AIN32W.WS-DIS-VER + 1;*/
  /* AIN32W.WS-DIS-TOT = AIN32W.WS-DIS-TOT + 1;*/
  /* AIN32W.WS-SUM-VER = AIN32W.WS-SUM-VER + 1;*/
  /* AIN32W.WS-SUM-TOT = AIN32W.WS-SUM-TOT + 1;*/
  /* ELSE;*/
    AIN32W.WS-DIS-PRO = AIN32W.WS-DIS-PRO + 1;
    AIN32W.WS-DIS-TOT = AIN32W.WS-DIS-TOT + 1;
    AIN32W.WS-SUM-PRO = AIN32W.WS-SUM-PRO + 1;
    AIN32W.WS-SUM-TOT = AIN32W.WS-SUM-TOT + 1;
  /* END;*/


  /* **********************************************************************/
  /* PRINT THE HEADING AND THE SUB HEADING IF END OF PAGE*/
  /* **********************************************************************/

    if ((REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES))
      REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;
      REP-COMMON.WS-NEW-PAGE = "Y";
      SR-132REP-RECOUT.PRNT-CC = "1";
    end

  /* **********************************************************************/
  /* PERFORM PROCESS TO SCAN THE CURSOR*/
  /* **********************************************************************/

    AIN32W.WS-OFC-CD = SR-AIN32-RECIN.AIN30A-01-OFC-CD;

    AIN32Q1-S01-SCAN();

    while (SR-AIN32-RECIN.AIN30A-01-VERIFIED-CODE == "V"
     && SR-AIN32-RECIN not endOfFile)

      AIN32Q1-S01-SCAN();

    end
  end

  AIN32P9-POP-SU-FO();

  if (REP-COMMON.WS-LINE-NO <= REP-COMMON.WS-MAX-NO-LINES)

    AIN32P9-PRN-SU-FO();

  else

    SR-132REP-RECOUT.PRNT-CC = "1";

    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

    AIN32P9-PRN-HEAD();
    AIN32P9-PRN-SU-FO();

  end

  /* ************************************************************************/
  /* PERFORM PROCESS TO POPULATE FOOTER*/
  /* ************************************************************************/

  AIN32P9-POP-FOOTER();

  if (REP-COMMON.WS-LINE-NO <= REP-COMMON.WS-MAX-NO-LINES)

  /* ************************************************************************/
  /* PERFROM PROCESS TO PRINT THE FOOTER*/
  /* ************************************************************************/

    AIN32P9-PRN-FOOTER();

  else

    SR-132REP-RECOUT.PRNT-CC = "1";

    REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

    AIN32P9-PRN-HEAD();
    AIN32P9-PRN-FOOTER();

  end

  /* ************************************************************************/
  /* PERFORM END PROCESS*/
  /* ************************************************************************/

  REP132P9-EOR-PROC();

  /*  */
end // end AIN32P9-PRINT-PARA


// to print the detail line
Function AIN32P9-PRN-DETAIL()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the detail record*/
  /* uses the common process to print the record*/
  /* ***********************************************************************/
  SR-132REP-RECOUT.UFIELD = AIN32W-DET.LINE1;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN32P9-PRN-DETAIL


// to pritn the footer
Function AIN32P9-PRN-FOOTER()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the footer record*/
  /* uses the common process to print the record*/
  /* ***********************************************************************/
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE4;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE5;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE6;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-FOOTER.LINE7;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN32P9-PRN-FOOTER


// process is to print the header
Function AIN32P9-PRN-HEAD()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the header record*/
  /* sets the page number*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  AIN32W-HEAD.UPAGE = REP-COMMON.WS-PAGE-NO;

  /* MOVE EACH LINE OF HEADER TO MAP AND PRINT IT*/
  SR-132REP-RECOUT.UFIELD = AIN32W-HEAD.LINE1;
  WR-132REP-OUT-FILE();


  /* RESETING THE PAGE BREAK FLAG*/
  SR-132REP-RECOUT.PRNT-CC = " ";

  SR-132REP-RECOUT.UFIELD = AIN32W-HEAD.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-HEAD.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-HEAD.LINE4;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN32P9-PRN-HEAD


// process to print the subfooter
Function AIN32P9-PRN-SU-FO()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the subfooter record*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE4;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE5;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE6;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE7;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBFOT.LINE8;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN32P9-PRN-SU-FO


// PRINTING THE REPORT'S SUB-HEAD
Function AIN32P9-PRN-SUBH()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to print the subheader record*/
  /* sets the control character*/
  /* uses the common process to print the record*/
  /* resets the control character*/
  /* ***********************************************************************/
  /* MOVE EACD LINE OF SUBHEADER TO MAP*/
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBH.LINE1;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBH.LINE2;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBH.LINE3;
  WR-132REP-OUT-FILE();
  SR-132REP-RECOUT.UFIELD = AIN32W-SUBH.LINE4;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AIN32P9-PRN-SUBH


// to scan the input file
Function AIN32Q1-S01-SCAN()
  /* cbsi start*/
  /* ***********************************************************************/
  /* This process is to scan the input file*/
  /* takes care of error conditions*/
  /* ***********************************************************************/
  VGVar.handleHardIOErrors = 1;
  try
    get next SR-AIN32-RECIN ;
  end
  if (SR-AIN32-RECIN is ioError && SR-AIN32-RECIN not endOfFile)
    VDBCONTROL.UPROC-NM = "AIN32P9-READIP";
    VDBCONTROL.UPROC-OBJ = "SR-AIN32-RECIN";
    VDBCONTROL.UPROC-OPT = "SCAN";

    VMESSAGE.UMSGINS[2] = "AIN32A";
    AIN32W.WS-ERR-CD = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AIN32W.WS-ERR-LAST-FOUR;
  /* MOVE 'SCAN ON INPUT RECORD FAILED'*/
  /* TO VDBCONTROL.UEZESQRRM;*/
    VDBCONTROL.UMSQLCODE = 0;
    VMESSAGE.UMSGCODE = " ";
    WCM00P2-TO-CEP01A();
  end
  /* cbsi end*/
end // end AIN32Q1-S01-SCAN


Record AIN32W type basicRecord
  10 WS-P-NAME char(45) ; 
    15 WS-P-NAME1 char(38) ; 
    15 WS-P-NAME2 char(7) ; 
  10 WS-PR-DATE char(8) ; 
    15 WS-PR-MONTH char(2) ; 
    15 WS-PR-DAY char(2) ; 
    15 WS-PR-YEAR char(4) ; 
  10 WS-PR-SSN char(9) ; 
    15 WS-PR-SSN1 char(3) ; 
    15 WS-PR-SSN2 char(2) ; 
    15 WS-PR-SSN3 char(4) ; 
  10 WS-PR-DOB char(8) ; 
    15 WS-PR-DOB1 char(2) ; 
    15 WS-PR-DOB2 char(2) ; 
    15 WS-PR-DOB3 char(4) ; 
  10 WS-DIS-VER num(7) ; 
  10 WS-DIS-PRO num(7) ; 
  10 WS-DIS-TOT num(7) ; 
  10 WS-SUM-VER num(7) ; 
  10 WS-SUM-PRO num(7) ; 
  10 WS-SUM-TOT num(7) ; 
  10 WS-OFC-CD char(2) ; 
  10 WS-DATE char(8) ; 
    15 WS-MONTH char(2) ; 
    15 WS-DAY char(2) ; 
    15 WS-YEAR char(4) ; 
  10 WS-ERR-CD char(8) ; 
    15 WS-ERR-FIRST-FOUR char(4) ; 
    15 WS-ERR-LAST-FOUR char(4) ; 
end // end AIN32W


Record AIN32W-DET type basicRecord
  10 LINE1 char(132) ; 
    15 S-DISTRICT char(2) ; 
    15 FILLER1 char(1) ; 
    15 S-CASELOAD char(5) ; 
    15 FILLER2 char(1) ; 
    15 S-WRKR-NMB char(8) ; 
    15 FILLER3 char(1) ; 
    15 S-NAME char(30) ; 
    15 FILLER4 char(1) ; 
    15 S-PROCESS-DATE1 char(2) ; 
    15 FILLER5 char(1) ; 
    15 S-PROCESS-DATE2 char(2) ; 
    15 FILLER6 char(1) ; 
    15 S-PROCESS-DATE3 char(4) ; 
    15 FILLER7 char(1) ; 
    15 S-PERSON-SSN1 char(3) ; 
    15 FILLER8 char(1) ; 
    15 S-PERSON-SSN2 char(2) ; 
    15 FILLER9 char(1) ; 
    15 S-PERSON-SSN3 char(4) ; 
    15 FILLER10 char(1) ; 
    15 S-DATE-OF-BIRTH1 char(2) ; 
    15 FILLER11 char(1) ; 
    15 S-DATE-OF-BIRTH2 char(2) ; 
    15 FILLER12 char(1) ; 
    15 S-DATE-OF-BIRTH3 char(4) ; 
    15 FILLER13 char(1) ; 
    15 S-DISCREP-FND char(49) ; 
end // end AIN32W-DET


Record AIN32W-FOOTER type basicRecord
  10 LINE1 char(132) ; 
    15 FILLER1 char(132) ; 
  10 LINE2 char(132) ; 
    15 CONSTANT1 char(6) ; 
    15 FILLER2 char(1) ; 
    15 CONSTANT2 char(7) ; 
    15 FILLER3 char(118) ; 
  10 LINE3 char(132) ; 
    15 FILLER4 char(132) ; 
  10 LINE4 char(132) ; 
    15 CONSTANT3 char(5) ; 
    15 FILLER5 char(127) ; 
  10 LINE5 char(132) ; 
    15 CONSTANT4 char(7) ; 
    15 FILLER6 char(125) ; 
  10 LINE6 char(132) ; 
    15 FILLER7 char(132) ; 
  10 LINE7 char(132) ; 
    15 S-TOT-RECS-REPORT char(7) ; 
    15 FILLER8 char(125) ; 
end // end AIN32W-FOOTER


Record AIN32W-HEAD type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(1) ; 
    15 UPAGE char(4) ; 
    15 FILLER2 char(36) ; 
    15 CONSTANT2 char(5) ; 
    15 FILLER3 char(1) ; 
    15 CONSTANT3 char(2) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT4 char(6) ; 
    15 FILLER5 char(38) ; 
    15 CONSTANT5 char(4) ; 
    15 FILLER6 char(7) ; 
    15 UDATE char(8) ; 
    15 FILLER7 char(11) ; 
  10 LINE2 char(132) ; 
    15 UREPORT-ID char(8) ; 
    15 FILLER8 char(36) ; 
    15 CONSTANT6 char(8) ; 
    15 FILLER9 char(1) ; 
    15 CONSTANT7 char(9) ; 
    15 FILLER10 char(1) ; 
    15 CONSTANT8 char(6) ; 
    15 FILLER11 char(33) ; 
    15 CONSTANT9 char(4) ; 
    15 FILLER12 char(7) ; 
    15 UTIME char(8) ; 
    15 FILLER13 char(11) ; 
  10 LINE3 char(132) ; 
    15 CONSTANT10 char(6) ; 
    15 FILLER14 char(1) ; 
    15 CONSTANT11 char(5) ; 
    15 FILLER15 char(1) ; 
    15 S-REPORT-MONTH char(3) ; 
    15 FILLER-COMMA char(1) ; 
    15 FILLER16 char(1) ; 
    15 S-REPORT-YEAR char(4) ; 
    15 FILLER17 char(27) ; 
    15 CONSTANT12 char(10) ; 
    15 FILLER18 char(1) ; 
    15 CONSTANT13 char(5) ; 
    15 FILLER19 char(67) ; 
  10 LINE4 char(132) ; 
    15 FILLER20 char(132) ; 
end // end AIN32W-HEAD


Record AIN32W-SUBFOT type basicRecord
  10 LINE1 char(132) ; 
    15 FILLER1 char(132) ; 
  10 LINE2 char(132) ; 
    15 FILLER2 char(132) ; 
  10 LINE3 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER3 char(1) ; 
    15 CONSTANT2 char(1) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT3 char(6) ; 
    15 FILLER5 char(1) ; 
    15 CONSTANT4 char(8) ; 
    15 FILLER6 char(1) ; 
    15 CONSTANT5 char(9) ; 
    15 FILLER7 char(96) ; 
  10 LINE4 char(132) ; 
    15 FILLER8 char(132) ; 
  10 LINE5 char(132) ; 
    15 CONSTANT6 char(5) ; 
    15 FILLER9 char(127) ; 
  10 LINE6 char(132) ; 
    15 CONSTANT7 char(7) ; 
    15 FILLER10 char(125) ; 
  10 LINE7 char(132) ; 
    15 FILLER11 char(132) ; 
  10 LINE8 char(132) ; 
    15 S-TOTAL-RECS-DIST char(7) ; 
    15 FILLER12 char(125) ; 
end // end AIN32W-SUBFOT


Record AIN32W-SUBH type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(124) ; 
  10 LINE2 char(132) ; 
    15 CONSTANT2 char(6) ; 
    15 FILLER2 char(3) ; 
    15 CONSTANT3 char(6) ; 
    15 FILLER3 char(34) ; 
    15 CONSTANT4 char(7) ; 
    15 FILLER4 char(4) ; 
    15 CONSTANT5 char(6) ; 
    15 FILLER5 char(6) ; 
    15 CONSTANT6 char(4) ; 
    15 FILLER6 char(1) ; 
    15 CONSTANT7 char(2) ; 
    15 FILLER7 char(53) ; 
  10 LINE3 char(132) ; 
    15 CONSTANT8 char(3) ; 
    15 FILLER8 char(1) ; 
    15 CONSTANT9 char(3) ; 
    15 FILLER9 char(2) ; 
    15 CONSTANT10 char(6) ; 
    15 FILLER10 char(3) ; 
    15 CONSTANT11 char(4) ; 
    15 FILLER11 char(27) ; 
    15 CONSTANT12 char(4) ; 
    15 FILLER12 char(7) ; 
    15 CONSTANT13 char(3) ; 
    15 FILLER13 char(9) ; 
    15 CONSTANT14 char(5) ; 
    15 FILLER14 char(6) ; 
    15 CONSTANT15 char(4) ; 
    15 FILLER15 char(1) ; 
    15 CONSTANT16 char(11) ; 
    15 FILLER16 char(33) ; 
  10 LINE4 char(132) ; 
    15 FILLER17 char(132) ; 
end // end AIN32W-SUBH


