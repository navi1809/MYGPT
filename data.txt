What will be the output of the following code snippet?

public class ExceptionOutput {
    public static void main(String[] args) {
        try {
            methodThatThrows();
        } catch (RuntimeException e) {
            System.out.println("Caught: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("Caught Exception");
        }
    }

    public static void methodThatThrows() {
        throw new RuntimeException("Error occurred");
    }
}

correct answer


What will the following code output?
 String a = "abc";
            String b = "abc";
            System.out.println(a == b);          // (1)
            System.out.println(a.equals(b));     // (2)

            String c = new String("abc");
            System.out.println(a == c);          // (3)
            System.out.println(a.equals(c));     // (4)

correct answer

What will the following code output, and why?
 List names = Arrays.asList("John", "Jane", "Jack", "Doe");
            List result = names.stream()
                .filter(s -> s.startsWith("J"))
                .map(String::toUpperCase)
                .sorted()
                .collect(Collectors.toList());
            System.out.println(result);
			
			correct answer
			
List numbers = Arrays.asList(1, 2, 3, 4);
            int sum = numbers.stream().reduce(0, Integer::sum);
			
correct answer

What is the purpose of the `@Transactional(readOnly = true)` attribute, and how does it affect performance?
@Transactional(readOnly = true)

Partially correct


prototype bean real time example not answered correctly.

What are the implications of using `PROPAGATION_REQUIRES_NEW`?
partially correct

How would you configure a custom rollback policy in a Spring application?
not answered

Explain how to customize the behavior of default save and delete methods in Spring Data JPA.
answered

What is a named query, and how do you define it in JPA?
partially correct

Explain the difference between `@Modifying` and `@Query`.
partially correct

How can you handle stored procedures with `JdbcTemplate`?
answered correct

Explain how you would retrieve generated keys (e.g., auto-incremented IDs) after an insert operation with `JdbcTemplate`.
partially correct

How does `JdbcTemplate` handle SQL exceptions, and what type of exception does it throw?
Partially correct

How do you create and configure a basic `RestTemplate` instance in Spring?
Answerd correct

What is the `exchange` method in `RestTemplate`, and when would you use it?
not answered

How can you set custom headers in a `RestTemplate` request?
correctly answered

What is the difference between synchronous and asynchronous processing in REST, and how would you implement an async REST endpoint in Spring Boot?
correct

How can you retrieve unique values from a column while ignoring nulls? Provide an example.
correct

What is the purpose of using the `HAVING` clause in SQL? Give an example.
partially correct