package gov.illinois.access.business.rules;

import gov.illinois.access.business.customEntities.APP_TAX_RLT_Cargo;
import gov.illinois.access.business.customEntities.APP_TAX_RLT_Collection;
import gov.illinois.access.business.entities.APP_INDV_Collection;
import gov.illinois.access.business.entities.APP_IN_PRFL_Cargo;
import gov.illinois.access.business.entities.APP_IN_PRFL_Collection;
import gov.illinois.access.business.entities.NO_ONE_Cargo;
import gov.illinois.access.business.entities.NO_ONE_Collection;
import gov.illinois.access.management.constants.AppConstants;
import gov.illinois.access.management.individuals.PeopleHandler;
import gov.illinois.framework.exceptions.FwException;
import gov.illinois.framework.management.constants.FwConstants;
import gov.illinois.framework.management.logging.ILog;
import gov.illinois.framework.management.messages.FwMessageList;
import gov.illinois.framework.management.messages.FwMessageTextLabel;
import gov.illinois.framework.management.util.FwDataCriteria;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
/**
* ABHouseholdMemberBO - Business Object
* skeleton auto generated - Architecture Team
* @Creation Date :Tue Dec 27 11:22:35 CST 2005
* Modified By:
* Modified on:
*/
public final class AFBHouseHoldMemberQuestionsBO extends AFBBO  {

	/**
	* Constructor
	*/
	 public AFBHouseHoldMemberQuestionsBO() {}



	public FwMessageList validateABHHQ(APP_INDV_Collection appIndvColl, APP_IN_PRFL_Collection appInColl, NO_ONE_Collection noOneColl, Map NoOneCheckedMap, boolean[] componentsDisplayed,String felonyId,String drugId,String blindId,String outOfStateId,PeopleHandler peopleHandler, APP_TAX_RLT_Collection taxIndvColl, String deptAging, String fosterCare) 
	{
		
		try{
			APP_IN_PRFL_Cargo appInCargo = null;
			NO_ONE_Cargo noCargo = null;
			APP_TAX_RLT_Cargo appTaxRltCargo = null;
			NoOneCheckedMap.put("NO_ONE_CHECKED_56", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_58", FwConstants.NO);
			// Added for ILIES-129516				
			NoOneCheckedMap.put("NO_ONE_CHECKED_5218", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_5219", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_41", FwConstants.NO);
			//Added by Uma for SSExpansion -- SSI benefits and Cash benefits
			NoOneCheckedMap.put("NO_ONE_CHECKED_418", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_419", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_421", FwConstants.NO);
			NoOneCheckedMap.put("NO_ONE_CHECKED_43", FwConstants.NO);
			boolean addMsg_BLINDDISABLED		= false;
			boolean addMsg_DRUGFELONIES 		= false;
    		// Added for ILIES-129516
			boolean addMsg_DRUGTRTMNTPRG 		= false;
			boolean addMsg_PAROLEPROBVIOL 		= false;
			boolean addMsg_OTHERFOODSTAMP		= false;
			//Added by Uma for SSExpansion -- SSI benefits and Cash benefits
			boolean addMsg_SSIBENEFITS			= false;
			boolean addMsg_CASHBENEFITS			= false;
			boolean addmsg_DEPTAGING = false;
			boolean addmsg_FOSTERCARE = false;
		  
			int noOneCollSize = noOneColl.size();	
			int appInCollSize = appInColl.size();
			int taxIndvCollSize = taxIndvColl.size();
			int appIndvCollSize = appIndvColl.size();

			//for each question
			for(int i = 0; i < noOneCollSize; i++) 
			{
				noCargo = (NO_ONE_Cargo) noOneColl.get(i);
				
				//for each person
				for(int j = 0; j < appInCollSize; j++) 
				{
					appInCargo = (APP_IN_PRFL_Cargo) appInColl.get(j);
					
					String noOneName = noCargo.getNo_one_name();

					//Commented Begin -  By santhi thanneeru- Update gatepost questions and readability #164562
					//if the responses are not unchecked and No One is checked, then
					//set a addMsg flag and 
					/*if(appInCargo.getDabl_resp() != null && noOneName.equals("DABL"))
					{
						//set the no one checked flag to true as well
						NoOneCheckedMap.put("NO_ONE_CHECKED_56", FwConstants.YES);
						addMsg_BLINDDISABLED = true;
					}
					else if(noOneName.equals("DABL"))
					{
						//set the no one checked flag to true as well
						NoOneCheckedMap.put("NO_ONE_CHECKED_56", FwConstants.YES);						
					}
					
					if(appInCargo.getDrug_feln_resp() != null && noOneName.equals("DRGFLN"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_58", FwConstants.YES);
						addMsg_DRUGFELONIES = true;
					}
					else if(noOneName.equals("DRGFLN"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_58", FwConstants.YES);						
					}
			        // Added for ILIES-129516 - Starts
					if(appInCargo.getDrug_trtmnt_prg_resp() != null && noOneName.equals("DRGTRTPRG"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_5218", FwConstants.YES);
						addMsg_DRUGTRTMNTPRG = true;
					}
					else if(noOneName.equals("DRGTRTPRG"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_5218", FwConstants.YES);						
					}
					if(appInCargo.getParole_prob_viol_resp() != null && noOneName.equals("PARPRBVL"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_5219", FwConstants.YES);
						addMsg_PAROLEPROBVIOL = true;
					}
					else if(noOneName.equals("PARPRBVL"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_5219", FwConstants.YES);						
					}
			        // Added for ILIES-129516 - Ends
					if(appInCargo.getRcv_fs_oth_st_resp() != null && noOneName.equals("OTHFS"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_41", FwConstants.YES);
						addMsg_OTHERFOODSTAMP = true;
					}
					else if(noOneName.equals("OTHFS"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_41", FwConstants.YES);
					}*/
					//Comment End -  By santhi thanneeru- Update gatepost questions and readability #164562
								
					//Added by Uma for SSExpansion -- SSI Benefits and Cash Benefits
					if(appInCargo.getSsi_benefit_resp() != null && noOneName.equals("SSIB"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_418", FwConstants.YES);
						addMsg_SSIBENEFITS = true;
					}
					else if(noOneName.equals("SSIB"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_418", FwConstants.YES);
					}
					
					if(appInCargo.getCash_benefit_resp() != null && noOneName.equals("CASHB"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_419", FwConstants.YES);
						addMsg_CASHBENEFITS = true;
					}
					else if(noOneName.equals("CASHB"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_419", FwConstants.YES);
					}
					if(appInCargo.getAging_sw() != null && noOneName.equals("AGISE")){
						NoOneCheckedMap.put("NO_ONE_CHECKED_421", FwConstants.YES);
					}
					else if(noOneName.equals("AGISE"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_421", FwConstants.YES);
						addmsg_DEPTAGING = true;
					}
					if(appInCargo.getFormer_foster_sw() != null && noOneName.equals("FSTRC")){
						NoOneCheckedMap.put("NO_ONE_CHECKED_43", FwConstants.YES);
					}
					else if(noOneName.equals("FSTRC"))
					{
						NoOneCheckedMap.put("NO_ONE_CHECKED_43", FwConstants.YES);
						addmsg_FOSTERCARE = true;
					}
				}
			}

			// Required Field Validations
			// No One Check Boxes for the sections
			Map cmpNoOneChecks = new HashMap();
			String noOneName = null;
			String noOneValue = null;
			for(int n=0;n<noOneCollSize;n++){
				noCargo = (NO_ONE_Cargo) noOneColl.get(n);
				noOneName = noCargo.getNo_one_name();
				noOneValue = noCargo.getNo_one_value();
				if(noOneName != null){
					cmpNoOneChecks.put(noOneName, noOneValue);				
				}
			}
			boolean setReqMsg = false;
			boolean disabExists = false;
			boolean drugFelonExists = false;
    		// Added for ILIES-129516
			boolean drugTrtPrgExists = false;
			boolean parPrbViolExists = false;
			boolean fsOthExists = false;
			//Added by Uma for SSExpansion -- SSI Benefits and Cash Benefits
			boolean ssiBnftExists = false;
			boolean cashBnftExists = false;
			boolean deptAgingExists = false;
			boolean fosterCareExists = false;
			//for each question
			for(int i = 0; i < appInCollSize; i++) 
			{
				appInCargo = (APP_IN_PRFL_Cargo) appInColl.get(i);
				//if the responses are not checked and No One is also not checked, then
				//set setReqMsg flag
				if(componentsDisplayed[0] == true && !disabExists)
				{
					if(appInCargo.getDabl_resp() == null && !cmpNoOneChecks.containsKey("DABL")){
						disabExists = false;
					} else if(appInCargo.getDabl_resp() != null || cmpNoOneChecks.containsKey("DABL")){
						disabExists = true;
					}
				}
				if(componentsDisplayed[1] == true && !drugFelonExists)
				{
					if(appInCargo.getDrug_feln_resp() == null && !cmpNoOneChecks.containsKey("DRGFLN")){
						drugFelonExists = false;
					} else if(appInCargo.getDrug_feln_resp() != null || cmpNoOneChecks.containsKey("DRGFLN")){
						drugFelonExists = true;;
					}
				}
        		// Added for ILIES-129516 - Starts
				if(componentsDisplayed[2] == true && !drugTrtPrgExists)
				{
					if(appInCargo.getDrug_trtmnt_prg_resp() == null && !cmpNoOneChecks.containsKey("DRGTRTPRG")){
						drugTrtPrgExists = false;
					} else if(appInCargo.getDrug_trtmnt_prg_resp() != null || cmpNoOneChecks.containsKey("DRGTRTPRG")){
						drugTrtPrgExists = true;;
					}
				}
				
				//Commented Begin -  By santhi thanneeru- Update gatepost questions and readability #164562
				/*if(componentsDisplayed[3] == true && !parPrbViolExists)
				{
					if(appInCargo.getParole_prob_viol_resp() == null && !cmpNoOneChecks.containsKey("PARPRBVL")){
						parPrbViolExists = false;
					} else if(appInCargo.getParole_prob_viol_resp() != null || cmpNoOneChecks.containsKey("PARPRBVL")){
						parPrbViolExists = true;;
					}
				}*/
				//Commented End -  By santhi thanneeru- Update gatepost questions and readability #164562
				
        		// Added for ILIES-129516 - Ends
				if(componentsDisplayed[4] == true && !fsOthExists)
				{
					if(appInCargo.getRcv_fs_oth_st_resp() == null && !cmpNoOneChecks.containsKey("OTHFS")){
						fsOthExists = false;
					} else if(appInCargo.getRcv_fs_oth_st_resp()!= null || cmpNoOneChecks.containsKey("OTHFS")){
						fsOthExists = true;	
					}
				}
				//Added by Uma for SSExpansion -- SSI Benefits and Cash Benefits
				if(!ssiBnftExists)
				{
					if(appInCargo.getSsi_benefit_resp() == null && !cmpNoOneChecks.containsKey("SSIB")){
						ssiBnftExists = false;
					} else if(appInCargo.getSsi_benefit_resp() != null || cmpNoOneChecks.containsKey("SSIB")){
						ssiBnftExists = true;
					}
				}
				if(!cashBnftExists)
				{
					if(appInCargo.getCash_benefit_resp() == null && !cmpNoOneChecks.containsKey("CASHB")){
						cashBnftExists = false;
					} else if(appInCargo.getCash_benefit_resp() != null || cmpNoOneChecks.containsKey("CASHB")){
						cashBnftExists = true;
					}
				}
				if(componentsDisplayed[7] == true && !deptAgingExists)
				{
					if(appInCargo.getAging_sw() == null && !cmpNoOneChecks.containsKey("AGISE")){
						deptAgingExists = false;
					} else if(appInCargo.getAging_sw()!= null || cmpNoOneChecks.containsKey("AGISE")){
						deptAgingExists = true;	
					}
				}
				if(componentsDisplayed[8] == true && !fosterCareExists)
				{
					if(appInCargo.getFormer_foster_sw() == null && !cmpNoOneChecks.containsKey("FSTRC")){
						fosterCareExists = false;
					} else if(appInCargo.getFormer_foster_sw()!= null || cmpNoOneChecks.containsKey("FSTRC")){
						fosterCareExists = true;	
					}
				}
			}
			
			    if((componentsDisplayed[0] == true && !disabExists)
				|| (componentsDisplayed[1] == true && !drugFelonExists)
				|| (componentsDisplayed[2] == true && !drugTrtPrgExists)
				//|| (componentsDisplayed[3] == true && !parPrbViolExists) //Commented by Santhi
				|| (componentsDisplayed[4] == true && !fsOthExists) 
				|| (componentsDisplayed[5] == true && !ssiBnftExists)
				|| (componentsDisplayed[6] == true && !cashBnftExists)
				|| (componentsDisplayed[7] == true && !deptAgingExists)
				|| (componentsDisplayed[8] == true && !fosterCareExists)){
					setReqMsg = true;
			}

			   
			 // Added for ILIES-137846   
		    int count = 0;
		    int noCount = 0;
		    
		    //test kush
		    
			/*if(taxIndvCollSize > 0){
				for(int k=0; k < taxIndvCollSize; k++){
					appTaxRltCargo = taxIndvColl.getCargo(k);
					if(appTaxRltCargo.getTax_dependent_sw().equals("Y")){
						if(appTaxRltCargo.getRef_indv_seq_num() == null || appTaxRltCargo.getRef_indv_seq_num().isEmpty() || appTaxRltCargo.getRef_indv_seq_num().equalsIgnoreCase("0") 
								|| appTaxRltCargo.getRef_indv_seq_num().equalsIgnoreCase("SEL")){
							this.addMessageCode("95071");
						}
						if(appTaxRltCargo.getSrc_indv_seq_num().equalsIgnoreCase(appTaxRltCargo.getRef_indv_seq_num())){
							this.addMessageCode("95070");
						}
						count++;
					}
					else if(appTaxRltCargo.getTax_dependent_sw().equals("N")){
						noCount++;
					}
				}
				if(count == taxIndvCollSize){
					this.addMessageCode("95069");
				}
				if(noCount == taxIndvCollSize){
					this.addMessageCode("95071");
				}
			}*/
		    //tes kush
			 // End Added for ILIES-137846 
			   
			//Commented Begin -  By santhi thanneeru- Update gatepost questions and readability #164562    
			/*if(setReqMsg){
				this.addMessageCode("30048");
			}*/
			 //Comment End -  By santhi thanneeru- Update gatepost questions and readability #164562
			
			
			//Changes Begin -  By santhi thanneeru- Update gatepost questions and readability #164562    
			if (isEmpty(felonyId) || isEmpty(blindId) || isEmpty(outOfStateId) || ("Y".equals(felonyId) && isEmpty(drugId))){
				this.addMessageCode("95139");
			}
												
			if(felonyId!=null && FwConstants.YES.equalsIgnoreCase(felonyId) && drugFelonExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("32107")};
				this.addMessageWithFieldValues("95067", error);
			}
			
			if(drugId!=null && FwConstants.YES.equalsIgnoreCase(drugId) && drugTrtPrgExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("131701")};
				this.addMessageWithFieldValues("95067", error);
			}
			
			if(blindId!=null && FwConstants.YES.equalsIgnoreCase(blindId) && disabExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("32106")};
				this.addMessageWithFieldValues("95067", error);
			}
			if(outOfStateId!=null && FwConstants.YES.equalsIgnoreCase(outOfStateId) && fsOthExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("32031")};
				this.addMessageWithFieldValues("95067", error);
			}
			//Changes End -  By santhi thanneeru- Update gatepost questions and readability #164562
			if(deptAging != null && FwConstants.YES.equalsIgnoreCase(deptAging) && deptAgingExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("10223")};
				this.addMessageWithFieldValues("95067", error);
			}
			if(fosterCare != null && FwConstants.YES.equalsIgnoreCase(fosterCare) && fosterCareExists == false){
				Object error[] = new Object[] { new FwMessageTextLabel("10222")};
				this.addMessageWithFieldValues("95067", error);
			}
			// If there are required field validations we will return from here itself
			if(this.hasMessages()) return this.getMessageList();
			
			//if any addMsg flags are true, add the appropriate message
			if(addMsg_BLINDDISABLED == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("32106"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
			if(addMsg_DRUGFELONIES  == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("32107"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
	        // Added for ILIES-129516 - Starts
			if(addMsg_DRUGTRTMNTPRG  == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("32107"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
			/*if(addMsg_PAROLEPROBVIOL  == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("32107"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}*/
	        // Added for ILIES-129516 - Ends
			if(addMsg_OTHERFOODSTAMP == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("32031"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
			//Added by Uma for SSExpansion -- SSI Benefits and Cash Benefits
			if(addMsg_SSIBENEFITS == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("80345"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
			if(addMsg_CASHBENEFITS == true)
			{
				Object error[] =  new Object[] { new FwMessageTextLabel("80347"), new FwMessageTextLabel("10041"), new FwMessageTextLabel("10041")};
				this.addMessageWithFieldValues("20019", error);
			}
			//handle null tax dependent 

			/*for(APP_TAX_RLT_Cargo cargo1:taxIndvColl.getResults()){
				if(cargo1.getTax_dependent_sw().equalsIgnoreCase("Y")){
				for(APP_TAX_RLT_Cargo cargo2:taxIndvColl.getResults()){
					if(cargo2.getTax_dependent_sw().equalsIgnoreCase("Y")){
					if(cargo1.getSrc_indv_seq_num().equalsIgnoreCase(cargo2.getRef_indv_seq_num()) && cargo2.getSrc_indv_seq_num().equalsIgnoreCase(cargo1.getRef_indv_seq_num()) ){
						this.addMessageWithFieldValues("95068", new String[]{peopleHandler.getFirstName(cargo1.getSrc_indv_seq_num()),peopleHandler.getFirstName(cargo2.getSrc_indv_seq_num()),
										peopleHandler.getFirstName(cargo2.getSrc_indv_seq_num()), peopleHandler.getFirstName(cargo1.getSrc_indv_seq_num())});
							}	
						}
					}
				}
			}*/
			//ffcs starts
			for(int i = 0; i < appInCollSize; i++) 
			{
				appInCargo = (APP_IN_PRFL_Cargo) appInColl.get(i);
				String ffcSw = appInCargo.getFormer_foster_sw();
				String ffcStateCd = appInCargo.getFormer_foster_state_cd();
				if(fosterCare != null && FwConstants.YES.equalsIgnoreCase(fosterCare) && 
						(ffcSw !=null && !ffcSw.equalsIgnoreCase(FwConstants.NO)) &&
						(ffcStateCd !=null && ("00").equalsIgnoreCase(ffcStateCd))){
					this.addMessageCode("99290");
					break;
				}
				
			}
			//ffcs ends
		  return this.getMessageList();
		} catch (FwException fe) {
			throw fe;
		} catch (Exception e) {
			FwException fe = createFwException(this.getClass().getName(), "validateABHHQ", e);
			throw fe;
		}
	  }



	private boolean isEmpty(String felonyId) {
		return "null".equals(felonyId) || "".equals(felonyId);
	}

	/**
	* Method description here
	*/
	public void storeHouseholdMemberDetail() {

		try {
			
			// SEC-1344: Below piece of code is added to satisfy Fortify tool complaining empty try-catch block.
			// Please remove this code when you have something to write here.
			int a = 0, b = 0, c = a + b;
			log(ILog.INFO, "Unused variable value: " + c);

		} catch(FwException fe) {
			throw fe;
		} catch(Exception e) {
			FwException fe = createFwException(this.getClass().getName(), "storeHouseholdMemberDetail", e);
			throw fe;
		}
	}

	/**
	* Method description here
	*/
	public void loadHouseholdMemberDetail() {

		try {

			// SEC-1344: Below piece of code is added to satisfy Fortify tool complaining empty try-catch block.
			// Please remove this code when you have something to write here.
			int a = 0, b = 0, c = a + b;
			log(ILog.INFO, "Unused variable value: " + c);

		} catch(FwException fe) {
			throw fe;
		} catch(Exception e) {
			FwException fe = createFwException(this.getClass().getName(), "loadHouseholdMemberDetail", e);
			throw fe;
		}
	}
	/*
	 * 	Method to update the components displayed
	 *  order plays a vital role
	*/
	public boolean[] getComponentsDisplayed(Map beforeCollMap, boolean[] componentsDisplayed){
		try{
			if(!beforeCollMap.isEmpty()){
				ArrayList cmpList = (ArrayList)beforeCollMap.get("PAGE_COMPONENT_LIST");
				if(!cmpList.isEmpty()){
					if(cmpList.contains("56")){
						componentsDisplayed[0] =  true;
					}
					if(cmpList.contains("58")){
						componentsDisplayed[1] =  true;
						// Added for ILIES-129516 - Starts
						if(cmpList.contains("5218")){
							componentsDisplayed[2] =  true;
						}
						if(cmpList.contains("5219")){
							componentsDisplayed[3] =  true;
						}
		        		// Added for ILIES-129516 - Ends
					}
	        		
					if(cmpList.contains("41")){
						componentsDisplayed[4] =  true;
					}
					if(cmpList.contains("418")){
						componentsDisplayed[5] =  true;
					}
					if(cmpList.contains("419")){
						componentsDisplayed[6] =  true;
					}
					if(cmpList.contains("421")){
						componentsDisplayed[7] = true;
					}
					if(cmpList.contains("43")){
						componentsDisplayed[8] = true;
					}
				}
			}
			return componentsDisplayed;
		} catch(FwException fe) {
			throw fe;
		} catch(Exception e) {
			FwException fe = createFwException(this.getClass().getName(), "getComponentsDisplayed", e);
			throw fe;
		}
	}
	
	/**
	 * Method update FFCstate state code
	 * @param pageCollAppInPrflCargo 
	 * @param sesAppInPrflCargo 
	*/
	public void storeFormerFosterStateCd(APP_IN_PRFL_Cargo pageCollAppInPrflCargo, String appNum, APP_IN_PRFL_Cargo sesAppInPrflCargo){
		log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::BEGIN");
		
		try {
			if(pageCollAppInPrflCargo !=null && StringUtils.isNotEmpty(pageCollAppInPrflCargo.getIndv_seq_num())
				&& StringUtils.isNotEmpty(appNum)){
				
				Map criteriaMap = null;
				FwDataCriteria[] criteria = null;
				APP_IN_PRFL_Collection appInPrflColl = new APP_IN_PRFL_Collection();
				String appNumber = appNum;
				String indvSeqNum = pageCollAppInPrflCargo.getIndv_seq_num();
				
				boolean updtSuccess= false;
				log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::appNum"+appNum);
				log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::indvSeqNum"+indvSeqNum);
				
				
				criteriaMap = new HashMap();
				criteria = new FwDataCriteria[2];
				
				criteria[0] = new FwDataCriteria();
				criteria[0].setColumn_name(AppConstants.APP_NUM);
				criteria[0].setColumn_value(appNumber);
				criteria[0].setData_type(FwConstants.STRING);
				
				criteria[1] = new FwDataCriteria();
				criteria[1].setColumn_name(AppConstants.INDV_SEQ_NUM);
				criteria[1].setColumn_value(indvSeqNum);
				criteria[1].setData_type(FwConstants.LONG);
				
				criteriaMap.put(FwConstants.CRITERIA, criteria);
				
				APP_IN_PRFL_Cargo[] dbAppInPrflCargoArr = (APP_IN_PRFL_Cargo[]) appInPrflColl.select(FwConstants.DAO, criteriaMap);
				APP_IN_PRFL_Collection updateAppInPrflColl = new APP_IN_PRFL_Collection();
				log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::Existing APP_INPRFL cargos fetched");

				for(APP_IN_PRFL_Cargo dbAppInPrflcargo : dbAppInPrflCargoArr){
					updtSuccess =false;
					if(pageCollAppInPrflCargo.getFormer_foster_sw()== null || "N".equalsIgnoreCase(pageCollAppInPrflCargo.getFormer_foster_sw())){
						
						dbAppInPrflcargo.setFormer_foster_state_cd(null);
						dbAppInPrflcargo.setRowAction(FwConstants.ROWACTION_UPDATE);
						updateAppInPrflColl.add(dbAppInPrflcargo);
						if(sesAppInPrflCargo !=null) sesAppInPrflCargo.setFormer_foster_state_cd(null);
					}
					else{
						if(StringUtils.isNotEmpty(pageCollAppInPrflCargo.getFormer_foster_state_cd())){
							
							String formerFosterStateCd = pageCollAppInPrflCargo.getFormer_foster_state_cd();
							log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::formerFosterStateCd"+formerFosterStateCd);

							dbAppInPrflcargo.setFormer_foster_state_cd(formerFosterStateCd);
							dbAppInPrflcargo.setRowAction(FwConstants.ROWACTION_UPDATE);
							updateAppInPrflColl.add(dbAppInPrflcargo);
							if(sesAppInPrflCargo !=null) sesAppInPrflCargo.setFormer_foster_state_cd(formerFosterStateCd);
						}
						
					}
					
					
					log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::Updating formerFosterStateCd for APP_IN_PRFL " +
							" seqNum:"+dbAppInPrflcargo.getIndv_seq_num()+
							" appNum:"+dbAppInPrflcargo.getApp_num());

				}
				log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::Updating APP_IN_PRFL cargos");

				if(updateAppInPrflColl != null && updateAppInPrflColl.size() > 0){
					updateAppInPrflColl.persist(FwConstants.DAO);
					updtSuccess =true;
				}
				
				
				log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::Updating APP_IN_PRFL completed");

			}
			
			log(ILog.DEBUG, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::END");

		} catch(FwException fe) {
			log(ILog.ERROR, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::appNumber::" + appNum + 
					" Exception info:: " + fe + "::message::" + fe.getMessage() + "::stackTrace::" + fe.getStackTrace() + "::cause::" + fe.getCause());
			throw fe;
		} catch(Exception e) {
			FwException fe = createFwException(this.getClass().getName(), "storeFormerFosterStateCd", e);
			log(ILog.ERROR, this.getClass().getSimpleName()+ ".storeFormerFosterStateCd ::appNumber::" + appNum + 
					" Exception info:: " + fe + "::message::" + fe.getMessage() + "::stackTrace::" + fe.getStackTrace() + "::cause::" + fe.getCause());
			
			throw fe;
		}
	}
	
	public boolean determineFosterStateCdStatus(APP_IN_PRFL_Cargo pageCollAppInPrflCargo, String appNum, APP_IN_PRFL_Cargo sesAppInPrflCargo){
		log(ILog.DEBUG, this.getClass().getSimpleName()+ ".determineFosterStateCdStatus ::BEGIN");
		boolean persistFosterState = true;
		try {
			if(pageCollAppInPrflCargo !=null && sesAppInPrflCargo!=null){
				String pageFfcsCode = pageCollAppInPrflCargo.getFormer_foster_state_cd();
				String sessionFfcsCode = sesAppInPrflCargo.getFormer_foster_state_cd();

				if(pageFfcsCode == null && sessionFfcsCode == null ){
					return false;
				}
				else if(pageFfcsCode != null && sessionFfcsCode !=null && pageFfcsCode.equalsIgnoreCase(sessionFfcsCode)){
					return false;
				}
			}
		
		}catch(FwException fe) {
			
			log(ILog.ERROR, this.getClass().getSimpleName()+ ".determinePersistFosterStateCdStatus ::appNumber::" + appNum + 
				" Exception info:: " + fe + "::message::" + fe.getMessage() + "::stackTrace::" + fe.getStackTrace() + "::cause::" + fe.getCause());
				throw fe;
		} catch(Exception e) {
		
			FwException fe = createFwException(this.getClass().getName(), ".determinePersistFosterStateCdStatus", e);
			log(ILog.ERROR, this.getClass().getSimpleName()+ ".determinePersistFosterStateCdStatus ::appNumber::" + appNum + 
				" Exception info:: " + fe + "::message::" + fe.getMessage() + "::stackTrace::" + fe.getStackTrace() + "::cause::" + fe.getCause());
		
			throw fe;
		}
		log(ILog.DEBUG, this.getClass().getSimpleName()+ ".determinePersistFosterStateCdStatus ::END");

		return persistFosterState;
	}
	
	
	
}