package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AIF51A ****
// This application populates the data received from the SSA
// into TWNSSA_LIS_INTRMDT table for further processing by the
// java application. This data would be inserted into access
// nevada database by the java application.
// ***********************
Program AIF51A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AIF51W AIF51W; // record
  CEP01W CEP01W; // record
  GDW GDW; // record
  H2-SSA-LIS-INTRMDT H2-SSA-LIS-INTRMDT; // record
  SR-AIF51-IN-REC SR-AIF51-IN-REC; // record
  SR-AIF51-LOG-REC SR-AIF51-LOG-REC; // record
  SR-AIF51-OUT-REC SR-AIF51-OUT-REC; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AIF51P9-MAIN: AIF51P9-MAIN();
  end // end main
end // end AIF51A


Function AIF51P9-CLEAN-TBL()

  WDB00PI();

  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIF51A";

  /* ************************************************************************/
  /* DELETE ROW FROM TWNELG_CASE_TSRSTL*/
  /* ************************************************************************/

  AIF51P9-DEL-SLI-Q1();

  /* ************************************************************************/
  /* Set error control flags*/
  /* UNRF - No record found flag (Y,N,1)*/
  /* UDUP - Duplicate key flag (Y,N)*/
  /* ************************************************************************/

  VDBCOMMON.UNRF = "N";
  VDBCOMMON.UDUP = "N";

  /* ************************************************************************/
  /* Perform DBM error processing*/
  /* ************************************************************************/

  WDB00PE-SQLERR();

  /* ************************************************************************/
end // end AIF51P9-CLEAN-TBL


Function AIF51P9-DEL-SLI-Q1()
  /* GET AIF51P9-DEL-SLI-Q1*/
  /* ***********************************************************************/
  /* THIS PROCESS PERFORMS A DELETE TWNSSG_LIS_INTRMDT*/
  /* TABLE*/
  /* ***********************************************************************/
  VDBCONTROL.UPROC-NM = "AIF51P9-DEL-SLI-Q1";
  VDBCONTROL.UPROC-OPT = "SQLEXEC";
  VDBCONTROL.UPROC-OBJ = "H2-SSA-LIS-INTRMDT";
  VDBCOMMON.USQLREC = "H2-SSA-LIS-INTRMDT";
  try
    execute delete 
      #sql{
        DELETE FROM
          TWNSSA_LIS_INTRMDT T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
        WHERE LIS_STATUS_FLAG = 'L'
      }
      for H2-SSA-LIS-INTRMDT ; // model = delete
  end
  /*  */
end // end AIF51P9-DEL-SLI-Q1


Function AIF51P9-INS-SLI()
  WDB00PI();

  /* ************************************************************************/
  /* Initialize:*/
  /* UACCTYP - Access type (R=read, W=write)*/
  /* UAPPLNAM - Application name*/
  /* ************************************************************************/

  VDBCONTROL.UACCTYP = "W";
  VDBCOMMON.UAPPLNAM = "AIF51A";

  /* ************************************************************************/
  /* INSERT ROW INTO TWNSSA_LIS_INTRMDT*/
  /* ************************************************************************/

  AIF51P9-INS-SLI-Q1();

  /* ************************************************************************/
  /* Set error control flags*/
  /* UNRF - No record found flag (Y,N,1)*/
  /* UDUP - Duplicate key flag (Y,N)*/
  /* ************************************************************************/

  VDBCOMMON.UNRF = "N";
  VDBCOMMON.UDUP = "Y";

  /* ************************************************************************/
  /* Perform DBM error processing*/
  /* ************************************************************************/

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC == 104) /* DUPLICATE KEY ADD TO THE OUTPUT FILE*/
    AIF51W.WS-DUP-REC-CNT = AIF51W.WS-DUP-REC-CNT + 1;
    move SR-AIF51-IN-REC to SR-AIF51-OUT-REC withV60Compat;
    AIF51P9-WRITE-OUT();
  else
    if (VDBCONTROL.URC > 104)
      WCM00P2-TO-CEP01A();
    end
  end
  /*  */
end // end AIF51P9-INS-SLI


Function AIF51P9-INS-SLI-Q1()
  VDBCONTROL.UPROC-NM = "AIF51P9-INS-SLI-Q1";
  VDBCONTROL.UPROC-OPT = "ADD";
  VDBCONTROL.UPROC-OBJ = "H2-SSA-LIS-INTRMDT";

  /* ******************************************************************/
  /* Move name of SQL row record used to common record*/
  /* ******************************************************************/

  VDBCOMMON.USQLREC = "H2-SSA-LIS-INTRMDT";
  try
    add H2-SSA-LIS-INTRMDT ;
  end
  /*  */
end // end AIF51P9-INS-SLI-Q1


Function AIF51P9-MAIN()
  set AIF51W empty;
  set SR-AIF51-IN-REC empty;
  set SR-AIF51-LOG-REC empty;
  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  AIF51W.WS-DATE = GDW.DTL;
  AIF51W.WS-PROCESS-DT-CCYY = AIF51W.WS-DATE-CCYY;
  AIF51W.WS-PROCESS-DT-MM = AIF51W.WS-DATE-MM;
  AIF51W.WS-PROCESS-DT-DD = AIF51W.WS-DATE-DD;
  AIF51W.WS-PROCESS-DT-SEP1 = "-";
  AIF51W.WS-PROCESS-DT-SEP2 = "-";

  AIF51P9-CLEAN-TBL();
  AIF51P9-READ-INPUT();
  while (sysVar.errorCode == "00000000")
    AIF51W.WS-TOT-REC-CNT = AIF51W.WS-TOT-REC-CNT + 1;
    AIF51P9-PROC-PARA();
    set SR-AIF51-IN-REC empty;
    AIF51P9-READ-INPUT();
  end
  SR-AIF51-LOG-REC.LOG-DESCRIPTION = "TOTAL NUMBER OF RECORDS RECEIVED FROM SSA  ";
  SR-AIF51-LOG-REC.LOG-CONSTANT = ":";
  SR-AIF51-LOG-REC.LOG-CNT = AIF51W.WS-TOT-REC-CNT;
  AIF51P9-WRITE-LOG();
  SR-AIF51-LOG-REC.LOG-DESCRIPTION = "TOTAL NUMBER OF DUPLICATE RECORDS RECEIVED FROM SSA  ";
  SR-AIF51-LOG-REC.LOG-CNT = AIF51W.WS-DUP-REC-CNT;
  AIF51P9-WRITE-LOG();
  /*  */
end // end AIF51P9-MAIN


Function AIF51P9-PROC-PARA()
  set H2-SSA-LIS-INTRMDT empty;
  H2-SSA-LIS-INTRMDT.LIS-APPL-RCVD-DT = AIF51W.WS-PROCESS-DT;
  H2-SSA-LIS-INTRMDT.LIS-BENE-SSN = SR-AIF51-IN-REC.COSSN;
  H2-SSA-LIS-INTRMDT.LIS-BENE-HICN = SR-AIF51-IN-REC.BENE-HICN;
  H2-SSA-LIS-INTRMDT.LIS-BENE-FRST-NM = SR-AIF51-IN-REC.BENE-FIRST-NM;
  H2-SSA-LIS-INTRMDT.LIS-BENE-MID-NM = SR-AIF51-IN-REC.BENE-MID-NM;
  H2-SSA-LIS-INTRMDT.LIS-BENE-LST-NM = SR-AIF51-IN-REC.BENE-LAST-NM;
  H2-SSA-LIS-INTRMDT.LIS-BENE-SUFX = SR-AIF51-IN-REC.BENE-SUFX;

  if (SR-AIF51-IN-REC.BENE-DOB != "00000000" && 
  SR-AIF51-IN-REC.BENE-DOB != " ")
    AIF51W.WS-DATE-8 = SR-AIF51-IN-REC.BENE-DOB;
    AIF51W.WS-DATE-10-CCYY = AIF51W.WS-DATE-8-CCYY;
    AIF51W.WS-DATE-10-MM = AIF51W.WS-DATE-8-MM;
    AIF51W.WS-DATE-10-DD = AIF51W.WS-DATE-8-DD;
    AIF51W.WS-DATE-SEP1 = "-";
    AIF51W.WS-DATE-SEP2 = "-";

    H2-SSA-LIS-INTRMDT.LIS-BENE-DOB = AIF51W.WS-DATE-10;
  else
    H2-SSA-LIS-INTRMDT.LIS-BENE-DOB = "0001-01-01";
  end

  H2-SSA-LIS-INTRMDT.LIS-BENE-SEX-CD = SR-AIF51-IN-REC.BENE-GENDER;
  H2-SSA-LIS-INTRMDT.LIS-BENE-FNRL-EXP = SR-AIF51-IN-REC.BENE-FUNERAL-EXP;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-SSN = SR-AIF51-IN-REC.SPOUSE-SSN;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-HICN = SR-AIF51-IN-REC.SPOUSE-HICN;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-FRST-NM = SR-AIF51-IN-REC.SPOUSE-FIRST-NM;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-MID-NM = SR-AIF51-IN-REC.SPOUSE-MID-NM;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-LST-NM = SR-AIF51-IN-REC.SPOUSE-LAST-NM;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-SUFX = SR-AIF51-IN-REC.SPOUSE-SUFX;

  if (SR-AIF51-IN-REC.SPOUSE-DOB != "00000000" && 
  SR-AIF51-IN-REC.SPOUSE-DOB != " ")

    AIF51W.WS-DATE-8 = SR-AIF51-IN-REC.SPOUSE-DOB;
    AIF51W.WS-DATE-10-CCYY = AIF51W.WS-DATE-8-CCYY;
    AIF51W.WS-DATE-10-MM = AIF51W.WS-DATE-8-MM;
    AIF51W.WS-DATE-10-DD = AIF51W.WS-DATE-8-DD;
    AIF51W.WS-DATE-SEP1 = "-";
    AIF51W.WS-DATE-SEP2 = "-";

    H2-SSA-LIS-INTRMDT.LIS-SPOUSE-DOB = AIF51W.WS-DATE-10;
  else
    H2-SSA-LIS-INTRMDT.LIS-SPOUSE-DOB = "0001-01-01";
  end

  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-FNRL-EX = SR-AIF51-IN-REC.SPOUSE-FUNERAL-EXP;
  H2-SSA-LIS-INTRMDT.LIS-ADR-LINE1 = SR-AIF51-IN-REC.ADDR-LINE-1;
  H2-SSA-LIS-INTRMDT.LIS-ADR-LINE2 = SR-AIF51-IN-REC.ADDR-LINE-2;
  H2-SSA-LIS-INTRMDT.LIS-ADR-LINE3 = SR-AIF51-IN-REC.ADDR-LINE-3;
  H2-SSA-LIS-INTRMDT.LIS-ADR-LINE4 = SR-AIF51-IN-REC.ADDR-LINE-4;
  H2-SSA-LIS-INTRMDT.LIS-CITY = SR-AIF51-IN-REC.ADDR-CITY;
  H2-SSA-LIS-INTRMDT.LIS-STATE-CD = SR-AIF51-IN-REC.ADDR-STATE;
  H2-SSA-LIS-INTRMDT.LIS-ZIP-5 = SR-AIF51-IN-REC.ADDR-ZIP-5;
  H2-SSA-LIS-INTRMDT.LIS-ZIP-4 = SR-AIF51-IN-REC.ADDR-ZIP-4;
  H2-SSA-LIS-INTRMDT.LIS-PHONE = SR-AIF51-IN-REC.PHONE;
  H2-SSA-LIS-INTRMDT.LIS-SUB-APRVD = SR-AIF51-IN-REC.SUBSIDY-APPROVE;

  if (SR-AIF51-IN-REC.SUBSIDY-APRV-DATE != "00000000" && 
  SR-AIF51-IN-REC.SUBSIDY-APRV-DATE != " ")
    AIF51W.WS-DATE-8 = SR-AIF51-IN-REC.SUBSIDY-APRV-DATE;
    AIF51W.WS-DATE-10-CCYY = AIF51W.WS-DATE-8-CCYY;
    AIF51W.WS-DATE-10-MM = AIF51W.WS-DATE-8-MM;
    AIF51W.WS-DATE-10-DD = AIF51W.WS-DATE-8-DD;
    AIF51W.WS-DATE-SEP1 = "-";
    AIF51W.WS-DATE-SEP2 = "-";

    H2-SSA-LIS-INTRMDT.LIS-SUB-STS-DT = AIF51W.WS-DATE-10;
  else
    H2-SSA-LIS-INTRMDT.LIS-SUB-STS-DT = "9999-12-31";
  end

  if (SR-AIF51-IN-REC.SUBSIDY-EFF-DATE != "00000000" && 
  SR-AIF51-IN-REC.SUBSIDY-EFF-DATE != " ")
    AIF51W.WS-DATE-8 = SR-AIF51-IN-REC.SUBSIDY-EFF-DATE;
    AIF51W.WS-DATE-10-CCYY = AIF51W.WS-DATE-8-CCYY;
    AIF51W.WS-DATE-10-MM = AIF51W.WS-DATE-8-MM;
    AIF51W.WS-DATE-10-DD = AIF51W.WS-DATE-8-DD;
    AIF51W.WS-DATE-SEP1 = "-";
    AIF51W.WS-DATE-SEP2 = "-";

    H2-SSA-LIS-INTRMDT.LIS-SUB-EFF-DT = AIF51W.WS-DATE-10;
  else
    H2-SSA-LIS-INTRMDT.LIS-SUB-EFF-DT = "9999-12-31";
  end

  H2-SSA-LIS-INTRMDT.LIS-LVL-RSRCS = SR-AIF51-IN-REC.LEVEL-OF-RESOUCES;
  H2-SSA-LIS-INTRMDT.LIS-INCM-USED-DET = SR-AIF51-IN-REC.INCM-USED-FOR-DET;
  H2-SSA-LIS-INTRMDT.LIS-INCM-PRCNT-FPL = SR-AIF51-IN-REC.INCM-USED-AS-FPL;
  H2-SSA-LIS-INTRMDT.LIS-PREM-SUB-PRCNT = SR-AIF51-IN-REC.PREM-SUBSIDY-PCT;
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-CD1 = SR-AIF51-IN-REC.DENAIL-RSN-CD[1];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-DESC1 = SR-AIF51-IN-REC.DENAIL-RSN-DESC[1];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-CD2 = SR-AIF51-IN-REC.DENAIL-RSN-CD[2];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-DESC2 = SR-AIF51-IN-REC.DENAIL-RSN-DESC[2];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-CD3 = SR-AIF51-IN-REC.DENAIL-RSN-CD[3];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-DESC3 = SR-AIF51-IN-REC.DENAIL-RSN-DESC[3];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-CD4 = SR-AIF51-IN-REC.DENAIL-RSN-CD[4];
  H2-SSA-LIS-INTRMDT.LIS-DNL-RSN-DESC4 = SR-AIF51-IN-REC.DENAIL-RSN-DESC[4];

  if (SR-AIF51-IN-REC.APPL-DATE != "00000000" && 
  SR-AIF51-IN-REC.APPL-DATE != " ")

    AIF51W.WS-DATE-8 = SR-AIF51-IN-REC.APPL-DATE;
    AIF51W.WS-DATE-10-CCYY = AIF51W.WS-DATE-8-CCYY;
    AIF51W.WS-DATE-10-MM = AIF51W.WS-DATE-8-MM;
    AIF51W.WS-DATE-10-DD = AIF51W.WS-DATE-8-DD;
    AIF51W.WS-DATE-SEP1 = "-";
    AIF51W.WS-DATE-SEP2 = "-";

    H2-SSA-LIS-INTRMDT.LIS-SSA-APPL-DT = AIF51W.WS-DATE-10;
  else
    H2-SSA-LIS-INTRMDT.LIS-SSA-APPL-DT = "0001-01-01";
  end

  H2-SSA-LIS-INTRMDT.LIS-CHK-YES = SR-AIF51-IN-REC.CHECK-YES;
  H2-SSA-LIS-INTRMDT.LIS-RSRC-AMT1 = SR-AIF51-IN-REC.RSRC[1];
  H2-SSA-LIS-INTRMDT.LIS-RSRC-AMT2 = SR-AIF51-IN-REC.RSRC[2];
  H2-SSA-LIS-INTRMDT.LIS-RSRC-AMT3 = SR-AIF51-IN-REC.RSRC[3];
  H2-SSA-LIS-INTRMDT.LIS-RSRC-AMT4 = SR-AIF51-IN-REC.RSRC[4];
  H2-SSA-LIS-INTRMDT.LIS-HH-SIZE = SR-AIF51-IN-REC.HH-SIZE;
  H2-SSA-LIS-INTRMDT.LIS-UERND-INC-AMT1 = SR-AIF51-IN-REC.SSA;
  H2-SSA-LIS-INTRMDT.LIS-UERND-INC-AMT2 = SR-AIF51-IN-REC.RRB;
  H2-SSA-LIS-INTRMDT.LIS-UERND-INC-AMT3 = SR-AIF51-IN-REC.VAB;
  H2-SSA-LIS-INTRMDT.LIS-UERND-INC-AMT4 = SR-AIF51-IN-REC.POA;
  H2-SSA-LIS-INTRMDT.LIS-UERND-INC-AMT5 = SR-AIF51-IN-REC.OIN;
  H2-SSA-LIS-INTRMDT.LIS-BENE-GRS-AMT = SR-AIF51-IN-REC.BENE-WAGE;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-GRS-AMT = SR-AIF51-IN-REC.SPOUSE-WAGE;
  H2-SSA-LIS-INTRMDT.LIS-BENE-NET-AMT = SR-AIF51-IN-REC.BENE-SELF;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-NET-AMT = SR-AIF51-IN-REC.SPOUSE-SELF;
  H2-SSA-LIS-INTRMDT.LIS-BENE-LOSS = SR-AIF51-IN-REC.BENE-LOSS;
  H2-SSA-LIS-INTRMDT.LIS-SPOUSE-LOSS = SR-AIF51-IN-REC.SPOUSE-LOSS;
  H2-SSA-LIS-INTRMDT.LIS-STATUS-FLAG = " ";
  /*  */
  AIF51P9-INS-SLI();

  if (VDBCONTROL.URC > 104)
    exit program;
  end
  /*  */
end // end AIF51P9-PROC-PARA


Function AIF51P9-READ-INPUT()
  /*  */
  try
    get next SR-AIF51-IN-REC ;
  end
  if (SR-AIF51-IN-REC is ioError && SR-AIF51-IN-REC not endOfFile)
    VDBCONTROL.UPROC-NM = "AIF51P9-READ-INPUT";
    VDBCONTROL.UPROC-OBJ = "SR-AIF51-IN-REC";
    VDBCONTROL.UPROC-OPT = "SCAN";
    VMESSAGE.UMSGINS[2] = "AIF51A";
    /*  */
    /* the following conditions are added to move the corresponding*/
    /* error message*/
  /*  */
    if (SR-AIF51-IN-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF51-IN-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF51-IN-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end /* ** end check for record found*/
  /*  */
end // end AIF51P9-READ-INPUT


Function AIF51P9-WRITE-LOG()
  /*  */
  try
    add SR-AIF51-LOG-REC ;
  end
  if (SR-AIF51-OUT-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN49P9-WRITE-04";
    VDBCONTROL.UPROC-OBJ = "SR-AIF51-OUT-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[2] = "AIF51A";
   /*  */
    if (SR-AIF51-OUT-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF51-OUT-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF51-OUT-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end
  /*  */
end // end AIF51P9-WRITE-LOG


Function AIF51P9-WRITE-OUT()
  /*  */
  try
    add SR-AIF51-OUT-REC ;
  end
  if (SR-AIF51-OUT-REC is ioError)
    VDBCONTROL.UPROC-NM = "AIN49P9-WRITE-04";
    VDBCONTROL.UPROC-OBJ = "SR-AIF51-OUT-REC";
    VDBCONTROL.UPROC-OPT = "ADD";
    VMESSAGE.UMSGINS[2] = "AIF51A";
   /*  */
    if (SR-AIF51-OUT-REC is fileNotAvailable)
      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";
    else
      if (SR-AIF51-OUT-REC is fileNotFound)
        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";
      else
        if (SR-AIF51-OUT-REC is invalidFormat)
          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";
        end /* ** end check for format mismatch*/
      end /* ** end check for file not found*/
    end /* ** end check for file not available*/
    WCM00P2-TO-CEP01A();
  end
  /*  */
end // end AIF51P9-WRITE-OUT


Record AIF51W type basicRecord
  10 WS-PROCESS-DT char(10) ; 
    15 WS-PROCESS-DT-CCYY num(4) ; 
    15 WS-PROCESS-DT-SEP1 char(1) ; 
    15 WS-PROCESS-DT-MM num(2) ; 
    15 WS-PROCESS-DT-SEP2 char(1) ; 
    15 WS-PROCESS-DT-DD num(2) ; 
  10 WS-DATE-8 char(8) ; 
    15 WS-DATE-8-MM char(2) ; 
    15 WS-DATE-8-DD char(2) ; 
    15 WS-DATE-8-CCYY char(4) ; 
  10 WS-DATE char(8) ; 
    15 WS-DATE-CCYY char(4) ; 
    15 WS-DATE-MM char(2) ; 
    15 WS-DATE-DD char(2) ; 
  10 WS-DATE-10 char(10) ; 
    15 WS-DATE-10-CCYY char(4) ; 
    15 WS-DATE-SEP1 char(1) ; 
    15 WS-DATE-10-MM char(2) ; 
    15 WS-DATE-SEP2 char(1) ; 
    15 WS-DATE-10-DD char(2) ; 
  10 WS-TOT-REC-CNT num(4) ; 
  10 WS-DUP-REC-CNT num(4) ; 
end // end AIF51W


