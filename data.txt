package IVA_Batch;

import egl.core.*;

import CommonMigratedParts.*;

import DataTables.*;

//*** PROGRAM=AIF29A ***

// COMPONENT NAME: AIF29A ADDRESS MATCH REPORT AND NOTICES

// ===============

// 

// DESCRIPTION:

// ============

// FNS ADDRESS MATCH REPORT AND 60 DAY NOTICES

// 

// 

// 

// 

// ***********************

Program AIF29A type basicProgram //VAGen Info - main batch program

  {

  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 

  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 

  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes

  }



  // Data Declarations

  AIF29W-DET AIF29W-DET; // record

  AIF29W-HEAD AIF29W-HEAD; // record

  AIF29W-NI-ADDR AIF29W-NI-ADDR; // record

  AIF29W-NOTICE AIF29W-NOTICE; // record

  AIF29W-SI-ADDR AIF29W-SI-ADDR; // record

  AIF29W-SUBH AIF29W-SUBH; // record

  AIF29W AIF29W; // record

  AIF29W2 AIF29W2; // record

  AIF29W3 AIF29W3; // record

  CEP01W CEP01W; // record

  FORMATW FORMATW; // record

  GDW GDW; // record

  H2-2-OFF-POF H2-2-OFF-POF; // record

  H2-3-DMQDRP-DEB H2-3-DMQDRP-DEB; // record

  H2-2-DMQ-DEB H2-2-DMQ-DEB; // record

  H2-2-DMQ-DRP H2-2-DMQ-DRP;

  H2-CODE-TBL H2-CODE-TBL; // record

  H2-DEBT-MATCH-REQ H2-DEBT-MATCH-REQ; // record

  H3-DEBT-MATCH-REQ H3-DEBT-MATCH-REQ; // record

  H2-DEBT-RESP-PRSN H2-DEBT-RESP-PRSN; // record

  H2-DEBT H2-DEBT;

  REP-COMMON REP-COMMON; // record

  REP-EOFNOF REP-EOFNOF; // record

  SR-132REP-RECOUT SR-132REP-RECOUT; // record

  SR-AIF29-INREC SR-AIF29-INREC; // record

  SR-AIF29-NOTICE SR-AIF29-NOTICE; // record

  VCONTROL VCONTROL; // record

  VDBCOMMON VDBCOMMON; // record

  VDBCONTROL VDBCONTROL; // record

  VDTSREC VDTSREC; // record

  VMESSAGE VMESSAGE; // record

  VSTRREC VSTRREC; // record

  VSTRREC4 VSTRREC4; // record

  VSTRREC7 VSTRREC7; // record



  // VAGen Info - items needed for migration

  VAGen_EZESYS char(8);

  VAGen_EZEREPLY num(1);

  VAGen_EZE_WAIT_TIME bin(9,2);

  VAGen_EZE_ITEMLEN int;



  // Use Declarations

  use VDB00T1 {deleteAfterUse = yes}; // table



  function main()

    // VAGen Info - initialization needed for migration

    VAGen_EZESYS = VGLib.getVAGSysType();

    AIF29P6-MAIN: AIF29P6-MAIN();

  end // end main

end // end AIF29A


// MAIN PROCESS

Function AIF29P6-MAIN()

  AIF29P6-INIT-PARA();

    

  AIF29Q1-READIP();



  if (SR-AIF29-INREC is endOfFile)

      VMESSAGE.UMSGCODE-JCL-ERR = 0;

      AIF29W.WS-ERR-CD = sysVar.errorCode;

      VMESSAGE.UMSGINS[1] = AIF29W.WS-ERR-LAST-FOUR;

      WCM00P2-TO-CEP01A();

  end



  AIF29W.WS-FIRST-INREC = "Y"; 

  while (SR-AIF29-INREC not endOfFile &&

         AIF29W.WS-FIRST-INREC != "X")

     AIF29W.WS-DEBT-NMBR = SR-AIF29-INREC.DEBT-NMB;

     if (AIF29W.WS-DEBT-YR >= 00 &&

         AIF29W.WS-DEBT-YR <= 99)

         AIF29P8-APPLSPEC();

     else    	

         AIF29W.WS-ALPHA-DEBT = SR-AIF29-INREC.DEBT-NMB; 

         if (AIF29W.WS-ALPHA-YR >= "A" &&

             AIF29W.WS-ALPHA-YR <= "U")

  	         AIF29P6-ALPHA-YR();

   	         AIF29W.WS-DEBT-SQ-NMB = AIF29W.WS-ALPHA-SEQ;

   	         AIF29W.WS-DEBT-UPI = AIF29W.WS-ALPHA-UPI;

         	 AIF29P8-APPLSPEC();

         end 	  

     end    

     AIF29Q1-READIP();

  end // while



  if (AIF29W.WS-FIRST-INREC == "N")

      VGVar.handleSysLibraryErrors = 0;

      sysLib.commit();

  end    

  

  AIF29Q8-CLOSE-SR();

  

  AIF29P6-MAIN-RPT();

  	  

end // end AIF29P6-MAIN



Function AIF29P6-MAIN-RPT()

  AIF29W.WS-FIRST-ERR = "Y";

  AIF29P9-PRN-HEAD();

  

  AIF29Q2-DMQDRP-DEB();

  

  if (VDBCONTROL.URC == 0)

  	  AIF29Q2-SCAN-DMQDRP-DEB();

  end  

  SysLib.writeStdout("LOW-DT " + AIF29W.WS-LOW-DT);

  SysLib.writeStdout("CUR-DT " + AIF29W.WS-CURR-DT);

  

  while (VDBCONTROL.URC == 0)

  	 SysLib.writeStdout("DBT-ID " + H2-3-DMQDRP-DEB.TOP-DEBT-ID);

  	 SysLib.writeStdout("RSP-DT " + H2-3-DMQDRP-DEB.RESPONSE-DT);

  	 SysLib.writeStdout("NTC-DT " + H2-3-DMQDRP-DEB.NOTICE-DT);

  	 SysLib.writeStdout("STS-CD " + H2-3-DMQDRP-DEB.STS-CD);

  	 if (H2-3-DMQDRP-DEB.RESPONSE-DT == AIF29W.WS-CURR-DT)

         AIF29P9-APPLSPEC-RPT();

     end

  	 if (H2-3-DMQDRP-DEB.RESPONSE-DT != AIF29W.WS-CURR-DT

         && H2-3-DMQDRP-DEB.NOTICE-DT == "0001-01-01"

  	 	 && H2-3-DMQDRP-DEB.STS-CD == "M")

  	     SysLib.writeStdout("DBT-ID " + H2-3-DMQDRP-DEB.TOP-DEBT-ID);  	 	 	 

         AIF29P9-APPLSPEC-RPT();

     end    

     AIF29Q2-SCAN-DMQDRP-DEB();

  end

    

  AIF29W.WS-REM-LINES = REP-COMMON.WS-MAX-NO-LINES 

                        - REP-COMMON.WS-LINE-NO;

  if (AIF29W.WS-REM-LINES < 2)

    AIF29P9-PRN-HEAD();

  end



  /* print end of report*/

  REP132P9-EOR-PROC();



  AIF29Q8-CLOSE-NOTC();

  AIF29Q8-CLOSE-RPT();	

end	



Function AIF29P8-APPLSPEC()  

  set H2-3-DMQDRP-DEB empty;

  H2-3-DMQDRP-DEB.DEBT-YR = AIF29W.WS-DEBT-YR;

  H2-3-DMQDRP-DEB.DEBT-SQ-NMB = AIF29W.WS-DEBT-SQ-NMB;

  H2-3-DMQDRP-DEB.UPI = AIF29W.WS-DEBT-UPI;

  

  AIF29Q3-DMQDRP-DEB();



  if (VDBCONTROL.URC == 0)  	  

      AIF29P8-PROC-DATA();	

  else   

      AIF29P8-PROC-MISSING();

  end

  

end  



Function AIF29P8-PROC-DATA()

  if (AIF29W.WS-FIRST-INREC == "Y")

      if (H2-3-DMQDRP-DEB.RESPONSE-DT == "0001-01-01")

      	  AIF29W.WS-FIRST-INREC = "N";

      else

      	  AIF29W.WS-FIRST-INREC = "X";

      	  return;

      end;

  end;    	  	    	

  set H2-DEBT-MATCH-REQ empty;

  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;

  H2-DEBT-MATCH-REQ.RESPONSE-DT = AIF29W.WS-CURR-DT;

  H2-DEBT-MATCH-REQ.NOTICE-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.ERROR-CD = SR-AIF29-INREC.RECORD-CD;

  H2-DEBT-MATCH-REQ.FULL-NAME = SR-AIF29-INREC.FULL-NAME;

  H2-DEBT-MATCH-REQ.STREET-ADDR = SR-AIF29-INREC.ADDR-LINE1;

  H2-DEBT-MATCH-REQ.TOP-CITY = SR-AIF29-INREC.CITY;

  H2-DEBT-MATCH-REQ.STATE = SR-AIF29-INREC.STATE;

  H2-DEBT-MATCH-REQ.ZIPCODE-1 = SR-AIF29-INREC.ZIPCODE-1;

  H2-DEBT-MATCH-REQ.ZIPCODE-2 = SR-AIF29-INREC.ZIPCODE-2;

  if (SR-AIF29-INREC.RECORD-CD == "00" || 

      SR-AIF29-INREC.RECORD-CD == "02")

      H2-DEBT-MATCH-REQ.STS-CD = "M";

  end

  if (SR-AIF29-INREC.RECORD-CD == "03" || 

      SR-AIF29-INREC.RECORD-CD == "04")

      H2-DEBT-MATCH-REQ.STS-CD = "E";

  end    

  if (SR-AIF29-INREC.RECORD-CD == "07")

      H2-DEBT-MATCH-REQ.STS-CD = "C";

      if (SR-AIF29-INREC.DEATH-DT not numeric)

          H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

      end

      VDTSREC.UDATMM = SR-AIF29-INREC.DEATH-MM;

      VDTSREC.UDATDD = SR-AIF29-INREC.DEATH-DD;

      VDTSREC.UDATYY = SR-AIF29-INREC.DEATH-CCYY;

      call "WDT10A" (VCONTROL, VDTSREC) {isNoRefresh = yes};

      if (VCONTROL.URC != 0)

          H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";           

      end

      AIF29W.WS-DATE-CCYY = SR-AIF29-INREC.DEATH-CCYY;

      AIF29W.WS-DATE-MM = SR-AIF29-INREC.DEATH-MM;

      AIF29W.WS-DATE-DD = SR-AIF29-INREC.DEATH-DD;

      AIF29W.WS-DATE-FLR1 = "-";

      AIF29W.WS-DATE-FLR2 = "-";

      H2-DEBT-MATCH-REQ.DEATH-DT = AIF29W.WS-DATE;

  end

  AIF29Q3-UPD-DMQ();  	 

end



Function AIF29P8-PROC-MISSING()

  SET H2-DEBT-RESP-PRSN EMPTY;

  H2-DEBT-RESP-PRSN.DEBT-YR = AIF29W.WS-DEBT-YR;

  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = AIF29W.WS-DEBT-SQ-NMB;

  H2-DEBT-RESP-PRSN.UPI = AIF29W.WS-DEBT-UPI;

  

  AIF29Q2-GET-DRP();

  if (VDBCONTROL.URC != 0)

  	  return;

  end

  

  SET H2-DEBT-MATCH-REQ EMPTY;

  H2-DEBT-MATCH-REQ.DEBT-YR = AIF29W.WS-DEBT-YR;

  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = AIF29W.WS-DEBT-SQ-NMB;

  H2-DEBT-MATCH-REQ.UPI = AIF29W.WS-DEBT-UPI;

  H2-DEBT-MATCH-REQ.REQUEST-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.NOTICE-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.TOPS-SENT-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.TOPS-RCVD-DT = "0001-01-01";

  H2-DEBT-MATCH-REQ.RESPONSE-DT = AIF29W.WS-CURR-DT;

  H2-DEBT-MATCH-REQ.SSN = SR-AIF29-INREC.SSN;

  H2-DEBT-MATCH-REQ.NAME-CTL = SR-AIF29-INREC.NAME-CTL;

  H2-DEBT-MATCH-REQ.LAST-NAME = SR-AIF29-INREC.LAST-NAME;

  H2-DEBT-MATCH-REQ.FIRST-NAME = SR-AIF29-INREC.FIRST-NAME;

  H2-DEBT-MATCH-REQ.STS-CD = "D";

  H2-DEBT-MATCH-REQ.ERROR-CD = SR-AIF29-INREC.RECORD-CD;

  if (SR-AIF29-INREC.RECORD-CD == "07")

      if (SR-AIF29-INREC.DEATH-DT not numeric)

          H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

      end

      VDTSREC.UDATMM = SR-AIF29-INREC.DEATH-MM;

      VDTSREC.UDATDD = SR-AIF29-INREC.DEATH-DD;

      VDTSREC.UDATYY = SR-AIF29-INREC.DEATH-CCYY;

      call "WDT10A" (VCONTROL, VDTSREC) {isNoRefresh = yes};

      if (VCONTROL.URC != 0)

          H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";           

      end

      AIF29W.WS-DATE-CCYY = SR-AIF29-INREC.DEATH-CCYY;

      AIF29W.WS-DATE-MM = SR-AIF29-INREC.DEATH-MM;

      AIF29W.WS-DATE-DD = SR-AIF29-INREC.DEATH-DD;

      AIF29W.WS-DATE-FLR1 = "-";

      AIF29W.WS-DATE-FLR2 = "-";

      H2-DEBT-MATCH-REQ.DEATH-DT = AIF29W.WS-DATE;

  end

  H2-DEBT-MATCH-REQ.FULL-NAME = SR-AIF29-INREC.FULL-NAME;

  H2-DEBT-MATCH-REQ.STREET-ADDR = SR-AIF29-INREC.ADDR-LINE1;

  H2-DEBT-MATCH-REQ.TOP-CITY = SR-AIF29-INREC.CITY;

  H2-DEBT-MATCH-REQ.STATE = SR-AIF29-INREC.STATE;

  H2-DEBT-MATCH-REQ.ZIPCODE-1 = SR-AIF29-INREC.ZIPCODE-1;

  H2-DEBT-MATCH-REQ.ZIPCODE-2 = SR-AIF29-INREC.ZIPCODE-2;  

  AIF29W.WS-DBT-YR = AIF29W.WS-DEBT-YR;

  AIF29W.WS-DBT-SQ = AIF29W.WS-DEBT-SQ-NMB;

  H2-DEBT-MATCH-REQ.TOP-DEBT-ID = AIF29W.WS-DEBT-ID;

  AIF29Q2-ADD-DMQ();

end



Function AIF29P8-PROC-DATE()

  if (SR-AIF29-INREC.DEATH-DT not numeric)

      H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

      return;

  end

  VDTSREC.UDATMM = SR-AIF29-INREC.DEATH-MM;

  VDTSREC.UDATDD = SR-AIF29-INREC.DEATH-DD;

  VDTSREC.UDATYY = SR-AIF29-INREC.DEATH-CCYY;



  call "WDT10A" (VCONTROL, VDTSREC) {isNoRefresh = yes};

  if (VCONTROL.URC != 0)

    H2-DEBT-MATCH-REQ.DEATH-DT = "0001-01-01";

    return;

  end



  AIF29W.WS-DATE-CCYY = SR-AIF29-INREC.DEATH-CCYY;

  AIF29W.WS-DATE-MM = SR-AIF29-INREC.DEATH-MM;

  AIF29W.WS-DATE-DD = SR-AIF29-INREC.DEATH-DD;

  AIF29W.WS-DATE-FLR1 = "-";

  AIF29W.WS-DATE-FLR2 = "-";

  H2-DEBT-MATCH-REQ.DEATH-DT = AIF29W.WS-DATE;

end // end AIF29P8-PROC-DATE



Function AIF29P9-APPLSPEC-RPT()	

  set AIF29W-DET empty;

// LINE 1  

  AIF29W-DET.S-OFC-CD = H2-3-DMQDRP-DEB.OFC-CD;

  AIF29W-DET.S-DEBT-ID = H2-3-DMQDRP-DEB.TOP-DEBT-ID;

  AIF29W-DET.S-DEBTOR = H2-3-DMQDRP-DEB.TOP-DEBTOR;  

  AIF29W-DET.S-DEBT-DSH = "-";

  AIF29W-DET.S-DBT-NMB = AIF29W-DET.S-DEBT-NMB;

  AIF29W.WS-SSN = H2-3-DMQDRP-DEB.SSN;

  AIF29W-DET.S-SSN1 = AIF29W.WS-SSN1;

  AIF29W-DET.S-SSN2 = AIF29W.WS-SSN2; 

  AIF29W-DET.S-SSN3 = AIF29W.WS-SSN3; 

  AIF29W-DET.S-TAX-INTC-IND = H2-3-DMQDRP-DEB.TAX-INTC-IND;

  AIF29W-DET.S-RESP-IND = H2-3-DMQDRP-DEB.TOP-RESP-IND;

  AIF29W-DET.S-LAST-NAME = H2-3-DMQDRP-DEB.LAST-NAME;

  AIF29W-DET.S-FIRST-NAME = H2-3-DMQDRP-DEB.FIRST-NAME;

  AIF29W2.WS-AMOUNT = H2-3-DMQDRP-DEB.DEBT-BAL-AMT;

  AIF29P9-FMT-AMT();

  AIF29W-DET.S-BAL-AMT = FORMATW.OUTPUT-CHAR;

  AIF29W-DET.S-ADDRESS = H2-3-DMQDRP-DEB.STREET-ADDR;

  

// LINE 2

  AIF29W-DET.S-CITY = H2-3-DMQDRP-DEB.TOP-CITY;

  AIF29W-DET.S-STATE = H2-3-DMQDRP-DEB.STATE;

  AIF29W-DET.S-ZIPCODE-1 = H2-3-DMQDRP-DEB.ZIPCODE-1;

  AIF29W-DET.S-ZIPCODE-2 = H2-3-DMQDRP-DEB.ZIPCODE-2;

  AIF29W-DET.S-ERR-CD = H2-3-DMQDRP-DEB.ERROR-CD;



  AIF29W.WS-REC-CD = H2-3-DMQDRP-DEB.ERROR-CD;   

  if (H2-3-DMQDRP-DEB.STS-CD == "D")

      AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-MSNG;

      AIF29P9-ERR-RPT();

      return;

  end       

       	 

  if (H2-3-DMQDRP-DEB.ERROR-CD == "03")

  	  AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-03;

      AIF29P9-ERR-RPT();

      return;

  end    

  if (H2-3-DMQDRP-DEB.ERROR-CD == "04")

  	  AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-04;

      AIF29P9-ERR-RPT();

      return;

  end      

  if (H2-3-DMQDRP-DEB.ERROR-CD == "07")

  	  AIF29W.WS-DATE = H2-3-DMQDRP-DEB.DEATH-DT;

  	  AIF29W.WS-TXT7-MM = AIF29W.WS-DATE-MM;

  	  AIF29W.WS-TXT7-DD = AIF29W.WS-DATE-DD;

  	  AIF29W.WS-TXT7-CCYY = AIF29W.WS-DATE-CCYY;

  	  AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-07;  	  

      AIF29P9-ERR-RPT();

      return;

  end



  if (H2-3-DMQDRP-DEB.ERROR-CD == "02")

  	  AIF29W.WS-FULL-NM = H2-3-DMQDRP-DEB.FULL-NAME;

  	  AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-02;

  end 



  if (H2-3-DMQDRP-DEB.TOP-DEBTOR == "J") 

      set H2-2-DMQ-DRP empty;

      H2-2-DMQ-DRP.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

      H2-2-DMQ-DRP.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

      AIF29Q2-GET-DMQ-DRP();

  else    

      VDBCONTROL.URC = 0;

  end       



  if (VDBCONTROL.URC == 0)

      if (H2-3-DMQDRP-DEB.DEBT-BAL-AMT < 25.00)

          AIF29W-DET.S-NOTICE-DATE = "NO NOTICE"; 

      else    

          AIF29W-DET.S-NOTICE-DATE = AIF29W.WS-NOTICE-DT;

          AIF29P9-PROC-NOTIC();

          H2-3-DMQDRP-DEB.NOTICE-DT = AIF29W.WS-CURR-DT;

      end

  else    

      AIF29W-DET.S-LN2-TEXT = AIF29W.WS-TXT-JOINT;

      AIF29W-DET.S-NOTICE-DATE = "NO NOTICE"; 

  end

      

  if (REP-COMMON.WS-LINE-NO >= REP-COMMON.WS-MAX-NO-LINES)

    AIF29P9-PRN-HEAD();

  end

  SR-132REP-RECOUT.PRNT-CC = "0";

  SR-132REP-RECOUT.UFIELD = AIF29W-DET.LINE1;

  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.PRNT-CC = " ";

  SR-132REP-RECOUT.UFIELD = AIF29W-DET.LINE2;

  WR-132REP-OUT-FILE();

      

  set H2-DEBT-RESP-PRSN empty;

  H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

  H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

  H2-DEBT-RESP-PRSN.UPI = H2-3-DMQDRP-DEB.UPI;

  H2-DEBT-RESP-PRSN.ADR-MATCH-STS = H2-3-DMQDRP-DEB.STS-CD;

  H2-DEBT-RESP-PRSN.NOTICE-DT = H2-3-DMQDRP-DEB.NOTICE-DT;

  AIF29Q3-UPD-DRP();

  

  set H2-DEBT-MATCH-REQ empty; 

  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;

  H2-DEBT-MATCH-REQ.NOTICE-DT = H2-3-DMQDRP-DEB.NOTICE-DT;

  AIF29Q3-UPD-DMQ-NTC();

end



Function AIF29P9-ERR-RPT()

  if (H2-3-DMQDRP-DEB.STS-CD != "D")	  	

      set H2-DEBT-RESP-PRSN empty;

      H2-DEBT-RESP-PRSN.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

      H2-DEBT-RESP-PRSN.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

      H2-DEBT-RESP-PRSN.UPI = H2-3-DMQDRP-DEB.UPI;

      H2-DEBT-RESP-PRSN.ADR-MATCH-STS = H2-3-DMQDRP-DEB.STS-CD; 

      H2-DEBT-RESP-PRSN.NOTICE-DT = "0001-01-01";

      AIF29Q3-UPD-DRP();

  end

  

  set H2-DEBT-MATCH-REQ empty; 

  H2-DEBT-MATCH-REQ.DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

  H2-DEBT-MATCH-REQ.DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

  H2-DEBT-MATCH-REQ.UPI = H2-3-DMQDRP-DEB.UPI;

  H2-DEBT-MATCH-REQ.NOTICE-DT = "0001-01-01";

  if (H2-3-DMQDRP-DEB.STS-CD == "D")

  	  AIF29Q3-DELETE-DMQ();

  else	  

      AIF29Q3-UPD-DMQ-NTC();

  end    



  if (AIF29W.WS-FIRST-ERR == "Y")

      AIF29W.WS-FIRST-ERR = "N";

      AIF29W-HEAD.LINE2-RPT-NAME = AIF29W-HEAD.LINE2-EXCEPTION;

//      AIF29W-SUBH.LINE1 = AIF29W-SUBH.LINE2;

      REP-COMMON.WS-LINE-NO = REP-COMMON.WS-MAX-NO-LINES;

  end



  if (REP-COMMON.WS-LINE-NO >= REP-COMMON.WS-MAX-NO-LINES)

      AIF29P9-PRN-HEAD();

  end

 

  AIF29W-DET.S-NOTICE-DATE = "NO NOTICE"; 	

  SR-132REP-RECOUT.PRNT-CC = "0";

  SR-132REP-RECOUT.UFIELD = AIF29W-DET.LINE1;

  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.PRNT-CC = " ";

  SR-132REP-RECOUT.UFIELD = AIF29W-DET.LINE2;

  WR-132REP-OUT-FILE();

end	



Function AIF29P9-PROC-NOTIC()

  /* DEBTOR DATA*/



  AIF29W3.WS-EDIT-FIRST-NAME = H2-3-DMQDRP-DEB.FIRST-NAME;

  AIF29W3.WS-EDIT-LAST-NAME = H2-3-DMQDRP-DEB.LAST-NAME;

  set VSTRREC7 empty;

  VSTRREC7.UINSTRG = AIF29W3.WS-EDIT-NAME;

  VSTRREC7.USTRLENGTH = 45;

  call "WST60A" (VSTRREC7);

  AIF29W-NOTICE.LINE5-NAME = VSTRREC7.UOUTSTRG;



  AIF29W-NOTICE.LINE5-DEBT-YR = H2-3-DMQDRP-DEB.DEBT-YR;

  AIF29W-NOTICE.LINE5-DEBT-SQ-NMB = H2-3-DMQDRP-DEB.DEBT-SQ-NMB;

  AIF29W-NOTICE.LINE5-DEBT-DASH = "-";



  

  AIF29W-NOTICE.LINE6-ADDRESS = H2-3-DMQDRP-DEB.STREET-ADDR;



  AIF29W3.WS-SSN = H2-3-DMQDRP-DEB.SSN;

  AIF29W-NOTICE.LINE6-SSN1 = AIF29W3.WS-SSN1;

  AIF29W-NOTICE.LINE6-SSN2 = AIF29W3.WS-SSN2;

  AIF29W-NOTICE.LINE6-SSN3 = AIF29W3.WS-SSN3;

  AIF29W-NOTICE.LINE6-SSN-DASH1 = "-";

  AIF29W-NOTICE.LINE6-SSN-DASH2 = "-";

  

  AIF29W3.WS-CITY-ST-ZIP = " ";

  AIF29W3.WS-CITY = H2-3-DMQDRP-DEB.TOP-CITY;

  AIF29W3.WS-IDX-1 = 23;

  while (WS-IDX-1 > 0)

    if (AIF29W3.WS-CITY-CHAR[WS-IDX-1] == " ")

      WS-IDX-1 = WS-IDX-1 - 1;

    else

      WS-IDX-1 = WS-IDX-1 + 1;

      AIF29W3.WS-CITY-CHAR[WS-IDX-1] = ",";

      WS-IDX-1 = 0;

    end

  end

  AIF29W3.WS-CITY-COMMA = AIF29W3.WS-CITY;

  AIF29W3.WS-STATE = H2-3-DMQDRP-DEB.STATE;

  AIF29W3.WS-EDIT-ZIP-5 = H2-3-DMQDRP-DEB.ZIPCODE-1;

  if (H2-3-DMQDRP-DEB.ZIPCODE-2 != " ")

    AIF29W3.WS-EDIT-ZIP-4 = H2-3-DMQDRP-DEB.ZIPCODE-2;

    AIF29W3.WS-EDIT-ZIP-DASH1 = "-";

  end

  set VSTRREC7 empty;

  VSTRREC7.UINSTRG = AIF29W3.WS-CITY-ST-ZIP;

  VSTRREC7.USTRLENGTH = 45;

  /*  */

  call "WST60A" (VSTRREC7);

  /*  */

  AIF29W-NOTICE.LINE7-CITY-ST = VSTRREC7.UOUTSTRG;

  AIF29P9-PROC-NOTIC-2();

end    



Function AIF29P9-PROC-NOTIC-2()

  AIF29W2.WS-AMOUNT = H2-3-DMQDRP-DEB.DEBT-BAL-AMT;

  AIF29P9-FMT-AMT();

  AIF29W3.WS-EDIT-AMT = FORMATW.OUTPUT-CHAR;

  AIF29W3.WS-IDX-1 = 0;

  AIF29W3.WS-IDX-2 = 0;

  while (WS-IDX-1 < 11)

    WS-IDX-1 = WS-IDX-1 + 1;

    if (AIF29W3.WS-EDIT-AMT-CHAR[WS-IDX-1] != " ")

      WS-IDX-2 = WS-IDX-2 + 1;

      AIF29W3.WS-RPT-AMT-CHAR[WS-IDX-2] = AIF29W3.WS-EDIT-AMT-CHAR[WS-IDX-1];

    end

  end

  while (WS-IDX-2 < 11)

    WS-IDX-2 = WS-IDX-2 + 1;

    AIF29W3.WS-RPT-AMT-CHAR[WS-IDX-2] = " ";

  end

  AIF29W-NOTICE.LINE7-AMOUNT = AIF29W3.WS-RPT-AMT;



  /* CONTACT NAME AND ADDRESS NORTH/SOUTH*/



  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "OFCINR";

  H2-CODE-TBL.CODE-TBL-CD = H2-3-DMQDRP-DEB.OFC-CD;

  AIF29Q4-TWNCODE();

  AIF29W.WS-CODE-DESC = H2-CODE-TBL.CODE-DESC;

  if (AIF29W.WS-CODE-DESC-2 == "NI")

    AIF29W-NOTICE.PAR6-TEXT1 = AIF29W-NI-ADDR.LINE1;

    AIF29W-NOTICE.PAR6-TEXT2 = AIF29W-NI-ADDR.LINE2;

    AIF29W-NOTICE.PAR6-TEXT3 = AIF29W-NI-ADDR.LINE3;

    AIF29W-NOTICE.PAR6-TEXT4 = AIF29W-NI-ADDR.LINE4;

    AIF29W-NOTICE.PAR6-TEXT5 = AIF29W-NI-ADDR.LINE5;

    AIF29W-NOTICE.PAR6-TEXT6 = AIF29W-NI-ADDR.LINE6;

  end

  if (AIF29W.WS-CODE-DESC-2 == "SI")

    AIF29W-NOTICE.PAR6-TEXT1 = AIF29W-SI-ADDR.LINE1;

    AIF29W-NOTICE.PAR6-TEXT2 = AIF29W-SI-ADDR.LINE2;

    AIF29W-NOTICE.PAR6-TEXT3 = AIF29W-SI-ADDR.LINE3;

    AIF29W-NOTICE.PAR6-TEXT4 = AIF29W-SI-ADDR.LINE4;

    AIF29W-NOTICE.PAR6-TEXT5 = AIF29W-SI-ADDR.LINE5;

    AIF29W-NOTICE.PAR6-TEXT6 = AIF29W-SI-ADDR.LINE6;

  end



  AIF29P9-PRN-NOTICE();



  AIF29W-NOTICE.PAR6-TEXT1 = " ";

  AIF29W-NOTICE.PAR6-TEXT2 = " ";

  AIF29W-NOTICE.PAR6-TEXT3 = " ";

  AIF29W-NOTICE.PAR6-TEXT4 = " ";

  AIF29W-NOTICE.PAR6-TEXT5 = " ";

  AIF29W-NOTICE.PAR6-TEXT6 = " ";

end // end AIF29P9-PROC-NOTIC-2



// PRINTS REPORT HEADER

Function AIF29P9-PRN-HEAD()

  REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

  AIF29W-HEAD.UPAGE = REP-COMMON.WS-PAGE-NO;



  /* set carriage control flag for form feed if flag is set*/

  if (REP-COMMON.WS-PAGE-NO > 1)

    SR-132REP-RECOUT.PRNT-CC = "1";

  end



  /* move each line of header to map and print*/

  SR-132REP-RECOUT.UFIELD = AIF29W-HEAD.LINE1;

  WR-132REP-OUT-FILE();



  SR-132REP-RECOUT.PRNT-CC = " ";

  SR-132REP-RECOUT.UFIELD = AIF29W-HEAD.LINE2;

  WR-132REP-OUT-FILE();



  SR-132REP-RECOUT.PRNT-CC = "0";

  SR-132REP-RECOUT.UFIELD = AIF29W-SUBH.LINE1;

  WR-132REP-OUT-FILE();



  REP-COMMON.WS-LINE-NO = 1;

end // end AIF29P9-PRN-HEAD





Function AIF29P9-PRN-NOTICE()

  /* _______________________________________________________________________*/

  /* Description :*/

  /* This process prints the notice.*/

  /*  */

  /* _______________________________________________________________________*/

  /*  */



  /* top of page*/

  SR-AIF29-NOTICE.PRNT-CC = "1";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 01 and 02*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE1;

  AIF29Q9-NOTICE();



  /* line 03*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE2;

  AIF29Q9-NOTICE();



  /* line 04*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE3;

  AIF29Q9-NOTICE();



  /* line 05 and 06*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 07 and 08*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 09*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE4;

  AIF29Q9-NOTICE();



  /* line 10 and 11*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 12*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE5;

  AIF29Q9-NOTICE();



  /* line 13*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE6;

  AIF29Q9-NOTICE();



  /* line 14*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.LINE7;

  AIF29Q9-NOTICE();



  /* line 15 and 16*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 17 and 18*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = " ";

  AIF29Q9-NOTICE();



  /* line 19 and 20*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE1;

  AIF29Q9-NOTICE();



  /* line 21*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE2;

  AIF29Q9-NOTICE();



  /* line 22*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE3;

  AIF29Q9-NOTICE();



  /* line 23*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE4;

  AIF29Q9-NOTICE();



  /* line 24*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE5;

  AIF29Q9-NOTICE();



  /* line 25*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE6;

  AIF29Q9-NOTICE();



  /* line 26*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE7;

  AIF29Q9-NOTICE();



  /* line 27*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE8;

  AIF29Q9-NOTICE();



  /* line 28*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR1-LINE9;

  AIF29Q9-NOTICE();



  /* line 29 and 30*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE1;

  AIF29Q9-NOTICE();



  /* line 31*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE2;

  AIF29Q9-NOTICE();



  /* line 32*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE3;

  AIF29Q9-NOTICE();



  /* line 33*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE4;

  AIF29Q9-NOTICE();



  /* line 34*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE5;

  AIF29Q9-NOTICE();



  /* line 35*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR2-LINE6;

  AIF29Q9-NOTICE();



  /* line 36 and 37*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR3-LINE1;

  AIF29Q9-NOTICE();



  /* line 38*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR3-LINE2;

  AIF29Q9-NOTICE();



  /* line 39*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR3-LINE3;

  AIF29Q9-NOTICE();



  /* line 40*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR3-LINE4;

  AIF29Q9-NOTICE();



  /* line 41 and 42*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR4-LINE1;

  AIF29Q9-NOTICE();



  /* line 43*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR4-LINE2;

  AIF29Q9-NOTICE();



  /* line 44*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR4-LINE3;

  AIF29Q9-NOTICE();



  /* line 45*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR4-LINE4;

  AIF29Q9-NOTICE();



  /* line 46*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR4-LINE5;

  AIF29Q9-NOTICE();



  /* line 47 and 48*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR5-LINE1;

  AIF29Q9-NOTICE();



  /* line 49*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR5-LINE2;

  AIF29Q9-NOTICE();



  /* line 50*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR5-LINE3;

  AIF29Q9-NOTICE();



  /* line 51 and 52*/

  SR-AIF29-NOTICE.PRNT-CC = "0";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE1;

  AIF29Q9-NOTICE();



  /* line 53*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE2;

  AIF29Q9-NOTICE();



  /* line 54*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE3;

  AIF29Q9-NOTICE();



  /* line 55*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE4;

  AIF29Q9-NOTICE();



  /* line 56*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE5;

  AIF29Q9-NOTICE();



  /* line 57*/

  SR-AIF29-NOTICE.PRNT-CC = " ";

  SR-AIF29-NOTICE.UFIELD = AIF29W-NOTICE.PAR6-LINE6;

  AIF29Q9-NOTICE();

end // end AIF29P9-PRN-NOTICE




// PROCESS TO FORMAT AMOUNTS

Function AIF29P9-FMT-AMT()

  set FORMATW empty;

  if (AIF29W2.WS-AMOUNT < 0)

    AIF29W2.WS-AMOUNT = AIF29W2.WS-AMOUNT * (-1);

    FORMATW.DOLLAR-FLAG = "S";

  end

  FORMATW.INPUT-NUMBER = AIF29W2.WS-AMOUNT;



  if (FORMATW.INPUT-NUMBER != 0)

    FORMATW.LENGTH = 11;

    FORMATW.DEC-COUNT = 2;

    FORMATW.FORMAT-FLAG = "N";

    REPP9-FORMAT-PROC();

  else

    FORMATW.OUTPUT-CHAR = "       0.00";

  end

end // end AIF29P9-FMT-AMT





//--------------- INTIALISE ALL VARIABLES  -------------------------



Function AIF29P6-ALPHA-YR()

  if (AIF29W.WS-ALPHA-YR == "A")

      AIF29W.WS-DEBT-YR = 99;

  end



  if (AIF29W.WS-ALPHA-YR == "B")

    AIF29W.WS-DEBT-YR = 00;

  end



  if (AIF29W.WS-ALPHA-YR == "C")

    AIF29W.WS-DEBT-YR = 01;

  end



  if (AIF29W.WS-ALPHA-YR == "D")

    AIF29W.WS-DEBT-YR = 02;

  end



  if (AIF29W.WS-ALPHA-YR == "E")

    AIF29W.WS-DEBT-YR = 03;

  end



  if (AIF29W.WS-ALPHA-YR == "F")

    AIF29W.WS-DEBT-YR = 04;

  end



  if (AIF29W.WS-ALPHA-YR == "G")

    AIF29W.WS-DEBT-YR = 05;

  end



  if (AIF29W.WS-ALPHA-YR == "H")

    AIF29W.WS-DEBT-YR = 06;

  end



  if (AIF29W.WS-ALPHA-YR == "I")

    AIF29W.WS-DEBT-YR = 07;

  end



  if (AIF29W.WS-ALPHA-YR == "J")

    AIF29W.WS-DEBT-YR = 08;

  end



  if (AIF29W.WS-ALPHA-YR == "K")

    AIF29W.WS-DEBT-YR = 09;

  end



  if (AIF29W.WS-ALPHA-YR == "L")

    AIF29W.WS-DEBT-YR = 10;

  end



  if (AIF29W.WS-ALPHA-YR == "M")

    AIF29W.WS-DEBT-YR = 11;

  end



  if (AIF29W.WS-ALPHA-YR == "N")

    AIF29W.WS-DEBT-YR = 12;

  end



  if (AIF29W.WS-ALPHA-YR == "O")

    AIF29W.WS-DEBT-YR = 13;

  end



  if (AIF29W.WS-ALPHA-YR == "P")

    AIF29W.WS-DEBT-YR = 14;

  end



  if (AIF29W.WS-ALPHA-YR == "Q")

    AIF29W.WS-DEBT-YR = 15;

  end



  if (AIF29W.WS-ALPHA-YR == "R")

    AIF29W.WS-DEBT-YR = 16;

  end



  if (AIF29W.WS-ALPHA-YR == "S")

    AIF29W.WS-DEBT-YR = 17;

  end



  if (AIF29W.WS-ALPHA-YR == "T")

    AIF29W.WS-DEBT-YR = 18;

  end

  

  if (AIF29W.WS-ALPHA-YR == "U")

    AIF29W.WS-DEBT-YR = 19;

  end

end

 

Function AIF29P6-INIT-PARA()

  AIF29P6-SET-EMPTY();



  /* set all report variables to initial values*/

  /* ws-page-no      - current printing page number*/

  /* ws-line-no      - current page line no*/

  /* ws-new-page     - a new page indicator*/

  /* ws-max-no-lines - lineage for a standard report frame*/



  VGVar.handleHardIOErrors = 1;

  REP-COMMON.WS-PAGE-NO = 0;

  REP-COMMON.WS-LINE-NO = 1;

  REP-COMMON.WS-NEW-PAGE = "Y";

  REP-COMMON.WS-MAX-NO-LINES = 54;



  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};

  REP-COMMON.WS-DT = GDW.DTL; /* current date*/

  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;

  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;

  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;

  REP-COMMON.WS-F1 = "/";

  REP-COMMON.WS-F2 = "/";

  AIF29W-HEAD.UDATE = REP-COMMON.WS-DATE;

  AIF29W-HEAD.UTIME = VGVar.currentFormattedTime; /* current time*/

  AIF29W-HEAD.UAPPL = "AIF29A"; /* report name*/

  VDBCOMMON.UAPPLNAM = "AIF29A";



  AIF29W.WS-DT = GDW.DTL; /* current date*/

  AIF29W.WS-CURR-CCYY = AIF29W.WS-CCYY;

  AIF29W.WS-DASH1 = "-";

  AIF29W.WS-CURR-MM = AIF29W.WS-MM;

  AIF29W.WS-DASH2 = "-";

  AIF29W.WS-CURR-DD = AIF29W.WS-DD;

  AIF29W.WS-NOTICE-CCYY = AIF29W.WS-CCYY;

  AIF29W.WS-SLASH1 = "/";

  AIF29W.WS-NOTICE-MM = AIF29W.WS-MM;

  AIF29W.WS-SLASH2 = "/";

  AIF29W.WS-NOTICE-DD = AIF29W.WS-DD;

  AIF29W.WS-DASH3 = "-";

  AIF29W.WS-DASH4 = "-";

  AIF29W.WS-LOW-DD = 01;

  if (AIF29W.WS-MM > 03)

      AIF29W.WS-LOW-CCYY = AIF29W.WS-CCYY;

      AIF29W.WS-LOW-MM = (AIF29W.WS-MM - 3);

  else    

      AIF29W.WS-LOW-CCYY = (AIF29W.WS-CCYY - 1);

      AIF29W.WS-LOW-MM = (AIF29W.WS-MM + 9);

  end  



  AIF29P6-INITCON();

  /* set standard header variables*/

end // end AIF29P6-INIT-PARA



// INITIALIZE ALL RECORDS

Function AIF29P6-SET-EMPTY()

  set H2-3-DMQDRP-DEB empty;

  set H2-DEBT-RESP-PRSN empty;

  set H2-DEBT-MATCH-REQ empty;



  set REP-COMMON empty;

  set AIF29W-DET empty;

  set AIF29W-HEAD empty;

  set AIF29W-SUBH empty;

  set VMESSAGE empty;

  set CEP01W empty;

  set VDBCONTROL empty;

  set VDBCOMMON empty;

  set FORMATW empty;

  set AIF29W empty;

  set AIF29W2 empty;



  set SR-AIF29-INREC empty;

  set SR-132REP-RECOUT empty;

end // end AIF29P6-SET-EMPTY





// INITIALISE CONSTANTS

Function AIF29P6-INITCON()

  AIF29W-HEAD.LINE1-PAGE-TEXT = "PAGE-NBR";

  AIF29W-HEAD.FILLER1 = " ";

  AIF29W-HEAD.FILLER2 = " ";

  AIF29W-HEAD.LINE1-STATE-TEXT = "STATE OF NEVADA";

  AIF29W-HEAD.FILLER3 = " ";

  AIF29W-HEAD.LINE1-DATE-TEXT = "DATE";

  AIF29W-HEAD.FILLER4 = " ";



  AIF29W-HEAD.FILLER5 = " ";

  AIF29W-HEAD.LINE2-RPT-NAME = "      FNS ADDRESS MATCH     ";

  AIF29W-HEAD.FILLER6 = " ";

  AIF29W-HEAD.LINE2-TIME-TEXT = "TIME";

  AIF29W-HEAD.FILLER7 = " ";



  AIF29W-HEAD.LINE2-EXCEPTION = "FNS ADDRESS MATCH EXCEPTIONS";



  set AIF29W-SUBH empty;

  AIF29W-SUBH.LINE1-1 = "OFC DEBT #     SSN";

  AIF29W-SUBH.LINE1-2 = "TI RSP  LAST NAME";

  AIF29W-SUBH.LINE1-3 = "FIRST NAME";

  AIF29W-SUBH.LINE1-4 = "DEBT AMT  NOTICE";

  AIF29W-SUBH.LINE1-5 = "ADDRESS";



  AIF29W.WS-TXT2 = "MATCH SSN ";

  AIF29W.WS-TXT-03 = "SSN NO MATCH";

  AIF29W.WS-TXT-04 = "SSN MAY BE INVALID";

  AIF29W.WS-TXT7 = "SSN MATCH SSA DECEASED ";

  AIF29W.WS-TXT7-DASH1 = "/";

  AIF29W.WS-TXT7-DASH2 = "/";

  AIF29W.WS-TXT-MSNG = "USER TERMINATED MATCH REQUEST ";

  AIF29W.WS-TXT-JOINT = "JOINT DBTR, INACTIVE DESIGNATED DBTR";

  AIF29W.WS-TXT-BALANCE = "BALANCE BELOW $25";                              



  /* _______________________________________________________________________*/

  /* Description :*/

  /* This process initiates the notice variables.*/

  /*  */

  /* _______________________________________________________________________*/

  /*  */

  /*  */

  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "NOTINR";

  H2-CODE-TBL.CODE-TBL-CD = "H1";

  AIF29Q4-TWNCODE();

  AIF29W-NOTICE.CONSTANT1 = H2-CODE-TBL.CODE-DESC;



  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "NOTINR";

  H2-CODE-TBL.CODE-TBL-CD = "H2";

  AIF29Q4-TWNCODE();

  AIF29W-NOTICE.CONSTANT2 = H2-CODE-TBL.CODE-DESC;



  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "NOTINR";

  H2-CODE-TBL.CODE-TBL-CD = "H3";

  AIF29Q4-TWNCODE();

  AIF29W-NOTICE.CONSTANT3 = H2-CODE-TBL.CODE-DESC;



  /*  */

  AIF29W-NOTICE.LINE4-DATE = AIF29W.WS-NOTICE-DT;

  /*  */

  AIF29W-NOTICE.LINE5-DEBT-TEXT = "    Debt No.: ";

  AIF29W-NOTICE.LINE6-SSN-TEXT = "    SSN     : ";

  AIF29W-NOTICE.LINE7-AMT-TEXT = "    Past Due: $";

  /*  */



  /* ====================================================================/**/



  AIF29W-NOTICE.PAR1-TEXT1 = "The Division of Welfare and Supportive Services (DWSS) records show an ";



  AIF29W-NOTICE.PAR1-TEXT2 = "outstanding debt originating from the over-issuance of Supplemental    ";



  AIF29W-NOTICE.PAR1-TEXT3 = "Nutrition Assistance Program (SNAP) benefits.  DWSS will submit this   ";



  AIF29W-NOTICE.PAR1-TEXT4 = "debt to the U.S. Department of Treasury for collection 60 days from    ";



  AIF29W-NOTICE.PAR1-TEXT5 = "          .  Pursuant to the Debt Collection Act of 1982 (DCA), as     ";

  AIF29W-NOTICE.PAR1-TEXT5-DATE = AIF29W.WS-NOTICE-DT;



  AIF29W-NOTICE.PAR1-TEXT6 = "amended by the Debt Collection Improvement Act of 1996 (DCIA), and     ";



  AIF29W-NOTICE.PAR1-TEXT7 = "applicable to the SNAP regulations, Treasury is authorized to add fees ";



  AIF29W-NOTICE.PAR1-TEXT8 = "to the unpaid debt.  The Debt inclusive of all fees is in addition to  ";



  AIF29W-NOTICE.PAR1-TEXT9 = "any other debt DWSS may have previously submitted to Treasury.         ";



  AIF29W-NOTICE.PAR2-TEXT1 = "Currently the debt is:                                                 ";



  AIF29W-NOTICE.PAR2-TEXT2 = "1) Equal or greather than the minimum amount established by Treasury   ";



  AIF29W-NOTICE.PAR2-TEXT3 = "2) Not included in an automatic stay due to bankruptcy or under any    ";



  AIF29W-NOTICE.PAR2-TEXT4 = "   other litigation                                                    ";



  AIF29W-NOTICE.PAR2-TEXT5 = "3) Not being collected through allotment reductions or a repayment     ";



  AIF29W-NOTICE.PAR2-TEXT6 = "   agreement approved by DWSS                                          ";



  AIF29W-NOTICE.PAR3-TEXT1 = "Before DWSS submits this debt to Treasury, you may:                    ";



  AIF29W-NOTICE.PAR3-TEXT2 = "1) Inspect and copy our records related to this debt                   ";



  AIF29W-NOTICE.PAR3-TEXT3 = "2) Request a review of our determination that you owe this debt        ";



  AIF29W-NOTICE.PAR3-TEXT4 = "3) Enter into a written repayment agreement acceptable to DWSS         ";



  AIF29W-NOTICE.PAR4-TEXT1 = "Once this debt is submitted, Treasury will reduce or withhold any of   ";



  AIF29W-NOTICE.PAR4-TEXT2 = "your eligible federal payments, as listed on Attachment 1, with or     ";



  AIF29W-NOTICE.PAR4-TEXT3 = "without further notification.  Attachment 1 also provides important    ";



  AIF29W-NOTICE.PAR4-TEXT4 = "information if you or your spouse file a joint federal income tax      ";



  AIF29W-NOTICE.PAR4-TEXT5 = "return.                                                                ";



  AIF29W-NOTICE.PAR5-TEXT1 = "To pay the debt voluntarily, to request a review in writing, or if you ";



  AIF29W-NOTICE.PAR5-TEXT2 = "have questions regarding this letter or your rights (Attachment 2),    ";



  AIF29W-NOTICE.PAR5-TEXT3 = "you should immediately contact DWSS at the following address.          ";



  AIF29P6-CONTACT();

end // end AIF29P6-INITCON





Function AIF29P6-CONTACT()



  set AIF29W-NI-ADDR empty;

  set AIF29W-SI-ADDR empty;



  AIF29W-NI-ADDR.LINE5-TEXT = "(   )    -    ,  ";

  AIF29W-SI-ADDR.LINE5-TEXT = "(   )    -    ,  ";



  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "PHN800";

  H2-CODE-TBL.CODE-TBL-CD = "IS";

  AIF29Q4-TWNCODE();

  AIF29W.WS-CODE-DESC = H2-CODE-TBL.CODE-DESC;

  AIF29W-NI-ADDR.LINE5-PHN-800 = AIF29W.WS-CODE-DESC-14;

  AIF29W-SI-ADDR.LINE5-PHN-800 = AIF29W.WS-CODE-DESC-14;



  set H2-CODE-TBL empty;

  H2-CODE-TBL.CODE-TBL-TYP = "PHN800";

  H2-CODE-TBL.CODE-TBL-CD = "OS";

  AIF29Q4-TWNCODE();

  AIF29W.WS-CODE-DESC = H2-CODE-TBL.CODE-DESC;

  if (AIF29W.WS-CODE-DESC-4 == "OMIT")

    AIF29W-NI-ADDR.LINE6-TEXT = " ";

    AIF29W-SI-ADDR.LINE6-TEXT = " ";

  else

    AIF29W-NI-ADDR.LINE6-TEXT = H2-CODE-TBL.CODE-DESC;

    AIF29W-SI-ADDR.LINE6-TEXT = H2-CODE-TBL.CODE-DESC;

  end





  /* NORTH OFFICE NAME AND ADDRESS*/



  set H2-2-OFF-POF empty;

  H2-2-OFF-POF.OFC-CD = "NI";

  AIF29Q3-OFF-POF();

  AIF29W-NI-ADDR.LINE1-TEXT = H2-2-OFF-POF.ADR-LN1;

  AIF29W-NI-ADDR.LINE2-TEXT = H2-2-OFF-POF.OFC-NM;

  AIF29W-NI-ADDR.LINE3-TEXT = H2-2-OFF-POF.ADR-LN2;

  AIF29W3.WS-CITY-ST-ZIP = " ";

  AIF29W3.WS-CITY = H2-2-OFF-POF.CITY;

  AIF29W3.WS-IDX-1 = 23;

  while (WS-IDX-1 > 0)

    if (AIF29W3.WS-CITY-CHAR[WS-IDX-1] == " ")

      WS-IDX-1 = WS-IDX-1 - 1;

    else

      WS-IDX-1 = WS-IDX-1 + 1;

      AIF29W3.WS-CITY-CHAR[WS-IDX-1] = ",";

      WS-IDX-1 = 0;

    end

  end

  AIF29W3.WS-CITY-COMMA = AIF29W3.WS-CITY;

  AIF29W3.WS-STATE = "NV ";

  AIF29W3.WS-ZIP-CD = H2-2-OFF-POF.ZIP-CD;

  AIF29W3.WS-EDIT-ZIP-5 = AIF29W3.WS-ZIP-CD-5;

  if (AIF29W3.WS-ZIP-CD-4 != " ")

    AIF29W3.WS-EDIT-ZIP-4 = AIF29W3.WS-ZIP-CD-4;

    AIF29W3.WS-EDIT-ZIP-DASH1 = "-";

    if (AIF29W3.WS-ZIP-CD-2 != " ")

      AIF29W3.WS-EDIT-ZIP-2 = AIF29W3.WS-ZIP-CD-2;

      AIF29W3.WS-EDIT-ZIP-DASH2 = "-";

    end

  end

  set VSTRREC7 empty;

  VSTRREC7.UINSTRG = AIF29W3.WS-CITY-ST-ZIP;

  VSTRREC7.USTRLENGTH = 45;

  /*  */

  call "WST60A" (VSTRREC7);

  /*  */

  AIF29W-NI-ADDR.LINE4-TEXT = VSTRREC7.UOUTSTRG;

  /*  */

  AIF29W3.WS-PHN-NMB = H2-2-OFF-POF.PHN-NMB;

  AIF29W-NI-ADDR.LINE5-PHN-AREA-CD = AIF29W3.WS-PHN-AREA-CD;

  AIF29W-NI-ADDR.LINE5-PHN-PREFIX = AIF29W3.WS-PHN-PREFIX;

  AIF29W-NI-ADDR.LINE5-PHN-SUFFIX = AIF29W3.WS-PHN-SUFFIX;



  /* SOUTH OFFICE NAME AND ADDRESS*/



  set H2-2-OFF-POF empty;

  H2-2-OFF-POF.OFC-CD = "SI";

  AIF29Q3-OFF-POF();

  AIF29W-SI-ADDR.LINE1-TEXT = H2-2-OFF-POF.ADR-LN1;

  AIF29W-SI-ADDR.LINE2-TEXT = H2-2-OFF-POF.OFC-NM;

  AIF29W-SI-ADDR.LINE3-TEXT = H2-2-OFF-POF.ADR-LN2;

  AIF29W3.WS-CITY-ST-ZIP = " ";

  AIF29W3.WS-CITY = H2-2-OFF-POF.CITY;

  AIF29W3.WS-IDX-1 = 23;

  while (WS-IDX-1 > 0)

    if (AIF29W3.WS-CITY-CHAR[WS-IDX-1] == " ")

      WS-IDX-1 = WS-IDX-1 - 1;

    else

      WS-IDX-1 = WS-IDX-1 + 1;

      AIF29W3.WS-CITY-CHAR[WS-IDX-1] = ",";

      WS-IDX-1 = 0;

    end

  end

  AIF29W3.WS-CITY-COMMA = AIF29W3.WS-CITY;

  AIF29W3.WS-STATE = "NV ";

  AIF29W3.WS-ZIP-CD = H2-2-OFF-POF.ZIP-CD;

  AIF29W3.WS-EDIT-ZIP-5 = AIF29W3.WS-ZIP-CD-5;

  if (AIF29W3.WS-ZIP-CD-4 != " ")

    AIF29W3.WS-EDIT-ZIP-4 = AIF29W3.WS-ZIP-CD-4;

    AIF29W3.WS-EDIT-ZIP-DASH1 = "-";

    if (AIF29W3.WS-ZIP-CD-2 != " ")

      AIF29W3.WS-EDIT-ZIP-2 = AIF29W3.WS-ZIP-CD-2;

      AIF29W3.WS-EDIT-ZIP-DASH2 = "-";

    end

  end

  set VSTRREC7 empty;

  VSTRREC7.UINSTRG = AIF29W3.WS-CITY-ST-ZIP;

  VSTRREC7.USTRLENGTH = 45;

  /*  */

  call "WST60A" (VSTRREC7);

  /*  */

  AIF29W-SI-ADDR.LINE4-TEXT = VSTRREC7.UOUTSTRG;

  /*  */

  AIF29W3.WS-PHN-NMB = H2-2-OFF-POF.PHN-NMB;

  AIF29W-SI-ADDR.LINE5-PHN-AREA-CD = AIF29W3.WS-PHN-AREA-CD;

  AIF29W-SI-ADDR.LINE5-PHN-PREFIX = AIF29W3.WS-PHN-PREFIX;

  AIF29W-SI-ADDR.LINE5-PHN-SUFFIX = AIF29W3.WS-PHN-SUFFIX;

end // end AIF29P6-CONTACT



//------------------SQL -----------------------------------





// PROCESS TO READ INPUT FILE

Function AIF29Q1-READIP()

  VDBCONTROL.UPROC-NM = "AIF29Q1-READIP";

  VDBCONTROL.UPROC-OPT = "SCAN";

  VDBCONTROL.UPROC-OBJ = "SR-AIF29-INREC";

  VMESSAGE.UMSGINS[2] = "AIF29A";

  try

    get next SR-AIF29-INREC ;

  end

  if (SR-AIF29-INREC is ioError && SR-AIF29-INREC not endOfFile)

    VMESSAGE.UMSGCODE-JCL-ERR = 0;

    AIF29W.WS-ERR-CD = sysVar.errorCode;

    VMESSAGE.UMSGINS[1] = AIF29W.WS-ERR-LAST-FOUR;

    WCM00P2-TO-CEP01A();

  end  

end // end AIF29Q1-READIP



Function AIF29Q2-GET-DRP()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q2-GET-DRP";

  VDBCOMMON.USQLREC = "H2-DEBT-RESP-PRSN";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-RESP-PRSN";

  VDBCONTROL.UPROC-OPT = "SQLEXEC";

  try

    get H2-DEBT-RESP-PRSN

      with #sql{

        select T1.DEBT_YR

              ,T1.DEBT_SQ_NMB

              ,T1.UPI       

        from TWNDEBT_RESP_PRSN T1

        where T1.DEBT_YR = :DEBT-YR

        and T1.DEBT_SQ_NMB = :DEBT-SQ-NMB

        and T1.UPI = :UPI                                         

      }

      into DEBT-YR

          ,DEBT-SQ-NMB

          ,UPI;

   end

   AIF29Q9-SQLERR-RD();

end



Function AIF29Q2-GET-DMQ-DRP()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q2-GET-DMQ-DRP";

  VDBCOMMON.USQLREC = "H2-2-DMQ-DRP";

  VDBCONTROL.UPROC-OBJ = "H2-2-DMQ-DRP";

  VDBCONTROL.UPROC-OPT = "SQLEXEC";

  try

    get H2-2-DMQ-DRP

      with #sql{

        select T1.DEBT_YR

              ,T1.DEBT_SQ_NMB

              ,T1.UPI

              ,T1.TOP_DEBTOR

              ,T1.NOTICE_DT

              ,T1.TOPS_SENT_DT

              ,T2.TAX_INTC_IND

              ,T2.ADR_MATCH_STS

              ,T2.TOP_STS       

        from TWNDEBT_MATCH_REQ T1

            ,TWNDEBT_RESP_PRSN T2

        where T1.DEBT_YR = :DEBT-YR

        and T1.DEBT_SQ_NMB = :DEBT-SQ-NMB

        and T1.TOP_DEBTOR = 'D'

        and T1.STS_CD = 'M'

        and not T1.NOTICE_DT = '0001-01-01'

        and T1.TOPS_CHANGE_IND = ' '

        and T1.DEBT_YR = T2.DEBT_YR

        and T1.DEBT_SQ_NMB = T2.DEBT_SQ_NMB

        and T1.UPI = T2.UPI

        and T2.ADR_MATCH_STS = 'M'

        and T2.TAX_INTC_IND = 'Y'

        and T2.TOP_STS IN ('A', ' ')                       

      }

      into DEBT-YR

          ,DEBT-SQ-NMB

          ,UPI

          ,TOP-DEBTOR

          ,NOTICE-DT

          ,TOPS-SENT-DT

          ,TAX-INTC-IND

          ,ADR-MATCH-STS

          ,TOP-STS;                 

   end

  AIF29Q9-SQLERR-RD();

end 



 

FUNCTION AIF29Q2-ADD-DMQ()	

  WDB00PI();

  VDBCONTROL.UACCTYP = "W";

  VDBCONTROL.UPROC-NM = "AIR06Q5-ADD-DMQ";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";

  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";  

  VDBCONTROL.UPROC-OPT = "ADD";

   

  try

    add H2-DEBT-MATCH-REQ ;

  end

  AIF29Q9-SQLERR-WR();

  if (VDBCONTROL.URC == 0 ||

      VDBCONTROL.URC == 100)

  else    	

  	  AIF29W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;

      AIF29W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;

      AIF29W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;

      AIF29Q9-SET-ERROR();  	  

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

end  

   

Function AIF29Q2-DMQDRP-DEB()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q2-DMQDRP-DEB";

  VDBCOMMON.USQLREC = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OBJ = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OPT = "SETINQ";

  try

    open AIF29Q2-DMQDRP-DEB_RSI01 hold

      with #sql{

        select T1.DEBT_YR, T1.DEBT_SQ_NMB, T1.UPI, 

          T1.REQUEST_DT, T1.RESPONSE_DT, T1.SSN, T1.NAME_CTL,

          T1.LAST_NAME, T1.FIRST_NAME, T1.STS_CD,

          T1.ERROR_CD, T1.DEATH_DT, T1.FULL_NAME,

          T1.STREET_ADDR, T1.TOP_CITY, T1.STATE,

          T1.ZIPCODE_1, T1.ZIPCODE_2, T1.NOTICE_DT,

          T1.TOP_RESP_IND, T1.TOP_INTERCEPT, T1.TOP_DEBTOR, T1.TOP_DEBT_ID,

          T2.RESP_ESTBL_DT, T2.RESP_PRSN_DBT_PRTY, T2.RESP_IND,

          T2.TAX_INTC_IND, T2.ADR_MATCH_STS, T2.NOTICE_DT, T2.TOP_STS,

          T3.DEBT_BAL_AMT, T3.OFC_CD,

          T3.DSCVR_DT, T3.CLM_STRT_DT, T3.CLM_END_DT,

          T3.HRNG_BEG_DT, T3.HRNG_END_DT        

          from TWNDEBT_MATCH_REQ T1,

               TWNDEBT_RESP_PRSN T2,

               TWNDEBT T3

        WHERE T1.RESPONSE_DT BETWEEN :AIF29W.WS-LOW-DT AND :AIF29W.WS-CURR-DT

          AND T1.DEBT_YR        = T2.DEBT_YR

          AND T1.DEBT_SQ_NMB    = T2.DEBT_SQ_NMB

          AND T1.UPI            = T2.UPI

          AND T1.DEBT_YR        = T3.DEBT_YR

          AND T1.DEBT_SQ_NMB    = T3.DEBT_SQ_NMB

          AND T3.DEBT_BAL_AMT   > 24.99

       ORDER BY T1.STS_CD DESC, T1.DEBT_YR, T1.DEBT_SQ_NMB,

                T1.TOP_DEBTOR, T1.UPI   

      }

      into DEBT-YR, DEBT-SQ-NMB, UPI,  

           REQUEST-DT, RESPONSE-DT, SSN, NAME-CTL,

           LAST-NAME, FIRST-NAME, STS-CD,

           ERROR-CD, DEATH-DT, FULL-NAME,

           STREET-ADDR, TOP-CITY, STATE,

           ZIPCODE-1, ZIPCODE-2, NOTICE-DT,

           TOP-RESP-IND, TOP-INTERCEPT, TOP-DEBTOR, TOP-DEBT-ID,           

           RESP-ESTBL-DT, RESP-PRSN-DBT-PRTY, RESP-IND,

           TAX-INTC-IND, ADR-MATCH-STS, NOTICE-DT, TOP-STS,

           DEBT-BAL-AMT, OFC-CD,

           DSCVR-DT, CLM-STRT-DT, CLM-END-DT,

           HRNG-BEG-DT, HRNG-END-DT

        for H2-3-DMQDRP-DEB ;

   end

  AIF29Q9-SQLERR-RD();

  if (VDBCONTROL.URC != 0)

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

end // end AIF29Q2-DB-DRP-DMQ



Function AIF29Q2-SCAN-DMQDRP-DEB()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q2-SCAN-DMQDRP-DEB";

  VDBCOMMON.USQLREC = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OBJ = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OPT = "SCAN";

  try

    get next H2-3-DMQDRP-DEB ;

  end

  AIF30Q9-SQLERR-RD();

end // AIF29Q2-SCAN-DMQDRP-DEB()



   

Function AIF29Q3-DMQDRP-DEB()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-DMQDRP-DEB";

  VDBCOMMON.USQLREC = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OBJ = "H2-3-DMQDRP-DEB";

  VDBCONTROL.UPROC-OPT = "SETINQ";

  try

    get H2-3-DMQDRP-DEB

      with #sql{

        select T1.DEBT_YR, T1.DEBT_SQ_NMB, T1.UPI, 

          T1.REQUEST_DT, T1.RESPONSE_DT, T1.SSN, T1.NAME_CTL,

          T1.LAST_NAME, T1.FIRST_NAME, T1.STS_CD,

          T1.ERROR_CD, T1.DEATH_DT, T1.FULL_NAME,

          T1.STREET_ADDR, T1.TOP_CITY, T1.STATE,

          T1.ZIPCODE_1, T1.ZIPCODE_2, T1.NOTICE_DT,

          T1.TOP_RESP_IND, T1.TOP_INTERCEPT, T1.TOP_DEBTOR, T1.TOP_DEBT_ID,

          T2.RESP_ESTBL_DT, T2.RESP_PRSN_DBT_PRTY, T2.RESP_IND,

          T2.TAX_INTC_IND, T2.ADR_MATCH_STS, T2.NOTICE_DT, T2.TOP_STS,

          T3.DEBT_BAL_AMT, T3.OFC_CD,

          T3.DSCVR_DT, T3.CLM_STRT_DT, T3.CLM_END_DT,

          T3.HRNG_BEG_DT, T3.HRNG_END_DT        

          from TWNDEBT_MATCH_REQ T1,

               TWNDEBT_RESP_PRSN T2,

               TWNDEBT T3

        WHERE T1.DEBT_YR     = :DEBT-YR

          AND T1.DEBT_SQ_NMB = :DEBT-SQ-NMB

          AND T1.UPI         = :UPI

          AND T1.DEBT_YR     = T2.DEBT_YR

          AND T1.DEBT_SQ_NMB = T2.DEBT_SQ_NMB

          AND T1.UPI         = T2.UPI

          AND T1.DEBT_YR     = T3.DEBT_YR

          AND T1.DEBT_SQ_NMB = T3.DEBT_SQ_NMB

      }

      into DEBT-YR, DEBT-SQ-NMB, UPI,  

           REQUEST-DT, RESPONSE-DT, SSN, NAME-CTL,

           LAST-NAME, FIRST-NAME, STS-CD,

           ERROR-CD, DEATH-DT, FULL-NAME,

           STREET-ADDR, TOP-CITY, STATE,

           ZIPCODE-1, ZIPCODE-2, NOTICE-DT,

           TOP-RESP-IND, TOP-INTERCEPT, TOP-DEBTOR, TOP-DEBT-ID,           

           RESP-ESTBL-DT, RESP-PRSN-DBT-PRTY, RESP-IND,

           TAX-INTC-IND, ADR-MATCH-STS, NOTICE-DT, TOP-STS,

           DEBT-BAL-AMT, OFC-CD,

           DSCVR-DT, CLM-STRT-DT, CLM-END-DT,

           HRNG-BEG-DT, HRNG-END-DT;

   end

  AIF29Q9-SQLERR-RD();

end // end AIF29Q2-DB-DRP-DMQ

 

Function AIF29Q3-OFF-POF()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-OFF-POF";

  VDBCOMMON.USQLREC = "H2-OFF-POF";

  VDBCONTROL.UPROC-OBJ = "H2-OFF-POF";

  VDBCONTROL.UPROC-OPT = "SQLEXEC";

  try

    get H2-2-OFF-POF

      with #sql{

        select T1.OFC_CD, T1.OFC_NM, T1.ADR_LN1, T1.ADR_LN2,

          T1.CITY, T1.ST_CD, T1.ZIP_CD,

          T2.PHN_NMB

        from TWNOFFICE T1,

             TWNPRGRM_OFFICE T2

        WHERE T1.OFC_CD = :OFC-CD

          AND T1.OFC_TYP = 'INR'

          AND T1.OFC_CD = T2.OFC_CD

          AND T2.PRGM_OFC_TYPE = 'I'

      }

      into OFC-CD, OFC-NM, ADR-LN1, ADR-LN2,

           CITY, ST-CD, ZIP-CD,

           PHN-NMB ;

  end

  AIF29Q9-SQLERR-RD();

  if (VDBCONTROL.URC != 0)

    sysVar.returnCode = 8;

    WCM00P2-TO-CEP01A();

  end

end // end AIF29Q3-OFF-POF



Function AIF29Q3-DELETE-DMQ()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-DELETE-DMQ";

  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OPT = "DELETE";

  

  try

    execute 

      #sql{

        DELETE FROM TWNDEBT_MATCH_REQ

        WHERE DEBT_YR     = :DEBT-YR

          AND DEBT_SQ_NMB = :DEBT-SQ-NMB

          AND UPI         = :UPI

      }

      for H2-DEBT-MATCH-REQ ;  

  end

  

  AIF29Q9-SQLERR-WR();

  if (VDBCONTROL.URC != 0)

  	  AIF29W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;

      AIF29W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;

      AIF29W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;

      AIF29Q9-SET-ERROR();  	  

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end   	  

end

      
// TWNDEBT-MATCH-REQ

Function AIF29Q3-UPD-DMQ()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-UPD-DMQ";

  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OPT = "UPDATE";

  

  try

    execute 

      #sql{

        UPDATE TWNDEBT_MATCH_REQ

        SET RESPONSE_DT    = :RESPONSE-DT

           ,DEATH_DT       = :DEATH-DT

           ,STS_CD         = :STS-CD

           ,ERROR_CD       = :ERROR-CD

           ,FULL_NAME      = :FULL-NAME

           ,STREET_ADDR    = :STREET-ADDR

           ,TOP_CITY       = :TOP-CITY

           ,STATE          = :STATE

           ,ZIPCODE_1      = :ZIPCODE-1

           ,ZIPCODE_2      = :ZIPCODE-2

        WHERE DEBT_YR      = :DEBT-YR

          AND DEBT_SQ_NMB  = :DEBT-SQ-NMB

          AND UPI          = :UPI

      }

      for H2-DEBT-MATCH-REQ ; // model = none

  end

  AIF29Q9-SQLERR-WR();

  if (VDBCONTROL.URC != 0)

  	  AIF29W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;

      AIF29W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;

      AIF29W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;

      AIF29Q9-SET-ERROR();  	  

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

end // end AIF29Q3-UPD-DMQ



Function AIF29Q3-UPD-DMQ-NTC()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-UPD-DMQ-NTC";

  VDBCOMMON.USQLREC = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-MATCH-REQ";

  VDBCONTROL.UPROC-OPT = "UPDATE";

  try

    execute 

      #sql{

        UPDATE TWNDEBT_MATCH_REQ

        SET NOTICE_DT = :NOTICE-DT

        WHERE DEBT_YR      = :DEBT-YR

          AND DEBT_SQ_NMB  = :DEBT-SQ-NMB

          AND UPI          = :UPI

      }

      for H2-DEBT-MATCH-REQ ; // model = none

  end

  AIF29Q9-SQLERR-WR();

  if (VDBCONTROL.URC != 0)

  	  AIF29W.WS-ERR-DEBT-YR = H2-DEBT-MATCH-REQ.DEBT-YR;

      AIF29W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-MATCH-REQ.DEBT-SQ-NMB;

      AIF29W.WS-ERR-UPI =  H2-DEBT-MATCH-REQ.UPI;

      AIF29Q9-SET-ERROR();  	  

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

end // end AIF29Q3-UPD-DMQ




// TWNDEBT-RESP-PRSN

Function AIF29Q3-UPD-DRP()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q3-UPD-DRP";

  VDBCOMMON.USQLREC = "H2-DEBT-RESP-PRSN";

  VDBCONTROL.UPROC-OBJ = "H2-DEBT-RESP-PRSN";

  VDBCONTROL.UPROC-OPT = "UPDATE";

  try

    execute 

      #sql{

        UPDATE TWNDEBT_RESP_PRSN

        SET ADR_MATCH_STS      = :ADR-MATCH-STS

           ,NOTICE_DT          = :NOTICE-DT

        WHERE DEBT_YR          = :DEBT-YR

          AND DEBT_SQ_NMB      = :DEBT-SQ-NMB

          AND UPI              = :UPI

      }

      for H2-DEBT-RESP-PRSN ; // model = none

  end

  AIF29Q9-SQLERR-WR();

  if (VDBCONTROL.URC != 0)

  	  AIF29W.WS-ERR-DEBT-YR = H2-DEBT-RESP-PRSN.DEBT-YR;

      AIF29W.WS-ERR-DEBT-SQ-NMB = H2-DEBT-RESP-PRSN.DEBT-SQ-NMB;

      AIF29W.WS-ERR-UPI =  H2-DEBT-RESP-PRSN.UPI;

      AIF29Q9-SET-ERROR();  	  

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

end // end AIF29Q3-UPD-DRP




Function AIF29Q4-TWNCODE()

  WDB00PI();

  VDBCONTROL.UPROC-NM = "AIF29Q4-TWNCODE";

  VDBCOMMON.USQLREC = "H2-CODE-TBL";

  VDBCONTROL.UPROC-OBJ = "H2-CODE-TBL";

  VDBCONTROL.UPROC-OPT = "SQLEXEC";

  try

    get H2-CODE-TBL

      with #sql{

        select CODE_TBL_CD, CODE_TBL_TYP, CODE_DESC

        from twncode_tbl T1

        WHERE T1.code_tbl_typ = :CODE-TBL-TYP

          AND T1.code_tbl_cd  = :CODE-TBL-CD

         --** INSERT ORDER BY CLAUSE HERE **

      }

      into CODE-TBL-CD, CODE-TBL-TYP, CODE-DESC ;

  end

  AIF29Q9-SQLERR-RD();

  if (VDBCONTROL.URC != 0)

    sysVar.returnCode = 8;

    WCM00P2-TO-CEP01A();

  end

end // end AIF29Q4-TWNCODE



// PROCESS SQL READ ERRORS

Function AIF29Q9-SQLERR-RD()

//  SysLib.writeStdout("AIF29Q9-SQLERR-RD");

  VDBCONTROL.UACCTYP = "R";

  VDBCOMMON.UAPPLNAM = "AIF29A";

  VDBCOMMON.UNRF = "Y";

  VDBCOMMON.UDUP = "N";

  WDB00PE-SQLERR();

//  SysLib.writeStdout("URC = " + VDBCONTROL.URC);

  if (VDBCONTROL.URC >= 104)

      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

END 



Function AIF29Q9-SQLERR-WR()

  VDBCONTROL.UACCTYP = "W";

  VDBCOMMON.UAPPLNAM = "AIF29A";

  VDBCOMMON.UNRF = "Y";

  VDBCOMMON.UDUP = "Y";

  WDB00PE-SQLERR();

  if (VDBCONTROL.URC >= 104)

      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);

      sysVar.returnCode = 8;

      WCM00P2-TO-CEP01A();

  end

END  



FUNCTION AIF29Q9-SET-ERROR()

      SysLib.writeStdout("VDBCONTROL.URC " + VDBCONTROL.URC + "  " + VDBCONTROL.UPROC-NM + "  " + VDBCONTROL.UPROC-OBJ);

      SysLib.writeStdout("DEBT YR " + AIF29W.WS-ERR-DEBT-YR);

      SysLib.writeStdout("DEBT SQ " + AIF29W.WS-ERR-DEBT-SQ-NMB);

      SysLib.writeStdout("UPI " + AIF29W.WS-ERR-UPI);  

  	  IF (VDBCONTROL.URC == 100)

  	      VDBCONTROL.URC = 112;

  	  END

END


// CLOSE NOTICE FILE

Function AIF29Q8-CLOSE-NOTC()

  VGVar.handleHardIOErrors = 1;

  try

    close SR-AIF29-NOTICE ;

  end

  if (SR-AIF29-NOTICE is ioError)

    VDBCONTROL.UPROC-NM = "AIF29Q8-CLOSE-NOTC";

    VDBCONTROL.UPROC-OBJ = "SR-AIF29-NOTICE";

    VDBCONTROL.UPROC-OPT = "CLOSE";

    AIF29W.WS-ERR-CD = sysVar.errorCode;

    VMESSAGE.UMSGINS[1] = AIF29W.WS-ERR-LAST-FOUR;

    VMESSAGE.UMSGINS[2] = "AIF29A";

    if (SR-AIF29-NOTICE is fileNotAvailable)

      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";

    else

      if (SR-AIF29-NOTICE is fileNotFound)

        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";

      else

        if (SR-AIF29-NOTICE is invalidFormat)

          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";

        end

      end

    end

    WCM00P2-TO-CEP01A();

  end

end // end AIF29Q8-CLOSE-NOTC



// CLOSE NOTICE FILE

Function AIF29Q8-CLOSE-RPT()

  VGVar.handleHardIOErrors = 1;

  try

    close SR-132REP-RECOUT ;

  end

  if (SR-132REP-RECOUT is ioError)

    VDBCONTROL.UPROC-NM = "AIF29Q8-CLOSE-RPT";

    VDBCONTROL.UPROC-OBJ = "SR-132REP-RECOUT";

    VDBCONTROL.UPROC-OPT = "CLOSE";

    AIF29W.WS-ERR-CD = sysVar.errorCode;

    VMESSAGE.UMSGINS[1] = AIF29W.WS-ERR-LAST-FOUR;

    VMESSAGE.UMSGINS[2] = "AIF29A";

    if (SR-132REP-RECOUT is fileNotAvailable)

      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";

    else

      if (SR-132REP-RECOUT is fileNotFound)

        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";

      else

        if (SR-132REP-RECOUT is invalidFormat)

          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";

        end

      end

    end

    WCM00P2-TO-CEP01A();

  end

end // end AIF29Q8-CLOSE-RPT



// CLOSE THE SINP FILE

Function AIF29Q8-CLOSE-SR()

  VGVar.handleHardIOErrors = 1;

  try

    close SR-AIF29-INREC ;

  end

  if (SR-AIF29-INREC is ioError)

    VDBCONTROL.UPROC-NM = "AIF29Q8-CLOSE-SR";

    VDBCONTROL.UPROC-OBJ = "SR-AIF29-INREC";

    VDBCONTROL.UPROC-OPT = "CLOSE";

    AIF29W.WS-ERR-CD = sysVar.errorCode;

    VMESSAGE.UMSGINS[1] = AIF29W.WS-ERR-LAST-FOUR;

    VMESSAGE.UMSGINS[2] = "AIF29A";

    if (SR-AIF29-INREC is fileNotAvailable)

      VDBCONTROL.UEZESQRRM = "FILE IS NOT AVAILABLE";

    else

      if (SR-AIF29-INREC is fileNotFound)

        VDBCONTROL.UEZESQRRM = "FILE NOT FOUND";

      else

        if (SR-AIF29-INREC is invalidFormat)

          VDBCONTROL.UEZESQRRM = "FILE FORMAT MISMATCH";

        end

      end

    end

    WCM00P2-TO-CEP01A();

  end

end // end AIF29Q8-CLOSE-SR




// WRITE OF RPT LINE

Function AIF29Q9-NOTICE()

  try

    add SR-AIF29-NOTICE ;

  end

  /* check if any i/o error has occured*/

  if (SR-AIF29-NOTICE is ioError)

    VDBCONTROL.UPROC-NM = "AIF29Q9-NOTICE";

    VDBCONTROL.UPROC-OPT = "ADD";

    VDBCONTROL.UPROC-OBJ = "SR-AIF29-NOTICE";

    VMESSAGE.WS-ERR-CD = sysVar.errorCode;

    VMESSAGE.UMSGINS[1] = VMESSAGE.WS-ERR-LAST-FOUR;

    VMESSAGE.UMSGINS[2] = sysVar.transferName;

    VDBCONTROL.UMSQLCODE = 0;

    WCM00P2-TO-CEP01A();

  end

  SR-AIF29-NOTICE.UFIELD = " ";

end // end AIF29Q9-NOTICE




Record AIF29W type basicRecord

  10 WS-FIRST-INREC char(01);

  10 WS-REC-CD char(02);

     15 WS-REC-CD1 char(01);

     15 WS-REC-CD2 char(01);

  10 WS-TXT-03 char(15);

  10 WS-TXT-04 char(20);

  10 WS-TXT-MSNG char(30);

  10 WS-TXT-JOINT char(36);

  10 WS-TXT-BALANCE char(20);

  10 WS-TXT-02 char(51);

     15 WS-TXT2 char(15);

     15 WS-FULL-NM char(36);

  10 WS-TXT-07 char(34);

     15 WS-TXT7 char(24);

     15 WS-TXT7-MM char(2) ; 

     15 WS-TXT7-DASH1 char(1) ; 

     15 WS-TXT7-DD char(2) ; 

     15 WS-TXT7-DASH2 char(1) ; 

     15 WS-TXT7-CCYY char(4) ;

  10 WS-NOTICE char(1);

  10 WS-ERR-DEBT-YR NUM(4) ; 

  10 WS-ERR-DEBT-SQ-NMB num(5) ; 

  10 WS-ERR-UPI num(9) ; 

  10 WS-EOF char(1) ; 

  10 WS-REM-LINES num(3) ; 

  10 WS-RESPONSE-DT char(10) ; 

    15 WS-RESPONSE-CCYY char(4) ; 

    15 WS-RESPONSE-FLR1 char(1) ; 

    15 WS-RESPONSE-MM char(2) ; 

    15 WS-RESPONSE-FLR2 char(1) ; 

    15 WS-RESPONSE-DD char(2) ; 

  10 WS-DATE char(10) ; 

    15 WS-DATE-CCYY char(4) ; 

    15 WS-DATE-FLR1 char(1) ; 

    15 WS-DATE-MM char(2) ; 

    15 WS-DATE-FLR2 char(1) ; 

    15 WS-DATE-DD char(2) ; 

  10 WS-DT char(8) ; 

    15 WS-CCYY num(4) ; 

    15 WS-MM num(2) ; 

    15 WS-DD num(2) ; 

  10 WS-CURR-DT char(10) ; 

    15 WS-CURR-CCYY char(4) ; 

    15 WS-DASH1 char(1) ; 

    15 WS-CURR-MM char(2) ; 

    15 WS-DASH2 char(1) ; 

    15 WS-CURR-DD char(2) ; 

  10 WS-LOW-DT char(10) ; 

    15 WS-LOW-CCYY num(4) ; 

    15 WS-DASH3 char(1) ; 

    15 WS-LOW-MM num(2) ; 

    15 WS-DASH4 char(1) ; 

    15 WS-LOW-DD num(2) ; 

  10 WS-NOTICE-DT char(10) ; 

    15 WS-NOTICE-MM char(2) ; 

    15 WS-SLASH1 char(1) ; 

    15 WS-NOTICE-DD char(2) ; 

    15 WS-SLASH2 char(1) ; 

    15 WS-NOTICE-CCYY char(4) ; 

  10 WS-FIRST-TIME char(1) ; 

  10 WS-FIRST-ERR char(1) ; 

  10 WS-SSN char(9) ; 

     15 WS-SSN1 char(3) ; 

     15 WS-SSN2 char(2) ; 

     15 WS-SSN3 char(4) ;

  10 WS-LST-NM char(21) ; 

    15 WS-LST-CHAR char(1) [21] ; 

  10 WS-FRST-NM char(16) ; 

  10 WS-MID-NM char(16) ; 

  10 WS-NAME-CTL char(4) ; 

    15 WS-NAME-CHAR char(1) [4] ; 

  10 WS-ERROR char(1) ; 

  10 WS-ERR-CD char(8) ; 

    15 WS-ERR-FIRST-FOUR char(4) ; 

    15 WS-ERR-LAST-FOUR char(4) ;

  10 WS-ALPHA-DEBT char(15) ;

    15 WS-ALPHA-YR char(1) ;

    15 WS-ALPHA-SEQ num(5) ;

    15 WS-ALPHA-UPI num(9) ;

  10 WS-DEBT-ID char(7);

     15 WS-DBT-YR num(2);

     15 WS-DBT-SQ num(5);       

  10 WS-DEBT-NMBR char(15) ; 

    15 WS-DEBT-YR NUM (2) ; 

    15 WS-DEBT-SQ-NMB num(4) ; 

    15 WS-DEBT-UPI num(9) ; 

  10 WS-MATCH-STS char(1) ; 

  10 WS-COUNT num(8) ; 

  10 WS-AMOUNT decimal(9,2) ; 

  10 WS-CODE-DESC char(50) ; 

    15 WS-CODE-DESC-14 char(14) ; 

      20 WS-CODE-DESC-4 char(4) ; 

        25 WS-CODE-DESC-2 char(2) ; 

        25 WS-CODE-DESC-2A char(2) ; 

      20 WS-CODE-DESC-4A char(10) ; 

    15 WS-CODE-DESC-14A char(36) ; 

end // end AIF29W




Record AIF29W-DET  type basicRecord

  5 LINE1 char(132) ; 

    10 S-OFC-CD char(2) ; 

    10 LINE1-FLR1 char(2) ; 

    10 S-DEBT-NMB char(9) ;

       15 S-DEBT-ID char(7) ; 

       15 S-DEBT-DSH char(1);

       15 S-DEBTOR char(1);    

    10 LINE1-FLR2 char(2) ; 

    10 S-SSN1 char(3) ; 

    10 S-SSN2 char(2) ; 

    10 S-SSN3 char(4) ; 

    10 LINE1-FLR3 char(2) ;     

    10 S-TAX-INTC-IND char(1); 

    10 LINE1-FLR4 char(3) ;

    10 S-RESP-IND char(1) ; 

    10 LINE1-FLR5 char(3) ; 

    10 S-LAST-NAME char(20) ; 

    10 LINE1-FLR8 char(1) ; 

    10 S-FIRST-NAME char(13) ;   

    10 LINE1-FLR9 char(1) ; 

    10 S-BAL-AMT char(11) ; 

    10 LINE1-FLR10 char(2) ; 

    10 S-NOTICE-DATE char(10) ; 

    10 LINE1-FLR11 char(2) ; 

    10 S-ADDRESS char(35) ; 

    10 LINE1-FLR12 char(3) ; 

    

  5 LINE2 char(132) ; 

    10 LINE2-FLR1A char(4); 

    10 S-DBT-NMB char(9) ;

       15 S-DBT-ID char(7) ; 

       15 S-DBT-DSH char(1);

       15 S-DBTR char(1);    

    10 LINE2-FLR2A char(2) ;

    10 S-ERR-CD char(2) ;

       15 S-ERR-CD1 char(1);

       15 S-ERR-CD2 char(1);

    10 LINE2-FLR3A char(2) ;     

    10 S-LN2-TEXT char(67) ;       

    10 LINE2-FLR6A char(8) ;

    10 S-CITY char(23) ;      

    10 LINE2-FLR3 char(2) ;    

    10 S-STATE char(2) ; 

    10 LINE2-FLR4 char(1) ; 

    10 S-ZIPCODE-1 char(5) ; 

    10 LINE2-FLR5 char(1) ; 

    10 S-ZIPCODE-2 char(4) ; 

 

end // end AIF29W-DET




Record AIF29W-HEAD type basicRecord

  10 LINE1 char(132) ; 

    15 LINE1-PAGE-TEXT char(8) ; 

    15 FILLER1 char(1) ; 

    15 UPAGE char(4) ; 

    15 FILLER2 char(46) ; 

    15 LINE1-STATE-TEXT char(15) ; 

    15 FILLER3 char(43) ; 

    15 LINE1-DATE-TEXT char(4) ; 

    15 FILLER4 char(3) ; 

    15 UDATE char(8) ; 

  10 LINE2 char(132) ; 

    15 UAPPL char(8) ; 

    15 FILLER5 char(44) ; 

    15 LINE2-RPT-NAME char(28) ; 

    15 FILLER6 char(37) ; 

    15 LINE2-TIME-TEXT char(4) ; 

    15 FILLER7 char(3) ; 

    15 UTIME char(8) ; 

  10 LINE2-EXCEPTION char(28) ; 

end // end AIF29W-HEAD




Record AIF29W-NI-ADDR type basicRecord

  10 LINE1 char(80) ; 

    15 LINE1-TEXT char(30) ; 

    15 FILLER1 char(50) ; 

  10 LINE2 char(80) ; 

    15 LINE2-TEXT char(32) ; 

    15 FILLER2 char(48) ; 

  10 LINE3 char(80) ; 

    15 LINE3-TEXT char(30) ; 

    15 FILLER3 char(50) ; 

  10 LINE4 char(80) ; 

    15 LINE4-TEXT char(45) ; 

    15 FILLER4 char(35) ; 

  10 LINE5 char(80) ; 

    15 LINE5-TEXT char(17) ; 

      20 LINE5-PHN-FLR1 char(1) ; 

      20 LINE5-PHN-AREA-CD char(3) ; 

      20 LINE5-PHN-FLR2 char(2) ; 

      20 LINE5-PHN-PREFIX char(3) ; 

      20 LINE5-PHN-FLR3 char(1) ; 

      20 LINE5-PHN-SUFFIX char(4) ; 

      20 LINE5-PHN-FLR4 char(3) ; 

    15 LINE5-PHN-800 char(14) ; 

    15 FILLER5 char(49) ; 

  10 LINE6 char(80) ; 

    15 LINE6-TEXT char(50) ; 

    15 FILLER6 char(30) ; 

end // end AIF29W-NI-ADDR




Record AIF29W-NOTICE type basicRecord

  10 LINE1 char(80) ; 

    15 FILLER1A char(15) ; 

    15 CONSTANT1 char(50) ; 

    15 FILLER1B char(15) ; 

  10 LINE2 char(80) ; 

    15 FILLER2A char(15) ; 

    15 CONSTANT2 char(50) ; 

    15 FILLER2B char(15) ; 

  10 LINE3 char(80) ; 

    15 FILLER3A char(15) ; 

    15 CONSTANT3 char(50) ; 

    15 FILLER3B char(15) ; 

  10 LINE4 char(80) ; 

    15 FILLER4A char(54) ; 

    15 LINE4-DATE char(10) ; 

    15 FILLER4B char(16) ; 

  10 LINE5 char(80) ; 

    15 FILLER5A char(5) ; 

    15 LINE5-NAME char(45) ; 

    15 LINE5-DEBT-TEXT char(14) ; 

    15 LINE5-DEBT-YR num(2) ; 

    15 LINE5-DEBT-DASH char(1) ; 

    15 LINE5-DEBT-SQ-NMB num(5) ; 

    15 FILLER5B char(8) ; 

  10 LINE6 char(80) ; 

    15 FILLER6A char(5) ; 

    15 LINE6-ADDRESS char(45) ; 

    15 LINE6-SSN-TEXT char(14) ; 

    15 LINE6-SSN1 char(3) ; 

    15 LINE6-SSN-DASH1 char(1) ; 

    15 LINE6-SSN2 char(2) ; 

    15 LINE6-SSN-DASH2 char(1) ; 

    15 LINE6-SSN3 char(4) ; 

    15 FILLER6B char(5) ; 

  10 LINE7 char(80) ; 

    15 FILLER7A char(5) ; 

    15 LINE7-CITY-ST char(45) ; 

    15 LINE7-AMT-TEXT char(15) ; 

    15 LINE7-AMOUNT char(11) ; 

    15 FILLER7B char(4) ; 

  10 PARAGRPH1 char(720) ; 

    15 PAR1-LINE1 char(80) ; 

      20 PAR1-LMAR1 char(5) ; 

      20 PAR1-TEXT1 char(71) ; 

      20 PAR1-RMAR1 char(4) ; 

    15 PAR1-LINE2 char(80) ; 

      20 PAR1-LMAR2 char(5) ; 

      20 PAR1-TEXT2 char(71) ; 

      20 PAR1-RMAR2 char(4) ; 

    15 PAR1-LINE3 char(80) ; 

      20 PAR1-LMAR3 char(5) ; 

      20 PAR1-TEXT3 char(71) ; 

      20 PAR1-RMAR3 char(4) ; 

    15 PAR1-LINE4 char(80) ; 

      20 PAR1-LMAR4 char(5) ; 

      20 PAR1-TEXT4 char(71) ; 

      20 PAR1-RMAR4 char(4) ; 

    15 PAR1-LINE5 char(80) ; 

      20 PAR1-LMAR5 char(5) ; 

      20 PAR1-TEXT5 char(71) ; 

        25 PAR1-TEXT5-DATE char(10) ; 

        25 PAR1-TEXT5A char(61) ; 

      20 PAR1-RMAR5 char(4) ; 

    15 PAR1-LINE6 char(80) ; 

      20 PAR1-LMAR6 char(5) ; 

      20 PAR1-TEXT6 char(71) ; 

      20 PAR1-RMAR6 char(4) ; 

    15 PAR1-LINE7 char(80) ; 

      20 PAR1-LMAR7 char(5) ; 

      20 PAR1-TEXT7 char(71) ; 

      20 PAR1-RMAR7 char(4) ; 

    15 PAR1-LINE8 char(80) ; 

      20 PAR1-LMAR8 char(5) ; 

      20 PAR1-TEXT8 char(71) ; 

      20 PAR1-RMAR8 char(4) ; 

    15 PAR1-LINE9 char(80) ; 

      20 PAR1-LMAR9 char(5) ; 

      20 PAR1-TEXT9 char(71) ; 

      20 PAR1-RMAR9 char(4) ; 

  10 PARAGRPH2 char(480) ; 

    15 PAR2-LINE1 char(80) ; 

      20 PAR2-LMAR1 char(5) ; 

      20 PAR2-TEXT1 char(71) ; 

      20 PAR2-RMAR1 char(4) ; 

    15 PAR2-LINE2 char(80) ; 

      20 PAR2-LMAR2 char(5) ; 

      20 PAR2-TEXT2 char(71) ; 

      20 PAR2-RMAR2 char(4) ; 

    15 PAR2-LINE3 char(80) ; 

      20 PAR2-LMAR3 char(5) ; 

      20 PAR2-TEXT3 char(71) ; 

      20 PAR2-RMAR3 char(4) ; 

    15 PAR2-LINE4 char(80) ; 

      20 PAR2-LMAR4 char(5) ; 

      20 PAR2-TEXT4 char(71) ; 

      20 PAR2-RMAR4 char(4) ; 

    15 PAR2-LINE5 char(80) ; 

      20 PAR2-LMAR5 char(5) ; 

      20 PAR2-TEXT5 char(71) ; 

      20 PAR2-RMAR5 char(4) ; 

    15 PAR2-LINE6 char(80) ; 

      20 PAR2-LMAR6 char(5) ; 

      20 PAR2-TEXT6 char(71) ; 

      20 PAR2-RMAR6 char(4) ; 

  10 PARAGRPH3 char(320) ; 

    15 PAR3-LINE1 char(80) ; 

      20 PAR3-LMAR1 char(5) ; 

      20 PAR3-TEXT1 char(71) ; 

      20 PAR3-RMAR1 char(4) ; 

    15 PAR3-LINE2 char(80) ; 

      20 PAR3-LMAR2 char(5) ; 

      20 PAR3-TEXT2 char(71) ; 

      20 PAR3-RMAR2 char(4) ; 

    15 PAR3-LINE3 char(80) ; 

      20 PAR3-LMAR3 char(5) ; 

      20 PAR3-TEXT3 char(71) ; 

      20 PAR3-RMAR3 char(4) ; 

    15 PAR3-LINE4 char(80) ; 

      20 PAR3-LMAR4 char(5) ; 

      20 PAR3-TEXT4 char(71) ; 

      20 PAR3-RMAR4 char(4) ; 

  10 PARAGRPH4 char(400) ; 

    15 PAR4-LINE1 char(80) ; 

      20 PAR4-LMAR1 char(5) ; 

      20 PAR4-TEXT1 char(71) ; 

      20 PAR4-RMAR1 char(4) ; 

    15 PAR4-LINE2 char(80) ; 

      20 PAR4-LMAR2 char(5) ; 

      20 PAR4-TEXT2 char(71) ; 

      20 PAR4-RMAR2 char(4) ; 

    15 PAR4-LINE3 char(80) ; 

      20 PAR4-LMAR3 char(5) ; 

      20 PAR4-TEXT3 char(71) ; 

      20 PAR4-RMAR3 char(4) ; 

    15 PAR4-LINE4 char(80) ; 

      20 PAR4-LMAR4 char(5) ; 

      20 PAR4-TEXT4 char(71) ; 

      20 PAR4-RMAR4 char(4) ; 

    15 PAR4-LINE5 char(80) ; 

      20 PAR4-LMAR5 char(5) ; 

      20 PAR4-TEXT5 char(71) ; 

      20 PAR4-RMAR5 char(4) ; 

  10 PARAGRPH5 char(240) ; 

    15 PAR5-LINE1 char(80) ; 

      20 PAR5-LMAR1 char(5) ; 

      20 PAR5-TEXT1 char(71) ; 

      20 PAR5-RMAR1 char(4) ; 

    15 PAR5-LINE2 char(80) ; 

      20 PAR5-LMAR2 char(5) ; 

      20 PAR5-TEXT2 char(71) ; 

      20 PAR5-RMAR2 char(4) ; 

    15 PAR5-LINE3 char(80) ; 

      20 PAR5-LMAR3 char(5) ; 

      20 PAR5-TEXT3 char(71) ; 

      20 PAR5-RMAR3 char(4) ; 

  10 PARAGRPH6 char(480) ; 

    15 PAR6-LINE1 char(80) ; 

      20 PAR6-LMAR1 char(5) ; 

      20 PAR6-TEXT1 char(71) ; 

      20 PAR6-RMAR1 char(4) ; 

    15 PAR6-LINE2 char(80) ; 

      20 PAR6-LMAR2 char(5) ; 

      20 PAR6-TEXT2 char(71) ; 

      20 PAR6-RMAR2 char(4) ; 

    15 PAR6-LINE3 char(80) ; 

      20 PAR6-LMAR3 char(5) ; 

      20 PAR6-TEXT3 char(71) ; 

      20 PAR6-RMAR3 char(4) ; 

    15 PAR6-LINE4 char(80) ; 

      20 PAR6-LMAR4 char(5) ; 

      20 PAR6-TEXT4 char(71) ; 

      20 PAR6-RMAR4 char(4) ; 

    15 PAR6-LINE5 char(80) ; 

      20 PAR6-LMAR5 char(5) ; 

      20 PAR6-TEXT5 char(71) ; 

      20 PAR6-RMAR5 char(4) ; 

    15 PAR6-LINE6 char(80) ; 

      20 PAR6-LMAR6 char(5) ; 

      20 PAR6-TEXT6 char(71) ; 

      20 PAR6-RMAR6 char(4) ; 

end // end AIF29W-NOTICE




Record AIF29W-SI-ADDR type basicRecord

  10 LINE1 char(80) ; 

    15 LINE1-TEXT char(30) ; 

    15 FILLER1 char(50) ; 

  10 LINE2 char(80) ; 

    15 LINE2-TEXT char(32) ; 

    15 FILLER2 char(48) ; 

  10 LINE3 char(80) ; 

    15 LINE3-TEXT char(30) ; 

    15 FILLER3 char(50) ; 

  10 LINE4 char(80) ; 

    15 LINE4-TEXT char(45) ; 

    15 FILLER4 char(35) ; 

  10 LINE5 char(80) ; 

    15 LINE5-TEXT char(17) ; 

      20 LINE5-PHN-FLR1 char(1) ; 

      20 LINE5-PHN-AREA-CD char(3) ; 

      20 LINE5-PHN-FLR2 char(2) ; 

      20 LINE5-PHN-PREFIX char(3) ; 

      20 LINE5-PHN-FLR3 char(1) ; 

      20 LINE5-PHN-SUFFIX char(4) ; 

      20 LINE5-PHN-FLR4 char(3) ; 

    15 LINE5-PHN-800 char(14) ; 

    15 FILLER5 char(49) ; 

  10 LINE6 char(80) ; 

    15 LINE6-TEXT char(50) ; 

    15 FILLER6 char(30) ; 

end // end AIF29W-SI-ADDR

Record AIF29W-SUBH type basicRecord

  10 LINE1 char(132) ; 

    15 LINE1-1 char(26) ; 

    15 LINE1-2 char(29) ; 

    15 LINE1-3 char(17) ; 

    15 LINE1-4 char(22) ; 

    15 LINE1-5 char(38) ; 

  10 ERROR-02 char(38) ; 

  10 ERROR-03 char(38) ; 

  10 ERROR-04 char(38) ; 

  10 ERROR-07 char(38) ; 

  10 ERROR-DB char(38) ; 

    15 ERR-DB-TEXT char(26) ; 

    15 ERR-DB-UPI num(9) ; 

    15 ERR-FILR char(3) ; 

end // end AIF29W-SUBH




Record AIF29W2 type basicRecord

  10 WS-DATE-TS char(26) ; 

    15 WS-DATE char(10) ; 

      20 WS-CCYY char(4) ; 

      20 WS-DASH1 char(1) ; 

      20 WS-MM char(2) ; 

      20 WS-DASH2 char(1) ; 

      20 WS-DD char(2) ; 

    15 WS-DASH3 char(1) ; 

    15 WS-TIME char(15) ; 

  10 WS-PRN-DATE char(10) ; 

    15 WS-PRN-MM char(2) ; 

    15 WS-PRN-DASH1 char(1) ; 

    15 WS-PRN-DD char(2) ; 

    15 WS-PRN-DASH2 char(1) ; 

    15 WS-PRN-CCYY char(4) ; 

  10 WS-AMOUNT decimal(9,2) ; 

  10 WS-COUNT int ; 

  10 WS-NUMB int ; 

  10 WS-OUTPUT1 char(13) ; 

    15 WS-OUTPUT1A char(2) ; 

    15 WS-FLR1 char(1) ; 

    15 WS-OUTPUT1B char(10) ; 

  10 WS-OUTPUT2 char(13) ; 

    15 WS-FLR2 char(1) ; 

    15 WS-OUTPUT2A char(2) ; 

    15 WS-OUTPUT2B char(10) ; 

end // end AIF29W2




Record AIF29W3 type basicRecord

  10 WS-EDIT-AMT char(11) ; 

    15 WS-EDIT-AMT-CHAR char(1) [11] ; 

  10 WS-RPT-AMT char(11) ; 

    15 WS-RPT-AMT-CHAR char(1) [11] ; 

  10 WS-AMOUNT decimal(9,2) ; 

  10 WS-IDX-1 num(3) ; 

  10 WS-IDX-2 num(3) ; 

  10 WS-EDIT-NAME char(36) ; 

    15 WS-EDIT-FIRST-NAME char(16) ; 

    15 WS-EDIT-LAST-NAME char(20) ; 

  10 WS-DATE char(10) ; 

    15 WS-DATE-CCYY char(4) ; 

    15 WS-DATE-FLR1 char(1) ; 

    15 WS-DATE-MM char(2) ; 

    15 WS-DATE-FLR2 char(1) ; 

    15 WS-DATE-DD char(2) ; 

  10 WS-RPT-DATE char(10) ; 

    15 WS-RPT-MM char(2) ; 

    15 WS-RPT-SLASH1 char(1) ; 

    15 WS-RPT-DD char(2) ; 

    15 WS-RPT-SLASH2 char(1) ; 

    15 WS-RPT-CCYY char(4) ; 

  10 WS-SSN char(9) ; 

    15 WS-SSN1 char(3) ; 

    15 WS-SSN2 char(2) ; 

    15 WS-SSN3 char(4) ; 

  10 WS-ZIP-CD char(11) ; 

    15 WS-ZIP-CD-5 char(5) ; 

    15 WS-ZIP-CD-4 char(4) ; 

    15 WS-ZIP-CD-2 char(2) ; 

  10 WS-PHN-NMB char(10) ; 

    15 WS-PHN-AREA-CD char(3) ; 

    15 WS-PHN-PREFIX char(3) ; 

    15 WS-PHN-SUFFIX char(4) ; 

  10 WS-EDIT-ADDR char(62) ; 

    15 WS-EDIT-ADR-COMMA char(32) ; 

    15 WS-EDIT-ADR2 char(30) ; 

  10 WS-CITY-ST-ZIP char(44) ; 

    15 WS-CITY-COMMA char(27) ; 

    15 WS-STATE char(3) ; 

    15 WS-SPACE char(1) ; 

    15 WS-EDIT-ZIP-5 char(5) ; 

    15 WS-EDIT-ZIP-DASH1 char(1) ; 

    15 WS-EDIT-ZIP-4 char(4) ; 

    15 WS-EDIT-ZIP-DASH2 char(1) ; 

    15 WS-EDIT-ZIP-2 char(2) ; 

  10 WS-CITY char(23) ; 

    15 WS-CITY-CHAR char(1) [23] ; 

end // end AIF29W3




