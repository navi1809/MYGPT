package IVA_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=AMA12A ****
// COMPONENT NAME: AMA12A Ongoing Termination Reason Stats by
// Aid Code - B===============
// 
// DESCRIPTION:
// ============
// Statistical report of BLIND intake
// cases which had a termination action
// during the report month with details
// by aid code and termination reason
// 
// 
// ***********************
Program AMA12A type basicProgram //VAGen Info - main batch program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  AMA12W AMA12W; // record
  AMA12W-DET AMA12W-DET; // record
  AMA12W-FOOTER AMA12W-FOOTER; // record
  AMA12W-HEAD AMA12W-HEAD; // record
  AMA12W-SUBH AMA12W-SUBH; // record
  CEP01W CEP01W; // record
  FORMATW FORMATW; // record
  GDW GDW; // record
  REP-COMMON REP-COMMON; // record
  REP-DATE REP-DATE; // record
  REP-EOFNOF REP-EOFNOF; // record
  SR-132REP-RECOUT SR-132REP-RECOUT; // record
  SR-AMA12-RECIN SR-AMA12-RECIN; // record
  SR-AMA44-RECIN SR-AMA44-RECIN; // record
  VDBCOMMON VDBCOMMON; // record
  VDBCONTROL VDBCONTROL; // record
  VMESSAGE VMESSAGE; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AMA12P9-MAIN: AMA12P9-MAIN();
  end // end main
end // end AMA12A


// CALCULATE REPORT TOTALS
Function AMA12P9-ACUM-DET()
  /* total*/
  AMA12W.WS-TERM-CNT-SUB-TOTAL-BL = AMA12W.WS-TERM-CNT-EM3 + AMA12W.WS-TERM-CNT-IN3 +   AMA12W.WS-TERM-CNT-SI3 + AMA12W.WS-TERM-CNT-PK3 +   AMA12W.WS-TERM-CNT-KB3 +   AMA12W.WS-TERM-CNT-WB3 + AMA12W.WS-TERM-CNT-GC3 +   AMA12W.WS-TERM-CNT-SS3 + AMA12W.WS-TERM-CNT-HD3 +   AMA12W.WS-TERM-CNT-HG3 + AMA12W.WS-TERM-CNT-CM3;
   /* Begin change for wi# 15116- Ted*/
   /* Hendricks*/
  AMA12W.WS-TERM-CNT-SUB-TOTAL-MB = AMA12W.WS-TERM-CNT-QM3 +   AMA12W.WS-TERM-CNT-SL3 + AMA12W.WS-TERM-CNT-QD3 +    AMA12W.WS-TERM-CNT-QI3 + AMA12W.WS-TERM-CNT-QJ3;

                                   /* End change for wi# 15116- Ted*/
  AMA12W.WS-TERM-CNT-GR-TOTAL = AMA12W.WS-TERM-CNT-SUB-TOTAL-BL + AMA12W.WS-TERM-CNT-SUB-TOTAL-MB;


  /* TOTAL FOR FOOTER*/
  AMA12W.WS-TERM-CNT-AC-TOT-EM3 = AMA12W.WS-TERM-CNT-AC-TOT-EM3   + AMA12W.WS-TERM-CNT-EM3;
  AMA12W.WS-TERM-CNT-AC-TOT-IN3 = AMA12W.WS-TERM-CNT-AC-TOT-IN3   + AMA12W.WS-TERM-CNT-IN3;
  AMA12W.WS-TERM-CNT-AC-TOT-SI3 = AMA12W.WS-TERM-CNT-AC-TOT-SI3   + AMA12W.WS-TERM-CNT-SI3;
  AMA12W.WS-TERM-CNT-AC-TOT-PK3 = AMA12W.WS-TERM-CNT-AC-TOT-PK3   + AMA12W.WS-TERM-CNT-PK3;
  AMA12W.WS-TERM-CNT-AC-TOT-KB3 = AMA12W.WS-TERM-CNT-AC-TOT-KB3   + AMA12W.WS-TERM-CNT-KB3;
  AMA12W.WS-TERM-CNT-AC-TOT-WB3 = AMA12W.WS-TERM-CNT-AC-TOT-WB3   + AMA12W.WS-TERM-CNT-WB3;
  AMA12W.WS-TERM-CNT-AC-TOT-GC3 = AMA12W.WS-TERM-CNT-AC-TOT-GC3   + AMA12W.WS-TERM-CNT-GC3;
  AMA12W.WS-TERM-CNT-AC-TOT-SS3 = AMA12W.WS-TERM-CNT-AC-TOT-SS3   + AMA12W.WS-TERM-CNT-SS3;
  AMA12W.WS-TERM-CNT-AC-TOT-HD3 = AMA12W.WS-TERM-CNT-AC-TOT-HD3   + AMA12W.WS-TERM-CNT-HD3;
  AMA12W.WS-TERM-CNT-AC-TOT-HG3 = AMA12W.WS-TERM-CNT-AC-TOT-HG3   + AMA12W.WS-TERM-CNT-HG3;
  AMA12W.WS-TERM-CNT-AC-TOT-CM3 = AMA12W.WS-TERM-CNT-AC-TOT-CM3   + AMA12W.WS-TERM-CNT-CM3;
  AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL = AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL   + AMA12W.WS-TERM-CNT-SUB-TOTAL-BL;
  AMA12W.WS-TERM-CNT-AC-TOT-QM3 = AMA12W.WS-TERM-CNT-AC-TOT-QM3   + AMA12W.WS-TERM-CNT-QM3;
  AMA12W.WS-TERM-CNT-AC-TOT-SL3 = AMA12W.WS-TERM-CNT-AC-TOT-SL3   + AMA12W.WS-TERM-CNT-SL3;

  /* Begin change for WI# 15116- Ted Hendricks*/

  AMA12W.WS-TERM-CNT-AC-TOT-QI3 = AMA12W.WS-TERM-CNT-AC-TOT-QI3   + AMA12W.WS-TERM-CNT-QI3;
  AMA12W.WS-TERM-CNT-AC-TOT-QJ3 = AMA12W.WS-TERM-CNT-AC-TOT-QJ3   + AMA12W.WS-TERM-CNT-QJ3;

  /* End   change for WI# 15116- Ted Hendricks*/

  AMA12W.WS-TERM-CNT-AC-TOT-QD3 = AMA12W.WS-TERM-CNT-AC-TOT-QD3   + AMA12W.WS-TERM-CNT-QD3;
  AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB = AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB   + AMA12W.WS-TERM-CNT-SUB-TOTAL-MB;
  AMA12W.WS-TERM-CNT-GR-AC-TOT = AMA12W.WS-TERM-CNT-GR-AC-TOT   + AMA12W.WS-TERM-CNT-GR-TOTAL;
end // end AMA12P9-ACUM-DET


Function AMA12P9-ACUM-DOF-F()
  /* ************** wi 16615 start ******************************************/
  AMA12W.WS-AMA12-INDEX = 1;
  while (AMA12W.WS-AMA12-INDEX <= 9)
    if (AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] == "Y")
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-EM3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-EM3       + AMA12W.WS-DOFC-TERM-CNT-EM3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-IN3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-IN3       + AMA12W.WS-DOFC-TERM-CNT-IN3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SI3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SI3       + AMA12W.WS-DOFC-TERM-CNT-SI3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-PK3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-PK3       + AMA12W.WS-DOFC-TERM-CNT-PK3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-KB3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-KB3       + AMA12W.WS-DOFC-TERM-CNT-KB3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-WB3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-WB3       + AMA12W.WS-DOFC-TERM-CNT-WB3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-GC3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-GC3       + AMA12W.WS-DOFC-TERM-CNT-GC3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SS3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SS3       + AMA12W.WS-DOFC-TERM-CNT-SS3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HD3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HD3       + AMA12W.WS-DOFC-TERM-CNT-HD3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HG3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HG3       + AMA12W.WS-DOFC-TERM-CNT-HG3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-CM3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-CM3       + AMA12W.WS-DOFC-TERM-CNT-CM3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-BL = AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-BL       + AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QM3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QM3       + AMA12W.WS-DOFC-TERM-CNT-QM3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SL3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SL3       + AMA12W.WS-DOFC-TERM-CNT-SL3[WS-AMA12-INDEX];

   /* Begin change for wi# 15116- Ted Hendricks*/

      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QI3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QI3       + AMA12W.WS-DOFC-TERM-CNT-QI3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QJ3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QJ3       + AMA12W.WS-DOFC-TERM-CNT-QJ3[WS-AMA12-INDEX];

   /* End   change for wi# 15116- Ted Hendricks*/

      AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QD3 = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QD3       + AMA12W.WS-DOFC-TERM-CNT-QD3[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-MB = AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-MB       + AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX];
      AMA12W.WS-DOFC-TERM-CNT-GR-AC-TOT = AMA12W.WS-DOFC-TERM-CNT-GR-AC-TOT       + AMA12W.WS-DOFC-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX];
    end
    AMA12W.WS-AMA12-INDEX = AMA12W.WS-AMA12-INDEX + 1;
  end
  /* ************** wi 16615 end   ******************************************/
end // end AMA12P9-ACUM-DOF-F


Function AMA12P9-ACUM-DOFC()
  /* *************** wi 16615 start *****************************************/
  /* accumulate figures for different offices report*/
  if (AMA12W.WS-PREV-CLSRE-RSN-CD == "1")
    AMA12W.WS-AMA12-INDEX = 1;
    AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
    AMA12W.WS-DOFC-REC-FND = "Y";
  else
    if (AMA12W.WS-PREV-CLSRE-RSN-CD == "2")
      AMA12W.WS-AMA12-INDEX = 2;
      AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
      AMA12W.WS-DOFC-REC-FND = "Y";
    else
      if (AMA12W.WS-PREV-CLSRE-RSN-CD == "3")
        AMA12W.WS-AMA12-INDEX = 3;
        AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
        AMA12W.WS-DOFC-REC-FND = "Y";
      else
        if (AMA12W.WS-PREV-CLSRE-RSN-CD == "4")
          AMA12W.WS-AMA12-INDEX = 4;
          AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
          AMA12W.WS-DOFC-REC-FND = "Y";
        else
          if (AMA12W.WS-PREV-CLSRE-RSN-CD == "5")
            AMA12W.WS-AMA12-INDEX = 5;
            AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
            AMA12W.WS-DOFC-REC-FND = "Y";
          else
            if (AMA12W.WS-PREV-CLSRE-RSN-CD == "6")
              AMA12W.WS-AMA12-INDEX = 6;
              AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
              AMA12W.WS-DOFC-REC-FND = "Y";
            else
              if (AMA12W.WS-PREV-CLSRE-RSN-CD == "7")
                AMA12W.WS-AMA12-INDEX = 7;
                AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                AMA12W.WS-DOFC-REC-FND = "Y";
              else
                if (AMA12W.WS-PREV-CLSRE-RSN-CD == "8")
                  AMA12W.WS-AMA12-INDEX = 8;
                  AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                  AMA12W.WS-DOFC-REC-FND = "Y";
                else
                  if (AMA12W.WS-PREV-CLSRE-RSN-CD == "9")
                    AMA12W.WS-AMA12-INDEX = 9;
                    AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                    AMA12W.WS-DOFC-REC-FND = "Y";
                  end
                end
              end
            end
          end
        end
      end
    end
  end

  if (AMA12W.WS-DOFC-REC-FND == "Y")
    AMA12W.WS-DOFC-REC-FND = "N";

    AMA12W.WS-DOFC-TERM-RSN[WS-AMA12-INDEX] = AMA12W.WS-TERM-RSN-TRUNC;
    AMA12W.WS-DOFC-TERM-CNT-EM3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-EM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-EM3;
    AMA12W.WS-DOFC-TERM-CNT-IN3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-IN3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-IN3;
    AMA12W.WS-DOFC-TERM-CNT-SI3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-SI3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SI3;
    AMA12W.WS-DOFC-TERM-CNT-PK3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-PK3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-PK3;
    AMA12W.WS-DOFC-TERM-CNT-KB3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-KB3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-KB3;
    AMA12W.WS-DOFC-TERM-CNT-WB3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-WB3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-WB3;
    AMA12W.WS-DOFC-TERM-CNT-GC3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-GC3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-GC3;
    AMA12W.WS-DOFC-TERM-CNT-SS3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-SS3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SS3;
    AMA12W.WS-DOFC-TERM-CNT-HD3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-HD3[WS-AMA12-INDEX]     + AMA12W.WS-TERM-CNT-HD3;
    AMA12W.WS-DOFC-TERM-CNT-HG3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-HG3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-HG3;
    AMA12W.WS-DOFC-TERM-CNT-CM3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-CM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-CM3;
    AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SUB-TOTAL-BL;
    AMA12W.WS-DOFC-TERM-CNT-QM3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-QM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QM3;
    AMA12W.WS-DOFC-TERM-CNT-SL3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-SL3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SL3;

  /* Begin change for wi# 15116- Ted Hendricks*/

    AMA12W.WS-DOFC-TERM-CNT-QI3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-QI3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QI3;
    AMA12W.WS-DOFC-TERM-CNT-QJ3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-QJ3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QJ3;

   /* End   change for wi# 15116- Ted Hendricks*/

    AMA12W.WS-DOFC-TERM-CNT-QD3[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-QD3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QD3;
    AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX]     + AMA12W.WS-TERM-CNT-SUB-TOTAL-MB;
    AMA12W.WS-DOFC-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX] = AMA12W.WS-DOFC-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-GR-TOTAL;
    AMA12W.WS-AMA12-INDEX = 0;
  end
  /* *************** wi 16615 end   *****************************************/
end // end AMA12P9-ACUM-DOFC


// ACCUM FIGURES FOR STWIDE REPT
Function AMA12P9-ACUM-ST()
  /* accumulate figures for state wide report*/
  if (AMA12W.WS-PREV-CLSRE-RSN-CD == "1")
    AMA12W.WS-AMA12-INDEX = 1;
    AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
    AMA12W.WS-ST-REC-FND = "Y";
  else
    if (AMA12W.WS-PREV-CLSRE-RSN-CD == "2")
      AMA12W.WS-AMA12-INDEX = 2;
      AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
      AMA12W.WS-ST-REC-FND = "Y";
    else
      if (AMA12W.WS-PREV-CLSRE-RSN-CD == "3")
        AMA12W.WS-AMA12-INDEX = 3;
        AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
        AMA12W.WS-ST-REC-FND = "Y";
      else
        if (AMA12W.WS-PREV-CLSRE-RSN-CD == "4")
          AMA12W.WS-AMA12-INDEX = 4;
          AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
          AMA12W.WS-ST-REC-FND = "Y";
        else
          if (AMA12W.WS-PREV-CLSRE-RSN-CD == "5")
            AMA12W.WS-AMA12-INDEX = 5;
            AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
            AMA12W.WS-ST-REC-FND = "Y";
          else
            if (AMA12W.WS-PREV-CLSRE-RSN-CD == "6")
              AMA12W.WS-AMA12-INDEX = 6;
              AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
              AMA12W.WS-ST-REC-FND = "Y";
            else
              if (AMA12W.WS-PREV-CLSRE-RSN-CD == "7")
                AMA12W.WS-AMA12-INDEX = 7;
                AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                AMA12W.WS-ST-REC-FND = "Y";
              else
                if (AMA12W.WS-PREV-CLSRE-RSN-CD == "8")
                  AMA12W.WS-AMA12-INDEX = 8;
                  AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                  AMA12W.WS-ST-REC-FND = "Y";
                else
                  if (AMA12W.WS-PREV-CLSRE-RSN-CD == "9")
                    AMA12W.WS-AMA12-INDEX = 9;
                    AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] = "Y";
                    AMA12W.WS-ST-REC-FND = "Y";
                  end
                end
              end
            end
          end
        end
      end
    end
  end

  if (AMA12W.WS-ST-REC-FND == "Y")
    AMA12W.WS-ST-REC-FND = "N";
    AMA12W.WS-ST-TERM-RSN[WS-AMA12-INDEX] = AMA12W.WS-TERM-RSN-TRUNC;
    AMA12W.WS-ST-TERM-CNT-EM3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-EM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-EM3;
    AMA12W.WS-ST-TERM-CNT-IN3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-IN3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-IN3;
    AMA12W.WS-ST-TERM-CNT-SI3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-SI3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SI3;
    AMA12W.WS-ST-TERM-CNT-PK3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-PK3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-PK3;
    AMA12W.WS-ST-TERM-CNT-KB3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-KB3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-KB3;
    AMA12W.WS-ST-TERM-CNT-WB3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-WB3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-WB3;
    AMA12W.WS-ST-TERM-CNT-GC3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-GC3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-GC3;
    AMA12W.WS-ST-TERM-CNT-SS3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-SS3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SS3;
    AMA12W.WS-ST-TERM-CNT-HD3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-HD3[WS-AMA12-INDEX]     + AMA12W.WS-TERM-CNT-HD3;
    AMA12W.WS-ST-TERM-CNT-HG3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-HG3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-HG3;
    AMA12W.WS-ST-TERM-CNT-CM3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-CM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-CM3;
    AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SUB-TOTAL-BL;
    AMA12W.WS-ST-TERM-CNT-QM3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-QM3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QM3;
    AMA12W.WS-ST-TERM-CNT-SL3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-SL3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-SL3;

  /* Begin change for wi# 15116- Ted Hendricks*/

    AMA12W.WS-ST-TERM-CNT-QI3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-QI3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QI3;
    AMA12W.WS-ST-TERM-CNT-QJ3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-QJ3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QJ3;

   /* End   change for wi# 15116- Ted Hendricks*/

    AMA12W.WS-ST-TERM-CNT-QD3[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-QD3[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-QD3;
    AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX]     + AMA12W.WS-TERM-CNT-SUB-TOTAL-MB;
    AMA12W.WS-ST-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX] = AMA12W.WS-ST-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX] +     AMA12W.WS-TERM-CNT-GR-TOTAL;
    AMA12W.WS-AMA12-INDEX = 0;
  end
end // end AMA12P9-ACUM-ST


// ACCUM FIGS FOR STWIDE FOOTER
Function AMA12P9-ACUM-STFOT()
  AMA12W.WS-AMA12-INDEX = 1;
  while (AMA12W.WS-AMA12-INDEX <= 9)
    if (AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] == "Y")
      AMA12W.WS-TERM-CNT-AC-TOT-EM3 = AMA12W.WS-TERM-CNT-AC-TOT-EM3       + AMA12W.WS-ST-TERM-CNT-EM3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-IN3 = AMA12W.WS-TERM-CNT-AC-TOT-IN3       + AMA12W.WS-ST-TERM-CNT-IN3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-SI3 = AMA12W.WS-TERM-CNT-AC-TOT-SI3       + AMA12W.WS-ST-TERM-CNT-SI3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-PK3 = AMA12W.WS-TERM-CNT-AC-TOT-PK3       + AMA12W.WS-ST-TERM-CNT-PK3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-KB3 = AMA12W.WS-TERM-CNT-AC-TOT-KB3       + AMA12W.WS-ST-TERM-CNT-KB3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-WB3 = AMA12W.WS-TERM-CNT-AC-TOT-WB3       + AMA12W.WS-ST-TERM-CNT-WB3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-GC3 = AMA12W.WS-TERM-CNT-AC-TOT-GC3       + AMA12W.WS-ST-TERM-CNT-GC3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-SS3 = AMA12W.WS-TERM-CNT-AC-TOT-SS3       + AMA12W.WS-ST-TERM-CNT-SS3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-HD3 = AMA12W.WS-TERM-CNT-AC-TOT-HD3       + AMA12W.WS-ST-TERM-CNT-HD3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-HG3 = AMA12W.WS-TERM-CNT-AC-TOT-HG3       + AMA12W.WS-ST-TERM-CNT-HG3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-CM3 = AMA12W.WS-TERM-CNT-AC-TOT-CM3       + AMA12W.WS-ST-TERM-CNT-CM3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL = AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL       + AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-QM3 = AMA12W.WS-TERM-CNT-AC-TOT-QM3       + AMA12W.WS-ST-TERM-CNT-QM3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-SL3 = AMA12W.WS-TERM-CNT-AC-TOT-SL3       + AMA12W.WS-ST-TERM-CNT-SL3[WS-AMA12-INDEX];

   /* Begin change for wi# 15116- Ted Hendricks*/

      AMA12W.WS-TERM-CNT-AC-TOT-QI3 = AMA12W.WS-TERM-CNT-AC-TOT-QI3       + AMA12W.WS-ST-TERM-CNT-QI3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-AC-TOT-QJ3 = AMA12W.WS-TERM-CNT-AC-TOT-QJ3       + AMA12W.WS-ST-TERM-CNT-QJ3[WS-AMA12-INDEX];

   /* End   change for wi# 15116- Ted Hendricks*/

      AMA12W.WS-TERM-CNT-AC-TOT-QD3 = AMA12W.WS-TERM-CNT-AC-TOT-QD3       + AMA12W.WS-ST-TERM-CNT-QD3[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB = AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB       + AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX];
      AMA12W.WS-TERM-CNT-GR-AC-TOT = AMA12W.WS-TERM-CNT-GR-AC-TOT       + AMA12W.WS-ST-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX];
    end
    AMA12W.WS-AMA12-INDEX = AMA12W.WS-AMA12-INDEX + 1;
  end
end // end AMA12P9-ACUM-STFOT


// APPL   ADDITIONAL PROCESSING
Function AMA12P9-APPLSPEC()
  /* cbsi start*/
  /* control break check*/
  if ((AMA12W.WS-PREV-OFC-CD != SR-AMA44-RECIN.PCE-OFC-CD))
    if (AMA12W.WS-CLSRE-REC-FND == "Y")
      AMA12W.WS-PREV-AID-CD = SR-AMA44-RECIN.PCE-AID-CD;
      AMA12P9-ACUM-DET();

    /* ************** wi 16615 start ****************************************/
      AMA12P9-ACUM-DOFC();
    /* ************** wi 16615 end   ****************************************/

      AMA12P9-ACUM-ST();
      AMA12P9-POP-DET();
    /* perform process to print the details*/
      AMA12P9-PRN-DETAIL();
      AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
      AMA12W.WS-CLSRE-REC-FND = "N";
    end
    if (AMA12W.WS-PB-REC-FND == "Y")
      AMA12P9-POP-FOOTER();
      AMA12P9-PRN-FOOTER();
      AMA12W.WS-PB-REC-FND = "N";
    end
    /* reset all total variables*/

  /* ************** wi 16615 start ******************************************/
    if (AMA12W.WS-DOFC-PRN-IND == "Y")
      AMA12P9-DOFC-PRN();
      AMA12P9-INIT-DOF-T();
      AMA12P9-INIT-DOF-F();
      AMA12W.WS-DOFC-PRN-IND = "N";
    end
  /* ************** wi 16615 end   ******************************************/

    AMA12P9-INIT-TOT();
    AMA12P9-INIT-FOTOT();
    AMA12W.WS-PREV-OFC-CD = SR-AMA44-RECIN.PCE-OFC-CD;
    AMA12W.WS-PREV-CASLD-ID = SR-AMA44-RECIN.PCE-CASLD-ID;
    AMA12W.WS-PREV-CLSRE-RSN-CD = SR-AMA44-RECIN.PCE-RSN-CD;
    AMA12W.WS-OFC-NM = SR-AMA44-RECIN.PCE-OFC-NM;
    REP-COMMON.WS-NEW-PAGE = "Y";
  else
    if ((AMA12W.WS-PREV-CASLD-ID != SR-AMA44-RECIN.PCE-CASLD-ID))
      if (AMA12W.WS-CLSRE-REC-FND == "Y")
        AMA12P9-ACUM-DET();

    /* ************** wi 16615 start ****************************************/
        AMA12P9-ACUM-DOFC();
    /* ************** wi 16615 end   ****************************************/

        AMA12P9-ACUM-ST();
        AMA12P9-POP-DET();
    /* perform process to print the details*/
        AMA12P9-PRN-DETAIL();
        AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
        AMA12W.WS-CLSRE-REC-FND = "N";
      end
      if (AMA12W.WS-PB-REC-FND == "Y")
        AMA12P9-POP-FOOTER();
        AMA12P9-PRN-FOOTER();
        AMA12W.WS-PB-REC-FND = "N";
      end
    /* reset all total variables*/
      AMA12P9-INIT-TOT();
      AMA12P9-INIT-FOTOT();
      AMA12W.WS-PREV-CASLD-ID = SR-AMA44-RECIN.PCE-CASLD-ID;
      AMA12W.WS-PREV-CLSRE-RSN-CD = SR-AMA44-RECIN.PCE-RSN-CD;
      REP-COMMON.WS-NEW-PAGE = "Y";
    else
      if ((AMA12W.WS-PREV-CLSRE-RSN-CD != SR-AMA44-RECIN.PCE-RSN-CD))
        if (AMA12W.WS-CLSRE-REC-FND == "Y")
          AMA12P9-ACUM-DET();

    /* ************** wi 16615 start ****************************************/
          AMA12P9-ACUM-DOFC();
    /* ************** wi 16615 end   ****************************************/

          AMA12P9-ACUM-ST();
          AMA12P9-POP-DET();
    /* perform process to print the details*/
          AMA12P9-PRN-DETAIL();
          AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
          AMA12W.WS-CLSRE-REC-FND = "N";
        end
        AMA12P9-INIT-TOT();
        AMA12W.WS-PREV-CLSRE-RSN-CD = SR-AMA44-RECIN.PCE-RSN-CD;
      end
    end
  end

  AMA12P9-CHK-AIDCD();

  if (AMA12W.WS-CLSRE-REC-FND == "Y")
    AMA12W.WS-PREV-CLSRE-RSN-CD = SR-AMA44-RECIN.PCE-RSN-CD;
    AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
  end
  /* cbsi end*/
end // end AMA12P9-APPLSPEC


// CHECK AID CODES
Function AMA12P9-CHK-AIDCD()

   /* Begin change for WI# 15116- Ted Hendricks*/
   /* ** Change up here so max nexting level not reached below ***/

  if (SR-AMA44-RECIN.PCE-AID-CD == "QI3")
    AMA12W.WS-TERM-CNT-QI3 = AMA12W.WS-TERM-CNT-QI3 + 1;
    AMA12W.WS-REC-FOUND = "Y";
    AMA12W.WS-CLSRE-REC-FND = "Y";
    AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
    AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
  else
    if (SR-AMA44-RECIN.PCE-AID-CD == "QJ3")
      AMA12W.WS-TERM-CNT-QJ3 = AMA12W.WS-TERM-CNT-QJ3 + 1;
      AMA12W.WS-REC-FOUND = "Y";
      AMA12W.WS-CLSRE-REC-FND = "Y";
      AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
      AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
    end
  end

   /* End   change for wi# 15116- Ted Hendricks*/

  if (SR-AMA44-RECIN.PCE-AID-CD == "EM3")
    AMA12W.WS-TERM-CNT-EM3 = AMA12W.WS-TERM-CNT-EM3 + 1;
    AMA12W.WS-REC-FOUND = "Y";
    AMA12W.WS-CLSRE-REC-FND = "Y";
    AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
    AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
  else
    if (SR-AMA44-RECIN.PCE-AID-CD == "IN3")
      AMA12W.WS-TERM-CNT-IN3 = AMA12W.WS-TERM-CNT-IN3 + 1;
      AMA12W.WS-REC-FOUND = "Y";
      AMA12W.WS-CLSRE-REC-FND = "Y";
      AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
      AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
    else
      if (SR-AMA44-RECIN.PCE-AID-CD == "SI3")
        AMA12W.WS-TERM-CNT-SI3 = AMA12W.WS-TERM-CNT-SI3 + 1;
        AMA12W.WS-REC-FOUND = "Y";
        AMA12W.WS-CLSRE-REC-FND = "Y";
        AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
        AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
      else
        if (SR-AMA44-RECIN.PCE-AID-CD == "PK3" || 
        SR-AMA44-RECIN.PCE-AID-CD == "AD3" || 
        SR-AMA44-RECIN.PCE-AID-CD == "WW3" || 
        SR-AMA44-RECIN.PCE-AID-CD == "WS3" || 
        SR-AMA44-RECIN.PCE-AID-CD == "SU3")
          AMA12W.WS-TERM-CNT-PK3 = AMA12W.WS-TERM-CNT-PK3 + 1;
          AMA12W.WS-REC-FOUND = "Y";
          AMA12W.WS-CLSRE-REC-FND = "Y";
          AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
          AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
        else
          if (SR-AMA44-RECIN.PCE-AID-CD == "KB3")
            AMA12W.WS-TERM-CNT-KB3 = AMA12W.WS-TERM-CNT-KB3 + 1;
            AMA12W.WS-REC-FOUND = "Y";
            AMA12W.WS-CLSRE-REC-FND = "Y";
            AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
            AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
          else
            if (SR-AMA44-RECIN.PCE-AID-CD == "WB3")
              AMA12W.WS-TERM-CNT-WB3 = AMA12W.WS-TERM-CNT-WB3 + 1;
              AMA12W.WS-REC-FOUND = "Y";
              AMA12W.WS-CLSRE-REC-FND = "Y";
              AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
              AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
            else
              if (SR-AMA44-RECIN.PCE-AID-CD == "GC3")
                AMA12W.WS-TERM-CNT-GC3 = AMA12W.WS-TERM-CNT-GC3 + 1;
                AMA12W.WS-REC-FOUND = "Y";
                AMA12W.WS-CLSRE-REC-FND = "Y";
                AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
              else
                if (SR-AMA44-RECIN.PCE-AID-CD == "SS3")
                  AMA12W.WS-TERM-CNT-SS3 = AMA12W.WS-TERM-CNT-SS3 + 1;
                  AMA12W.WS-REC-FOUND = "Y";
                  AMA12W.WS-CLSRE-REC-FND = "Y";
                  AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                  AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                else
                  if (SR-AMA44-RECIN.PCE-AID-CD == "HD3")
                    AMA12W.WS-TERM-CNT-HD3 = AMA12W.WS-TERM-CNT-HD3 + 1;
                    AMA12W.WS-REC-FOUND = "Y";
                    AMA12W.WS-CLSRE-REC-FND = "Y";
                    AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                    AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                  else
                    if (SR-AMA44-RECIN.PCE-AID-CD == "HG3")
                      AMA12W.WS-TERM-CNT-HG3 = AMA12W.WS-TERM-CNT-HG3 + 1;
                      AMA12W.WS-REC-FOUND = "Y";
                      AMA12W.WS-CLSRE-REC-FND = "Y";
                      AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                      AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                    else
                      if (SR-AMA44-RECIN.PCE-AID-CD == "CM3")
                        AMA12W.WS-TERM-CNT-CM3 = AMA12W.WS-TERM-CNT-CM3 + 1;
                        AMA12W.WS-REC-FOUND = "Y";
                        AMA12W.WS-CLSRE-REC-FND = "Y";
                        AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                        AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                      else
                        if (SR-AMA44-RECIN.PCE-AID-CD == "QM3")
                          AMA12W.WS-TERM-CNT-QM3 = AMA12W.WS-TERM-CNT-QM3 +                           1;
                          AMA12W.WS-REC-FOUND = "Y";
                          AMA12W.WS-CLSRE-REC-FND = "Y";
                          AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                          AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                        else
                          if (SR-AMA44-RECIN.PCE-AID-CD == "SL3")
                            AMA12W.WS-TERM-CNT-SL3 = AMA12W.WS-TERM-CNT-SL3                             + 1;
                            AMA12W.WS-REC-FOUND = "Y";
                            AMA12W.WS-CLSRE-REC-FND = "Y";
                            AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                            AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                          else
                            if (SR-AMA44-RECIN.PCE-AID-CD == "QD3")
                              AMA12W.WS-TERM-CNT-QD3 = AMA12W.WS-TERM-CNT-QD3                               + 1;
                              AMA12W.WS-REC-FOUND = "Y";
                              AMA12W.WS-CLSRE-REC-FND = "Y";
                              AMA12W.WS-PB-REC-FND = "Y";
   /* **************** wi 16615 start ***************************************/
                              AMA12W.WS-DOFC-PRN-IND = "Y";
   /* **************** wi 16615 end   ***************************************/
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end // end AMA12P9-CHK-AIDCD


// END PROCESS
Function AMA12P9-CLOS-PARA()
  /* cbsi start*/
  exit program;
  /* cbsi end*/
end // end AMA12P9-CLOS-PARA


Function AMA12P9-DOFC-POP()
  /* ************** wi 16615 start ******************************************/
  AMA12W-DET.S-TERM-RSN = AMA12W.WS-DOFC-TERM-RSN[WS-AMA12-INDEX];
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-EM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-EM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-IN3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-IN3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SI3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-PK3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-PK3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-KB3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-KB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-WB3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-WB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-GC3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-GC3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SS3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SS3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-HD3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-HG3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HG3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-CM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-CM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-BL = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-QM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SL3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SL3 = FORMATW.OUTPUT-CHAR;

   /* Begin change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-QI3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-QJ3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QJ3 = FORMATW.OUTPUT-CHAR;

   /* End   change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-QD3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-MB = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-GR-TOTAL = FORMATW.OUTPUT-CHAR;
  /* cbsi end*/
  /* ************** wi 16615 end   ******************************************/
end // end AMA12P9-DOFC-POP


Function AMA12P9-DOFC-PRN()
  /* ************** wi 16615 start ******************************************/
  AMA12P9-ACUM-DOF-F();
  AMA12P9-PRN-HEAD(); /* print the header details*/
  AMA12W.WS-OFC-NM1 = AMA12W.WS-OFC-NM;
  AMA12P9-PRN-SUBH();
  REP-COMMON.WS-NEW-PAGE = "N";
  AMA12W.WS-AMA12-INDEX = 1;
  while (AMA12W.WS-AMA12-INDEX <= 38)
    if (AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] == "Y")
      AMA12P9-DOFC-POP();
      AMA12P9-PRN-DETAIL();
    end
    AMA12W.WS-AMA12-INDEX = AMA12W.WS-AMA12-INDEX + 1;
  end
  AMA12P9-POP-DOFC-F();
  AMA12P9-PRN-FOOTER();
  /* ************** wi 16615 end   ******************************************/
end // end AMA12P9-DOFC-PRN


// FORMAT REPORT FIELDS
Function AMA12P9-FORMAT4()
  FORMATW.LENGTH = 4;
  FORMATW.DEC-COUNT = 0;
  FORMATW.FORMAT-FLAG = "N";
  FORMATW.DOLLAR-FLAG = "N";
  REPP9-FORMAT-PROC();
end // end AMA12P9-FORMAT4


// FORMAT REPORT FIELDS
Function AMA12P9-FORMAT5()
  FORMATW.LENGTH = 5;
  FORMATW.DEC-COUNT = 0;
  FORMATW.FORMAT-FLAG = "N";
  FORMATW.DOLLAR-FLAG = "N";
  REPP9-FORMAT-PROC();
end // end AMA12P9-FORMAT5


Function AMA12P9-INIT-DOF-F()
  /* ************** wi 16615 start ******************************************/
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-EM3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-IN3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SI3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-PK3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-KB3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-WB3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-GC3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SS3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HD3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HG3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-CM3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-BL = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QM3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SL3 = 0;

   /* Begin change for wi# 15116- Ted Hendricks*/

  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QI3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QJ3 = 0;

   /* End   change for wi# 15116- Ted Hendricks*/

  AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QD3 = 0;
  AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-MB = 0;
  AMA12W.WS-DOFC-TERM-CNT-GR-AC-TOT = 0;
  /* ************** wi 16615 end   ******************************************/
end // end AMA12P9-INIT-DOF-F


Function AMA12P9-INIT-DOF-T()
  /* *************** wi 16615 start *****************************************/

  AMA12W.WS-AMA12-INDEX = 1;
  while (AMA12W.WS-AMA12-INDEX <= 38)

    AMA12W.WS-DOFC-CLSRE-REC-FND[WS-AMA12-INDEX] = "N";
    AMA12W.WS-DOFC-TERM-RSN[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-EM3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-IN3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-SI3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-PK3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-KB3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-WB3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-GC3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-SS3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-HD3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-HG3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-CM3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-QM3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-SL3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-QI3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-QJ3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-QD3[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX] = 0;
    AMA12W.WS-DOFC-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX] = 0;
    AMA12W.WS-AMA12-INDEX = AMA12W.WS-AMA12-INDEX + 1;

  end
  /* *************** wi 16615 end   *****************************************/
end // end AMA12P9-INIT-DOF-T


// INITIALIZE FOOTER TOTALS
Function AMA12P9-INIT-FOTOT()
  AMA12W.WS-TERM-CNT-AC-TOT-EM3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-IN3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-SI3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-PK3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-KB3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-WB3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-GC3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-SS3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-HD3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-HG3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-CM3 = 0;
  AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-QM3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-SL3 = 0;

   /* Begin change for wi# 15116- Ted Hendricks*/

  AMA12W.WS-TERM-CNT-AC-TOT-QI3 = 0;
  AMA12W.WS-TERM-CNT-AC-TOT-QJ3 = 0;

   /* End   change for wi# 15116- Ted Hendricks*/

  AMA12W.WS-TERM-CNT-AC-TOT-QD3 = 0;
  AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB = 0;
  AMA12W.WS-TERM-CNT-GR-AC-TOT = 0;
end // end AMA12P9-INIT-FOTOT


// INTIALIZE VARIABLES
Function AMA12P9-INIT-PARA()
  /* cbsi start*/
  /* perform process to initialize all additional records*/
  AMA12P9-SET-EMPTY();
  /* set all report variables to initial values*/
  /* ws-page-no      - current printing page number*/
  /* ws-line-no      - current page line no*/
  /* ws-new-page     - a new page indicator*/
  /* ws-max-no-lines - lineage for a standard report frame*/

  REP-COMMON.WS-PAGE-NO = 0;
  REP-COMMON.WS-LINE-NO = 1;
  REP-COMMON.WS-NEW-PAGE = "Y";
  AMA12W.WS-FIRST-TM-IND = "Y";
  AMA12W.WS-REC-FOUND = "N";
  AMA12W.WS-CLSRE-REC-FND = "N";
  /* ***************** wi 16615 start ***************************************/
  AMA12W.WS-DOFC-PRN-IND = "N";
  /* ***************** wi 16615 end   ***************************************/
  AMA12W.WS-PB-REC-FND = "N";
  REP-COMMON.WS-MAX-NO-LINES = 56;

  /* set standard header variables*/

  call "DATEAPP" (GDW, VDBCONTROL, VMESSAGE) {isNoRefresh = yes};
  REP-COMMON.WS-DT = GDW.DTL; /* current date*/
  REP-COMMON.WS-YEAR = REP-COMMON.WS-YY;
  REP-COMMON.WS-MONTH = REP-COMMON.WS-MM;
  REP-COMMON.WS-DAY = REP-COMMON.WS-DD;
  REP-COMMON.WS-F1 = "/";
  REP-COMMON.WS-F2 = "/";
  AMA12W-HEAD.UDATE = REP-COMMON.WS-DATE; /* report date*/
  AMA12W-HEAD.UTIME = VGVar.currentFormattedTime; /* current time*/
  AMA12W-HEAD.UAPPL = "AMA12A"; /* report name*/

  /* perform process to initialize constants*/

  AMA12P9-INITCON();

  /* perform process to read input parameter file*/
  /* validate date parameters, mandatory fields for*/
  /* input records*/
  AMA12P9-READIP();

  /* perform  process for validation of input parameters*/
  AMA12P9-VALIDATE();


  /* populate application specific header*/
  AMA12W-HEAD.S-REPYR = AMA12W.WS-RPT-DT-CCYY;

  /* populate  header variables*/

  if ((AMA12W.WS-RPT-MONTH-MM == 01))
    AMA12W-HEAD.S-REPMTH = "   JANUARY,";
  else
    if ((AMA12W.WS-RPT-MONTH-MM == 02))
      AMA12W-HEAD.S-REPMTH = "  FEBRUARY,";
    else
      if ((AMA12W.WS-RPT-MONTH-MM == 03))
        AMA12W-HEAD.S-REPMTH = "     MARCH,";
      else
        if ((AMA12W.WS-RPT-MONTH-MM == 04))
          AMA12W-HEAD.S-REPMTH = "     APRIL,";
        else
          if ((AMA12W.WS-RPT-MONTH-MM == 05))
            AMA12W-HEAD.S-REPMTH = "       MAY,";
          else
            if ((AMA12W.WS-RPT-MONTH-MM == 06))
              AMA12W-HEAD.S-REPMTH = "      JUNE,";
            else
              if ((AMA12W.WS-RPT-MONTH-MM == 07))
                AMA12W-HEAD.S-REPMTH = "      JULY,";
              else
                if ((AMA12W.WS-RPT-MONTH-MM == 08))
                  AMA12W-HEAD.S-REPMTH = "    AUGUST,";
                else
                  if ((AMA12W.WS-RPT-MONTH-MM == 09))
                    AMA12W-HEAD.S-REPMTH = " SEPTEMBER,";
                  else
                    if ((AMA12W.WS-RPT-MONTH-MM == 10))
                      AMA12W-HEAD.S-REPMTH = "   OCTOBER,";
                    else
                      if ((AMA12W.WS-RPT-MONTH-MM == 11))
                        AMA12W-HEAD.S-REPMTH = "  NOVEMBER,";
                      else
                        if ((AMA12W.WS-RPT-MONTH-MM == 12))
                          AMA12W-HEAD.S-REPMTH = "  DECEMBER,";
                        end /* end of if rpt-month = 12*/
                      end /* end of if rpt-month = 11*/
                    end /* end of if rpt-month = 10*/
                  end /* end of if rpt-month = 09*/
                end /* end of if rpt-month = 08*/
              end /* end of if rpt-month = 07*/
            end /* end of if rpt-month = 06*/
          end /* end of if rpt-month = 05*/
        end /* end of if rpt-month = 04*/
      end /* end of if rpt-month = 03*/
    end /* end of if rpt-month = 02*/
  end /* end of if rpt-month = 01*/

  /* cbsi end*/
end // end AMA12P9-INIT-PARA


// INTIALIZE TOTALS
Function AMA12P9-INIT-TOT()
  AMA12W.WS-TERM-CNT-EM3 = 0;
  AMA12W.WS-TERM-CNT-IN3 = 0;
  AMA12W.WS-TERM-CNT-SI3 = 0;
  AMA12W.WS-TERM-CNT-PK3 = 0;
  AMA12W.WS-TERM-CNT-KB3 = 0;
  AMA12W.WS-TERM-CNT-WB3 = 0;
  AMA12W.WS-TERM-CNT-GC3 = 0;
  AMA12W.WS-TERM-CNT-SS3 = 0;
  AMA12W.WS-TERM-CNT-HD3 = 0;
  AMA12W.WS-TERM-CNT-HG3 = 0;
  AMA12W.WS-TERM-CNT-CM3 = 0;
  AMA12W.WS-TERM-CNT-SUB-TOTAL-BL = 0;
  AMA12W.WS-TERM-CNT-QM3 = 0;
  AMA12W.WS-TERM-CNT-SL3 = 0;
  AMA12W.WS-TERM-CNT-QI3 = 0;
  AMA12W.WS-TERM-CNT-QJ3 = 0;
  AMA12W.WS-TERM-CNT-QD3 = 0;
  AMA12W.WS-TERM-CNT-SUB-TOTAL-MB = 0;
  AMA12W.WS-TERM-CNT-GR-TOTAL = 0;
end // end AMA12P9-INIT-TOT


// INITIALIZE CONSTANTS
Function AMA12P9-INITCON()
  /* this process intialises all the reports constants*/
  AMA12W-HEAD.CONSTANT1 = "PAGE-NBR";
  AMA12W-HEAD.CONSTANT2 = "STATE";
  AMA12W-HEAD.CONSTANT3 = "OF";
  AMA12W-HEAD.CONSTANT4 = "NEVADA";
  AMA12W-HEAD.CONSTANT5 = "DATE";
  AMA12W-HEAD.CONSTANT6 = "ONGOING";
  AMA12W-HEAD.CONSTANT7 = "TERMINATION";
  AMA12W-HEAD.CONSTANT8 = "REASON";
  AMA12W-HEAD.CONSTANT9 = "STATISTICS";
  AMA12W-HEAD.CONSTANT10 = "BY";
  AMA12W-HEAD.CONSTANT11 = "AID";
  AMA12W-HEAD.CONSTANT12 = "CODE";
  AMA12W-HEAD.CONSTANT13 = "-";
  AMA12W-HEAD.CONSTANT14 = "BLIND";
  AMA12W-HEAD.CONSTANT15 = "TIME";
  AMA12W-HEAD.CONSTANT16 = "MONTH";
  AMA12W-HEAD.CONSTANT17 = "OF";
  AMA12W-HEAD.CONSTANT18 = ":";
  AMA12W-SUBH.CONSTANT1 = "LEVEL";
  AMA12W-SUBH.CONSTANT2 = "REASON";
  AMA12W-SUBH.CONSTANT3 = "<----------------------------";
  AMA12W-SUBH.CONSTANT4 = "-----BLIND------------------";
  AMA12W-SUBH.CONSTANT5 = "--------------><------------MED";
  AMA12W-SUBH.CONSTANT6 = "BEN----------->";
  AMA12W-SUBH.CONSTANT7B = "PK3/AD3/";
  AMA12W-SUBH.CONSTANT7 = "SUB";
  AMA12W-SUBH.CONSTANT8 = "SUB";
  AMA12W-SUBH.CONSTANT9 = "GRAND";
  AMA12W-SUBH.CONSTANT10 = "EM3";
  AMA12W-SUBH.CONSTANT11 = "IN3";
  AMA12W-SUBH.CONSTANT12 = "SI3";
  AMA12W-SUBH.CONSTANT13 = "WW3/WS3/SU3";
  AMA12W-SUBH.CONSTANT14 = "KB3";
  AMA12W-SUBH.CONSTANT15 = "WB3";
  AMA12W-SUBH.CONSTANT16 = "GC3";
  AMA12W-SUBH.CONSTANT17 = "SS3";
  AMA12W-SUBH.CONSTANT18 = "HD3";
  AMA12W-SUBH.CONSTANT19 = "HG3";
  AMA12W-SUBH.CONSTANT20 = "CM3";
  AMA12W-SUBH.CONSTANT21 = "TOTAL";
  AMA12W-SUBH.CONSTANT22 = "QM3";
  AMA12W-SUBH.CONSTANT23 = "SL3";
  AMA12W-SUBH.CONSTANT24 = "QI3";
  AMA12W-SUBH.CONSTANT25 = "QJ3";
  AMA12W-SUBH.CONSTANT26 = "QD3";
  AMA12W-SUBH.CONSTANT27 = "TOTAL";
  AMA12W-SUBH.CONSTANT28 = "TOTAL";
  AMA12W-FOOTER.CONSTANT1 = "------------------------------------";
  AMA12W-FOOTER.CONSTANT2 = "------------------------------------";
  AMA12W-FOOTER.CONSTANT3 = "------------------------------------";
  AMA12W-FOOTER.CONSTANT4 = "------------------------";
  AMA12W-FOOTER.CONSTANT5 = "***";
  AMA12W-FOOTER.CONSTANT6 = "TOTAL";
end // end AMA12P9-INITCON


// REPORTS MAIN PARA
Function AMA12P9-MAIN()
  /* cbsi start*/

  /* perform process to initialize variables*/
  AMA12P9-INIT-PARA();

  /* perform process to print the report*/
  AMA12P9-PRINT-PARA();

  /* perform process to close the application*/
  AMA12P9-CLOS-PARA();

  /* cbsi end*/
end // end AMA12P9-MAIN


// POPULATING REPORT DETAILS
Function AMA12P9-POP-DET()
  /* cbsi start*/
  /* move retrieved variables to output record*/
  AMA12W-DET.S-TERM-RSN = AMA12W.WS-TERM-RSN-TRUNC;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-EM3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-EM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-IN3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-IN3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SI3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-PK3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-PK3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-KB3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-KB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-WB3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-WB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-GC3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-GC3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SS3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SS3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-HD3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-HG3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HG3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-CM3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-CM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SUB-TOTAL-BL;
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-BL = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-QM3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SL3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SL3 = FORMATW.OUTPUT-CHAR;

   /* Begin change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-QI3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-QJ3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QJ3 = FORMATW.OUTPUT-CHAR;

   /* End   change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-QD3;
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SUB-TOTAL-MB;
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-MB = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-GR-TOTAL;
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-GR-TOTAL = FORMATW.OUTPUT-CHAR;
  /* cbsi end*/
end // end AMA12P9-POP-DET


Function AMA12P9-POP-DOFC-F()
  /* ************** wi 16615 start ******************************************/
  /* cbsi start*/
  /* move retrieved variables to output record*/
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-EM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-EM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-IN3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-IN3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SI3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-PK3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-PK3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-KB3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-KB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-WB3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-WB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-GC3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-GC3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SS3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SS3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HD3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-HD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-HG3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-HG3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-CM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-CM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-BL;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-SUB-AC-TOT-BL = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-SL3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SL3 = FORMATW.OUTPUT-CHAR;

   /* Begin change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QI3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QJ3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QJ3 = FORMATW.OUTPUT-CHAR;

   /* End   change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-AC-TOT-QD3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-SUB-AC-TOT-MB;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-SUB-AC-TOT-MB = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-DOFC-TERM-CNT-GR-AC-TOT;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-GR-AC-TOT = FORMATW.OUTPUT-CHAR;
  /* ************** wi 16615 end   ******************************************/
end // end AMA12P9-POP-DOFC-F


// POPULATE REPORT FOOTER
Function AMA12P9-POP-FOOTER()
  /* cbsi start*/
  /* move retrieved variables to output record*/
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-EM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-EM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-IN3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-IN3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-SI3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-PK3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-PK3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-KB3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-KB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-WB3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-WB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-GC3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-GC3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-SS3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SS3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-HD3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-HD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-HG3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-HG3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-CM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-CM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SUB-AC-TOT-BL;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-SUB-AC-TOT-BL = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-QM3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-SL3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-SL3 = FORMATW.OUTPUT-CHAR;

   /* Begin change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-QI3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-QJ3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QJ3 = FORMATW.OUTPUT-CHAR;

   /* End   change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-AC-TOT-QD3;
  AMA12P9-FORMAT4();
  AMA12W-FOOTER.S-TERM-CNT-AC-TOT-QD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-SUB-AC-TOT-MB;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-SUB-AC-TOT-MB = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-TERM-CNT-GR-AC-TOT;
  AMA12P9-FORMAT5();
  AMA12W-FOOTER.S-TERM-CNT-GR-AC-TOT = FORMATW.OUTPUT-CHAR;
end // end AMA12P9-POP-FOOTER


// PROCESS TO PRINT THE REPORT
Function AMA12P9-PRINT-PARA()
  /* cbsi start*/
  AMA12P9-SCAN();

  if (SR-AMA44-RECIN is ioError)
    AMA12P9-PRN-HEAD();
    REP132P9-NRF-PROC();
    AMA12P9-CLOS-PARA();
  end

  /* print all the details retrieved from the data base*/
  while (SR-AMA44-RECIN not ioError)

    if (SR-AMA44-RECIN.PCE-PRGM-CASE-STS == "T")
      if (AMA12W.WS-FIRST-TM-IND == "Y")
        AMA12W.WS-PREV-OFC-CD = SR-AMA44-RECIN.PCE-OFC-CD;
        AMA12W.WS-PREV-CASLD-ID = SR-AMA44-RECIN.PCE-CASLD-ID;
        AMA12W.WS-PREV-CLSRE-RSN-CD = SR-AMA44-RECIN.PCE-RSN-CD;
        AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
        AMA12W.WS-OFC-NM = SR-AMA44-RECIN.PCE-OFC-NM;
        AMA12W.WS-FIRST-TM-IND = "N";
      end
    /* perform processing specific to the application*/
      AMA12P9-APPLSPEC();

    end
    /* perform process to scan the cursor*/
    AMA12P9-SCAN();
  end /* end of while loop*/

  if (AMA12W.WS-REC-FOUND == "Y")
    if (AMA12W.WS-CLSRE-REC-FND == "Y")
      AMA12W.WS-TERM-RSN = SR-AMA44-RECIN.PCE-RSN;
      AMA12P9-ACUM-DET();

  /* ************** wi 16615 start ******************************************/
      AMA12P9-ACUM-DOFC();
  /* ************** wi 16615 end   ******************************************/

      AMA12P9-ACUM-ST();
  /* print details for last record*/
  /* perform process to populate the details*/
      AMA12P9-POP-DET();
  /* perform process to print detail screen*/
      AMA12P9-PRN-DETAIL();
    end
    if (AMA12W.WS-PB-REC-FND == "Y")
      AMA12P9-POP-FOOTER();
      AMA12P9-PRN-FOOTER();
    end
    AMA12P9-INIT-TOT();
    AMA12P9-INIT-FOTOT();

  /* ************** wi 16615 start ******************************************/
    if (AMA12W.WS-DOFC-PRN-IND == "Y")
      AMA12P9-DOFC-PRN();
      AMA12W.WS-DOFC-PRN-IND = "N";
    end
  /* ************** wi 16615 end   ******************************************/

    AMA12P9-ST-PRN();
  /* check if footer and end of report line can fit in the same page*/
    AMA12W.WS-REM-LINES = REP-COMMON.WS-MAX-NO-LINES -     REP-COMMON.WS-LINE-NO;

    if ((AMA12W.WS-REM-LINES < 2))
    /* set print control character to form feed*/
      AMA12P9-PRN-HEAD(); /* print header details*/
    end
  /* print end of report*/
    REP132P9-EOR-PROC();
  /* perform termination process*/
    AMA12P9-CLOS-PARA();
  end

  AMA12P9-PRN-HEAD();
  REP132P9-NRF-PROC();
  /* cbsi end*/
end // end AMA12P9-PRINT-PARA


// PRINT REPORT DETAIL
Function AMA12P9-PRN-DETAIL()
  /* cbsi start*/
  if ((REP-COMMON.WS-NEW-PAGE == "Y"))
    AMA12P9-PRN-HEAD(); /* print the header details*/
    AMA12P9-PRN-SUBH(); /* print the subheader*/
    REP-COMMON.WS-NEW-PAGE = "N"; /* reset new page  indicator*/
  end
  if (REP-COMMON.WS-LINE-NO > REP-COMMON.WS-MAX-NO-LINES)
    AMA12P9-PRN-HEAD();
    AMA12P9-PRN-SUBH();
  end
  SR-132REP-RECOUT.UFIELD = AMA12W-DET.LINE1;
  WR-132REP-OUT-FILE();
  /* reset control character*/
  SR-132REP-RECOUT.PRNT-CC = " ";
  /* cbsi end*/
end // end AMA12P9-PRN-DETAIL


// PRINT REPORT FOOTER
Function AMA12P9-PRN-FOOTER()
  /* cbsi start*/
  REP-COMMON.WS-REM1 = REP-COMMON.WS-MAX-NO-LINES - REP-COMMON.WS-LINE-NO;
  if (REP-COMMON.WS-REM1 < 2)
    AMA12P9-PRN-HEAD();
    AMA12P9-PRN-SUBH();
  end
  SR-132REP-RECOUT.PRNT-CC = " ";
  SR-132REP-RECOUT.UFIELD = AMA12W-FOOTER.LINE1;
  WR-132REP-OUT-FILE();
  /* leave 1 line before printing curr line*/
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AMA12W-FOOTER.LINE2;
  WR-132REP-OUT-FILE();
  /* cbsi end*/
end // end AMA12P9-PRN-FOOTER


// PRINT REPORT HEADER
Function AMA12P9-PRN-HEAD()
  /* cbsi start*/
  /* increment page-no*/
  REP-COMMON.WS-PAGE-NO = REP-COMMON.WS-PAGE-NO + 1;

  if (REP-COMMON.WS-PAGE-NO > 1)
    SR-132REP-RECOUT.PRNT-CC = "1";
  end
  /* move page-no to header variable*/
  AMA12W-HEAD.UPAGE = REP-COMMON.WS-PAGE-NO-3-4;

  /* move each line of header to map and print*/
  SR-132REP-RECOUT.UFIELD = AMA12W-HEAD.LINE1;
  WR-132REP-OUT-FILE();

  /* reset control character*/
  SR-132REP-RECOUT.PRNT-CC = " ";

  SR-132REP-RECOUT.UFIELD = AMA12W-HEAD.LINE2;
  WR-132REP-OUT-FILE();
  if (AMA12W-HEAD.LINE3 != " ")
    SR-132REP-RECOUT.UFIELD = AMA12W-HEAD.LINE3;
    WR-132REP-OUT-FILE();
  end
  /* cbsi end*/
end // end AMA12P9-PRN-HEAD


// PRINT REPORT SUBHEADER
Function AMA12P9-PRN-SUBH()
  /* cbsi start*/
  AMA12W.WS-LEVEL-OFC-NM = AMA12W.WS-OFC-NM-TRUNC;
  AMA12W.WS-LEVEL-CASLD-ID = AMA12W.WS-PREV-CASLD-ID;
  AMA12W-SUBH.S-LEVEL = AMA12W.WS-LEVEL;
  /* reset control character*/
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AMA12W-SUBH.LINE1;
  WR-132REP-OUT-FILE();

  /* set control character to skip one line before printing curr line*/
  SR-132REP-RECOUT.PRNT-CC = "0";
  SR-132REP-RECOUT.UFIELD = AMA12W-SUBH.LINE2;
  WR-132REP-OUT-FILE();

  /* reset control character*/
  SR-132REP-RECOUT.PRNT-CC = " ";
  SR-132REP-RECOUT.UFIELD = AMA12W-SUBH.LINE3;
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.UFIELD = AMA12W-SUBH.LINE4;
  WR-132REP-OUT-FILE();

  SR-132REP-RECOUT.PRNT-CC = "0";
  /* cbsi end*/
end // end AMA12P9-PRN-SUBH


// PROCESS TO READ INPUT FILE
Function AMA12P9-READIP()
  /* CBSI START*/
  VDBCONTROL.UPROC-NM = "AMA12P9-READIP";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "SR-AMA12-RECIN";
  try
    get next SR-AMA12-RECIN ;
  end
  /* check if any i/o error has occured*/
  if (SR-AMA12-RECIN is ioError && SR-AMA12-RECIN not endOfFile)
     /* return error code to indicate abnormal ending*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AMA12W.WS-EZERT8 = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AMA12W.WS-EZERT8-LAST4;
    WCM00P2-TO-CEP01A();
  end
  if (SR-AMA12-RECIN is endOfFile)
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AMA12W.WS-EZERT8 = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AMA12W.WS-EZERT8-LAST4;
    WCM00P2-TO-CEP01A();
  end
  /* cbsi end*/
end // end AMA12P9-READIP


// FILE SCAN
Function AMA12P9-SCAN()
  /* cbsi start*/
  VDBCONTROL.UPROC-NM = "AMA12P9-SCAN";
  VDBCONTROL.UPROC-OPT = "SCAN";
  VDBCONTROL.UPROC-OBJ = "SR-AMA44-RECIN";
  try
    get next SR-AMA44-RECIN ;
  end
  /* check if any i/o error has occured*/
  if (SR-AMA44-RECIN is ioError && SR-AMA44-RECIN not endOfFile)
     /* return error code to indicate abnormal ending*/
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AMA12W.WS-EZERT8 = sysVar.errorCode;
    VMESSAGE.UMSGINS[1] = AMA12W.WS-EZERT8-LAST4;
    WCM00P2-TO-CEP01A();
  end
end // end AMA12P9-SCAN


// INITIALIZE ALL RECORDS
Function AMA12P9-SET-EMPTY()
  /* cbsi start*/
  set REP-COMMON empty;
  set REP-EOFNOF empty;
  set REP-DATE empty;
  set AMA12W-DET empty;
  set AMA12W-HEAD empty;
  set AMA12W-SUBH empty;
  set AMA12W-FOOTER empty;
  set VMESSAGE empty;
  set CEP01W empty;
  set VDBCONTROL empty;
  set VDBCOMMON empty;
  set FORMATW empty;
  set AMA12W empty;


  set SR-AMA12-RECIN empty;
  set SR-132REP-RECOUT empty;
  set SR-AMA44-RECIN empty;
  /* cbsi end*/
end // end AMA12P9-SET-EMPTY


// POP STWIDE REPT DETIALS
Function AMA12P9-ST-POP-DET()
  AMA12W-DET.S-TERM-RSN = AMA12W.WS-ST-TERM-RSN[WS-AMA12-INDEX];
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-EM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-EM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-IN3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-IN3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-SI3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-PK3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-PK3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-KB3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-KB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-WB3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-WB3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-GC3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-GC3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-SS3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SS3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-HD3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-HG3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-HG3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-CM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-CM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-BL[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-BL = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-QM3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QM3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-SL3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-SL3 = FORMATW.OUTPUT-CHAR;

   /* Begin change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-QI3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QI3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-QJ3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QJ3 = FORMATW.OUTPUT-CHAR;

   /* End   change for wi# 15116- Ted Hendricks*/

  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-QD3[WS-AMA12-INDEX];
  AMA12P9-FORMAT4();
  AMA12W-DET.S-TERM-CNT-QD3 = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-SUB-TOTAL-MB[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-SUB-TOTAL-MB = FORMATW.OUTPUT-CHAR;
  set FORMATW empty;
  FORMATW.INPUT-NUMBER = AMA12W.WS-ST-TERM-CNT-GR-TOTAL[WS-AMA12-INDEX];
  AMA12P9-FORMAT5();
  AMA12W-DET.S-TERM-CNT-GR-TOTAL = FORMATW.OUTPUT-CHAR;
  /* cbsi end*/
end // end AMA12P9-ST-POP-DET


// PRINT STWIDE REPORT
Function AMA12P9-ST-PRN()
  AMA12P9-ACUM-STFOT();
  AMA12P9-PRN-HEAD(); /* print the header details*/
  AMA12W.WS-PREV-CASLD-ID = "STATE";
  AMA12W.WS-OFC-NM = "WIDE";
  AMA12P9-PRN-SUBH();
  REP-COMMON.WS-NEW-PAGE = "N";
  AMA12W.WS-AMA12-INDEX = 1;
  while (AMA12W.WS-AMA12-INDEX <= 38)
    if (AMA12W.WS-ST-CLSRE-REC-FND[WS-AMA12-INDEX] == "Y")
      AMA12P9-ST-POP-DET();
      AMA12P9-PRN-DETAIL();
    end
    AMA12W.WS-AMA12-INDEX = AMA12W.WS-AMA12-INDEX + 1;
  end
  AMA12P9-POP-FOOTER();
  AMA12P9-PRN-FOOTER();
end // end AMA12P9-ST-PRN


// VALIDATES  INPUT  PARAMETERS
Function AMA12P9-VALIDATE()
  if (SR-AMA12-RECIN.RPT-DT not numeric)
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AMA12W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AMA12W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0043E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  end

  AMA12W.WS-TOPREC = SR-AMA12-RECIN.TOPREC;
  /* validation of input month & calculation of start and end date*/
  REP-DATE.WS-IN-RPT-MM = AMA12W.WS-RPT-MONTH-MM;
  REP-DATE.WS-IN-RPT-CCYY = AMA12W.WS-RPT-DT-CCYY;
  REP-DATE.WS-FLAG = "M";
  REPP9-DATE-PARA();
  if (REP-DATE.WS-DATE-FLAG == 1)
    VMESSAGE.UMSGCODE-JCL-ERR = 10;
    AMA12W.WS-EZERT8 = "        ";
    VMESSAGE.UMSGINS[1] = AMA12W.WS-EZERT8-LAST4;
    VMESSAGE.UMSGCODE = "CEP0043E"; /* INVALID INPUT-PROCESS DATE*/
    WCM00P2-TO-CEP01A();
  end

  /* move start and end calculate days to your local storage*/
  AMA12W.WS-RPT-BEG-DT = REP-DATE.WS-START-DATE;
  AMA12W.WS-RPT-END-DT = REP-DATE.WS-END-DATE;
  AMA12W.WS-RPT-YEAR = AMA12W.WS-RPT-BEG-DT-CCYY;
  AMA12W.WS-RPT-MNTH = AMA12W.WS-RPT-BEG-DT-MM;
end // end AMA12P9-VALIDATE


Record AMA12W type basicRecord
  10 WS-REM-LINES num(3) ; 
  10 WS-TOPREC char(80) ; 
    15 WS-RPT-DT num(6) ; 
      20 WS-RPT-DT-CCYY num(4) ; 
      20 WS-RPT-MONTH-MM num(2) ; 
    15 * char(74) ; 
  10 WS-RPT-BEG-DT char(10) ; 
    15 WS-RPT-BEG-DT-CCYY num(4) ; 
    15 WS-RPT-BEG-DT-F1 char(1) ; 
    15 WS-RPT-BEG-DT-MM num(2) ; 
    15 WS-RPT-BEG-DT-F2 char(1) ; 
    15 WS-RPT-BEG-DT-DD num(2) ; 
  10 WS-RPT-END-DT char(10) ; 
    15 WS-RPT-END-DT-CCYY num(4) ; 
    15 WS-RPT-END-DT-F1 char(1) ; 
    15 WS-RPT-END-DT-MM num(2) ; 
    15 WS-RPT-END-DT-F2 char(1) ; 
    15 WS-RPT-END-DT-DD num(2) ; 
  10 WS-RPT-YEAR smallint ; 
  10 WS-RPT-MNTH smallint ; 
  10 WS-PREV-OFC-CD char(2) ; 
  10 WS-PREV-CLSRE-RSN-CD char(2) ; 
  10 WS-PREV-AID-CD char(3) ; 
  10 WS-OFC-NM1 char(37) ; 
    15 WS-PREV-CASLD-ID char(5) ; 
    15 WS-OFC-NM char(32) ; 
      20 WS-OFC-NM-TRUNC char(15) ; 
      20 WS-OFC-NM-F1 char(17) ; 
  10 WS-TERM-RSN char(50) ; 
    15 WS-TERM-RSN-TRUNC char(19) ; 
    15 WS-TERM-RSN-F1 char(31) ; 
  10 WS-LEVEL char(20) ; 
    15 WS-LEVEL-CASLD-ID char(5) ; 
    15 WS-LEVEL-OFC-NM char(15) ; 
  10 WS-FIRST-TM-IND char(1) ; 
  10 WS-AMA12-INDEX num(3) ; 
  10 WS-REC-FOUND char(1) ; 
  10 WS-DOFC-REC-FND char(1) ; 
  10 WS-ST-REC-FND char(1) ; 
  10 WS-CLSRE-REC-FND char(1) ; 
  10 WS-DOFC-PRN-IND char(1) ; 
  10 WS-PB-REC-FND char(1) ; 
  10 WS-DET char(79) ; 
    15 WS-TERM-CNT-EM3 num(4) ; 
    15 WS-TERM-CNT-IN3 num(4) ; 
    15 WS-TERM-CNT-SI3 num(4) ; 
    15 WS-TERM-CNT-PK3 num(4) ; 
    15 WS-TERM-CNT-WB3 num(4) ; 
    15 WS-TERM-CNT-KB3 num(4) ; 
    15 WS-TERM-CNT-GC3 num(4) ; 
    15 WS-TERM-CNT-SS3 num(4) ; 
    15 WS-TERM-CNT-HD3 num(4) ; 
    15 WS-TERM-CNT-HG3 num(4) ; 
    15 WS-TERM-CNT-CM3 num(4) ; 
    15 WS-TERM-CNT-SUB-TOTAL-BL num(5) ; 
    15 WS-TERM-CNT-QM3 num(4) ; 
    15 WS-TERM-CNT-SL3 num(4) ; 
    15 WS-TERM-CNT-QI3 num(4) ; 
    15 WS-TERM-CNT-QJ3 num(4) ; 
    15 WS-TERM-CNT-QD3 num(4) ; 
    15 WS-TERM-CNT-SUB-TOTAL-MB num(5) ; 
    15 WS-TERM-CNT-GR-TOTAL num(5) ; 
  10 WS-DOFC-FO-DET char(79) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-EM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-IN3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-SI3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-PK3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-WB3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-KB3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-GC3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-SS3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-HD3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-HG3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-CM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SUB-AC-TOT-BL num(5) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-QM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-SL3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-QI3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-QJ3 num(4) ; 
    15 WS-DOFC-TERM-CNT-AC-TOT-QD3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SUB-AC-TOT-MB num(5) ; 
    15 WS-DOFC-TERM-CNT-GR-AC-TOT num(5) ; 
  10 WS-FO-DET char(79) ; 
    15 WS-TERM-CNT-AC-TOT-EM3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-IN3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-SI3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-PK3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-WB3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-KB3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-GC3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-SS3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-HD3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-HG3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-CM3 num(4) ; 
    15 WS-TERM-CNT-SUB-AC-TOT-BL num(5) ; 
    15 WS-TERM-CNT-AC-TOT-QM3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-SL3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-QI3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-QJ3 num(4) ; 
    15 WS-TERM-CNT-AC-TOT-QD3 num(4) ; 
    15 WS-TERM-CNT-SUB-AC-TOT-MB num(5) ; 
    15 WS-TERM-CNT-GR-AC-TOT num(5) ; 
  10 WS-DOFC-DET char(99) [38] ; 
    15 WS-DOFC-CLSRE-REC-FND char(1) ; 
    15 WS-DOFC-TERM-RSN char(19) ; 
    15 WS-DOFC-TERM-CNT-EM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-IN3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SI3 num(4) ; 
    15 WS-DOFC-TERM-CNT-PK3 num(4) ; 
    15 WS-DOFC-TERM-CNT-WB3 num(4) ; 
    15 WS-DOFC-TERM-CNT-KB3 num(4) ; 
    15 WS-DOFC-TERM-CNT-GC3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SS3 num(4) ; 
    15 WS-DOFC-TERM-CNT-HD3 num(4) ; 
    15 WS-DOFC-TERM-CNT-HG3 num(4) ; 
    15 WS-DOFC-TERM-CNT-CM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SUB-TOTAL-BL num(5) ; 
    15 WS-DOFC-TERM-CNT-QM3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SL3 num(4) ; 
    15 WS-DOFC-TERM-CNT-QI3 num(4) ; 
    15 WS-DOFC-TERM-CNT-QJ3 num(4) ; 
    15 WS-DOFC-TERM-CNT-QD3 num(4) ; 
    15 WS-DOFC-TERM-CNT-SUB-TOTAL-MB num(5) ; 
    15 WS-DOFC-TERM-CNT-GR-TOTAL num(5) ; 
  10 WS-ST-DET char(99) [38] ; 
    15 WS-ST-CLSRE-REC-FND char(1) ; 
    15 WS-ST-TERM-RSN char(19) ; 
    15 WS-ST-TERM-CNT-EM3 num(4) ; 
    15 WS-ST-TERM-CNT-IN3 num(4) ; 
    15 WS-ST-TERM-CNT-SI3 num(4) ; 
    15 WS-ST-TERM-CNT-PK3 num(4) ; 
    15 WS-ST-TERM-CNT-WB3 num(4) ; 
    15 WS-ST-TERM-CNT-KB3 num(4) ; 
    15 WS-ST-TERM-CNT-GC3 num(4) ; 
    15 WS-ST-TERM-CNT-SS3 num(4) ; 
    15 WS-ST-TERM-CNT-HD3 num(4) ; 
    15 WS-ST-TERM-CNT-HG3 num(4) ; 
    15 WS-ST-TERM-CNT-CM3 num(4) ; 
    15 WS-ST-TERM-CNT-SUB-TOTAL-BL num(5) ; 
    15 WS-ST-TERM-CNT-QM3 num(4) ; 
    15 WS-ST-TERM-CNT-SL3 num(4) ; 
    15 WS-ST-TERM-CNT-QI3 num(4) ; 
    15 WS-ST-TERM-CNT-QJ3 num(4) ; 
    15 WS-ST-TERM-CNT-QD3 num(4) ; 
    15 WS-ST-TERM-CNT-SUB-TOTAL-MB num(5) ; 
    15 WS-ST-TERM-CNT-GR-TOTAL num(5) ; 
  10 WS-EZERT8 num(8) ; 
    15 WS-EZERT8-FIRST4 char(4) ; 
    15 WS-EZERT8-LAST4 char(4) ; 
end // end AMA12W


Record AMA12W-DET type basicRecord
  10 LINE1 char(132) ; 
    15 S-TERM-RSN char(19) ; 
    15 FILLER1 char(2) ; 
    15 S-TERM-CNT-EM3 char(4) ; 
    15 FILLER2 char(1) ; 
    15 S-TERM-CNT-IN3 char(4) ; 
    15 FILLER3 char(1) ; 
    15 S-TERM-CNT-SI3 char(4) ; 
    15 FILLER4 char(3) ; 
    15 S-TERM-CNT-PK3 char(4) ; 
    15 FILLER5 char(7) ; 
    15 S-TERM-CNT-KB3 char(4) ; 
    15 FILLER6 char(1) ; 
    15 S-TERM-CNT-WB3 char(4) ; 
    15 FILLER7 char(1) ; 
    15 S-TERM-CNT-GC3 char(4) ; 
    15 FILLER8 char(1) ; 
    15 S-TERM-CNT-SS3 char(4) ; 
    15 FILLER9 char(1) ; 
    15 S-TERM-CNT-HD3 char(4) ; 
    15 FILLER10 char(1) ; 
    15 S-TERM-CNT-HG3 char(4) ; 
    15 FILLER11 char(1) ; 
    15 S-TERM-CNT-CM3 char(4) ; 
    15 FILLER12 char(3) ; 
    15 S-TERM-CNT-SUB-TOTAL-BL char(5) ; 
    15 FILLER13 char(2) ; 
    15 S-TERM-CNT-QM3 char(4) ; 
    15 FILLER14 char(1) ; 
    15 S-TERM-CNT-SL3 char(4) ; 
    15 FILLER15 char(1) ; 
    15 S-TERM-CNT-QI3 char(4) ; 
    15 FILLER16 char(1) ; 
    15 S-TERM-CNT-QJ3 char(4) ; 
    15 FILLER17 char(1) ; 
    15 S-TERM-CNT-QD3 char(4) ; 
    15 FILLER18 char(1) ; 
    15 S-TERM-CNT-SUB-TOTAL-MB char(5) ; 
    15 FILLER19 char(2) ; 
    15 S-TERM-CNT-GR-TOTAL char(5) ; 
    15 FILLER20 char(2) ; 
end // end AMA12W-DET


Record AMA12W-FOOTER type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(36) ; 
    15 CONSTANT2 char(36) ; 
    15 CONSTANT3 char(36) ; 
    15 CONSTANT4 char(24) ; 
  10 LINE2 char(132) ; 
    15 CONSTANT5 char(3) ; 
    15 FILLER1 char(1) ; 
    15 CONSTANT6 char(5) ; 
    15 FILLER2 char(12) ; 
    15 S-TERM-CNT-AC-TOT-EM3 char(4) ; 
    15 FILLER3 char(1) ; 
    15 S-TERM-CNT-AC-TOT-IN3 char(4) ; 
    15 FILLER4 char(1) ; 
    15 S-TERM-CNT-AC-TOT-SI3 char(4) ; 
    15 FILLER5 char(3) ; 
    15 S-TERM-CNT-AC-TOT-PK3 char(4) ; 
    15 FILLER6 char(7) ; 
    15 S-TERM-CNT-AC-TOT-KB3 char(4) ; 
    15 FILLER7 char(1) ; 
    15 S-TERM-CNT-AC-TOT-WB3 char(4) ; 
    15 FILLER8 char(1) ; 
    15 S-TERM-CNT-AC-TOT-GC3 char(4) ; 
    15 FILLER9 char(1) ; 
    15 S-TERM-CNT-AC-TOT-SS3 char(4) ; 
    15 FILLER10 char(1) ; 
    15 S-TERM-CNT-AC-TOT-HD3 char(4) ; 
    15 FILLER11 char(1) ; 
    15 S-TERM-CNT-AC-TOT-HG3 char(4) ; 
    15 FILLER12 char(2) ; 
    15 S-TERM-CNT-AC-TOT-CM3 char(4) ; 
    15 FILLER13 char(2) ; 
    15 S-TERM-CNT-SUB-AC-TOT-BL char(5) ; 
    15 FILLER14 char(2) ; 
    15 S-TERM-CNT-AC-TOT-QM3 char(4) ; 
    15 FILLER15 char(1) ; 
    15 S-TERM-CNT-AC-TOT-SL3 char(4) ; 
    15 FILLER16 char(1) ; 
    15 S-TERM-CNT-AC-TOT-QI3 char(4) ; 
    15 FILLER17 char(1) ; 
    15 S-TERM-CNT-AC-TOT-QJ3 char(4) ; 
    15 FILLER18 char(1) ; 
    15 S-TERM-CNT-AC-TOT-QD3 char(4) ; 
    15 FILLER19 char(1) ; 
    15 S-TERM-CNT-SUB-AC-TOT-MB char(5) ; 
    15 FILLER20 char(2) ; 
    15 S-TERM-CNT-GR-AC-TOT char(5) ; 
    15 FILLER21 char(2) ; 
end // end AMA12W-FOOTER


Record AMA12W-HEAD type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(8) ; 
    15 FILLER1 char(1) ; 
    15 UPAGE char(4) ; 
    15 FILLER2 char(47) ; 
    15 CONSTANT2 char(5) ; 
    15 FILLER3 char(1) ; 
    15 CONSTANT3 char(2) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT4 char(6) ; 
    15 FILLER5 char(42) ; 
    15 CONSTANT5 char(4) ; 
    15 FILLER6 char(3) ; 
    15 UDATE char(8) ; 
  10 LINE2 char(132) ; 
    15 UAPPL char(8) ; 
    15 FILLER7 char(31) ; 
    15 CONSTANT6 char(7) ; 
    15 FILLER8 char(1) ; 
    15 CONSTANT7 char(11) ; 
    15 FILLER9 char(1) ; 
    15 CONSTANT8 char(6) ; 
    15 FILLER10 char(1) ; 
    15 CONSTANT9 char(10) ; 
    15 FILLER11 char(1) ; 
    15 CONSTANT10 char(2) ; 
    15 FILLER12 char(1) ; 
    15 CONSTANT11 char(3) ; 
    15 FILLER13 char(1) ; 
    15 CONSTANT12 char(4) ; 
    15 FILLER14 char(1) ; 
    15 CONSTANT13 char(1) ; 
    15 FILLER15 char(1) ; 
    15 CONSTANT14 char(5) ; 
    15 FILLER16 char(21) ; 
    15 CONSTANT15 char(4) ; 
    15 FILLER17 char(3) ; 
    15 UTIME char(8) ; 
  10 LINE3 char(132) ; 
    15 FILLER18 char(54) ; 
    15 CONSTANT16 char(5) ; 
    15 FILLER19 char(1) ; 
    15 CONSTANT17 char(2) ; 
    15 FILLER20 char(1) ; 
    15 CONSTANT18 char(1) ; 
    15 FILLER21 char(1) ; 
    15 S-REPMTH char(11) ; 
    15 FILLER22 char(1) ; 
    15 S-REPYR char(4) ; 
    15 FILLER23 char(51) ; 
end // end AMA12W-HEAD


Record AMA12W-SUBH type basicRecord
  10 LINE1 char(132) ; 
    15 CONSTANT1 char(5) ; 
    15 FILLER1 char(1) ; 
    15 S-LEVEL char(19) ; 
    15 FILLER2 char(107) ; 
  10 LINE2 char(125) ; 
    15 CONSTANT2 char(6) ; 
    15 FILLER3 char(14) ; 
    15 CONSTANT3 char(29) ; 
    15 CONSTANT4 char(28) ; 
    15 CONSTANT5 char(31) ; 
    15 FILLER4 char(1) ; 
    15 CONSTANT6 char(15) ; 
    15 FILLER5 char(1) ; 
  10 LINE3 char(132) ; 
    15 FILLER6 char(37) ; 
    15 CONSTANT7B char(8) ; 
    15 FILLER7B char(42) ; 
    15 CONSTANT7 char(3) ; 
    15 FILLER7 char(29) ; 
    15 CONSTANT8 char(3) ; 
    15 FILLER8 char(3) ; 
    15 CONSTANT9 char(5) ; 
    15 FILLER9 char(2) ; 
  10 LINE4 char(131) ; 
    15 FILLER10 char(21) ; 
    15 CONSTANT10 char(3) ; 
    15 FILLER11 char(2) ; 
    15 CONSTANT11 char(3) ; 
    15 FILLER12 char(2) ; 
    15 CONSTANT12 char(3) ; 
    15 FILLER13 char(2) ; 
    15 CONSTANT13 char(11) ; 
    15 FILLER14 char(2) ; 
    15 CONSTANT14 char(3) ; 
    15 FILLER15 char(2) ; 
    15 CONSTANT15 char(3) ; 
    15 FILLER16 char(2) ; 
    15 CONSTANT16 char(3) ; 
    15 FILLER17 char(2) ; 
    15 CONSTANT17 char(3) ; 
    15 FILLER18 char(2) ; 
    15 CONSTANT18 char(3) ; 
    15 FILLER19 char(2) ; 
    15 CONSTANT19 char(3) ; 
    15 FILLER20 char(3) ; 
    15 CONSTANT20 char(3) ; 
    15 FILLER21 char(3) ; 
    15 CONSTANT21 char(5) ; 
    15 FILLER22 char(2) ; 
    15 CONSTANT22 char(3) ; 
    15 FILLER23 char(2) ; 
    15 CONSTANT23 char(3) ; 
    15 FILLER24 char(2) ; 
    15 CONSTANT24 char(3) ; 
    15 FILLER25 char(2) ; 
    15 CONSTANT25 char(3) ; 
    15 FILLER26 char(2) ; 
    15 CONSTANT26 char(3) ; 
    15 FILLER27 char(2) ; 
    15 CONSTANT27 char(5) ; 
    15 FILLER28 char(2) ; 
    15 CONSTANT28 char(5) ; 
    15 FILLER29 char(1) ; 
end // end AMA12W-SUBH


