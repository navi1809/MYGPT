package PGM_T_Batch;
import egl.core.*;
import CommonMigratedParts.*;
import DataTables.*;
//*** PROGRAM=TLCAS1A ****
// COMPONENT NAME: TLCAS1A - THIS IS A DB LAYER APPLICATION
// ===============
// 
// DESCRIPTION:
// ============
// THIS IS A DB LAYER APPLICATION WITH THE FOLLOWING DB2
// ACCESSES:
// 
// SQL COMMAND   TABLE NAME
// ===========   ==========
// SELECT        TWNLCTE_ACTVY
// 
// 
// ************************
Program TLCAS1A type basicProgram //VAGen Info - called batch program
  (
   VDBCONTROL VDBCONTROL, // record
   VMESSAGE VMESSAGE, // record
   H-TLCAS1 H-TLCAS1 // record
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  H2-LCTE-ACTVY H2-LCTE-ACTVY; // record
  VDBCOMMON VDBCOMMON; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use VDB00T1 {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    TLCAS1L1: TLCAS1L1();
  end // end main
end // end TLCAS1A


// LUW for DB Access
Function TLCAS1L1()
  WDB00PI();
  /*  */
  /* Initialize:*/
  /* UACCTYP - Access type (R=read, W=write)*/
  /* UAPPLNAM - Application name*/
  VDBCONTROL.UACCTYP = "R";
  VDBCOMMON.UAPPLNAM = "TLCAS1A";
  /*  */
  /* Initialize application-specific working storage records*/
  /* Initialize SQL row record*/
  set H2-LCTE-ACTVY empty;
  /*  */
  /* Perform process to retrieve data*/
  TLCAS1P1();
  /*  */
  /* Set error control flags*/
  /* UNRF - No record found flag (Y,N,1)*/
  /* UDUP - Duplicate key flag (Y,N)*/
  VDBCOMMON.UNRF = "Y";
  VDBCOMMON.UDUP = "N";
  /*  */
  /* Perform DBM error processing*/
  WDB00PE-SQLERR();
end // end TLCAS1L1


// Control Retrieve of Data
Function TLCAS1P1()
  /* Move retrieve key value to SQL row record*/
  H2-LCTE-ACTVY.UPI = H-TLCAS1.UPI;
  H2-LCTE-ACTVY.LOC-SRC-CD = H-TLCAS1.LOC-SRC-CD;
  H2-LCTE-ACTVY.RQST-SENT-DT = H-TLCAS1.RQST-SENT-DT;
  H2-LCTE-ACTVY.INFO-RCVD-DT = H-TLCAS1.INFO-RCVD-DT;
  H2-LCTE-ACTVY.CASE-SUFX = H-TLCAS1.CASE-SUFX;
  H2-LCTE-ACTVY.RQST-SQ-NMB = H-TLCAS1.RQST-SQ-NMB;
  /*  */
  /* Perform process to retrieve data*/
  TLCAS1Q1();
  /*  */
  /* If data retrieved successfully, continue*/
  if (sysVar.sqlData.sqlcode == 0)
    /*  */
    /* Move retrieved data to passed record*/
    H-TLCAS1.NPLS-FG = H2-LCTE-ACTVY.NPLS-FG;
    H-TLCAS1.INFO-RQSTD-TS = H2-LCTE-ACTVY.INFO-RQSTD-TS;
  end /* Data retrieved successfully*/
end // end TLCAS1P1


// INQURY ON NPLS
Function TLCAS1Q1()
  /* Move name of SQL row record used to common record*/
  VDBCOMMON.USQLREC = "H2-LCTE-ACTVY";
  /*  */
  VDBCONTROL.UPROC-OBJ = "H2-LCTE-ACTVY";
  VDBCONTROL.UPROC-OPT = "INQUIRY";
  VDBCONTROL.UPROC-NM = "TLCAS1Q1";
  VDBCOMMON.USQLREC = "H2-LCTE-ACTVY";
  /*  */
  try
    get H2-LCTE-ACTVY singleRow
      with #sql{
        select NPLS_FG,
           INFO_RQSTD_TS
        from TWNLCTE_ACTVY T1
         --** INSERT WHERE, GROUP BY AND HAVING CLAUSES HERE **
         --** INSERT ORDER BY CLAUSE HERE **
          WHERE   T1.RQST_SENT_DT <> :RQST-SENT-DT
                  AND T1.INFO_RCVD_DT = :INFO-RCVD-DT
                  AND T1.RQST_SQ_NMB = :RQST-SQ-NMB
                  AND T1.LOC_SRC_CD = :LOC-SRC-CD
                  AND T1.CASE_SUFX = :CASE-SUFX
                  AND T1.UPI = :UPI
                  AND INFO_RQSTD_TS
                     = (SELECT MAX(INFO_RQSTD_TS)
                        FROM  TWNLCTE_ACTVY T2
                        WHERE T2.RQST_SENT_DT <> :RQST-SENT-DT
                        AND T2.INFO_RCVD_DT = :INFO-RCVD-DT
                        AND T2.RQST_SQ_NMB = :RQST-SQ-NMB
                        AND T2.LOC_SRC_CD = :LOC-SRC-CD
                        AND T2.CASE_SUFX = :CASE-SUFX
                        AND T1.UPI = T2.UPI)
         --** INSERT ORDER BY CLAUSE HERE **
      }
      into NPLS-FG,
           INFO-RQSTD-TS ;
  end
  /*  */
  /* Increment count of rows retrieved*/
  if (sysVar.sqlData.sqlcode == 0)
    VDBCONTROL.UROWR = VDBCONTROL.UROWR + 1;
  end
end // end TLCAS1Q1


