/**
	 * This method creates and inserts records into T1042_APP_IN_R_PROP_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1042AppInRPropAset(Element root) throws Exception {

		T1042AppInRPropAsetCargo t1042Cargo = null;
		T1042AppInRPropAsetCollection t1042Coll = null;

		Element propAsets = root.getChild("APP_IN_R_PROP_ASETS");
		List propAsetList = (propAsets != null ? propAsets.getChildren("APP_IN_R_PROP_ASET") : null);
		try {
			if (propAsetList != null && propAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1042AppInRPropAset method");
				String dataExist = null;
				t1042Coll = (conn == null) ? new T1042AppInRPropAsetCollection() : new T1042AppInRPropAsetCollection(conn);
				Iterator ite = propAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element propAset = (Element) ite.next();
					Attribute propAsetAttr = (propAset != null ? propAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (propAsetAttr != null)
						dataExist = propAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1042Cargo = new T1042AppInRPropAsetCargo();

						t1042Cargo.setAppNum(appNum);
						t1042Cargo.setIndvSeqNum(getLongForString(propAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1042Cargo.setSeqNum(getLongForString(propAset.getChildTextTrim("SEQ_NUM")));
						t1042Cargo.setAddRecInd(getCharForString(propAset.getChildTextTrim("ADD_REC_IND")));
						t1042Cargo.setAsscSeqNum(getLongForString(propAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1042Cargo.setEffBegMo(getIntForString(propAset.getChildTextTrim("EFF_BEG_MO")));
						t1042Cargo.setIntnRetSw(getCharForString(propAset.getChildTextTrim("INTN_RET_SW")));
						t1042Cargo.setJntOwnResp(getCharForString(propAset.getChildTextTrim("JNT_OWN_RESP")));
						t1042Cargo.setPropCityAdr(getString(propAset.getChildTextTrim("PROP_CITY_ADR")));
						t1042Cargo.setPropFmvAmt(getDoubleForString(propAset.getChildTextTrim("PROP_FMV_AMT")));
						t1042Cargo.setPropFmvAmtInd(getLongForString(propAset.getChildTextTrim("PROP_FMV_AMT_IND")));
						t1042Cargo.setPropL1Adr(getString(propAset.getChildTextTrim("PROP_L1_ADR")));
						t1042Cargo.setPropL2Adr(getString(propAset.getChildTextTrim("PROP_L2_ADR")));
						t1042Cargo.setPropOweAmt(getDoubleForString(propAset.getChildTextTrim("PROP_OWE_AMT")));
						t1042Cargo.setPropOweAmtInd(getLongForString(propAset.getChildTextTrim("PROP_OWE_AMT_IND")));
						t1042Cargo.setPropStaAdr(getString(propAset.getChildTextTrim("PROP_STA_ADR")));
						t1042Cargo.setPropZipAdr(getString(propAset.getChildTextTrim("PROP_ZIP_ADR")));
						SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
						SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
						ssXrefCargo.setSsStTableName("T1042_APP_IN_R_PROP_ASET");
						ssXrefCargo.setSsStColumnName("REAL_PROP_ASET_TYP");
						ssXrefCargo.setSsStColumnVal(String.valueOf(propAset.getChildTextTrim("REAL_PROP_ASET_TYP")));
						Object[] objects = new Object[1];
						objects[0] = ssXrefCargo;
						SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
						if (xrefCargo.length > 0) {
							t1042Cargo.setRealPropAsetTyp(xrefCargo[0].getRtCode());
						}

						t1042Cargo.setResSw(getCharForString(propAset.getChildTextTrim("RES_SW")));
						t1042Cargo.setRltCd(getString(propAset.getChildTextTrim("RLT_CD")));
						t1042Cargo.setSaleAgrSw(getCharForString(propAset.getChildTextTrim("SALE_AGR_SW")));
						t1042Cargo.setSpsLiveSw(getCharForString(propAset.getChildTextTrim("SPS_LIVE_SW")));

						t1042Cargo.setRecordCompleted(C_NO);

						t1042Coll.setCargo(t1042Cargo);
					}
					if (t1042Coll.size() > 0)
						t1042Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1042AppInRPropAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1042AppInRPropAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1042AppInRPropAset method");
	}

	/**
	 * This method creates and inserts records into T1043_APP_IN_P_PROP_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1043AppInPPropAset(Element root) throws Exception {

		T1043AppInPPropAsetCargo t1043Cargo = null;
		T1043AppInPPropAsetCollection t1043Coll = null;

		Element ppropAsets = root.getChild("APP_IN_P_PROP_ASETS");
		List ppropAsetList = (ppropAsets != null ? ppropAsets.getChildren("APP_IN_P_PROP_ASET") : null);
		try {
			if (ppropAsetList != null && ppropAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1043AppInPPropAset method");
				String dataExist = null;
				t1043Coll = (conn == null) ? new T1043AppInPPropAsetCollection() : new T1043AppInPPropAsetCollection(conn);
				Iterator ite = ppropAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element ppropAset = (Element) ite.next();
					Attribute ppropAsetAttr = (ppropAset != null ? ppropAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (ppropAsetAttr != null)
						dataExist = ppropAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1043Cargo = new T1043AppInPPropAsetCargo();

						t1043Cargo.setAppNum(appNum);
						t1043Cargo.setIndvSeqNum(getLongForString(ppropAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1043Cargo.setSeqNum(getLongForString(ppropAset.getChildTextTrim("SEQ_NUM")));
						t1043Cargo.setAddRecInd(getCharForString(ppropAset.getChildTextTrim("ADD_REC_IND")));
						t1043Cargo.setAsscSeqNum(getLongForString(ppropAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1043Cargo.setEffBegMo(getIntForString(ppropAset.getChildTextTrim("EFF_BEG_MO")));
						t1043Cargo.setJntOwnResp(getCharForString(ppropAset.getChildTextTrim("JNT_OWN_RESP")));
						t1043Cargo.setPrsnPropAmt(getDoubleForString(ppropAset.getChildTextTrim("PRSN_PROP_AMT")));
						t1043Cargo.setPrsnPropAmtInd(getLongForString(ppropAset.getChildTextTrim("PRSN_PROP_AMT_IND")));
						t1043Cargo.setPrsnPropAsetTyp(getString(ppropAset.getChildTextTrim("PRSN_PROP_ASET_TYP")));
						t1043Coll.setCargo(t1043Cargo);
					}
					if (t1043Coll.size() > 0)
						t1043Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1043AppInPPropAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1043AppInPPropAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1043AppInPPropAset method");
	}

	/**
	 * This method creates and inserts records into T1044_APP_IN_BURY_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1044AppInBuryAset(Element root) throws Exception {

		T1044AppInBuryAsetCargo t1044Cargo = null;
		T1044AppInBuryAsetCollection t1044Coll = null;

		Element buryAsets = root.getChild("APP_IN_BURY_ASETS");
		List buryAsetList = (buryAsets != null ? buryAsets.getChildren("APP_IN_BURY_ASET") : null);
		try {
			if (buryAsetList != null && buryAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1044AppInBuryAset method");
				String dataExist = null;
				t1044Coll = (conn == null) ? new T1044AppInBuryAsetCollection() : new T1044AppInBuryAsetCollection(conn);
				Iterator ite = buryAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element buryAset = (Element) ite.next();
					Attribute buryAsetAttr = (buryAset != null ? buryAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (buryAsetAttr != null)
						dataExist = buryAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1044Cargo = new T1044AppInBuryAsetCargo();

						t1044Cargo.setAppNum(appNum);
						t1044Cargo.setIndvSeqNum(getLongForString(buryAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1044Cargo.setSeqNum(getLongForString(buryAset.getChildTextTrim("SEQ_NUM")));
						t1044Cargo.setAddRecInd(getCharForString(buryAset.getChildTextTrim("ADD_REC_IND")));
						t1044Cargo.setAsscSeqNum(getLongForString(buryAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1044Cargo.setEffBegMo(getIntForString(buryAset.getChildTextTrim("EFF_BEG_MO")));
						t1044Cargo.setBuryAsetAmt(getDoubleForString(buryAset.getChildTextTrim("BURY_ASET_AMT")));
						t1044Cargo.setBuryAsetAmtInd(getLongForString(buryAset.getChildTextTrim("BURY_ASET_AMT_IND")));
						t1044Cargo.setBuryAsetRltCd(getString(buryAset.getChildTextTrim("BURY_ASET_RLT_CD")));
						SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
						SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
						ssXrefCargo.setSsStTableName("T1044_APP_IN_BURY_ASET");
						ssXrefCargo.setSsStColumnName("BURY_ASET_TYP");
						ssXrefCargo.setSsStColumnVal(String.valueOf(buryAset.getChildTextTrim("BURY_ASET_TYP")));
						Object[] objects = new Object[1];
						objects[0] = ssXrefCargo;
						SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
						if (xrefCargo.length > 0) {
							t1044Cargo.setBuryAsetTyp(xrefCargo[0].getRtCode());
						}

						t1044Cargo.setForIndvSeqNum(getLongForString(buryAset.getChildTextTrim("FOR_INDV_SEQ_NUM")));
						t1044Cargo.setRecordCompleted(C_NO);

						t1044Coll.setCargo(t1044Cargo);
					}
					if (t1044Coll.size() > 0)
						t1044Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1044AppInBuryAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1044AppInBuryAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1044AppInBuryAset method");
	}

	/**
	 * This method creates and inserts records into T1045_APP_IN_L_INS_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1045AppInLInsAset(Element root) throws Exception {

		T1045AppInLInsAsetCargo t1045Cargo = null;
		T1045AppInLInsAsetCollection t1045Coll = null;

		Element insAsets = root.getChild("APP_IN_L_INS_ASETS");
		List insAsetList = (insAsets != null ? insAsets.getChildren("APP_IN_L_INS_ASET") : null);
		try {
			if (insAsetList != null && insAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1045AppInLInsAset method");
				String dataExist = null;
				t1045Coll = (conn == null) ? new T1045AppInLInsAsetCollection() : new T1045AppInLInsAsetCollection(conn);
				Iterator ite = insAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element insAset = (Element) ite.next();
					Attribute insAsetAttr = (insAset != null ? insAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (insAsetAttr != null)
						dataExist = insAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1045Cargo = new T1045AppInLInsAsetCargo();

						t1045Cargo.setAppNum(appNum);
						t1045Cargo.setIndvSeqNum(getLongForString(insAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1045Cargo.setSeqNum(getLongForString(insAset.getChildTextTrim("SEQ_NUM")));
						t1045Cargo.setAddRecInd(getCharForString(insAset.getChildTextTrim("ADD_REC_IND")));
						t1045Cargo.setAsscSeqNum(getLongForString(insAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1045Cargo.setEffBegMo(getIntForString(insAset.getChildTextTrim("EFF_BEG_MO")));
						t1045Cargo.setInsCoCityAdr(getString(insAset.getChildTextTrim("INS_CO_CITY_ADR")));
						t1045Cargo.setInsCoL1Adr(getString(insAset.getChildTextTrim("INS_CO_L1_ADR")));
						t1045Cargo.setInsCoL2Adr(getString(insAset.getChildTextTrim("INS_CO_L2_ADR")));
						t1045Cargo.setInsCoNam(getString(insAset.getChildTextTrim("INS_CO_NAM")));
						t1045Cargo.setInsCoStaAdr(getString(insAset.getChildTextTrim("INS_CO_STA_ADR")));
						t1045Cargo.setInsCoZipAdr(getString(insAset.getChildTextTrim("INS_CO_ZIP_ADR")));
						SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
						SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
						ssXrefCargo.setSsStTableName("T1045_APP_IN_L_INS_ASET");
						ssXrefCargo.setSsStColumnName("LIFE_INS_ASET_TYP");
						ssXrefCargo.setSsStColumnVal(String.valueOf(insAset.getChildTextTrim("LIFE_INS_ASET_TYP")));
						Object[] objects = new Object[1];
						objects[0] = ssXrefCargo;
						SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
						if (xrefCargo.length > 0) {
							t1045Cargo.setLifeInsAsetTyp(xrefCargo[0].getRtCode());
						}

						t1045Cargo.setLifeInsFAmtInd(getLongForString(insAset.getChildTextTrim("LIFE_INS_F_AMT_IND")));
						t1045Cargo.setLifeInsFaceAmt(getDoubleForString(insAset.getChildTextTrim("LIFE_INS_FACE_AMT")));
						t1045Cargo.setLifeInsPlcyNum(getString(insAset.getChildTextTrim("LIFE_INS_PLCY_NUM")));
						t1045Cargo.setLifeInsSAmtInd(getLongForString(insAset.getChildTextTrim("LIFE_INS_S_AMT_IND")));
						t1045Cargo.setLifeInsSurrAmt(getDoubleForString(insAset.getChildTextTrim("LIFE_INS_SURR_AMT")));
						t1045Cargo.setRecordCompleted(C_NO);

						t1045Coll.setCargo(t1045Cargo);
					}
					if (t1045Coll.size() > 0)
						t1045Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1045AppInLInsAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1045AppInLInsAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1045AppInLInsAset method");
	}

	/**
	 * This method creates and inserts records into T1050_APP_IN_A_J_O staging
	 * table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1050AppInAdditionalJointOwner(Element root) throws Exception {

		T1050AppInAJOCargo t1050Cargo = null;
		T1050AppInAJOCollection t1050Coll = null;

		Element inJointOwners = root.getChild("JOINT_OWNERS");
		List inJointOwnerList = (inJointOwners != null ? inJointOwners.getChildren("JOINT_OWNER") : null);
		try {
			if (inJointOwnerList != null && inJointOwnerList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1050AppInAdditionalJointOwner method");
				String dataExist = null;
				t1050Coll = (conn == null) ? new T1050AppInAJOCollection() : new T1050AppInAJOCollection(conn);
				Iterator ite = inJointOwnerList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element inJointOwner = (Element) ite.next();
					Attribute inJointOwnerAttr = (inJointOwner != null ? inJointOwner.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (inJointOwnerAttr != null)
						dataExist = inJointOwnerAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist) || dataExist.equalsIgnoreCase("")) {

						t1050Cargo = new T1050AppInAJOCargo();

						t1050Cargo.setAppNum(appNum);
						t1050Cargo.setIndvSeqNum(getLongForString(inJointOwner.getChildTextTrim("INDV_SEQ_NUM")));
						t1050Cargo.setSeqNum(getLongForString(inJointOwner.getChildTextTrim("SEQ_NUM")));
						t1050Cargo.setAsetTyp(inJointOwner.getChildTextTrim("ASET_TYP"));
						t1050Cargo.setJntOwnSeqNum(getLongForString(inJointOwner.getChildTextTrim("JNT_OWN_SEQ_NUM")));
						if (inJointOwner.getChildTextTrim("ASET_TYP") != null) {
							if ("RP".equalsIgnoreCase(inJointOwner.getChildTextTrim("ASET_TYP"))) {
								SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
								SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
								ssXrefCargo.setSsStTableName("T1042_APP_IN_R_PROP_ASET");
								ssXrefCargo.setSsStColumnName("REAL_PROP_ASET_TYP");
								ssXrefCargo.setSsStColumnVal(inJointOwner.getChildTextTrim("ASET_SUB_TYP"));
								Object[] objects = new Object[1];
								objects[0] = ssXrefCargo;
								SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
								if (xrefCargo.length > 0) {
									t1050Cargo.setAsetSubTyp(xrefCargo[0].getRtCode());
								}
							} else if ("VA".equalsIgnoreCase(inJointOwner.getChildTextTrim("ASET_TYP"))) {
								SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
								SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
								ssXrefCargo.setSsStTableName("T1041_APP_IN_VEH_ASET");
								ssXrefCargo.setSsStColumnName("VEH_ASET_TYP");
								ssXrefCargo.setSsStColumnVal(inJointOwner.getChildTextTrim("ASET_SUB_TYP"));
								Object[] objects = new Object[1];
								objects[0] = ssXrefCargo;
								SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
								if (xrefCargo.length > 0) {
									t1050Cargo.setAsetSubTyp(xrefCargo[0].getRtCode());
								}
							} else {
								t1050Cargo.setAsetSubTyp(inJointOwner.getChildTextTrim("ASET_SUB_TYP"));
							}
						}

						t1050Cargo.setJntIndvSeqNum(getLongForString(inJointOwner.getChildTextTrim("JNT_INDV_SEQ_NUM")));
						t1050Cargo.setJntOwnFstNam(inJointOwner.getChildTextTrim("JNT_OWN_FST_NAM"));
						t1050Cargo.setJntOwnLastNam(inJointOwner.getChildTextTrim("JNT_OWN_LAST_NAM"));
						t1050Cargo.setJntOwnMidInit(' ');
						t1050Cargo.setJntOwnSfxNam(" ");

						t1050Coll.setCargo(t1050Cargo);
					}
					if (t1050Coll.size() > 0)
						t1050Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1050AppInAdditionalJointOwner method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1050AppInAdditionalJointOwner method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1050AppInAdditionalJointOwner method");

	}

	/**
	 * This method creates and inserts records into T1061_APP_IN_A_A_D staging
	 * table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1061AppInAdditionalAsstDet(Element root) throws Exception {

		T1061AppInAADCargo t1061Cargo = null;
		T1061AppInAADCollection t1061Coll = null;

		Element inAddAsstDets = root.getChild("APP_IN_ADDITIONAL_ASSETS");
		List inAddAsstDetList = (inAddAsstDets != null ? inAddAsstDets.getChildren("APP_IN_ADDITIONAL_ASSET") : null);
		try {
			if (inAddAsstDetList != null && inAddAsstDetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1061AppInAdditionalAsstDet method");
				String dataExist = null;
				t1061Coll = (conn == null) ? new T1061AppInAADCollection() : new T1061AppInAADCollection(conn);
				Iterator ite = inAddAsstDetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element inAddAsst = (Element) ite.next();
					Attribute inAddAsstAttr = (inAddAsst != null ? inAddAsst.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (inAddAsstAttr != null)
						dataExist = inAddAsstAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist) || dataExist.equalsIgnoreCase("")) {

						t1061Cargo = new T1061AppInAADCargo();

						t1061Cargo.setAppNum(appNum);
						t1061Cargo.setIndvSeqNum(getLongForString(inAddAsst.getChildTextTrim("INDV_SEQ_NUM")));
						t1061Cargo.setAdditionalAssetAmtInd(inAddAsst.getChildTextTrim("ADDITIONAL_ASSET_AMOUNT_IND"));
						t1061Cargo.setAdditionalAssetAmt(getDoubleForString(inAddAsst.getChildTextTrim("ADDITIONAL_ASSET_AMT")));
						t1061Cargo.setAdditionalAssetSeqNum(getLongForString(inAddAsst.getChildTextTrim("ADDITIONAL_ASSET_SEQ_NUM")));
						t1061Cargo.setAdditionalAssetTypeCd(inAddAsst.getChildTextTrim("ADDITIONAL_ASSET_TYPE_CD"));
						t1061Cargo.setJntOwnResp(getCharForString(inAddAsst.getChildText("JNT_OWN_RESP")));
						t1061Cargo.setSrcAppInd(inAddAsst.getChildTextTrim("SRC_APP_IND"));
						t1061Cargo.setRecordCompleted(C_NO);

						t1061Coll.setCargo(t1061Cargo);
					}
					if (t1061Coll.size() > 0)
						t1061Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1061AppInAdditionalAsstDet method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1061AppInAdditionalAsstDet method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1061AppInAdditionalAsstDet method");

	}

	// 11. T1035_APP_IN_MED_I
	/**
	 * This method creates and inserts records into T1035_APP_IN_MED_I staging
	 * table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1035AppInMedI(Element root) throws Exception {

		T1035AppInMedICargo t1035Cargo = null;
		T1035AppInMedICollection t1035Coll = null;

		Element medInss = root.getChild("APP_IN_MED_INSS");
		List medInsList = (medInss != null ? medInss.getChildren("APP_IN_MED_INS") : null);
		try {
			if (medInsList != null && medInsList.size() > 0) {
				String dataExist = null;
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1035AppInMedI method");
				t1035Coll = (conn == null) ? new T1035AppInMedICollection() : new T1035AppInMedICollection(conn);
				Iterator ite = medInsList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element medIns = (Element) ite.next();
					Attribute medInsAttr = (medIns != null ? medIns.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (medInsAttr != null)
						dataExist = medInsAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1035Cargo = new T1035AppInMedICargo();

						t1035Cargo.setAppNum(appNum);
						t1035Cargo.setPlcySeqNum(getLongForString(medIns.getChildTextTrim("PLCY_SEQ_NUM")));
						t1035Cargo.setIndvSeqNum(getLongForString(medIns.getChildTextTrim("INDV_SEQ_NUM")));
						t1035Cargo.setAddRecInd(getCharForString(medIns.getChildTextTrim("ADD_REC_IND")));

						SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

						String cvrgBegTms = medIns.getChildTextTrim("CVRG_BEG_DT");
						if (cvrgBegTms != null && cvrgBegTms.trim().length() > 0) {
							t1035Cargo.setCvrgBegDt(new Timestamp(sdf.parse(cvrgBegTms).getTime()));
						} else {
							t1035Cargo.setCvrgBegDt(highDate);
						}

						String cvrgEndTms = medIns.getChildTextTrim("CVRG_END_DT");
						if (cvrgEndTms != null && cvrgEndTms.trim().length() > 0) {
							t1035Cargo.setCvrgEndDt(new Timestamp(sdf.parse(cvrgEndTms).getTime()));
						} else {
							t1035Cargo.setCvrgEndDt(highDate);
						}
						String insuranceEndDt = medIns.getChildTextTrim("INSURANCE_END_DT");

						if (insuranceEndDt != null && insuranceEndDt.trim().length() > 0) {
							if (insuranceEndDt.equalsIgnoreCase(FwConstants.ABE_HIGH_DATE)) {
								t1035Cargo.setInsuranceEndDt(null);
							} else {
								t1035Cargo.setInsuranceEndDt(new Timestamp(sdf.parse(insuranceEndDt).getTime()));
							}

						}
						t1035Cargo.setInsuranceEmplUnionName(getString(medIns.getChildTextTrim("INSURANCE_EMPL_UNION_NAME")));
						t1035Cargo.setCompanyNameCd(getString(medIns.getChildTextTrim("COMPANY_NAME_CD")));

						t1035Cargo.setEmployerUnionAddrCity(getString(medIns.getChildTextTrim("EMPLOYERUNION_ADDR_CITY")));
						t1035Cargo.setEmployerUnionAddrLine1(getString(medIns.getChildTextTrim("EMPLOYERUNION_ADDR_LINE1")));
						t1035Cargo.setEmployerUnionAddrStateCd(getString(medIns.getChildTextTrim("EMPLOYERUNION_ADDR_STATE_CD")));
						t1035Cargo.setEmployerUnionAddrZip(getString(medIns.getChildTextTrim("EMPLOYERUNION_ADDR_ZIP")));
						t1035Cargo.setPolicyHolderName(getString(medIns.getChildTextTrim("POLICY_HOLDER_NAME")));
						t1035Cargo.setMajMedSw(getCharForString(medIns.getChildTextTrim("MAJ_MED_SW")));
						t1035Cargo.setRltCd(getCharForString(medIns.getChildTextTrim("RLT_CD")));
						t1035Cargo.setCoverageTypeCd(getString(medIns.getChildTextTrim("COVERAGE_TYPE_CD")));
						t1035Cargo.setInsuranceCompanyName(getString(medIns.getChildTextTrim("INSURANCE_COMPANY_NAME")));
						t1035Cargo.setInsuranceAddrLine1(getString(medIns.getChildTextTrim("INSURANCE_ADDR_LINE1")));
						t1035Cargo.setInsuranceAddrLine2(getString(medIns.getChildTextTrim("INSURANCE_ADDR_LINE2")));
						t1035Cargo.setInsuranceAddrStateCd(getString(medIns.getChildTextTrim("INSURANCE_ADDR_STATE_CD")));
						t1035Cargo.setInsuranceAddrCity(getString(medIns.getChildTextTrim("INSURANCE_ADDR_CITY")));
						t1035Cargo.setInsuranceAddrZip(getString(medIns.getChildTextTrim("INSURANCE_ADDR_ZIP")));
						t1035Cargo.setInsurancePhoneNum(getString(medIns.getChildTextTrim("INSURANCE_PHONE_NUM")));
						t1035Cargo.setInsuranceClaimNum(getString(medIns.getChildTextTrim("INSURANCE_CLAIM_NUM")));
						t1035Cargo.setInsurancePolicyNum(getString(medIns.getChildTextTrim("INSURANCE_POLICY_NUM")));
						t1035Cargo.setCobraSw(getCharForString(medIns.getChildTextTrim("COBRA_SW")));
						t1035Cargo.setPhydicianHospCoverageSw(getCharForString(medIns.getChildTextTrim("PHYDICIAN_HOSP_COVERAGE_SW")));

						t1035Coll.setCargo(t1035Cargo);
					}
					if (t1035Coll.size() > 0)
						t1035Coll.insert();
				}

			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1035AppInMedI method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1035AppInMedI method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1035AppInMedI method");
	}

	/**
	 * This method creates and inserts records into T1005_APP_IN_PRFL staging
	 * table
	 * 
	 * @param indivNode
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1055AppInPrfl(Element indivNode, long indvSeqNum) throws Exception {

		T1055AppInPrflCargo t1055Cargo = null;
		T1055AppInPrflCollection t1055Coll = null;
		Element appInPrfl = indivNode.getChild("INDIVIDUAL_PROFILE");
		Attribute providerAttr = appInPrfl.getAttribute(AppRegConstants.DATA_EXIST);
		try {
			String dataExist = DATA_NO;
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1055AppInPrfl method");

			if (providerAttr != null)
				dataExist = providerAttr.getValue().trim();
			if (DATA_YES.equalsIgnoreCase(dataExist)) {

				t1055Cargo = new T1055AppInPrflCargo();
				t1055Cargo.setAppNum(appNum);
				t1055Cargo.setIndvSeqNum(indvSeqNum);
				t1055Cargo.setOpAodaTmtRcvSw(getCharForString(appInPrfl.getChildTextTrim("OP_AODA_TMT_RCV_SW")));
				t1055Cargo.setMiRehabResp(getCharForString(appInPrfl.getChildTextTrim("MI_REHAB_RESP")));
				t1055Cargo.setNeedChildCareResp(getCharForString(appInPrfl.getChildTextTrim("NEED_CHILD_CARE_RESP")));
				t1055Cargo.setHighSchoolActivityResp(getCharForString(appInPrfl.getChildTextTrim("HIGH_SCHOOL_ACTIVITY_RESP")));
				t1055Cargo.setHealthActivityResp(getCharForString(appInPrfl.getChildTextTrim("HEALTH_ACTIVITY_RESP")));
				t1055Cargo.setBurialRequestResp(getCharForString(appInPrfl.getChildTextTrim("BURIAL_REQUEST_RESP")));
				t1055Cargo.setDablResp(getString(appInPrfl.getChildTextTrim("DABL_RESP")));
				t1055Cargo.setRcvFsOthStResp(getString(appInPrfl.getChildTextTrim("RCV_FS_OTH_ST_RESP")));
				t1055Cargo.setSsiBenefitResp(getCharForString(appInPrfl.getChildTextTrim("SSI_BENEFIT_RESP")));
				t1055Cargo.setAppliedForDisabilityResp(getCharForString(appInPrfl.getChildTextTrim("APPLIED_FOR_DISABILITY_RESP")));
				t1055Cargo.setCaretakerResp(getCharForString(appInPrfl.getChildTextTrim("CARETAKER_RESP")));
				t1055Cargo.setPregResp(getString(appInPrfl.getChildTextTrim("PREG_RESP")));
				t1055Cargo.setCashBenefitResp(getCharForString(appInPrfl.getChildTextTrim("CASH_BENEFIT_RESP")));
				t1055Cargo.setSpecialEducationClassResp(getCharForString(appInPrfl.getChildTextTrim("SPECIAL_EDUCATION_CLASS_RESP")));
				t1055Cargo.setImmunizationResp(getCharForString(appInPrfl.getChildTextTrim("IMMUNIZATION_RESP")));
				t1055Cargo.setMedicalCoverageResp(getCharForString(appInPrfl.getChildTextTrim("MEDICAL_COVERAGE_RESP")));
				t1055Cargo.setDomesticViolenceVictimResp(getCharForString(appInPrfl.getChildTextTrim("DOMESTIC_VIOLENCE_VICTIM_RESP")));
				t1055Cargo.setOthrAsetVehResp(getString(appInPrfl.getChildTextTrim("OTHR_ASET_VEH_RESP")));
				t1055Cargo.setLqdAsetCashResp(getString(appInPrfl.getChildTextTrim("LQD_ASET_CASH_RESP")));
				t1055Cargo.setLqdAsetCAResp(getString(appInPrfl.getChildTextTrim("LQD_ASET_C_A_RESP")));
				t1055Cargo.setLqdAsetSAResp(getString(appInPrfl.getChildTextTrim("LQD_ASET_S_A_RESP")));
				t1055Cargo.setLqdAsetOthrResp(getString(appInPrfl.getChildTextTrim("LQD_ASET_OTHR_RESP")));
				t1055Cargo.setOthrAsetRPResp(getString(appInPrfl.getChildTextTrim("OTHR_ASET_R_P_RESP")));
				t1055Cargo.setOthrAsetBurResp(getString(appInPrfl.getChildTextTrim("OTHR_ASET_BUR_RESP")));
				t1055Cargo.setOthrAsetLIResp(getString(appInPrfl.getChildTextTrim("OTHR_ASET_L_I_RESP")));
				t1055Cargo.setEmploymentActivityResp(getCharForString(appInPrfl.getChildTextTrim("EMPLOYMENT_ACTIVITY_RESP")));
				t1055Cargo.setWorkActivityResp(getCharForString(appInPrfl.getChildTextTrim("WORK_ACTIVITY_RESP")));
				t1055Cargo.setAdditionalAssetWaterResp(getCharForString(appInPrfl.getChildTextTrim("ADDITIONAL_ASSET_WATER_RESP")));
				t1055Cargo.setLqdAsetKPResp(getCharForString(appInPrfl.getChildTextTrim("LQD_ASET_K_P_RESP")));
				t1055Cargo.setOtherInStateBenefitsSw('N');
				String ssiSw = appInPrfl.getChildTextTrim("RCV_SSI_SW");
				String ssSw = appInPrfl.getChildTextTrim("RCV_SS_RESP");
			    //ILIES-162945 SSI & RSDI Prefill from ABE
				if ((ssiSw != null && ssiSw.equals("Y"))) {
					t1055Cargo.setReceivesSsiRsdiSw('Y');
				} else {
					t1055Cargo.setReceivesSsiRsdiSw('Z');
				}
				t1055Cargo.setLiquidResourceSw('N');
				t1055Cargo.setPlanFirstMedicareSw(getCharForString(appInPrfl.getChildTextTrim("PLAN_FIRST_MEDICARE_SW")));
				t1055Cargo.setHealthInsuranceSw(getCharForString(appInPrfl.getChildTextTrim("HEALTH_INSURANCE_SW")));
				t1055Cargo.setPastHealthInsuranceSw(getCharForString(appInPrfl.getChildTextTrim("PAST_HEALTH_INSURANCE_SW")));
				t1055Cargo.setPlanFirstOtherHealthSw(getCharForString(appInPrfl.getChildTextTrim("PLAN_FIRST_OTHER_HEALTH_SW")));
				t1055Cargo.setChildSupportSw(getCharForString(appInPrfl.getChildTextTrim("CHILD_SUPPORT_SW")));
				t1055Cargo.setCourtOrderedGuardianSw(getCharForString(appInPrfl.getChildTextTrim("COURT_ORDERED_GUARDIAN_SW")));
				t1055Cargo.setStateHealthInsuranceSw(getCharForString(appInPrfl.getChildTextTrim("STATE_HEALTH_INSURANCE_SW")));
				t1055Cargo.setChildCareSw(getCharForString(appInPrfl.getChildTextTrim("CHILD_CARE_SW")));
				t1055Cargo.setParoleProbViolResp(getCharForString(appInPrfl.getChildTextTrim("PAROLE_PROB_VIOL_RESP")));
				t1055Coll = (conn == null) ? new T1055AppInPrflCollection() : new T1055AppInPrflCollection(conn);
				t1055Coll.setCargo(t1055Cargo);

				if (t1055Coll.size() > 0)
					t1055Coll.insert();
			}

		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1055AppInPrfl method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1055AppInPrfl method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1055AppInPrfl method");

	}

	/**
	 * This method creates and inserts Non Energy details records into
	 * T3001_APP_SER_RQST staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3001AppSerRqstNonEnergy(Element root) throws Exception {
		T3001AppSerRqstCollection t3001Coll = null;
		T3001AppSerRqstCargo t3001Cargo = null;
		Element nonEnergDetails = root.getChild("SER_NON_ENERGY_DETAILS");
		List nonEnergList = (nonEnergDetails != null ? nonEnergDetails.getChildren("SER_NON_ENERGY_DETAIL") : null);
		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3001AppSerRqstNonEnergy method");
			if (nonEnergList != null && nonEnergList.size() > 0) {
				String dataExist = null;
				t3001Coll = (conn == null) ? new T3001AppSerRqstCollection() : new T3001AppSerRqstCollection(conn);
				Iterator ite = nonEnergList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element nonEnergDetail = (Element) ite.next();
					Attribute nonEnergAttr = (nonEnergDetail != null ? nonEnergDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (nonEnergAttr != null)
						dataExist = nonEnergAttr.getValue();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {
						t3001Cargo = new T3001AppSerRqstCargo();
						t3001Cargo.setAppNum(appNum);

						String ssNEServiceCd = getString(nonEnergDetail.getChildTextTrim("SERVICE_TYPE_CD"));
						String bridgesNEServiceCd = StSerServiceMapping.getBridgesServiceCode("NO", ssNEServiceCd);
						if (bridgesNEServiceCd == null) {
							throw new SelfServiceApplicationException("Invalid service type requested for App Num:" + appNum);
						}
						t3001Cargo.setServiceCd(bridgesNEServiceCd);
						try {
							String bridgesServiceTypeCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesNEServiceCd, "SERVICETYPECODE");
							String bridgesServiceGroupCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesNEServiceCd, "SERVICEGROUPCODE");
							t3001Cargo.setServiceGrpCd(bridgesServiceGroupCd);
							t3001Cargo.setServiceTypeCd(bridgesServiceTypeCd);
						} catch (Exception e) {
							log(ILog.ERROR, "exception in  SelfServiceAppRegBO.buildSerAppRequest method, error: " + e.getMessage(), e);
							throw new SelfServiceApplicationException(e.getMessage(),e);
						}
						double outstandingAmt = getDoubleForString(nonEnergDetail.getChildTextTrim("OUTSTANDING_AMT"));
						t3001Cargo.setOutstandingAmt(outstandingAmt);
						t3001Cargo.setRequestedAmt(outstandingAmt);

						t3001Cargo.setIsSrvcAddrLiveAddrSw(getCharForString(nonEnergDetail.getChildTextTrim("IS_SRVC_ADDR_LIVE_ADDR_SW")));
						t3001Cargo.setBillFromOldAddressSw(getCharForString(nonEnergDetail.getChildTextTrim("BILL_FROM_OLD_ADDRESS_SW")));
						t3001Cargo.setBillResidentialAccntSw(getCharForString(nonEnergDetail.getChildTextTrim("BILL_RESIDENTIAL_ACCOUNT_SW")));
						t3001Cargo.setHelpOthDhsName(getString(nonEnergDetail.getChildTextTrim("HELP_OTHER_DHS_NAME")));
						t3001Cargo.setHelpOthDhsAmt(getDoubleForString(nonEnergDetail.getChildTextTrim("HELP_OTHER_DHS_AMT")));
						t3001Cargo.setCommonMeterSw(getCharForString(nonEnergDetail.getChildTextTrim("COMMON_METER_SW")));
						t3001Cargo.setBillForMultipleAddrSw(getCharForString(nonEnergDetail.getChildTextTrim("BILL_FOR_MULTIPLE_ADDR_SW")));
						t3001Cargo.setIllegalUsageSw(getCharForString(nonEnergDetail.getChildTextTrim("ILLEGAL_USAGE_SW")));
						t3001Cargo.setIllegalUsageAmt(getDoubleForString(nonEnergDetail.getChildTextTrim("ILLEGAL_USAGE_AMT")));
						t3001Cargo.setBankruptAccntSw(getCharForString(nonEnergDetail.getChildTextTrim("BANKRUPT_ACCOUNT_SW")));
						t3001Cargo.setCookingGasOnlySw(getCharForString(nonEnergDetail.getChildTextTrim("COOKING_GAS_ONLY_SW")));

						t3001Coll.setCargo(t3001Cargo);
					}
					if (t3001Coll.size() > 0)
						t3001Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3001AppSerRqstNonEnergy method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3001AppSerRqstNonEnergy method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3001AppSerRqstNonEnergy method");
	}

	/**
	 * This method creates and inserts Home Owner details records into
	 * T3001_APP_SER_RQST staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3001AppSerRqstHomeOwner(Element root) throws Exception {
		T3001AppSerRqstCollection t3001Coll = null;
		T3001AppSerRqstCargo t3001Cargo = null;
		Element homeOwnerDetails = root.getChild("SER_HOME_OWNERSHIP_DETAILS");
		List homeOwnerList = (homeOwnerDetails != null ? homeOwnerDetails.getChildren("SER_HOME_OWNERSHIP_DETAIL") : null);

		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3001AppSerRqstHomeOwner method");
			if (homeOwnerList != null && homeOwnerList.size() > 0) {
				String dataExist = null;
				t3001Coll = (conn == null) ? new T3001AppSerRqstCollection() : new T3001AppSerRqstCollection(conn);
				Iterator ite = homeOwnerList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element homeOwnerDetail = (Element) ite.next();
					Attribute homeOwnerAttr = (homeOwnerDetail != null ? homeOwnerDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (homeOwnerAttr != null)
						dataExist = homeOwnerAttr.getValue();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {
						t3001Cargo = new T3001AppSerRqstCargo();
						t3001Cargo.setAppNum(appNum);

						String ssHOServiceCd = getString(homeOwnerDetail.getChildTextTrim("SERVICE_TYPE_CD"));
						String bridgesHOServiceCd = StSerServiceMapping.getBridgesServiceCode("NO", ssHOServiceCd);
						if (bridgesHOServiceCd == null) {
							throw new SelfServiceApplicationException("Invalid service type requested for App Num:" + appNum);
						}
						t3001Cargo.setServiceCd(bridgesHOServiceCd);
						try {
							String bridgesServiceTypeCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesHOServiceCd, "SERVICETYPECODE");
							String bridgesServiceGroupCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesHOServiceCd, "SERVICEGROUPCODE");
							t3001Cargo.setServiceGrpCd(bridgesServiceGroupCd);
							t3001Cargo.setServiceTypeCd(bridgesServiceTypeCd);
						} catch (Exception e) {
							log(ILog.ERROR, "exception in  SelfServiceAppRegBO.buildSerAppRequest method, error: " + e.getMessage(), e);
							throw new SelfServiceApplicationException(e.getMessage(),e);
						}
						double estimatedCostAmt = getDoubleForString(homeOwnerDetail.getChildTextTrim("ESTIMATED_COST_AMT"));
						t3001Cargo.setEstimatedRepairAmt(estimatedCostAmt);
						t3001Cargo.setRequestedAmt(estimatedCostAmt);

						t3001Cargo.setOwnHouseSw(getCharForString(homeOwnerDetail.getChildTextTrim("OWN_HOUSE_SW")));
						t3001Cargo.setLiveHouseSw(getCharForString(homeOwnerDetail.getChildTextTrim("LIVE_HOUSE_SW")));
						t3001Cargo.setPermanentResidenceSw(getCharForString(homeOwnerDetail.getChildTextTrim("PERMANENT_RESIDENCE_SW")));
						t3001Cargo.setLifeEstateSw(getCharForString(homeOwnerDetail.getChildTextTrim("LIFE_ESTATE_SW")));
						t3001Cargo.setOweBackTaxesMortgageSw(getCharForString(homeOwnerDetail.getChildTextTrim("OWE_BACK_TAXES_MORTGAGE_SW")));
						t3001Cargo.setDebtRepayArrangeSw(getCharForString(homeOwnerDetail.getChildTextTrim("EBT_REPAY_ARRANGE_SW")));
						t3001Cargo.setHouseListedForSaleSw(getCharForString(homeOwnerDetail.getChildTextTrim("HOUSE_LISTED_FOR_SALE_SW")));
						t3001Cargo.setHelpOthDhsName(getString(homeOwnerDetail.getChildTextTrim("HELP_OTHER_DHS_NAME")));
						t3001Cargo.setHelpOthDhsAmt(getDoubleForString(homeOwnerDetail.getChildTextTrim("HELP_OTHER_DHS_AMT")));

						t3001Coll.setCargo(t3001Cargo);
					}
					if (t3001Coll.size() > 0)
						t3001Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3001AppSerRqstHomeOwner method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3001AppSerRqstHomeOwner method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3001AppSerRqstHomeOwner method");

	}

	/**
	 * This method creates and inserts ReLocation details records into
	 * T3001_APP_SER_RQST staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3001AppSerRqstReLocation(Element root) throws Exception {
		T3001AppSerRqstCollection t3001Coll = null;
		T3001AppSerRqstCargo t3001Cargo = null;
		Element reLocationDetails = root.getChild("SER_RELOC_DETAILS");
		List reLocationList = (reLocationDetails != null ? reLocationDetails.getChildren("SER_RELOC_DETAIL") : null);

		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3001AppSerRqstReLocation method");
			if (reLocationList != null && reLocationList.size() > 0) {
				String dataExist = null;
				t3001Coll = (conn == null) ? new T3001AppSerRqstCollection() : new T3001AppSerRqstCollection(conn);
				Iterator ite = reLocationList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element reLocationDetail = (Element) ite.next();
					Attribute reLocationAttr = (reLocationDetail != null ? reLocationDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (reLocationAttr != null)
						dataExist = reLocationAttr.getValue();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {
						t3001Cargo = new T3001AppSerRqstCargo();
						t3001Cargo.setAppNum(appNum);

						String ssRLServiceCd = getString(reLocationDetail.getChildTextTrim("SERVICE_TYPE_CD"));
						String bridgesRLServiceCd = StSerServiceMapping.getBridgesServiceCode("NO", ssRLServiceCd);
						if (bridgesRLServiceCd == null) {
							throw new SelfServiceApplicationException("Invalid service type requested for App Num:" + appNum);
						}
						t3001Cargo.setServiceCd(bridgesRLServiceCd);
						try {
							String bridgesServiceTypeCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesRLServiceCd, "SERVICETYPECODE");
							String bridgesServiceGroupCd = ReferenceTableManager.getValueByColumn(true, "EDSERSRVCODE", bridgesRLServiceCd, "SERVICEGROUPCODE");
							t3001Cargo.setServiceGrpCd(bridgesServiceGroupCd);
							t3001Cargo.setServiceTypeCd(bridgesServiceTypeCd);
						} catch (Exception e) {
							log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildSerAppRequest method, error: " + e.getMessage(), e);
							throw new SelfServiceApplicationException(e.getMessage(),e);
						}
						double appSerAmt = getDoubleForString(reLocationDetail.getChildTextTrim("RELOCATION_AMT"));
						t3001Cargo.setRelocationAmt(appSerAmt);
						log(ILog.DEBUG, appNum + " RelocationAmt = " + appSerAmt);

						if (appSerAmt > 0)
							t3001Cargo.setRequestedAmt(appSerAmt);
						else if ((appSerAmt = getDoubleForString(reLocationDetail.getChildTextTrim("SECURITY_DEPOSIT_AMT"))) > 0)
							t3001Cargo.setRequestedAmt(appSerAmt);
						else if ((appSerAmt = getDoubleForString(reLocationDetail.getChildTextTrim("MONTHLY_RENT_AMT"))) > 0)
							t3001Cargo.setRequestedAmt(appSerAmt);
						log(ILog.DEBUG, appNum + " RequestedAmt = " + t3001Cargo.getRequestedAmt());
						t3001Cargo.setIncludesHeatSw(getCharForString(reLocationDetail.getChildTextTrim("INCLUDES_HEAT_SW")));
						t3001Cargo.setIncludesWaterSw(getCharForString(reLocationDetail.getChildTextTrim("INCLUDES_WATER_SW")));
						t3001Cargo.setIncludesElectricitySw(getCharForString(reLocationDetail.getChildTextTrim("INCLUDES_ELECTRICITY_SW")));
						t3001Cargo.setIncludesCookingGasSw(getCharForString(reLocationDetail.getChildTextTrim("INCLUDES_COOKING_GAS_SW")));
						t3001Cargo.setSecurityDepositAmt(getDoubleForString(reLocationDetail.getChildTextTrim("SECURITY_DEPOSIT_AMT")));
						t3001Cargo.setCourtSummonSw(getCharForString(reLocationDetail.getChildTextTrim("COURT_SUMMON_SW")));
						t3001Cargo.setMovingCompanyName(getString(reLocationDetail.getChildTextTrim("MOVING_COMPANY_NAME")));
						t3001Cargo.setMoveReasonTxt(getString(reLocationDetail.getChildTextTrim("MOVE_REASON_TEXT")));
						t3001Coll.setCargo(t3001Cargo);
						log(ILog.DEBUG, appNum + " T3001Cargo Contents= " + t3001Cargo.toString());

					}
					if (t3001Coll.size() > 0)
						t3001Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3001AppSerRqstReLocation method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3001AppSerRqstReLocation method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3001AppSerRqstReLocation method");
	}

	/**
	 * This method creates and inserts records into T1056_APP_NURSING_ADDRESS
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1056AppNursingAddress(Element root) throws Exception {

		T1056AppNursingAddressCargo t1056Cargo = null;
		T1056AppNursingAddressCollection t1056Coll = null;

		Element nAddresses = root.getChild("APP_NURSING_ADDRESSES");
		List nAddressList = (nAddresses != null ? nAddresses.getChildren("APP_NURSING_ADDRESS") : null);
		try {
			if (nAddressList != null && nAddressList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1056AppNursingAddresses method");
				String dataExist = null;

				t1056Coll = (conn == null) ? new T1056AppNursingAddressCollection() : new T1056AppNursingAddressCollection(conn);
				Iterator ite = nAddressList.iterator();

				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element nAddress = (Element) ite.next();
					Attribute nAddressAttr = (nAddress != null ? nAddress.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (nAddressAttr != null)
						dataExist = nAddressAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1056Cargo = new T1056AppNursingAddressCargo();
						t1056Cargo.setAppNum(appNum);
						t1056Cargo.setAddrTypeCd(getString(nAddress.getChildTextTrim("ADDR_TYPE_CD")));
						t1056Cargo.setAddrLine1(getString(nAddress.getChildTextTrim("ADDR_LINE1")));
						t1056Cargo.setAddrLine2(getString(nAddress.getChildTextTrim("ADDR_LINE2")));
						t1056Cargo.setAddrCity(getString(nAddress.getChildTextTrim("ADDR_CITY")));
						t1056Cargo.setAddrStateCd(getString(nAddress.getChildTextTrim("ADDR_STATE_CD")));

						t1056Cargo.setAddrZip(getString(nAddress.getChildTextTrim("ADDR_ZIP")));
						t1056Cargo.setPhoneNum(getString(nAddress.getChildTextTrim("PHONE_NUM")));
						t1056Coll.setCargo(t1056Cargo);
					}
					if (t1056Coll.size() > 0)
						t1056Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1056AppNursingAddresses method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1056AppNursingAddresses method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1056AppNursingAddresses method");
	}

	// 17. T1057_APP_IN_MEDICAL_DABL
	/**
	 * This method creates and inserts records into T1057_APP_IN_MEDICAL_DABL
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1057AppInMedicalDisabilities(Element root) throws Exception {

		T1057AppInMedicalDablCargo t1057Cargo = null;
		T1057AppInMedicalDablCollection t1057Coll = null;
		Element indivsNode = root.getChild(AppRegConstants.INDIVIDUALS);
		List indivList = (indivsNode != null ? indivsNode.getChildren(AppRegConstants.ELEMENT_INDIVIDUAL) : null);
		if (indivList != null & indivList.size() > 0) {
			Iterator indivItr = indivList.iterator();
			String dExist = null;
			String ssiResponse = null;
			while (indivItr.hasNext()) {
				dExist = DATA_NO;
				Element indivNode = (Element) indivItr.next();
				Element indvProfile = indivNode.getChild(AppRegConstants.INDIVIDUAL_PROFILE);
				Attribute ssiAttr = (indvProfile != null ? indvProfile.getAttribute(AppRegConstants.DATA_EXIST) : null);
				if (ssiAttr != null) {
					dExist = ssiAttr.getValue().trim();
				}
				t1057Coll = (conn == null) ? new T1057AppInMedicalDablCollection() : new T1057AppInMedicalDablCollection(conn);
				if (DATA_YES.equalsIgnoreCase(dExist)) {
					ssiResponse = indvProfile.getChildTextTrim("SSI_BENEFIT_RESP");
					if (DATA_YES.equalsIgnoreCase(ssiResponse)) {
						t1057Cargo = new T1057AppInMedicalDablCargo();
						t1057Cargo.setAppNum(appNum);
						t1057Cargo.setIndvSeqNum(getIntForString(indivNode.getChildTextTrim("INDV_SEQ_NUM")));
						t1057Cargo.setDisabilityTypeCd("SI");
						t1057Cargo.setDisabilityAppStatusCd(APPROVED);
						t1057Coll.setCargo(t1057Cargo);
					}
				}
				if (t1057Coll.size() > 0)
					t1057Coll.insert();
			}
		}

		Element medicalDisabilities = root.getChild("APP_IN_MEDICAL_DISABILITIES");
		List medicalDisabilityList = (medicalDisabilities != null ? medicalDisabilities.getChildren("APP_IN_MEDICAL_DISABILITY") : null);
		try {
			if (medicalDisabilityList != null && medicalDisabilityList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1057AppInMedicalDisabilities method");
				String dataExist = null;
				t1057Coll = (conn == null) ? new T1057AppInMedicalDablCollection() : new T1057AppInMedicalDablCollection(conn);
				Iterator ite = medicalDisabilityList.iterator();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element medicalDisability = (Element) ite.next();
					Attribute medicalDisabilityAttr = (medicalDisability != null ? medicalDisability.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (medicalDisabilityAttr != null)
						dataExist = medicalDisabilityAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1057Cargo = new T1057AppInMedicalDablCargo();
						t1057Cargo.setAppNum(appNum);
						t1057Cargo.setIndvSeqNum(getIntForString(medicalDisability.getChildTextTrim("INDV_SEQ_NUM")));
						t1057Cargo.setDisabilityTypeCd(getString(medicalDisability.getChildTextTrim("DISABILITY_TYPE_CD")));
						t1057Cargo.setOtherDisabilityTypeText(getString(medicalDisability.getChildTextTrim("OTHER_DISABILITY_TYPE_TEXT")));
						t1057Cargo.setDisabilityClaimNum(getString(medicalDisability.getChildTextTrim("DISABILITY_CLAIM_NUM")));
						if (APPROVED.equalsIgnoreCase(medicalDisability.getChildTextTrim("DISABILITY_APP_STATUS_CD"))) {
							t1057Cargo.setDisabilityAppStatusCd(PENDING);
						} else {
							t1057Cargo.setDisabilityAppStatusCd(getString(medicalDisability.getChildTextTrim("DISABILITY_APP_STATUS_CD")));
						}

						String actionTms = medicalDisability.getChildTextTrim("ACTION_DT");
						if (actionTms != null && actionTms.trim().length() > 0) {
							t1057Cargo.setActionDt(new Timestamp(sdf.parse(actionTms).getTime()));
						} else {
							t1057Cargo.setActionDt(highDate);
						}
						t1057Coll.setCargo(t1057Cargo);
					}
					if (t1057Coll.size() > 0)
						t1057Coll.insert();
				}
			}

		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1057AppInMedicalDisabilities method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1057AppInMedicalDisabilities method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1057AppInMedicalDisabilities method");
	}

	/**
	 * This method creates and inserts records into T1058_APP_NURSING_DETAIL
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1058AppNursingDetail(Element root) throws Exception {

		T1058AppNursingDetailCargo t1058Cargo = null;
		T1058AppNursingDetailCollection t1058Coll = null;

		Element nursingDetails = root.getChild("APP_NURSING_DETAILS");
		List nursingDetailList = (nursingDetails != null ? nursingDetails.getChildren("APP_NURSING_DETAIL") : null);
		try {
			if (nursingDetailList != null && nursingDetailList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1058AppNursingDetail method");
				String dataExist = null;
				t1058Coll = (conn == null) ? new T1058AppNursingDetailCollection() : new T1058AppNursingDetailCollection(conn);
				Iterator ite = nursingDetailList.iterator();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element nursingDetail = (Element) ite.next();
					Attribute nursingDetailAttr = (nursingDetail != null ? nursingDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (nursingDetailAttr != null)
						dataExist = nursingDetailAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1058Cargo = new T1058AppNursingDetailCargo();
						t1058Cargo.setAppNum(appNum);
						t1058Cargo.setFacilityName(getString(nursingDetail.getChildTextTrim("FACILITY_NAME")));
						t1058Cargo.setGuardianName(getString(nursingDetail.getChildTextTrim("GUARDIAN_NAME")));

						String admissionTms = nursingDetail.getChildTextTrim("ADMISSION_DT");
						if (admissionTms != null && admissionTms.trim().length() > 0) {
							t1058Cargo.setAdmissionDt(new Timestamp(sdf.parse(admissionTms).getTime()));
						} else {
							t1058Cargo.setAdmissionDt(highDate);
						}
						t1058Cargo.setCountyCd(getString(nursingDetail.getChildTextTrim("COUNTY_CD")));
						t1058Cargo.setGuardianSw(getCharForString(nursingDetail.getChildTextTrim("GUARDIAN_SW")));
						t1058Cargo.setGuardianExpensePaySw(getCharForString(nursingDetail.getChildTextTrim("GUARDIAN_EXPENSE_PAY_SW")));

						t1058Coll.setCargo(t1058Cargo);
					}
					if (t1058Coll.size() > 0)
						t1058Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1058AppNursingDetail method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1058AppNursingDetail method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1058AppNursingDetail method");
	}

	// 19. T1011_APP_IN_PREG
	/**
	 * This method creates and inserts records into TT1011_APP_IN_PREG staging
	 * table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1011AppInPreg(Element root) throws Exception {

		T1011AppInPregCargo t1011Cargo = null;
		T1011AppInPregCollection t1011Coll = null;

		Element pregDetails = root.getChild("APP_IN_PREGNANCY_DETAILS");
		List pregDetailList = (pregDetails != null ? pregDetails.getChildren("APP_IN_PREGNANCY") : null);
		try {
			if (pregDetailList != null && pregDetailList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1011AppInPreg method");
				String dataExist = null;
				t1011Coll = (conn == null) ? new T1011AppInPregCollection() : new T1011AppInPregCollection(conn);
				Iterator ite = pregDetailList.iterator();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element pregDetail = (Element) ite.next();
					Attribute pregDetailAttr = (pregDetail != null ? pregDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (pregDetailAttr != null)
						dataExist = pregDetailAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1011Cargo = new T1011AppInPregCargo();
						t1011Cargo.setAppNum(appNum);
						t1011Cargo.setIndvSeqNum(getLongForString(pregDetail.getChildTextTrim("INDV_SEQ_NUM")));
						t1011Cargo.setFetusCt(getLongForString(pregDetail.getChildTextTrim("FETUS_CT")));

						String pregDueTms = pregDetail.getChildTextTrim("PREG_DUE_DT");
						if (pregDueTms != null && pregDueTms.trim().length() > 0) {
							t1011Cargo.setPregDueDt(new Timestamp(sdf.parse(pregDueTms).getTime()));
						} else {
							t1011Cargo.setPregDueDt(highDate);
						}

						t1011Coll.setCargo(t1011Cargo);
					}
					if (t1011Coll.size() > 0)
						t1011Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1011AppInPreg method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1011AppInPreg method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1011AppInPreg method");
	}

	/**
	 * This method creates and inserts records into T1010_APP_ASSIST_INFO
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1010AppAssistInfo(Element root) throws Exception {

		T1010AppAssistInfoCargo t1010Cargo = null;
		T1010AppAssistInfoCollection t1010Coll = null;

		Element assistDetails = root.getChild("APP_ASSISTER_INFO_DETAILS");
		List assistDetailList = (assistDetails != null ? assistDetails.getChildren("APP_ASSISTER_INFO") : null);
		try {
			if (assistDetailList != null && assistDetailList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1010AppAssistInfo method");
				String dataExist = null;
				t1010Coll = (conn == null) ? new T1010AppAssistInfoCollection() : new T1010AppAssistInfoCollection(conn);
				Iterator ite = assistDetailList.iterator();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element assistDetail = (Element) ite.next();
					Attribute assistDetailAttr = (assistDetail != null ? assistDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (assistDetailAttr != null)
						dataExist = assistDetailAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1010Cargo = new T1010AppAssistInfoCargo();
						t1010Cargo.setAgcyNam(assistDetail.getChildTextTrim("AGCY_NAM"));
						t1010Cargo.setAgcyTyp(assistDetail.getChildTextTrim("AGCY_TYP"));
						t1010Cargo.setAgcyUrlAdr(assistDetail.getChildTextTrim("AGCY_URL_ADR"));
						t1010Cargo.setAppNum(appNum);
						t1010Cargo.setAssistInfoInd(assistDetail.getChildTextTrim("ASSIST_INFO_IND"));

						String dobStr = assistDetail.getChildTextTrim("BRTH_DT");
						if (dobStr != null && dobStr.trim().length() > 0) {
							t1010Cargo.setBrthDt(new Timestamp(sdf.parse(dobStr).getTime()));
						} else {
							t1010Cargo.setBrthDt(highDate);
						}

						t1010Cargo.setCityAdr(assistDetail.getChildTextTrim("CITY_ADR"));
						t1010Cargo.setEmailAdr(assistDetail.getChildTextTrim("EMAIL_ADR"));
						t1010Cargo.setFstNam(assistDetail.getChildTextTrim("FST_NAM"));
						t1010Cargo.setHelpLvlCd(assistDetail.getChildTextTrim("HELP_LVL_CD"));
						t1010Cargo.setLastNam(assistDetail.getChildTextTrim("LAST_NAM"));
						t1010Cargo.setLINE1_ADR(assistDetail.getChildTextTrim("LINE1_ADR"));
						t1010Cargo.setLINE2_ADR(assistDetail.getChildTextTrim("LINE2_ADR"));
						t1010Cargo.setMidInit(assistDetail.getChildTextTrim("MID_INIT"));
						t1010Cargo.setPhnNum(assistDetail.getChildTextTrim("PHN_NUM"));

						String prvdIdStr = assistDetail.getChildTextTrim("PRVD_ID");
						if (prvdIdStr != null && prvdIdStr.trim().length() > 0) {
							t1010Cargo.setProviderId(Long.valueOf(prvdIdStr));
						}

						t1010Cargo.setStAdr(assistDetail.getChildTextTrim("ST_ADR"));
						String updtDtStr = assistDetail.getChildTextTrim("UPDT_DT");
						if (updtDtStr != null && updtDtStr.trim().length() > 0) {
							t1010Cargo.setUpdtDt(new Timestamp(sdf.parse(updtDtStr).getTime()));
						}

						t1010Cargo.setUserTyp(assistDetail.getChildTextTrim("USER_TYP"));
						String wamsIdStr = assistDetail.getChildTextTrim("WAMS_INTL_USER_ID");
						if (wamsIdStr != null && wamsIdStr.trim().length() > 0) {
							t1010Cargo.setWamsIntlUserId(Long.valueOf(wamsIdStr));
						}
						t1010Cargo.setWamsLognId(assistDetail.getChildTextTrim("WAMS_LOGN_ID"));
						t1010Cargo.setZipAdr(assistDetail.getChildTextTrim("ZIP_ADR"));

						t1010Coll.setCargo(t1010Cargo);
					}
					if (t1010Coll.size() > 0)
						t1010Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1010AppAssistInfo method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1010AppAssistInfo method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1010AppAssistInfo method");
	}

	private T1001AppRqstCollection buildT1001AppRqst(Element root) throws Exception {
		T1001AppRqstCargo apprqstCargo = null;
		T1001AppRqstCollection apprqstColl = null;
		String appTms = null;
		String ssAppNum = null;
		String cntyNumStr = null;
		String disableRespSw = null;
		String langCd = null;
		String prirRecCpltInd = null;
		String assistInfoInd = null;
		String prvdId = null;
		SimpleDateFormat sdf = null;

		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1001AppRqst method");
			apprqstCargo = new T1001AppRqstCargo();
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			ssAppNum = root.getChildTextTrim(AppRegConstants.ABE_APP_NUM);
			if (dmWebserviceVO == null) {
				dmWebserviceVO = new DMElectronicDocumentSSVO();
			}
			dmWebserviceVO.setAppNum(appNum);
			String pid = root.getChildTextTrim(AppRegConstants.BRIDGES_PID);
			log(ILog.DEBUG, "PID : " + pid);
			String htmlPid = root.getChildTextTrim("HTML_P_ID");
			log(ILog.DEBUG, "HTML PID : " + htmlPid);
			if (pid != null && !pid.trim().equalsIgnoreCase("")) {
				dmWebserviceVO.setDocumentId(pid);
				dmWebserviceVO.setHtmlPid(htmlPid);
			} else {
				dmWebserviceVO.setDocumentId(appNum);
			}
			hpe_pid = root.getChildTextTrim("HPE_P_ID");
			hpe_html_pid = root.getChildTextTrim("HPE_HTML_P_ID");
			HPE_ONLY_IND = root.getChildTextTrim("HPE_ONLY_IND");
			HPE_APP_IND = root.getChildTextTrim("HPE_APP_IND");
			if (HPE_ONLY_IND != null && HPE_ONLY_IND.equals("N") && HPE_APP_IND != null && HPE_APP_IND.equals("Y")) {
				if (hpe_pid == null || hpe_pid.equals("")) {
					hpe_pid = appNum + "_HPE";
				}
			}
			apprqstCargo.setPId(pid);
			apprqstCargo.setHpePId(hpe_pid);
			apprqstCargo.setHtmlPId(htmlPid);
			apprqstCargo.setHpeHtmlPId(hpe_html_pid);
			apprqstCargo.setAppNum(appNum);
			apprqstCargo.setSsAppNum(ssAppNum);
			apprqstCargo.setAppStatCd(AppRegConstants.UN_ASSIGNED);
			apprqstCargo.setAppStatusInd('0');
			appTms = root.getChildText("APP_RCV_DT");
			log(ILog.DEBUG, "appTms value before conversion"+ appTms);
			if (appTms != null && appTms.trim().length() > 0) {
				sdf = new SimpleDateFormat("MM-dd-yyyy HH:mm:ss");
				apprqstCargo.setAppTms(new Timestamp(sdf.parse(appTms).getTime()));
				log(ILog.DEBUG, "appTms value after conversion"+ apprqstCargo.getAppTms());
			} else {
				apprqstCargo.setAppTms(new Timestamp(System.currentTimeMillis()));
			}
			
			this.appTms = new Date(apprqstCargo.getAppTms().getTime());
			

			apprqstCargo.setAppTyp(getCharForString(root.getChildText("APP_TYP")));
			apprqstCargo.setAssistorInfoInd(root.getChildTextTrim("ASSIST_INFO_IND"));
			cntyNumStr = root.getChildTextTrim("CNTY_NUM");
			if (cntyNumStr != null) {
				apprqstCargo.setCntyNum((Long.parseLong(cntyNumStr)));
			}
			disableRespSw = root.getChildText("DABL_STAT_SW");
			if ("A".equals(disableRespSw)) {
				disableRespSw = "Y";
			}
			apprqstCargo.setDablStatSw(getCharForString(disableRespSw));

			apprqstCargo.setHshlZipAdr(getString((root.getChildTextTrim("HSHL_ZIP_ADR"))));
			if (apprqstCargo.getHshlZipAdr() != null && apprqstCargo.getHshlZipAdr().length() > 9) {
				apprqstCargo.setHshlZipAdr(apprqstCargo.getHshlZipAdr().trim().substring(0, 9));
			}

			langCd = root.getChildText("LANG_CD");
			if (langCd != null && langCd.trim().equals("E")) {
				RefTableData rtd = ReferenceTableManager.getValueForDescription("LANGUAGE", "English");
				langCd = rtd.getRefrTableCode();
			} else if (langCd != null && langCd.trim().equals("S")) {
				RefTableData rtd = ReferenceTableManager.getValueForDescription("LANGUAGE", "Spanish");
				langCd = rtd.getRefrTableCode();
			}
			apprqstCargo.setLangCd(langCd);

			apprqstCargo.setOfcNum(getLongForString(root.getChildTextTrim("AFB_OFFICE_NUM")));


			if (InRcvDlyMIChildReferralConstants.MC_APPLICATION_TYPE_CD_PLAN_FIRST == mcProgramTypeCD) {
				apprqstCargo.setOfcNum(DHS_PLAN_FIRST_OFFICE);
			}

			if (dmWebserviceVO != null) {
				dmWebserviceVO.setDestinationOfficeNum(new Long(apprqstCargo.getOfcNum()));
				dmWebserviceVO.setScannedOfficeNum(new Long(apprqstCargo.getOfcNum()));
			}

			apprqstCargo.setExpeditedFapSw('N');
			prirRecCpltInd = root.getChildTextTrim("PRIR_SRVC_ELG_SW");
			apprqstCargo.setPrirSrvcElgSw(getCharForString(prirRecCpltInd));
			prvdId = root.getChildTextTrim("PROVIDER_ID");
			if (prvdId != null && !prvdId.equals(""))
				apprqstCargo.setProviderId(Long.valueOf(prvdId));
			miChildAppNum = root.getChildTextTrim("MI_CHILD_APP_NUM");
			if (miChildAppNum != null && miChildAppNum.length() > 0) {
				miChildApp = true;
				apprqstCargo.setMcAppNum(miChildAppNum);

				if (getCharForString(root.getChildTextTrim("CASE_PRES_ELIG_SW")) == 'Y') {
					isPresumptive = true;
				}

			}
			apprqstCargo.setAppCnfdSw(' ');
			apprqstCargo.setAppRcvDt(apprqstCargo.getAppTms());
			if(AppealsUtil.isDateAfterFivePm(apprqstCargo.getAppRcvDt()) || !AppealsUtil.isValidWorkDay(apprqstCargo.getAppRcvDt())){
				apprqstCargo.setAppRcvDt(new Timestamp(AppealsUtil.findNextValidWorkDay(apprqstCargo.getAppTms()).getTime()));	
			}
			dmWebserviceVO.setReceivedDate(apprqstCargo.getAppRcvDt().toString());
			dmWebserviceVO.setScanDate(AppealsUtil.getCurrentDateStringForDB());
			
			if (HPE_APP_IND != null && HPE_APP_IND.equals("Y")) {
				apprqstCargo.setAppMode(AppRegConstants.HPE_APP_MODE);
			} else {
				apprqstCargo.setAppMode(AppRegConstants.SS_APP_MODE);
			}

			if (conn == null) {
				apprqstColl = new T1001AppRqstCollection();
			} else {
				apprqstColl = new T1001AppRqstCollection(conn);
			}
			apprqstColl.add(apprqstCargo);
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1001AppRqst method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1001AppRqst method : " + e.getMessage(),e);
		}
		return apprqstColl;
	}

	/**
	 * This method created records in T1001AppRqst staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return T1001AppRqstCollection
	 * @throws Exception
	 */
	private T1001AppRqstCollection buildT1001AppRqstForMpe(Element root) throws Exception {
		T1001AppRqstCargo apprqstCargo = null;
		T1001AppRqstCollection apprqstColl = null;
		String appTms = null;
		String appNum = null;
		String cntyNumStr = null;
		String zipNumStr = null;
		String langCd = null;
		SimpleDateFormat sdf = null;
		try {
			log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1001AppRqstForMpe method");
			apprqstCargo = new T1001AppRqstCargo();
			appNum = root.getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM);
			if (dmWebserviceVO == null) {
				dmWebserviceVO = new DMElectronicDocumentSSVO();
			}
			dmWebserviceVO.setAppNum(appNum);
			String pid = root.getChildTextTrim(AppRegConstants.BRIDGES_PID);
			log(ILog.DEBUG, "PID : " + pid);
			String htmlPid = root.getChildTextTrim("HTML_P_ID");
			log(ILog.DEBUG, "HTML PID : " + htmlPid);
			if (pid != null && !pid.trim().equalsIgnoreCase("")) {
				dmWebserviceVO.setDocumentId(pid);
				dmWebserviceVO.setHtmlPid(htmlPid);
			} else {
				dmWebserviceVO.setDocumentId(appNum);
			}
			apprqstCargo.setPId(pid);
			apprqstCargo.setHtmlPId(htmlPid);
			apprqstCargo.setAppNum(appNum);
			apprqstCargo.setAppStatCd(AppRegConstants.UN_ASSIGNED);
			apprqstCargo.setAppStatusInd('0');
			Element appContact = root.getChild("APPLICANT_INFO");
			if (appContact != null && appContact.getChildren().size() > 0) {
				cntyNumStr = appContact.getChildTextTrim("ADDR_COUNTYNUM");
				if (cntyNumStr != null) {
					apprqstCargo.setCntyNum((Long.parseLong(cntyNumStr)));
				}
				zipNumStr = appContact.getChildTextTrim("ADDR_ZIP");
				if (zipNumStr != null) {
					apprqstCargo.setHshlZipAdr(zipNumStr);
				} else {
					apprqstCargo.setHshlZipAdr(" ");
				}
				langCd = appContact.getChildTextTrim("LANGUAGE_PREFERENCE");
				apprqstCargo.setLangCd(langCd);
			}
			apprqstCargo.setAppTms(new Timestamp(System.currentTimeMillis()));
			apprqstCargo.setAppRcvDt(apprqstCargo.getAppTms());

			if (dmWebserviceVO != null) {
				dmWebserviceVO.setReceivedDate(apprqstCargo.getAppRcvDt().toString()); 
				dmWebserviceVO.setScanDate(dmWebserviceVO.getReceivedDate());
			}

			apprqstCargo.setAppTyp(getCharForString("M"));

			apprqstCargo.setDablStatSw('N');

			if (apprqstCargo.getHshlZipAdr() != null && apprqstCargo.getHshlZipAdr().length() > 9) {
				apprqstCargo.setHshlZipAdr(apprqstCargo.getHshlZipAdr().trim().substring(0, 9));
			}

			apprqstCargo.setOfcNum(getLongForString(root.getChildTextTrim("AFB_OFFICE_NUM")));


			if (dmWebserviceVO != null) {
				dmWebserviceVO.setDestinationOfficeNum(new Long(apprqstCargo.getOfcNum()));
				dmWebserviceVO.setScannedOfficeNum(new Long(apprqstCargo.getOfcNum()));
			}
			apprqstCargo.setPrirSrvcElgSw('N');
			apprqstCargo.setAppCnfdSw(' ');
			apprqstCargo.setAppMode(AppRegConstants.SS_APP_MODE);

			if (conn == null) {
				apprqstColl = new T1001AppRqstCollection();
			} else {
				apprqstColl = new T1001AppRqstCollection(conn);
			}
			apprqstColl.add(apprqstCargo);
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1001AppRqstForMpe method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1001AppRqstForMpe method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1001AppRqstForMpe method");
		return apprqstColl;
	}