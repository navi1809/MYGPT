class Parent {
static void print() {
System.out.println("Parent");
}
}
class Child extends Parent {
static void print() {
System.out.println("Child");
}
public static void main(String[] args) {
Parent obj = new Child();
obj.print();
}
}

Answered correctly



public class Test5 {
public static void main(String[] args) {
int i = 0;
i = i++ + ++i;
System.out.println(i);
}
}

Answered correctly

public class MapTest {
public static void main(String[] args) {
Map<String, String> map = new HashMap<>();
map.put(null, "One");
map.put(null, "Two");
System.out.println(map.size());
System.out.println(map.get(null));
}
}

Answered correctly

public class StringTest {
public static void main(String[] args) {
String s = "abc";
s.concat("def");
System.out.println(s);
}
}

Answered correctly

@RestController
public class HelloController {

@GetMapping("/hello")
public String hello() {
return null;
}
}


Theriotically correct but worngly mentioned http status code


What happens if `@Entity` class has no `@Id`?

@Entity
public class Product {
private String name;
}


Not answered

Whatâ€™s wrong with this repository?

public interface UserRepo extends JpaRepository<User, Long> {
User findByEmail(String email);
List<User> findByAge(int age);
void deleteByName(String name);
}


Not answered

@Entity
public class Book {
@ManyToOne(fetch = FetchType.LAZY)
private Author author;
}



@GetMapping("/book/{id}")
public Book getBook(@PathVariable Long id) {
return bookRepository.findById(id).get();
}

Answered correctly


Q: What happens when you call `/book/1`?


@Transactional
public void updateUserEmail(Long id) {
User u = userRepository.findById(id).get();
u.setEmail("new@example.com");
}

Answered correctly

 Find duplicates in a column `email` of `users` table:
sql
SELECT email, COUNT(*)
FROM users
GROUP BY email
HAVING COUNT(*) > 1;

Answered correctly 


