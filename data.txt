ackage gov.illinois.ies.business.rules.st.appreg;

import gov.illinois.framework.factories.FwServiceFactory;
import gov.illinois.framework.management.context.IContexts;
import gov.illinois.framework.management.logging.ILog;
import gov.illinois.framework.management.util.FwCalendar;
import gov.illinois.framework.management.util.FwConstants;
import gov.illinois.framework.management.util.FwDate;
import gov.illinois.framework.management.util.PMDRules;
import gov.illinois.fw.business.exceptions.ApplicationException;
import gov.illinois.fw.business.exceptions.FrameworkException;
import gov.illinois.fw.business.exceptions.SelfServiceApplicationException;
import gov.illinois.fw.business.rules.AbstractBO;
import gov.illinois.fw.management.referencetables.RefTableData;
import gov.illinois.fw.management.referencetables.ReferenceTableManager;
import gov.illinois.fw.management.util.StringUtils;
import gov.illinois.fw.persistence.data.AbstractType0Cargo;
import gov.illinois.ies.business.broker.SelfServiceBrokerConstants;
import gov.illinois.ies.business.entities.application.ArAppProgramCargo;
import gov.illinois.ies.business.entities.application.ArAppProgramCollection;
import gov.illinois.ies.business.entities.application.ArApplicationForAidCargo;
import gov.illinois.ies.business.entities.application.ArApplicationForAidCollection;
import gov.illinois.ies.business.entities.application.ArHpeAssociationCargo;
import gov.illinois.ies.business.entities.application.ArHpeAssociationCollection;
import gov.illinois.ies.business.entities.application.ArHpeEligDetailCargo;
import gov.illinois.ies.business.entities.application.ArHpeEligDetailCollection;
import gov.illinois.ies.business.entities.application.ArHpeEligDetailIndvCargo;
import gov.illinois.ies.business.entities.application.ArHpeEligDetailIndvCollection;
import gov.illinois.ies.business.entities.electronicdocument.DmDocGroupCargo;
import gov.illinois.ies.business.entities.individual.DcIndvCargo;
import gov.illinois.ies.business.entities.individual.DcIndvCollection;
import gov.illinois.ies.business.entities.interfaces.InMcRcvIndvCargo;
import gov.illinois.ies.business.entities.interfaces.InMcRcvIndvCollection;
import gov.illinois.ies.business.entities.selfservice.*;
import gov.illinois.ies.business.rules.al.ALSOPUtil;
import gov.illinois.ies.business.rules.am.AppealsUtil;
import gov.illinois.ies.business.rules.ar.util.ARConstants;
import gov.illinois.ies.business.rules.dm.DMApplicationStatusVO;
import gov.illinois.ies.business.rules.dm.DMElectronicDocumentSSVO;
import gov.illinois.ies.business.rules.dm.DMElectronicDocumentWSBO;
import gov.illinois.ies.business.rules.dm.util.DMConstants;
import gov.illinois.ies.business.rules.dm.util.DMFactory;
import gov.illinois.ies.business.rules.dm.util.DMWebserviceClient;
import gov.illinois.ies.business.rules.in.INConstants;
import gov.illinois.ies.business.rules.in.InRcvDlyMIChildReferralConstants;
import gov.illinois.ies.business.rules.st.StSerServiceMapping;
import gov.illinois.ies.business.rules.utility.RMCUtility;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.jdom.Attribute;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.input.SAXBuilder;

/**
 * @author ChakalamB
 * 
 *         This BO has the business logic for extracting data from XML and load
 *         the staging tables
 */
public class SelfServiceAppRegBO extends AbstractBO implements Serializable {
	private Timestamp highDate = null;
	private String appNum = null;
	private Date appTms = null;
	private Timestamp appFileDt = null;
	private int beginMonth = -1;
	private Connection conn = null;
	private boolean realPropertySw = false;
	private boolean isSerCase = false;
	private boolean deliverableFuel = false;
	boolean isExpidtedFAP = false;
	StringBuffer errorMessages;
	private boolean miChildApp = false;
	private boolean isPregnantInCase = false;
	private boolean isPresumptive = false;
	private int hohCount = 0;
	private static final String DATA_YES = "Y";
	private static final String DATA_NO = "N";
	private static final String NF = "NF";
	private String maShortFormCd = null;
	private static final char C_YES = 'Y';
	private static final char C_NO = 'N';
	private static final String APPROVED = "AP";
	private static final String PENDING = "PE";
	private static final String INDV_SEQ_NUM = "1";
	private static final int SUCCESSFUL = 1;
	public static final String EMPTY_STRING = "";
	private Element appElement = null;
	String miChildAppNum = null;
	private DMElectronicDocumentSSVO dmWebserviceVO = null;

	public SelfServiceAppRegBO() {
		highDate = new Timestamp((new Date(2999, 12, 31)).getTime());
	}

	public SelfServiceAppRegBO(Connection conn) {
		this.conn = conn;
		highDate = new Timestamp((new Date(2999, 12, 31)).getTime());
	}

	private char mcProgramTypeCD;

	/**
	 * @return Returns the mcProgramTypeCD.
	 */
	public char getMcProgramTypeCD() {
		return mcProgramTypeCD;
	}

	/**
	 * @param mcProgramTypeCD
	 *            The mcProgramTypeCD to set.
	 */
	public void setMcProgramTypeCD(char mcProgramTypeCD) {
		this.mcProgramTypeCD = mcProgramTypeCD;
	}

	private String MA_RQST_SW = "MA_RQST_SW";

	private long DHS_PLAN_FIRST_OFFICE = 31325;

	private String hpe_pid = null;
	private String hpe_html_pid = null;
	private String HPE_ONLY_IND = null;
	private String HPE_APP_IND = null;

	/**
	 * The <code>createApplication</code> invokes methods to parse the XML
	 * String and insert into respective staging tables.
	 * 
	 * @param appXMLStr
	 *            - Contains the SS application info in XML String
	 * @return String - Indicating success or failure.
	 */
	public String createApplication(String appXMLStr) throws SelfServiceApplicationException, Exception {

		StringBuffer resultXML = new StringBuffer("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
		Document xmlDoc = null;
		try {
			log(ILog.DEBUG, "Initialising EDMWebserviceVO...");
			dmWebserviceVO = new DMElectronicDocumentSSVO();
			Map speciallInd = new HashMap();
			isExpidtedFAP = false;
			hohCount = 0;
			log(ILog.DEBUG, "START PROCESSING THE XML from WebSercvice");

			String currentAppNum = "";

			errorMessages = new StringBuffer("");

			xmlDoc = parseXML(appXMLStr);
			DMElectronicDocumentWSBO dmBO = new DMElectronicDocumentWSBO();

			T1001AppRqstCargo appRqstCargo = new T1001AppRqstCargo();
			appRqstCargo.setAppNum(xmlDoc.getRootElement().getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM));
			T1001AppRqstCollection appRqstColl = new T1001AppRqstCollection();
			appRqstColl.setCargo(appRqstCargo);
			T1001AppRqstCargo[] adResults = (T1001AppRqstCargo[]) appRqstColl.select("findByAppNum");
			if (adResults != null && adResults.length > 0) {
				resultXML.append(SelfServiceBrokerConstants.SUCCESS);
				return resultXML.toString();
			}

			T1001AppRqstCollection appRqstCollection = null;
			T1053AppProgramCollection appProgramCollection = null;
			T3004AppProgramSplIndCollection spColl = null;
			T3001AppSerRqstCollection serColl = null;
			T1003AppPrirSrvCollection appPrirSrvColl = null;
			String isAABD = xmlDoc.getRootElement().getChildTextTrim(AppRegConstants.AABD);
			appRqstCollection = buildT1001AppRqst(xmlDoc.getRootElement());
			T1002AppDtlCollection appDtlColl = buildT1002AppDtl(xmlDoc.getRootElement());
			buildT1060HpeApplication(xmlDoc.getRootElement());
			Timestamp sopDueDate = null;
			Map sopCriteria = new HashMap();
			boolean fap = false;
			boolean ser = false;
			boolean cash = false;
			boolean ma = false;
			boolean cdc = false;
			boolean hpeApp = false;
			boolean mc = false;
			boolean fpp = false;

			String spInd = null;
			String progCd = null;
			T3004AppProgramSplIndCargo cargo = null;

			Element hpeInd = xmlDoc.getRootElement().getChild("HPE_APP_IND");
			String hpeIndicatorSw = hpeInd.getText().trim();

			if (hpeIndicatorSw.equalsIgnoreCase("Y")) {
				hpeApp = true;
			}
			//
			try {
				if (appRqstCollection != null && appRqstCollection.size() > 0) {

					Timestamp applicationDate = appRqstCollection.getResults(0).getAppRcvDt();
					currentAppNum = appRqstCollection.getResults(0).getAppNum();
					String langCd = appRqstCollection.getResults(0).getLangCd();
					if(StringUtils.isNotEmpty(langCd) && !("0".equalsIgnoreCase(langCd))){
					String langSI = dmBO.getLangSPD(langCd);
						List<String> languageSplInd = new ArrayList<String>();
						languageSplInd.add(langSI);
						speciallInd.put(langSI, languageSplInd);
					}
					sopCriteria.put(SelfServiceBrokerConstants.APPLICATION_DATE, applicationDate);
					dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);

					if (appDtlColl != null && appDtlColl.size() > 0) {
						if (appDtlColl.getResults(0).getFsRqstSw() == 'Y') {
							fap = true;
						}
						if (appDtlColl.getResults(0).getSeRqstSw() == 'Y') {
							ser = true;
						}
						if (appDtlColl.getResults(0).getCashRqstSw() == 'Y') {
							cash = true;
						}
						if (appDtlColl.getResults(0).getMaRqstSw() == 'Y') {
							ma = true;
						}
						if (appDtlColl.getResults(0).getFpwRqstSw() == 'Y') {
							cdc = true;
						}
						if (appDtlColl.getResults(0).getMcRqstSw() == 'Y') {
							mc = true;
						}
						if (appDtlColl.getResults(0).getFppRqstSw() == 'Y') {
							fpp = true;
						}


						if (fap) {
							appPrirSrvColl = buildT1003AppPrirSrv(xmlDoc.getRootElement());
							appRqstCollection.getResults(0).setExpeditedFapSw(isExpidtedFAP ? 'Y' : 'N');
							sopCriteria.put("FS_SW", "Y");
							sopCriteria.put("FS_EXP_SW", String.valueOf(appRqstCollection.getResults(0).getExpeditedFapSw()));
							dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);

						}
						if (ser) {
							serColl = buildSerAppRequest(xmlDoc.getRootElement());
							sopCriteria.put("SE_SW", "Y");
							dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);

						}
						if (miChildApp) {
							isPregnantInCase = isPregnantExists(xmlDoc.getRootElement());
							dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD);
						}
						if (cash) {
							sopCriteria.put("CASH_SW", "Y");
						}
						if (ma) {
							sopCriteria.put("MA_SW", "Y");
						}
						if (mc) {
							sopCriteria.put("MC_SW", "Y");
						}
						if (fpp) {
							sopCriteria.put("FPP_SW", "Y");
						}
						sopDueDate = computeSopDueDate(sopCriteria);
						if (sopDueDate != null) {
							dmWebserviceVO.setDueDate(sopDueDate.toString());
						}

						appRqstCollection.getResults(0).setSopDueDt(sopDueDate);
					}
					spColl = (conn != null) ? new T3004AppProgramSplIndCollection(conn) : new T3004AppProgramSplIndCollection();

					if (fap) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);

						ArrayList fapSplInd = new ArrayList();
						cargo.setProgCd("FS");
						if (appRqstCollection.getResults(0).getExpeditedFapSw() == 'Y') {
							cargo.setSplIndCd("EX");
							fapSplInd.add("EX");
						} else {
							cargo.setSplIndCd("NE");
							fapSplInd.add("NE");
						}
						spColl.add(cargo);
						if (fapSplInd != null) {
							speciallInd.put("FS", fapSplInd);
						}
					}
					if (ser) {
						ArrayList serSplInd = new ArrayList();
						int size = serColl.size();
						for (int i = 0; i < size; i++) {
							cargo = new T3004AppProgramSplIndCargo();
							cargo.setAppNum(currentAppNum);
							dmWebserviceVO.setAppNum(currentAppNum);
							dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);

							cargo.setProgCd("SE");
							cargo.setSplIndCd(serColl.getResults(i).getServiceCd());
							serSplInd.add(serColl.getResults(i).getServiceCd());
							spColl.add(cargo);
						}
						if (serSplInd != null) {
							speciallInd.put("SE", serSplInd);
						}
					}
					if (cash) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);
						cargo.setProgCd("TF");
						cargo.setSplIndCd("TF");
						ArrayList cashSplInd = new ArrayList();
						cashSplInd.add("TF");
						if (cashSplInd != null) {
							speciallInd.put("TF", cashSplInd);
						}
						spColl.add(cargo);
					}
					if (cdc) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);
						cargo.setProgCd("CD");
						cargo.setSplIndCd("CD");
						ArrayList cdcSplInd = new ArrayList();
						cdcSplInd.add("CD");
						if (cdcSplInd != null) {
							speciallInd.put("CD", cdcSplInd);
						}
						spColl.add(cargo);
					}
					if (ma) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);
						ArrayList maSplInd = new ArrayList();
						cargo.setProgCd("MA");
						cargo.setSplIndCd("MA");

						if (appDtlColl.getResults(0).getMaShortFormCd().equals("MA")) {
							cargo.setSplIndCd("MA");
						} else if (appDtlColl.getResults(0).getMaShortFormCd().equals("PF")) {
							cargo.setSplIndCd("PF");
						} else if (appDtlColl.getResults(0).getMaShortFormCd().equals("TF")) {
							cargo.setSplIndCd("TF");
						} else if (appDtlColl.getResults(0).getMaShortFormCd().equals("HK")) {
							cargo.setSplIndCd("HK");
						}
						spColl.add(cargo);
						maSplInd.add(cargo.getSplIndCd());
						if (maSplInd != null) {
							speciallInd.put("MA", maSplInd);
						}
					}
					if (fpp ) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);
						ArrayList maSplInd = new ArrayList();
						cargo.setProgCd("FP");
						cargo.setSplIndCd("FPA");
						spColl.add(cargo);
						maSplInd.add(cargo.getSplIndCd());
						if (maSplInd != null) {
							speciallInd.put("FPA", maSplInd);
						}
					} // ILIES-289161 
					if (mc) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						dmWebserviceVO.setSourceTypeCode(DMConstants.SELFSERVICE);
						ArrayList maSplInd = new ArrayList();
						cargo.setProgCd("MC");
						cargo.setSplIndCd("MSP");
						spColl.add(cargo);
						maSplInd.add(cargo.getSplIndCd());
						if (maSplInd != null) {
							speciallInd.put("MSP", maSplInd);
						}
					}
					// Begin MI Child Changes
					if (miChildApp) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						dmWebserviceVO.setAppNum(currentAppNum);
						// Set Default to MICHILD_PLANFIRST
						// TODO: Confirm this
						dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD_PLANFIRST);
						ArrayList miChildSplInd = new ArrayList();

						cargo.setProgCd("MA");
						String splInd = null;

						if (InRcvDlyMIChildReferralConstants.MC_APPLICATION_TYPE_CD_HEALTY_KIDS == mcProgramTypeCD) {
							if (isPresumptive && isPregnantInCase) {
								// cargo.setSplIndCd("PP");
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_PRESUMPTIVE_PREGNANT;
								// If Pregnant- Presumptive, notify DM
								// Webservice source as Healthy Kids
								dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD_HEALTHY);

							} else if (isPresumptive) {
								// cargo.setSplIndCd("PM");
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_PRESUMPTIVE;
								// If Presumptive, notify DM Webservice source
								// as Healthy Kids
								dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD_HEALTHY);

							} else if (isPregnantInCase) {
								// cargo.setSplIndCd("PR");
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_PREGNANT;
								// If Pregnant, notify DM Webservice source as
								// Healthy Kids
								dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD_HEALTHY);

							} else {
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_OTHER_HK;
								// If Other- HK, notify DM Webservice source as
								// Healthy Kids
								dmWebserviceVO.setSourceTypeCode(DMConstants.MICHILD_HEALTHY);

							}
						} else if (InRcvDlyMIChildReferralConstants.MC_APPLICATION_TYPE_CD_PLAN_FIRST == mcProgramTypeCD) {

							InMcRcvIndvCollection mcIndvCollection = new InMcRcvIndvCollection();

							InMcRcvIndvCargo inMcRcvIndvCargo = new InMcRcvIndvCargo();

							inMcRcvIndvCargo.setMcApplicationNum(Long.parseLong(miChildAppNum));

							InMcRcvIndvCargo[] mcIndvResults = null;

							mcIndvCollection.setCargo(inMcRcvIndvCargo);

							mcIndvResults = (InMcRcvIndvCargo[]) mcIndvCollection.select("findDistinctMIChildplanfirstIndividuals");

							if (mcIndvResults.length == 1) {
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_SINGLE;
							} else if (mcIndvResults.length > 1) {
								splInd = InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_MUlTIPLE;
							}
						} else {
							log(ILog.ERROR, "Invalid mcProgramTypeCD in  SelfServiceAppRegBO.createApplication.");
							throw new Exception("Invalid mcProgramTypeCD in  SelfServiceAppRegBO.createApplication.");
						}

						cargo.setSplIndCd(splInd);
						// Set program code and spl Indicator to EDM webservice
						miChildSplInd.add(splInd);
						if (miChildSplInd != null) {
							speciallInd.put("MA", miChildSplInd);
						}
						spColl.add(cargo);
					}

					if (hpeApp) {
						cargo = new T3004AppProgramSplIndCargo();
						cargo.setAppNum(currentAppNum);
						cargo.setProgCd("HPE");
						cargo.setSplIndCd("HPE");

						ArrayList hpeSplInd = new ArrayList();
						hpeSplInd.add("HPE");
						speciallInd.put("HPE", hpeSplInd);

						spColl.add(cargo);
					}
					// Added by arurajan for AABD special indicator
					// This is a super value, hence if this indicator is present
					// all other indicators identified is void.
					// If the value for this indicator is N then other
					// indicators are applicable
					if ("Y".equals(isAABD)) {
						List aabdSpecialIndicator = new ArrayList();
						aabdSpecialIndicator.add(InRcvDlyMIChildReferralConstants.SS_PROGRAM_SPLIND_AABD);
						speciallInd.put("AA", aabdSpecialIndicator);
					}

					// added for ILIES - 148992
					char emerMedNonCit = '\u0000';
					Element indivsNode = xmlDoc.getRootElement().getChild(AppRegConstants.INDIVIDUALS);
					List indivList = indivsNode.getChildren(AppRegConstants.ELEMENT_INDIVIDUAL);
					List<Character> emerMedNonCitList = new ArrayList<Character>();
					Iterator indivItr = indivList.iterator();
					while (indivItr.hasNext()) {
						Element indivNode = (Element) indivItr.next();
						emerMedNonCit = getCharForString(indivNode.getChildText("EMER_MED_NON_CIT"));
						if (emerMedNonCitList != null && emerMedNonCitList.size() == 0) {
							if (emerMedNonCit == 'Y') {
								cargo = new T3004AppProgramSplIndCargo();
								cargo.setAppNum(currentAppNum);
								cargo.setProgCd("MA");
								cargo.setSplIndCd("EM");

								ArrayList emerMedSplInd = new ArrayList();
								emerMedSplInd.add("EM");
								speciallInd.put("EM", emerMedSplInd);
								emerMedNonCitList.add(emerMedNonCit);

								spColl.add(cargo);
							}
						}
					}
					dmWebserviceVO.setSplIndicator(speciallInd);
				}
				// END Child Changes

				appProgramCollection = builtT1053AppProgram(appDtlColl);

				if (appRqstCollection != null && appRqstCollection.size() > 0) {
					appRqstCollection.update(appRqstCollection);
				}
				if (appDtlColl != null && appDtlColl.size() > 0) {
					appDtlColl.insert();
				}
				if (appProgramCollection != null && appProgramCollection.size() > 0) {
					appProgramCollection.insert();
				}
				if (appPrirSrvColl != null && appPrirSrvColl.size() > 0)
					appPrirSrvColl.insert();
				if (spColl != null && spColl.size() > 0) {
					spColl.insert();
				}
				if (serColl != null && serColl.size() > 0)
					serColl.insert();
				buildAllAppIndv(xmlDoc.getRootElement());
			}

			catch (Exception e) {
				log(ILog.ERROR, "Error while populating one/more of the core staging tables : " + e.getMessage(),e);
				throw new Exception("Error while populating one/more of the core staging tables" + e.getMessage(), e);
			}

			try {
				buildT2040AppAuthRep(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T2040AppAuthRep :: " + e.getMessage(),e);
				errorMessages.append("|T2040AppAuthRep:" + e.getMessage());
			}

			try {
				buildT1031AppMailAdr(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1031AppMailAdr :: " + e.getMessage(),e);
				if (!miChildApp) {
					errorMessages.append("|T1031AppMailAdr:" + e.getMessage());
				}
			}

			if (serColl != null && serColl.size() > 0) {
				try {
					buildSerProviders(xmlDoc.getRootElement());
				} catch (Exception e) {
					log(ILog.ERROR, "Exception occured while Inserting a record in T3002AppSerProviders :: " + e.getMessage(),e);
					errorMessages.append("|T3002AppSerProviders:" + e.getMessage());
				}
				try {
					buildSerPayments(xmlDoc.getRootElement());
				} catch (Exception e) {
					log(ILog.ERROR, "Exception occured while Inserting a record in T3003AppSerPymtHist :: " + e.getMessage(),e);
					errorMessages.append("|T3003AppSerPymtHist:" + e.getMessage());
				}

			}

			try {
				buildT1035AppInMedI(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1035AppInMedI :: " + e.getMessage(),e);
				errorMessages.append("|T1035AppInMedI:" + e.getMessage());
			}

			try {
				buildT1054AppInMedDetails(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1054AppInMedDetails :: " + e.getMessage(),e);
				errorMessages.append("|T1054AppInMedDetails:" + e.getMessage());
			}
			
			try {
				buildT1019AppInMedE(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1019AppInMedE :: " + e.getMessage(),e);
				errorMessages.append("|T1019AppInMedE:" + e.getMessage());
			}

			try {
				buildT3005AppSerBurialDetails(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T3005AppSerBurialDetails :: " + e.getMessage(),e);
				errorMessages.append("|T3005AppSerBurialDetails:" + e.getMessage());
			}

			try {
				buildT3006AppSerDeathBnfts(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T3006AppSerDeathBnfts :: " + e.getMessage(),e);
				errorMessages.append("|T3006AppSerDeathBnfts:" + e.getMessage());
			}

			try {
				buildT3007AppCdcProvider(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T3007AppCdcProvider :: " + e.getMessage(),e);
				errorMessages.append("|T3007AppCdcProvider:" + e.getMessage());
			}

			try {
				buildT1040AppInLqdAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1040AppInLqdAset :: " + e.getMessage(),e);
				errorMessages.append("|T1040AppInLqdAset:" + e.getMessage());
			}

			try {
				buildT1041AppInVehAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1041AppInVehAset :: " + e.getMessage(),e);
				errorMessages.append("|T1041AppInVehAset:" + e.getMessage());
			}

			try {
				buildT1042AppInRPropAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1042AppInRPropAset :: " + e.getMessage(),e);
				errorMessages.append("|T1042AppInRPropAset:" + e.getMessage());
			}

			try {
				buildT1043AppInPPropAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1043AppInPPropAset :: " + e.getMessage(),e);
				errorMessages.append("|T1043AppInPPropAset:" + e.getMessage());
			}

			try {
				buildT1044AppInBuryAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1044AppInBuryAset :: " + e.getMessage(),e);
				errorMessages.append("|T1044AppInBuryAset:" + e.getMessage());
			}

			try {
				buildT1045AppInLInsAset(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1045AppInLInsAset :: " + e.getMessage(),e);
				errorMessages.append("|T1045AppInLInsAset:" + e.getMessage());
			}

			try {
				buildT1061AppInAdditionalAsstDet(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1061AppInAAD :: " + e.getMessage(),e);
				errorMessages.append("|T1061AppInAAD:" + e.getMessage());
			}

			try {
				buildT1050AppInAdditionalJointOwner(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in T1050AppInAJO :: " + e.getMessage(),e);
				errorMessages.append("|T1050AppInAJO:" + e.getMessage());
			}

			try {
				buildT1056AppNursingAddress(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT1056AppNursingAddresses :: " + e.getMessage(), e);
				errorMessages.append("|buildT1056AppNursingAddresses:" + e.getMessage());
			}

			try {
				buildT1057AppInMedicalDisabilities(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT1057AppInMedicalDisabilities :: " + e.getMessage(), e);
				errorMessages.append("|buildT1057AppInMedicalDisabilities:" + e.getMessage());
			}

			try {
				buildT1058AppNursingDetail(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT105XAppNursingDetails :: " + e.getMessage(), e);
				errorMessages.append("|buildT105XAppNursingDetails:" + e.getMessage());
			}

			try {
				buildT1011AppInPreg(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT1011AppInPreg :: " + e.getMessage(),e);
				errorMessages.append("|buildT1011AppInPreg:" + e.getMessage());
			}

			try {
				buildT1010AppAssistInfo(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception occured while Inserting a record in buildT1010AppAssistInfo :: " + e.getMessage(),e);
				errorMessages.append("|buildT1010AppAssistInfo:" + e.getMessage());
			}

			try {
				buildT1024AppInUei(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception in buildT1024AppInUei: " + e.getMessage(),e);
				errorMessages.append("Exception in buildT1024AppInUei: " + e.getMessage());
			}

			try {
				buildT1028AppInMedcr(xmlDoc.getRootElement());
			} catch (Exception e) {
				log(ILog.ERROR, "Exception in buildT1028AppInMedcr: " + e.getMessage(),e);
				errorMessages.append("Exception in buildT1028AppInMedcr: " + e.getMessage());
			}
			resultXML.append(SelfServiceBrokerConstants.SUCCESS);
			log(ILog.INFO, "Start reading AutoReg Reference Table data");
			RefTableData rtd = ReferenceTableManager.getValueForDescription("AUTOREGPROCESS", "AUTO_REG_SW");
			log(ILog.INFO, "AutoReg Reference Table switch  : " + rtd);
			String autoRegSw = "";
			if (rtd != null) {
				autoRegSw = rtd.getRefrTableCode();
			}
			if (autoRegSw != null && "Y".equalsIgnoreCase(autoRegSw)) {
				log(ILog.INFO, "calling AutoReg preComplenessCheck() - AppNum --" + dmWebserviceVO.getAppNum());
				AutoRegistrationBO autoRegBO = new AutoRegistrationBO();
				autoRegBO.preComplenessCheck(dmWebserviceVO.getAppNum());
			} else {
				DMFactory dmFactory = new DMFactory();
				DMWebserviceClient edmWebserviceClient = new DMWebserviceClient();
				String message = edmWebserviceClient.callWebservice(dmFactory.createGroupForApplication(dmWebserviceVO));

				log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.DEBUG, "SelfServiceAppRegBO::createApplication done calling EDM Webservice with result :" + message);
				if (!DMConstants.SUCCESS_STATUS_MSG.equalsIgnoreCase(message)) {
					log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.ERROR, "Exception in SelfServiceAppRegBO::createApplication  EDM Webservice :" + message);
					throw new Exception(message);
				}
				if (!("".equals(errorMessages.toString()))) {
					log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.ERROR, "SelfServiceAppRegBO::createApplication :" + errorMessages.toString());
					throw new SelfServiceApplicationException(errorMessages.toString());
				}
				if (hpe_pid != null && !hpe_pid.trim().isEmpty()) {
					log(ILog.DEBUG, "HPE_PID not null. before webservice");
					dmWebserviceVO.setDocumentId(hpe_pid);
					if (hpe_html_pid != null && !hpe_html_pid.trim().isEmpty()) {
						dmWebserviceVO.setHtmlPid(hpe_html_pid);
					}
					String message1 = edmWebserviceClient.callWebservice(dmFactory.createGroupForApplication(dmWebserviceVO));
				}
			}

		} catch (SelfServiceApplicationException e) {
			log(ILog.ERROR, "Error while creating the application appNum : " + appNum + e.getMessage(),e);
			throw e;
		} catch (NullPointerException ex) {
			log(ILog.ERROR, "Error while creating the application appNum : " + appNum + ex.getMessage(),ex);
			throw new SelfServiceApplicationException(ex);
		} catch (Exception e) {
			log(ILog.ERROR, "Error while creating the application appNum : " + appNum + e.getMessage(),e);
			throw e;
		}

		return resultXML.toString();
	}

	/**
	 * ILIES-119373, 125410. The <code>createSSMpeApplication</code> invokes
	 * methods to parse the XML String and insert into respective staging
	 * tables.
	 * 
	 * @param appXMLStr
	 *            - Contains the SS MPE application info in XML String
	 * @return SSMpeAppErrorMessage - Indicating success or failure.
	 */
	public SSMpeAppErrorMessage createSSMpeApplication(String appXMLStr) throws Exception {
		SSMpeApplicationValidator mpeAppValidator = null;
		T1001SsAppMpeCollection t0001MpeColl = null;
		T1001AppRqstCollection t001AppRqstMpeColl = null;
		T1002AppDtlCollection appMpeDtlColl = null;
		T1004AppIndvCollection appMpeIndvColl = null;
		T1004AppIndvCargo appMpeIndvCargo = null;
		T1031AppMailAdrCollection appMailAdrColl = null;
		Document xmlDoc = null;
		SSMpeAppErrorMessage mpeMessage = new SSMpeAppErrorMessage();
		DMElectronicDocumentWSBO dmBO = new DMElectronicDocumentWSBO();
		
		try {
			log(ILog.DEBUG, "START PROCESSING THE XML from SS APP MPE WebService");
			xmlDoc = parseXML(appXMLStr);
			Map speciallInd = new HashMap();
			T1001SSAppMpeCargo appRqstCargo = new T1001SSAppMpeCargo();
			appRqstCargo.setAppNum(xmlDoc.getRootElement().getChildTextTrim(AppRegConstants.BRIDGES_APP_NUM));
			RMCUtility rmcUtility = new RMCUtility();
			DmDocGroupCargo dmDocGroupCargo = rmcUtility.findDmDocGroupRecord(appRqstCargo.getAppNum());
			if (dmDocGroupCargo != null && rmcUtility.findTask(dmDocGroupCargo.getGroupSeqNum())) {
				mpeMessage.setErrorCode(DMConstants.SUCCESS_CODE);
				return mpeMessage;
			}
			
			T1001SsAppMpeCollection appRqstColl = new T1001SsAppMpeCollection();
			appRqstColl.setCargo(appRqstCargo);
			T1001SSAppMpeCargo[] adResults = (T1001SSAppMpeCargo[]) appRqstColl.select("findByAppNum");
			if (adResults != null && adResults.length > 0) {
				mpeMessage.setErrorCode(DMConstants.SUCCESS_CODE);
				return mpeMessage;
			}

			mpeAppValidator = new SSMpeApplicationValidator();
			mpeMessage = mpeAppValidator.mpeDataValidation(xmlDoc);
			if (DMConstants.SUCCESS_CODE == mpeMessage.getErrorCode()) {
				log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.DEBUG, "Data validation successfull");
				log(ILog.DEBUG, "Initialising EDMWebserviceVO...");
				dmWebserviceVO = new DMElectronicDocumentSSVO();
				String currentAppNum = "";
				errorMessages = new StringBuffer("");

				appMpeIndvColl = (conn == null) ? new T1004AppIndvCollection() : new T1004AppIndvCollection(conn);
				t0001MpeColl = buildT1001SSAppMpe(xmlDoc.getRootElement());
				t001AppRqstMpeColl = buildT1001AppRqstForMpe(xmlDoc.getRootElement());
				appMpeIndvCargo = buildT1004AppIndvForMpe(xmlDoc.getRootElement());
				appMpeDtlColl = buildT1002AppDtlForMpe(xmlDoc.getRootElement());
				T1006AppInPermdCargo appInPermdCargo = buildT1006AppInPermd(xmlDoc.getRootElement());
				appMailAdrColl = buildT1031AppMailAdrForMpe(xmlDoc.getRootElement());

				// Populate SOP criteria and compute SOP Due Date
				Timestamp sopDueDate = null;
				Map sopCriteria = new HashMap();
				if (t0001MpeColl != null && t0001MpeColl.size() > 0) {
					currentAppNum = t0001MpeColl.getResults(0).getAppNum();
					// Default, set the Source Type as SelfService Application for DM Webservice
					dmWebserviceVO.setSourceTypeCode(DMConstants.MEDICAID_PRESUMPTIVE_ELIGIBILITY);
					
					List<String> splInd = new ArrayList<String>();
					splInd.add(ARConstants.PM);
					speciallInd.put(ARConstants.PM, splInd);
				}
				if (t001AppRqstMpeColl != null && t001AppRqstMpeColl.size() > 0) {
					String langCd = t001AppRqstMpeColl.getResults(0).getLangCd();
					if(StringUtils.isNotEmpty(langCd) && !("0".equalsIgnoreCase(langCd))){
					 String langSI = dmBO.getLangSPD(langCd);
						List<String> languageSplInd = new ArrayList<String>();
						languageSplInd.add(langSI);
						speciallInd.put(langSI, languageSplInd);
					}
					t001AppRqstMpeColl.update(t001AppRqstMpeColl);
				}
				appMpeIndvColl.add(appMpeIndvCargo);
				if (appMpeIndvColl != null && appMpeIndvColl.size() > 0) {
					appMpeIndvColl.insert();
				}
				if (appMpeDtlColl != null && appMpeDtlColl.size() > 0) {
					appMpeDtlColl.insert();
				}
				if (appInPermdCargo != null) {
					T1006AppInPermdCollection appInPermdCollection = new T1006AppInPermdCollection();
					appInPermdCollection.add(appInPermdCargo);
					appInPermdCollection.insert();
				}
				if (appMailAdrColl != null && appMailAdrColl.size() > 0) {
					appMailAdrColl.insert();
				}
				dmWebserviceVO.setSplIndicator(speciallInd);
				dmWebserviceVO.setAppNum(currentAppNum);
				Timestamp applicationDate = t001AppRqstMpeColl.getResults(0).getAppRcvDt();
				sopCriteria.put(SelfServiceBrokerConstants.APPLICATION_DATE, applicationDate);
				sopDueDate = computeSopDueDate(sopCriteria);
				// Set Due Date in Bridges
				if (sopDueDate != null) {
					dmWebserviceVO.setDueDate(sopDueDate.toString());
				}
				log(ILog.INFO, "Start reading AutoReg Reference Table data for MPE");
				RefTableData rtd = ReferenceTableManager.getValueForDescription("AUTOREGPROCESS", "AUTO_REG_SW");
				log(ILog.INFO, "AutoReg Reference Table switch  : " + rtd);
				String autoRegSw = "";
				if (rtd != null) {
					autoRegSw = rtd.getRefrTableCode();
				}
				if (autoRegSw != null && "Y".equalsIgnoreCase(autoRegSw)) {
					log(ILog.INFO, "For MPE :: calling AutoReg preComplenessCheck() - AppNum --" + dmWebserviceVO.getAppNum());
					AutoRegistrationBO autoRegBO = new AutoRegistrationBO();
					autoRegBO.preComplenessCheck(dmWebserviceVO.getAppNum());
				} else {
					// Create EDM Factory
					DMFactory dmFactory = new DMFactory();
					// Init DMWebserviceClient
					DMWebserviceClient edmWebserviceClient = new DMWebserviceClient();
					// Call EDMWEbservice
					String message = edmWebserviceClient.callWebservice(dmFactory.createGroupForApplication(dmWebserviceVO));

					log(ILog.INFO, "Message returned from  EDMWebservice : " + message);
					log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.DEBUG, "SelfServiceAppRegBO::createSSMpeApplication done calling EDM Webservice with result :" + message);
					// Exception to roll back // transaction
					if (!DMConstants.SUCCESS_STATUS_MSG.equalsIgnoreCase(message)) {
						log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.ERROR, "Exception in SelfServiceAppRegBO::createSSMpeApplication  EDM Webservice :" + message);
						throw new Exception(message);
					}

					if (!("".equals(errorMessages.toString()))) {
						log(FwConstants.LOGGING_CATEGORY_EDM_WEBSERVICE, ILog.DEBUG, "SelfServiceAppRegBO::createSSMpeApplication :" + errorMessages.toString());
						throw new SelfServiceApplicationException(errorMessages.toString());
					}
				}
			} else {
				log(FwConstants.LOGGING_CATEGORY_SS_MPE_WEBSERVICE, ILog.ERROR, "SS MPE APP Validation failed");
			}
		} catch (Exception e) {
			log(ILog.ERROR, "Error in SelfServiceAppRegBO.createSSMpeApplication: " + e.getMessage(), e);
			throw e;
		}
		return mpeMessage;
	}

	private T1006AppInPermdCargo buildT1006AppInPermd(Element rootElement) throws SelfServiceApplicationException {
		T1006AppInPermdCargo appInPermdCargo = null;
		SimpleDateFormat sdf = null;
		String pregnancyDueDtStr = null;

		try {
			appInPermdCargo = new T1006AppInPermdCargo();
			log(ILog.DEBUG, "Entered SelfServiceAppRegBO.buildT1006AppInPermd ");
			appInPermdCargo.setAppNum(rootElement.getChildTextTrim("BRIDGES_APP_NUM"));
			appInPermdCargo.setIndvSeqNum(1);
			appInPermdCargo.setAiInd('N');
			appInPermdCargo.setAsiaInd('N');
			appInPermdCargo.setBlkInd('N');
			appInPermdCargo.setPacIslInd('N');
			appInPermdCargo.setWhtInd('N');
			appInPermdCargo.setHspcInd('N');
			appInPermdCargo.setNonHspcInd("N");
			appInPermdCargo.setDtLeaveFacty(highDate);
			appInPermdCargo.setVetResp('N');
			appInPermdCargo.setVetActDutyResp('N');
			appInPermdCargo.setSpsDeceasedVetResp('N');
			appInPermdCargo.setChldDeceasedVetResp('N');
			appInPermdCargo.setDisableVetResp('N');
			appInPermdCargo.setLangCd(rootElement.getChild("APPLICANT_INFO").getChildTextTrim("SPOKEN_LANGUAGE"));
			appInPermdCargo.setSsNumAppDt(highDate);
			appInPermdCargo.setUsCtznSw('Y');
			appInPermdCargo.setDthDt(highDate);
			appInPermdCargo.setTrbMbrInd(' ');
			appInPermdCargo.setTrbChldMbrInd(' ');
			appInPermdCargo.setPregnancySw(getCharForString(rootElement.getChild("APPLICANT_INFO").getChildTextTrim("PREG_TEST_SW")));
			if (appInPermdCargo.getPregnancySw() == 'Y') {
				isPregnantInCase = true;
			}
			pregnancyDueDtStr = rootElement.getChild("APPLICANT_INFO").getChildTextTrim("EXPECTED_DELIVERY_DT");
			sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if (pregnancyDueDtStr != null && pregnancyDueDtStr.trim().length() > 0) {
				appInPermdCargo.setPregnancyDueDt(new Timestamp(sdf.parse(pregnancyDueDtStr).getTime()));
			} else {
				appInPermdCargo.setPregnancyDueDt(highDate);
			}

			appInPermdCargo.setNbrOfBirthsExpected(getIntForString(rootElement.getChild("APPLICANT_INFO").getChildTextTrim("UNBORN_BABY_COUNT")));
			appInPermdCargo.setPregnancyVrfCd("");
			appInPermdCargo.setCitizenStsDeclaredVrfCd("");
			appInPermdCargo.setIdentificationVrfCd("");
			appInPermdCargo.setAlienStatusCd("");
			appInPermdCargo.setAlienTypeCd("N");
			appInPermdCargo.setAlienStatusVrfCd("");
			appInPermdCargo.setUsEntryDt(highDate);
		} catch (ParseException e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1004AppIndv Error:" + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1006AppInPermd Error:" + e.getMessage(),e);
		} catch (Exception e) {
			log(ILog.ERROR, "Exception in SelfServiceAppRegBO.buildT1006AppInPermd  " + " :  method : " + e.getMessage(), e);
			throw new SelfServiceApplicationException("Exception in SelfServiceAppRegBO.buildT1006AppInPermd " + " :  method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "Exiting SelfServiceAppRegBO.buildT1006AppInPermd ");
		return appInPermdCargo;
	}

	/**
	 * The <ocde> parseXML</code> parses the given XML string and returns a JDOM
	 * Object.
	 * 
	 * @param aStagingXML
	 *            - Application XML String
	 * @return Document - JDOM Object.
	 * @throws Exception
	 */
	private Document parseXML(String aStagingXML) throws Exception {
		log(ILog.DEBUG, "entered SelfServiceAppRegBO.parseXML method");
		InputStream is = null;
		Document document = null;
		try {
			byte[] barray = aStagingXML.getBytes();
			is = new ByteArrayInputStream(barray);
			document = this.unmarshall(new InputStreamReader(is));
		} catch (Exception e) {
			log(ILog.ERROR, "Error in SelfServiceAppRegBO.parseXML method : " + e.getMessage(), e);
			throw e;
		} finally {
			try {
				if (is != null) {
					is.close();
				}
			} catch (Exception e) {
				log(ILog.ERROR, "Error in finally block, in SelfServiceAppRegBO.parseXML method : " + e.getMessage(), e);
				throw e;
			}
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.parseXML method");
		return document;
	}

	/**
	 * Unmarshalls the xml string into a JDOM Document.
	 * 
	 * @param reader
	 *            - Reader Object
	 * @return Document - JDOM Object.
	 * @throws Exception
	 */
	private Document unmarshall(Reader reader) throws Exception {
		log(ILog.DEBUG, "entered SelfServiceAppRegBO.unmarshall method");
		Document document = null;
		try {
			SAXBuilder builder = new SAXBuilder(false);
			document = builder.build(reader);
		} catch (Exception e) {
			log(ILog.ERROR, "Error in SelfServiceAppRegBO.unmarshall method : " + e.getMessage(), e);
			throw e;
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.unmarshall method");
		return document;
	}

	/**
	 * This method creates and inserts records into T3006_APP_SER_DEATH_BNFTS
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3006AppSerDeathBnfts(Element root) throws Exception {

		T3006AppSerDeathBnftsCargo t3006Cargo = null;
		T3006AppSerDeathBnftsCollection t3006Coll = null;
		Element serDeathBnfts = root.getChild("APP_SER_DEATH_BNFTS");
		List serDeathBnftsList = (serDeathBnfts != null ? serDeathBnfts.getChildren("APP_SER_DEATH_BNFT") : null);
		try {
			if (serDeathBnftsList != null && serDeathBnftsList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3006AppSerDeathBnfts method");
				Iterator ite = serDeathBnftsList.iterator();
				t3006Coll = (conn == null) ? new T3006AppSerDeathBnftsCollection() : new T3006AppSerDeathBnftsCollection(conn);
				String dataExist = null;
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element serDeathBnft = (Element) ite.next();
					Attribute serDeathAttr = (serDeathBnft != null ? serDeathBnft.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (serDeathAttr != null)
						dataExist = serDeathAttr.getValue().trim();

					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t3006Cargo = new T3006AppSerDeathBnftsCargo();

						t3006Cargo.setAppNum(appNum);
						t3006Cargo.setIndvSeqNum(getIntForString(serDeathBnft.getChildTextTrim("INDV_SEQ_NUM")));
						t3006Cargo.setAccidentInsuranceAmt(getDoubleForString(serDeathBnft.getChildTextTrim("ACCIDENT_INSURANCE_AMT")));
						t3006Cargo.setFuneralAgreementAmt(getDoubleForString(serDeathBnft.getChildTextTrim("FUNERAL_AGREEMENT_AMT")));
						t3006Cargo.setLifeInsuranceAmt(getDoubleForString(serDeathBnft.getChildTextTrim("LIFE_INSURANCE_AMT")));
						t3006Cargo.setLaborUnionAmt(getDoubleForString(serDeathBnft.getChildTextTrim("LABOR_UNION_AMT")));
						t3006Cargo.setSocialSecurityDeathAmt(getDoubleForString(serDeathBnft.getChildTextTrim("SOCIAL_SECURITY_DEATH_AMT")));
						t3006Cargo.setVeteranDeathAmt(getDoubleForString(serDeathBnft.getChildTextTrim("VETERAN_DEATH_AMT")));
						t3006Cargo.setSoldiersFundAmt(getDoubleForString(serDeathBnft.getChildTextTrim("SOLDIERS_FUND_AMT")));
						t3006Cargo.setCommunityAssistanceAmt(getDoubleForString(serDeathBnft.getChildTextTrim("COMMUNITY_ASSISTANCE_AMT")));
						t3006Cargo.setOtherBenefitText(getString(serDeathBnft.getChildTextTrim("OTHER_BENEFIT_TEXT")));
						t3006Cargo.setOtherBenefitAmt(getDoubleForString(serDeathBnft.getChildTextTrim("OTHER_BENEFIT_AMT")));

						t3006Coll.setCargo(t3006Cargo);
					}
					if (t3006Coll.size() > 0)
						t3006Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3006AppSerDeathBnfts method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3006AppSerDeathBnfts method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3006AppSerDeathBnfts method");
	}

	/**
	 * This method creates and inserts records into T3007_APP_CDC_PROVIDER
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3007AppCdcProvider(Element root) throws Exception {

		T3007AppInCdcProviderCargo t3007Cargo = null;
		T3007AppInCdcProviderCollection t3007Coll = null;
		Element cdcProviders = root.getChild("APP_IN_CDC_PROVIDERS");
		List cdcProviderList = (cdcProviders != null ? cdcProviders.getChildren("APP_IN_CDC_PROVIDER") : null);
		try {
			if (cdcProviderList != null && cdcProviderList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3007AppCdcProvider method");
				Iterator ite = cdcProviderList.iterator();
				String dataExist = null;
				t3007Coll = (conn == null) ? new T3007AppInCdcProviderCollection() : new T3007AppInCdcProviderCollection(conn);
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element cdcProvider = (Element) ite.next();
					Attribute providerAttr = (cdcProvider != null ? cdcProvider.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (providerAttr != null)
						dataExist = providerAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t3007Cargo = new T3007AppInCdcProviderCargo();

						t3007Cargo.setAppNum(appNum);
						t3007Cargo.setIndvSeqNum(getIntForString(cdcProvider.getChildTextTrim("INDV_SEQ_NUM")));
						t3007Cargo.setProviderSeqNum(getIntForString(cdcProvider.getChildTextTrim("PROVIDER_SEQ_NUM")));
						t3007Cargo.setCdcProviderName(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_NAME")));
						t3007Cargo.setCdcProviderAddrLine1(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_ADDR_LINE1")));
						t3007Cargo.setCdcProviderAddrLine2(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_ADDR_LINE2")));
						t3007Cargo.setCdcProviderAddrCity(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_ADDR_CITY")));
						t3007Cargo.setCdcProviderAddrStateCd(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_ADDR_STATE_CD")));
						t3007Cargo.setCdcProviderAddrZip(getString(cdcProvider.getChildTextTrim("CDC_PROVIDER_ADDR_ZIP")));
						t3007Cargo.setProviderPhoneNum(getLongForString(cdcProvider.getChildTextTrim("PROVIDER_PHONE_NUM")));
						t3007Cargo.setProviderNum(getString(cdcProvider.getChildTextTrim("PROVIDER_NUM")));

						t3007Coll.setCargo(t3007Cargo);
					}
					if (t3007Coll.size() > 0)
						t3007Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3007AppCdcProvider method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3007AppCdcProvider method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3007AppCdcProvider method");
	}

	/**
	 * This method creates and inserts records into T1019_APP_IN_MED_E
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1019AppInMedE(Element root) throws Exception {

		T1019AppInMedECargo t1019Cargo = null;
		T1019AppInMedECollection t1019Coll = null;
		Element medExpenses = root.getChild("APP_IN_MED_E");
		List medExpensesList = (medExpenses != null ? medExpenses.getChildren("APP_IN_MED_E") : null);
		try {
			if (medExpensesList != null && medExpensesList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1019AppInMedE method");
				t1019Coll = (conn == null) ? new T1019AppInMedECollection() : new T1019AppInMedECollection(conn);
				Iterator ite = medExpensesList.iterator();
				String dataExist = null;
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element medExpense = (Element) ite.next();
					Attribute medAttr = (medExpense != null ? medExpense.getAttribute(AppRegConstants.DATA_EXIST) : null);

					if (medAttr != null)
						dataExist = medAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1019Cargo = new T1019AppInMedECargo();
						t1019Cargo.setIndvSeqNum(getIntForString(medExpense.getChildTextTrim("INDV_SEQ_NUM")));
						t1019Cargo.setSeqNum((short)1);
						t1019Cargo.setAsscSeqNum(0);
						t1019Cargo.setAddRecInd(getCharForString(medExpense.getChildTextTrim("ADD_REC_IND")));
						t1019Cargo.setEffBegMo(getIntForString(medExpense.getChildTextTrim("EFF_BEG_MO")));
						t1019Cargo.setFreqCd(getCharForString(medExpense.getChildTextTrim("FREQ_CD")));
						t1019Cargo.setMedExpAmt(getDoubleForString(medExpense.getChildTextTrim("MED_EXP_AMT")));
						t1019Cargo.setMedExpTyp(getString(medExpense.getChildTextTrim("MED_EXP_TYP")));
						t1019Cargo.setMedExpAmtInd(getLongForString(medExpense.getChildTextTrim("MED_EXP_AMT_IND")));
						t1019Coll.setCargo(t1019Cargo);
					}
					if (t1019Coll.size() > 0)
						t1019Coll.insert(t1019Coll);
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1019AppInMedE method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1019AppInMedE method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1019AppInMedE method");
	}
	
	/**
	 * This method creates and inserts records into T1054_APP_IN_MED_DETAILS
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1054AppInMedDetails(Element root) throws Exception {

		T1054AppInMedDetailCargo t1054Cargo = null;
		T1054AppInMedDetailCollection t1054Coll = null;
		Element medDetails = root.getChild("APP_IN_MED_DETAILS");
		List medDetailList = (medDetails != null ? medDetails.getChildren("APP_IN_MED_DETAIL") : null);
		try {
			if (medDetailList != null && medDetailList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1054AppInMedDetails method");
				t1054Coll = (conn == null) ? new T1054AppInMedDetailCollection() : new T1054AppInMedDetailCollection(conn);
				Iterator ite = medDetailList.iterator();
				String dataExist = null;
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element medDetail = (Element) ite.next();
					Attribute medAttr = (medDetail != null ? medDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);

					if (medAttr != null)
						dataExist = medAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1054Cargo = new T1054AppInMedDetailCargo();

						t1054Cargo.setAppNum(appNum);
						t1054Cargo.setIndvSeqNum(getIntForString(medDetail.getChildTextTrim("INDV_SEQ_NUM")));
						String medicalTypeCd = getString(medDetail.getChildTextTrim("MEDICAL_TYPE_CD"));
						t1054Cargo.setMedicalTypeCd(medicalTypeCd);
						t1054Cargo.setCoordinatorName(getString(medDetail.getChildTextTrim("COORDINATOR_NAME")));
						t1054Cargo.setCoordinatorPhoneNum(getString(medDetail.getChildTextTrim("COORDINATOR_PHONE_NUM")));
						if ("RE".equalsIgnoreCase(medicalTypeCd)) {
							t1054Cargo.setEnrolledInSchoolSw('Y');
						} else {
							t1054Cargo.setEnrolledInSchoolSw(getCharForString(medDetail.getChildTextTrim("ENROLLED_IN_SCHOOL_SW")));
						}
						t1054Coll.setCargo(t1054Cargo);
					}
					if (t1054Coll.size() > 0)
						t1054Coll.insert(t1054Coll);
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1054AppInMedDetails method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1054AppInMedDetails method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1054AppInMedDetails method");
	}

	/**
	 * This method creates and inserts records into T3005_APP_SER_BURIAL_DETAILS
	 * and T3001_APP_SER_RQST staging tables
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT3005AppSerBurialDetails(Element root) throws Exception {
		T3005AppSerBurialDtlCargo t3005Cargo = null;
		T3005AppSerBurialDtlCollection t3005Coll = null;

		T3001AppSerRqstCollection t3001Coll = null;
		T3001AppSerRqstCargo t3001Cargo = null;
		boolean addSerRqst = true;
		Element burialDetails = root.getChild("APP_SER_BURIAL_DTLS");
		List burialDetailList = (burialDetails != null ? burialDetails.getChildren("APP_SER_BURIAL_DTL") : null);
		try {
			if (burialDetailList != null && burialDetailList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT3005AppSerBurialDetails method");
				t3005Coll = (conn == null) ? new T3005AppSerBurialDtlCollection() : new T3005AppSerBurialDtlCollection(conn);
				Iterator ite = burialDetailList.iterator();
				String dataExist = null;
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element burialDetail = (Element) ite.next();
					Attribute burialAttr = (burialDetail != null ? burialDetail.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (burialAttr != null)
						dataExist = burialAttr.getValue().trim();

					if (DATA_YES.equalsIgnoreCase(dataExist)) {
						t3005Cargo = new T3005AppSerBurialDtlCargo();
						t3005Cargo.setAppNum(appNum);
						t3005Cargo.setIndvSeqNum(getIntForString(burialDetail.getChildTextTrim("INDV_SEQ_NUM")));

						SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

						String deathTms = burialDetail.getChildTextTrim("DEATH_DT");
						if (deathTms != null && deathTms.trim().length() > 0) {
							t3005Cargo.setDeathDt(new Timestamp(sdf.parse(deathTms).getTime()));
						} else {
							t3005Cargo.setDeathDt(highDate);
						}

						String cremationTms = burialDetail.getChildTextTrim("CREMATION_DT");
						if (cremationTms != null && cremationTms.trim().length() > 0) {
							t3005Cargo.setCremationDt(new Timestamp(sdf.parse(cremationTms).getTime()));
						} else {
							t3005Cargo.setCremationDt(highDate);
						}
						t3005Cargo.setBurialAmt(getDoubleForString(burialDetail.getChildTextTrim("BURIAL_AMT")));
						t3005Cargo.setMemorialServiceSw(getCharForString(burialDetail.getChildTextTrim("MEMORIAL_SERVICE_SW")));
						t3005Cargo.setContributionFriendsSw(getCharForString(burialDetail.getChildTextTrim("CONTRIBUTION_FRIENDS_SW")));
						t3005Cargo.setContributionAmt(getDoubleForString(burialDetail.getChildTextTrim("CONTRIBUTION_AMT")));
						t3005Cargo.setDeceasedVeteranSw(getCharForString(burialDetail.getChildTextTrim("DECEASED_VETERAN_SW")));
						t3005Cargo.setSignStatementSw(getCharForString(burialDetail.getChildTextTrim("SIGN_STATEMENT_SW")));
						t3005Cargo.setFuneralHomeName(getString(burialDetail.getChildTextTrim("FUNERAL_HOME_NAME")));
						t3005Cargo.setFuneralHomeAddrLine1(getString(burialDetail.getChildTextTrim("FUNERAL_HOME_ADDR_LINE1")));
						t3005Cargo.setFuneralHomeAddrLine2(getString(burialDetail.getChildTextTrim("FUNERAL_HOME_ADDR_LINE2")));
						t3005Cargo.setFuneralHomeAddrCity(getString(burialDetail.getChildTextTrim("FUNERAL_HOME_ADDR_CITY")));
						t3005Cargo.setFuneralHomeAddrStateCd(getString(burialDetail.getChildTextTrim("FUNERAL_HOME_ADDR_STATE_CD")));
						t3005Cargo.setFunrealHomeAddrZip(getString(burialDetail.getChildTextTrim("FUNREAL_HOME_ADDR_ZIP")));
						t3005Cargo.setFuneralHomePhoneNum(getLongForString(burialDetail.getChildTextTrim("FUNERAL_HOME_PHONE_NUM")));
						t3005Coll.setCargo(t3005Cargo);
						if (addSerRqst) {
							t3001Coll = (conn == null) ? new T3001AppSerRqstCollection() : new T3001AppSerRqstCollection(conn);
							t3001Cargo = new T3001AppSerRqstCargo();
							t3001Cargo.setAppNum(appNum);
							t3001Cargo.setServiceCd(FwConstants.BURIAL_SRVC_CD);
							t3001Cargo.setServiceTypeCd(FwConstants.BURIAL_SRVC_TYP_CD);
							t3001Cargo.setServiceGrpCd(FwConstants.BURIAL_SRVC_GRP_CD);
							t3001Cargo.setRequestedAmt(t3005Cargo.getBurialAmt());
							t3001Coll.setCargo(t3001Cargo);
							if (t3001Coll.size() > 0)
								t3001Coll.insert();
							addSerRqst = false;
						}
					}
					if (t3005Coll.size() > 0)
						t3005Coll.insert();
				}
			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT3005AppSerBurialDetails method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT3005AppSerBurialDetails method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT3005AppSerBurialDetails method");
	}

	/**
	 * This method creates and inserts records into T1040_APP_IN_LQD_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1040AppInLqdAset(Element root) throws Exception {

		T1040AppInLqdAsetCargo t1040Cargo = null;
		T1040AppInLqdAsetCollection t1040Coll = null;

		Element lqdAsets = root.getChild("APP_IN_LQD_ASETS");
		List lqdAsetList = (lqdAsets != null ? lqdAsets.getChildren("APP_IN_LQD_ASET") : null);
		try {
			if (lqdAsetList != null && lqdAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1040AppInLqdAset method");
				String dataExist = null;
				t1040Coll = (conn == null) ? new T1040AppInLqdAsetCollection() : new T1040AppInLqdAsetCollection(conn);
				Iterator ite = lqdAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element lqdAset = (Element) ite.next();
					Attribute lqdAsetAttr = (lqdAset != null ? lqdAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (lqdAsetAttr != null)
						dataExist = lqdAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {

						t1040Cargo = new T1040AppInLqdAsetCargo();

						t1040Cargo.setAppNum(appNum);
						t1040Cargo.setIndvSeqNum(getLongForString(lqdAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1040Cargo.setSeqNum(getLongForString(lqdAset.getChildTextTrim("SEQ_NUM")));
						t1040Cargo.setAcctNum(getString(lqdAset.getChildTextTrim("ACCT_NUM")));
						t1040Cargo.setAddRecInd(getCharForString(lqdAset.getChildTextTrim("ADD_REC_IND")));
						t1040Cargo.setAsscSeqNum(getLongForString(lqdAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1040Cargo.setBuryDsgtSw(getCharForString(lqdAset.getChildTextTrim("BURY_DSGT_SW")));
						t1040Cargo.setEffBegMo(getIntForString(lqdAset.getChildTextTrim("EFF_BEG_MO")));
						t1040Cargo.setFnclInstCityAdr(getString(lqdAset.getChildTextTrim("FNCL_INST_CITY_ADR")));
						t1040Cargo.setFnclInstL1Adr(getString(lqdAset.getChildTextTrim("FNCL_INST_L1_ADR")));
						t1040Cargo.setFnclInstL2Adr(getString(lqdAset.getChildTextTrim("FNCL_INST_L2_ADR")));
						t1040Cargo.setFnclInstNam(getString(lqdAset.getChildTextTrim("FNCL_INST_NAM")));
						t1040Cargo.setFnclInstStaAdr(getString(lqdAset.getChildTextTrim("FNCL_INST_STA_ADR")));
						t1040Cargo.setFnclInstZipAdr(getString(lqdAset.getChildTextTrim("FNCL_INST_ZIP_ADR")));
						t1040Cargo.setJntOwnResp(getCharForString(lqdAset.getChildTextTrim("JNT_OWN_RESP")));
						t1040Cargo.setLqdAsetAmt(getDoubleForString(lqdAset.getChildTextTrim("LQD_ASET_AMT")));
						t1040Cargo.setLqdAsetAmtInd(getLongForString(lqdAset.getChildTextTrim("LQD_ASET_AMT_IND")));
						SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
						SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
						ssXrefCargo.setSsStTableName("T1040_APP_IN_LQD_ASET");
						ssXrefCargo.setSsStColumnName("LQD_ASET_TYP");
						ssXrefCargo.setSsStColumnVal(String.valueOf(lqdAset.getChildTextTrim("LQD_ASET_TYP")));
						Object[] objects = new Object[1];
						objects[0] = ssXrefCargo;
						SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
						if (xrefCargo.length > 0) {
							t1040Cargo.setLqdAsetTyp(xrefCargo[0].getRtCode());
						}

						t1040Cargo.setAccountChangeAmt(getDoubleForString(lqdAset.getChildTextTrim("ACCOUNT_CHANGE_AMT")));
						t1040Cargo.setLiquidAssetOtherNum(getIntForString(lqdAset.getChildTextTrim("LIQUID_ASSET_OTHER_NUM")));
						t1040Cargo.setAccountChangeCd(getString(lqdAset.getChildTextTrim("ACCOUNT_CHANGE_CD")));
						t1040Cargo.setAccountChangeIndvSeqNum(getIntForString(lqdAset.getChildTextTrim("ACCOUNT_CHANGE_INDV_SEQ_NUM")));

						SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

						String changeTms = lqdAset.getChildTextTrim("ACCOUNT_CHANGE_DT");

						if (changeTms != null && changeTms.trim().length() > 0) {
							t1040Cargo.setAccountChangeDt(new Timestamp(sdf.parse(changeTms).getTime()));
						} else {
							t1040Cargo.setAccountChangeDt(highDate);
						}

						t1040Cargo.setRecordCompleted(C_NO);
						t1040Coll.setCargo(t1040Cargo);
					}
					if (t1040Coll.size() > 0)
						t1040Coll.insert();
				}

			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1040AppInLqdAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1040AppInLqdAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1040AppInLqdAset method");
	}

	/**
	 * This method creates and inserts records into T1041_APP_IN_VEH_ASET
	 * staging table
	 * 
	 * @param root
	 *            - Element Object
	 * @return void
	 * @throws Exception
	 */
	private void buildT1041AppInVehAset(Element root) throws Exception {

		T1041AppInVehAsetCargo t1041Cargo = null;
		T1041AppInVehAsetCollection t1041Coll = null;

		Element vehAsets = root.getChild("APP_IN_VEH_ASETS");
		List vehAsetList = (vehAsets != null ? vehAsets.getChildren("APP_IN_VEH_ASET") : null);
		try {
			if (vehAsetList != null && vehAsetList.size() > 0) {
				log(ILog.DEBUG, "entered SelfServiceAppRegBO.buildT1041AppInVehAset method");
				t1041Coll = (conn == null) ? new T1041AppInVehAsetCollection() : new T1041AppInVehAsetCollection(conn);
				String dataExist = null;
				Iterator ite = vehAsetList.iterator();
				while (ite.hasNext()) {
					dataExist = DATA_NO;
					Element vehAset = (Element) ite.next();
					Attribute vehAsetAttr = (vehAset != null ? vehAset.getAttribute(AppRegConstants.DATA_EXIST) : null);
					if (vehAsetAttr != null)
						dataExist = vehAsetAttr.getValue().trim();
					if (DATA_YES.equalsIgnoreCase(dataExist)) {
						t1041Cargo = new T1041AppInVehAsetCargo();
						t1041Cargo.setAppNum(appNum);
						t1041Cargo.setIndvSeqNum(getLongForString(vehAset.getChildTextTrim("INDV_SEQ_NUM")));
						t1041Cargo.setSeqNum(getLongForString(vehAset.getChildTextTrim("SEQ_NUM")));
						t1041Cargo.setAddRecInd(getCharForString(vehAset.getChildTextTrim("ADD_REC_IND")));
						t1041Cargo.setAsscSeqNum(getLongForString(vehAset.getChildTextTrim("ASSC_SEQ_NUM")));
						t1041Cargo.setEffBegMo(getIntForString(vehAset.getChildTextTrim("EFF_BEG_MO")));
						t1041Cargo.setJntOwnResp(getCharForString(vehAset.getChildTextTrim("JNT_OWN_RESP")));
						t1041Cargo.setLicPlateTxt(getString(vehAset.getChildTextTrim("LIC_PLATE_TXT")));
						t1041Cargo.setLicStaCd(getString(vehAset.getChildTextTrim("LIC_STA_CD")));
						t1041Cargo.setMvFmvAmt(getDoubleForString(vehAset.getChildTextTrim("MV_FMV_AMT")));
						t1041Cargo.setMvFmvAmtInd(getLongForString(vehAset.getChildTextTrim("MV_FMV_AMT_IND")));
						t1041Cargo.setMvMakeTxt(getString(vehAset.getChildTextTrim("MV_MAKE_TXT")));
						t1041Cargo.setMvModlTxt(getString(vehAset.getChildTextTrim("MV_MODL_TXT")));
						t1041Cargo.setMvOweAmt(getDoubleForString(vehAset.getChildTextTrim("MV_OWE_AMT")));
						t1041Cargo.setMvOweAmtInd(getLongForString(vehAset.getChildTextTrim("MV_OWE_AMT_IND")));
						t1041Cargo.setMvRgstRqrSw(getCharForString(vehAset.getChildTextTrim("MV_RGST_RQR_SW")));
						t1041Cargo.setMvYr(getLongForString(vehAset.getChildTextTrim("MV_YR")));
						SsStRtValXrefCollection ssXrefCollection = new SsStRtValXrefCollection();
						SsStRtValXrefCargo ssXrefCargo = new SsStRtValXrefCargo();
						ssXrefCargo.setSsStTableName("T1041_APP_IN_VEH_ASET");
						ssXrefCargo.setSsStColumnName("VEH_ASET_TYP");
						ssXrefCargo.setSsStColumnVal(String.valueOf(vehAset.getChildTextTrim("VEH_ASET_TYP")));
						Object[] objects = new Object[1];
						objects[0] = ssXrefCargo;
						SsStRtValXrefCargo xrefCargo[] = (SsStRtValXrefCargo[]) ssXrefCollection.select("findByTabNameColNameRtCode", objects);
						if (xrefCargo.length > 0) {
							t1041Cargo.setVehAsetTyp(xrefCargo[0].getRtCode());
						}

						t1041Cargo.setRecordCompleted(C_NO);

						t1041Coll.setCargo(t1041Cargo);
					}
					if (t1041Coll.size() > 0)
						t1041Coll.insert();
				}

			}
		} catch (RuntimeException e) {
			log(ILog.ERROR, "exception in SelfServiceAppRegBO.buildT1041AppInVehAset method : " + e.getMessage(), e);
			throw new Exception("exception in SelfServiceAppRegBO.buildT1041AppInVehAset method : " + e.getMessage(),e);
		}
		log(ILog.DEBUG, "exiting SelfServiceAppRegBO.buildT1041AppInVehAset method");
	}